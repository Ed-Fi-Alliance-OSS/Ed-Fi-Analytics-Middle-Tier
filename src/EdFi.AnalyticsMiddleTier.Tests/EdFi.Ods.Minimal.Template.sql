--
-- PostgreSQL database dump
--

-- Dumped from database version 11.6
-- Dumped by pg_dump version 12.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '3.4.0';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

SET default_tablespace = '';

--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid integer NOT NULL,
    communityorganizationid integer,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    providercategorydescriptorid integer NOT NULL,
    schoolindicator boolean,
    licenseexemptindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a CommunityProvider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a CommunityOrganization.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: communityorganizationidtocommunityproviderid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.communityorganizationidtocommunityproviderid AS
 SELECT communityprovider.communityorganizationid,
    communityprovider.communityproviderid
   FROM edfi.communityprovider;


ALTER TABLE auth.communityorganizationidtocommunityproviderid OWNER TO postgres;

--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid integer NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a CommunityOrganization.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid integer NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    shortnameofinstitution character varying(75),
    website character varying(255),
    operationalstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the EducationOrganization.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the EducationOrganization (e.g., active, inactive).';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid integer NOT NULL,
    stateeducationagencyid integer
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid integer NOT NULL,
    localeducationagencycategorydescriptorid integer NOT NULL,
    charterstatusdescriptorid integer,
    parentlocaleducationagencyid integer,
    educationservicecenterid integer,
    stateeducationagencyid integer
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid integer NOT NULL,
    postsecondaryinstitutionleveldescriptorid integer,
    administrativefundingcontroldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid integer NOT NULL,
    schooltypedescriptorid integer,
    charterstatusdescriptorid integer,
    titleipartaschooldesignationdescriptorid integer,
    magnetspecialprogramemphasisschooldescriptorid integer,
    administrativefundingcontroldescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid integer NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: educationorganizationidentifiers; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidentifiers AS
 SELECT edorg.educationorganizationid,
        CASE
            WHEN (sea.stateeducationagencyid IS NOT NULL) THEN 'StateEducationAgency'::bpchar
            WHEN (esc.educationservicecenterid IS NOT NULL) THEN 'EducationServiceCenter'::bpchar
            WHEN (lea.localeducationagencyid IS NOT NULL) THEN 'LocalEducationAgency'::bpchar
            WHEN (sch.schoolid IS NOT NULL) THEN 'School'::bpchar
            WHEN (co.communityorganizationid IS NOT NULL) THEN 'CommunityOrganization'::bpchar
            WHEN (cp.communityproviderid IS NOT NULL) THEN 'CommunityProvider'::bpchar
            WHEN (co.communityorganizationid IS NOT NULL) THEN 'CommunityOrganization'::bpchar
            WHEN (psi.postsecondaryinstitutionid IS NOT NULL) THEN 'PostSecondaryInstitution'::bpchar
            ELSE NULL::bpchar
        END AS educationorganizationtype,
    COALESCE(sea.stateeducationagencyid, esc.stateeducationagencyid, lea.stateeducationagencyid, lea_sch.stateeducationagencyid) AS stateeducationagencyid,
    COALESCE(esc.educationservicecenterid, lea.educationservicecenterid, lea_sch.educationservicecenterid) AS educationservicecenterid,
    COALESCE(lea.localeducationagencyid, sch.localeducationagencyid) AS localeducationagencyid,
    COALESCE(co.communityorganizationid, cp.communityorganizationid) AS communityorganizationid,
    cp.communityproviderid,
    psi.postsecondaryinstitutionid,
    sch.schoolid
   FROM (((((((((edfi.educationorganization edorg
     LEFT JOIN edfi.stateeducationagency sea ON ((edorg.educationorganizationid = sea.stateeducationagencyid)))
     LEFT JOIN edfi.educationservicecenter esc ON ((edorg.educationorganizationid = esc.educationservicecenterid)))
     LEFT JOIN edfi.localeducationagency lea ON ((edorg.educationorganizationid = lea.localeducationagencyid)))
     LEFT JOIN edfi.school sch ON ((edorg.educationorganizationid = sch.schoolid)))
     LEFT JOIN edfi.localeducationagency lea_sch ON ((sch.localeducationagencyid = lea_sch.localeducationagencyid)))
     LEFT JOIN edfi.communityorganization co ON ((edorg.educationorganizationid = co.communityorganizationid)))
     LEFT JOIN edfi.communityprovider cp ON ((edorg.educationorganizationid = cp.communityproviderid)))
     LEFT JOIN edfi.communityorganization cp_co ON ((cp.communityorganizationid = cp_co.communityorganizationid)))
     LEFT JOIN edfi.postsecondaryinstitution psi ON ((edorg.educationorganizationid = psi.postsecondaryinstitutionid)))
  WHERE (
        CASE
            WHEN (sea.stateeducationagencyid IS NOT NULL) THEN 'StateEducationAgency'::bpchar
            WHEN (esc.educationservicecenterid IS NOT NULL) THEN 'EducationServiceCenter'::bpchar
            WHEN (lea.localeducationagencyid IS NOT NULL) THEN 'LocalEducationAgency'::bpchar
            WHEN (sch.schoolid IS NOT NULL) THEN 'School'::bpchar
            WHEN (co.communityorganizationid IS NOT NULL) THEN 'CommunityOrganization'::bpchar
            WHEN (cp.communityproviderid IS NOT NULL) THEN 'CommunityProvider'::bpchar
            WHEN (psi.postsecondaryinstitutionid IS NOT NULL) THEN 'PostSecondaryInstitution'::bpchar
            ELSE NULL::bpchar
        END IS NOT NULL);


ALTER TABLE auth.educationorganizationidentifiers OWNER TO postgres;

--
-- Name: educationorganizationidtocommunityorganizationid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocommunityorganizationid AS
 SELECT communityprovider.communityorganizationid,
    communityprovider.communityproviderid AS educationorganizationid
   FROM edfi.communityprovider
UNION
 SELECT communityorganization.communityorganizationid,
    communityorganization.communityorganizationid AS educationorganizationid
   FROM edfi.communityorganization;


ALTER TABLE auth.educationorganizationidtocommunityorganizationid OWNER TO postgres;

--
-- Name: educationorganizationidtocommunityproviderid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocommunityproviderid AS
 SELECT communityprovider.communityproviderid,
    communityprovider.communityproviderid AS educationorganizationid
   FROM edfi.communityprovider;


ALTER TABLE auth.educationorganizationidtocommunityproviderid OWNER TO postgres;

--
-- Name: educationorganizationidtoeducationservicecenterid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoeducationservicecenterid AS
 SELECT educationorganizationidentifiers.educationservicecenterid,
    educationorganizationidentifiers.localeducationagencyid AS educationorganizationid
   FROM auth.educationorganizationidentifiers
  WHERE (educationorganizationidentifiers.localeducationagencyid IS NOT NULL)
UNION
 SELECT educationorganizationidentifiers.educationservicecenterid,
    educationorganizationidentifiers.schoolid AS educationorganizationid
   FROM auth.educationorganizationidentifiers
  WHERE (educationorganizationidentifiers.schoolid IS NOT NULL)
UNION
 SELECT educationservicecenter.educationservicecenterid,
    educationservicecenter.educationservicecenterid AS educationorganizationid
   FROM edfi.educationservicecenter;


ALTER TABLE auth.educationorganizationidtoeducationservicecenterid OWNER TO postgres;

--
-- Name: educationorganizationidtolocaleducationagencyid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtolocaleducationagencyid AS
 SELECT school.localeducationagencyid,
    school.schoolid AS educationorganizationid
   FROM edfi.school
UNION
 SELECT localeducationagency.localeducationagencyid,
    localeducationagency.localeducationagencyid AS educationorganizationid
   FROM edfi.localeducationagency;


ALTER TABLE auth.educationorganizationidtolocaleducationagencyid OWNER TO postgres;

--
-- Name: educationorganizationidtopostsecondaryinstitutionid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtopostsecondaryinstitutionid AS
 SELECT postsecondaryinstitution.postsecondaryinstitutionid,
    postsecondaryinstitution.postsecondaryinstitutionid AS educationorganizationid
   FROM edfi.postsecondaryinstitution;


ALTER TABLE auth.educationorganizationidtopostsecondaryinstitutionid OWNER TO postgres;

--
-- Name: educationorganizationidtoschoolid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoschoolid AS
 SELECT school.schoolid,
    school.schoolid AS educationorganizationid
   FROM edfi.school;


ALTER TABLE auth.educationorganizationidtoschoolid OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    positiontitle character varying(100),
    enddate date,
    orderofassignment integer,
    employmenteducationorganizationid integer,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services; also known as school of service.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the LEA.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the LEA.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationtostaffusi_assignment; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationtostaffusi_assignment AS
 SELECT edorg.educationorganizationid,
    assgn.staffusi,
    count(*) AS count
   FROM (edfi.educationorganization edorg
     JOIN edfi.staffeducationorganizationassignmentassociation assgn ON ((edorg.educationorganizationid = assgn.educationorganizationid)))
  GROUP BY assgn.staffusi, edorg.educationorganizationid;


ALTER TABLE auth.educationorganizationtostaffusi_assignment OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid integer NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    department character varying(60),
    fulltimeequivalency numeric(5,4),
    offerdate date,
    hourlywage money,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the EducationOrganization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation; for example: Voluntary separation, Involuntary separation,
        Mutual agreement
        Other, etc.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment; for example:
        Employment in education
        Employment outside of education
        Retirement
        Family/personal relocation
        Change of assignment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationtostaffusi_employment; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationtostaffusi_employment AS
 SELECT edorg.educationorganizationid,
    empl.staffusi,
    count(*) AS count
   FROM (edfi.educationorganization edorg
     JOIN edfi.staffeducationorganizationemploymentassociation empl ON ((edorg.educationorganizationid = empl.educationorganizationid)))
  GROUP BY empl.staffusi, edorg.educationorganizationid;


ALTER TABLE auth.educationorganizationtostaffusi_employment OWNER TO postgres;

--
-- Name: localeducationagencyidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagencyidtostaffusi AS
 SELECT emp.educationorganizationid AS localeducationagencyid,
    NULL::integer AS schoolid,
    emp.staffusi
   FROM (edfi.localeducationagency lea
     JOIN auth.educationorganizationtostaffusi_employment emp ON ((lea.localeducationagencyid = emp.educationorganizationid)))
UNION ALL
 SELECT assgn.educationorganizationid AS localeducationagencyid,
    NULL::integer AS schoolid,
    assgn.staffusi
   FROM (edfi.localeducationagency lea
     JOIN auth.educationorganizationtostaffusi_assignment assgn ON ((lea.localeducationagencyid = assgn.educationorganizationid)))
UNION ALL
 SELECT sch.localeducationagencyid,
    emp.educationorganizationid AS schoolid,
    emp.staffusi
   FROM (edfi.school sch
     JOIN auth.educationorganizationtostaffusi_employment emp ON ((sch.schoolid = emp.educationorganizationid)))
UNION ALL
 SELECT sch.localeducationagencyid,
    assgn.educationorganizationid AS schoolid,
    assgn.staffusi
   FROM (edfi.school sch
     JOIN auth.educationorganizationtostaffusi_assignment assgn ON ((sch.schoolid = assgn.educationorganizationid)));


ALTER TABLE auth.localeducationagencyidtostaffusi OWNER TO postgres;

--
-- Name: schoolidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.schoolidtostaffusi AS
 SELECT DISTINCT sch.schoolid,
    seo_empl.staffusi
   FROM (edfi.school sch
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((sch.schoolid = seo_empl.educationorganizationid)))
UNION ALL
 SELECT DISTINCT sch.schoolid,
    seo_assgn.staffusi
   FROM (edfi.school sch
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assgn ON ((sch.schoolid = seo_assgn.educationorganizationid)));


ALTER TABLE auth.schoolidtostaffusi OWNER TO postgres;

--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT schoolidtostaffusi.schoolid AS educationorganizationid,
    schoolidtostaffusi.staffusi
   FROM auth.schoolidtostaffusi
UNION ALL
 SELECT localeducationagencyidtostaffusi.localeducationagencyid AS educationorganizationid,
    localeducationagencyidtostaffusi.staffusi
   FROM auth.localeducationagencyidtostaffusi;


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: educationorganizationidtostateagencyid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostateagencyid AS
 SELECT educationorganizationidentifiers.stateeducationagencyid,
    educationorganizationidentifiers.educationservicecenterid AS educationorganizationid
   FROM auth.educationorganizationidentifiers
  WHERE (educationorganizationidentifiers.educationservicecenterid IS NOT NULL)
UNION
 SELECT educationorganizationidentifiers.stateeducationagencyid,
    educationorganizationidentifiers.localeducationagencyid AS educationorganizationid
   FROM auth.educationorganizationidentifiers
  WHERE (educationorganizationidentifiers.localeducationagencyid IS NOT NULL)
UNION
 SELECT educationorganizationidentifiers.stateeducationagencyid,
    educationorganizationidentifiers.schoolid AS educationorganizationid
   FROM auth.educationorganizationidentifiers
  WHERE (educationorganizationidentifiers.schoolid IS NOT NULL)
UNION
 SELECT stateeducationagency.stateeducationagencyid,
    stateeducationagency.stateeducationagencyid AS educationorganizationid
   FROM edfi.stateeducationagency;


ALTER TABLE auth.educationorganizationidtostateagencyid OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryschool boolean,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    repeatgradeindicator boolean,
    classofschoolyear smallint,
    schoolchoicetransfer boolean,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    residencystatusdescriptorid integer,
    graduationplantypedescriptorid integer,
    educationorganizationid integer,
    graduationschoolyear smallint,
    employedwhileenrolled boolean,
    calendarcode character varying(60),
    schoolyear smallint,
    fulltimeequivalency numeric(3,2),
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the School in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected High School graduation year.';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: localeducationagencyidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagencyidtostudentusi AS
 SELECT sch.localeducationagencyid,
    ssa.studentusi,
    count(*) AS ignored
   FROM (edfi.school sch
     JOIN edfi.studentschoolassociation ssa ON ((sch.schoolid = ssa.schoolid)))
  GROUP BY sch.localeducationagencyid, ssa.studentusi;


ALTER TABLE auth.localeducationagencyidtostudentusi OWNER TO postgres;

--
-- Name: schoolidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.schoolidtostudentusi AS
 SELECT ssa.schoolid,
    ssa.studentusi,
    count(*) AS ignored
   FROM edfi.studentschoolassociation ssa
  GROUP BY ssa.schoolid, ssa.studentusi;


ALTER TABLE auth.schoolidtostudentusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT schoolidtostudentusi.schoolid AS educationorganizationid,
    schoolidtostudentusi.studentusi
   FROM auth.schoolidtostudentusi
UNION ALL
 SELECT localeducationagencyidtostudentusi.localeducationagencyid AS educationorganizationid,
    localeducationagencyidtostudentusi.studentusi
   FROM auth.localeducationagencyidtostudentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: localeducationagency; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagency AS
 SELECT edorg.id,
    lea.localeducationagencyid
   FROM (edfi.localeducationagency lea
     JOIN edfi.educationorganization edorg ON ((edorg.educationorganizationid = lea.localeducationagencyid)));


ALTER TABLE auth.localeducationagency OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    birthdate date NOT NULL,
    birthcity character varying(30),
    birthstateabbreviationdescriptorid integer,
    birthinternationalprovince character varying(150),
    birthcountrydescriptorid integer,
    dateenteredus date,
    multiplebirthstatus boolean,
    birthsexdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentparentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparentassociation (
    parentusi integer NOT NULL,
    studentusi integer NOT NULL,
    relationdescriptorid integer,
    primarycontactstatus boolean,
    liveswith boolean,
    emergencycontactstatus boolean,
    contactpriority integer,
    contactrestrictions character varying(250),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentparentassociation OWNER TO postgres;

--
-- Name: TABLE studentparentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparentassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentparentassociation.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN studentparentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentparentassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student; for example:
        Father, Mother, Step Father, Step Mother, Foster Father, Foster Mother, Guardian, etc.';


--
-- Name: COLUMN studentparentassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.primarycontactstatus IS 'Indicator of whether the person is a primary parental contact for the Student.';


--
-- Name: COLUMN studentparentassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.liveswith IS 'Indicator of whether the Student lives with the associated parent.';


--
-- Name: COLUMN studentparentassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the Student.';


--
-- Name: COLUMN studentparentassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentparentassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: localeducationagencyidtoparentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagencyidtoparentusi AS
 SELECT sch.localeducationagencyid,
    spa.parentusi,
    count(*) AS count
   FROM (((edfi.school sch
     JOIN edfi.studentschoolassociation ssa ON ((sch.schoolid = ssa.schoolid)))
     JOIN edfi.student s ON ((ssa.studentusi = s.studentusi)))
     JOIN edfi.studentparentassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY spa.parentusi, sch.localeducationagencyid;


ALTER TABLE auth.localeducationagencyidtoparentusi OWNER TO postgres;

--
-- Name: localeducationagencyidtoschoolid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagencyidtoschoolid AS
 SELECT sch.localeducationagencyid,
    sch.schoolid
   FROM edfi.school sch;


ALTER TABLE auth.localeducationagencyidtoschoolid OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: localeducationagencyidtostudentusithroughedorgassociation; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.localeducationagencyidtostudentusithroughedorgassociation AS
 SELECT DISTINCT lea.localeducationagencyid,
    seoa_lea.studentusi
   FROM (edfi.localeducationagency lea
     JOIN edfi.studenteducationorganizationresponsibilityassociation seoa_lea ON ((lea.localeducationagencyid = seoa_lea.educationorganizationid)))
UNION
 SELECT DISTINCT sch.localeducationagencyid,
    seoa_sch.studentusi
   FROM (edfi.school sch
     JOIN edfi.studenteducationorganizationresponsibilityassociation seoa_sch ON ((sch.schoolid = seoa_sch.educationorganizationid)));


ALTER TABLE auth.localeducationagencyidtostudentusithroughedorgassociation OWNER TO postgres;

--
-- Name: parentusitoschoolid; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.parentusitoschoolid AS
 SELECT ssa.schoolid,
    spa.parentusi,
    count(*) AS count
   FROM ((edfi.studentschoolassociation ssa
     JOIN edfi.student s ON ((ssa.studentusi = s.studentusi)))
     JOIN edfi.studentparentassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY spa.parentusi, ssa.schoolid;


ALTER TABLE auth.parentusitoschoolid OWNER TO postgres;

--
-- Name: parentusitostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.parentusitostudentusi AS
 SELECT spa.studentusi,
    spa.parentusi,
    count(*) AS count
   FROM edfi.studentparentassociation spa
  GROUP BY spa.studentusi, spa.parentusi;


ALTER TABLE auth.parentusitostudentusi OWNER TO postgres;

--
-- Name: school; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.school AS
 SELECT edorg.id,
    sch.schoolid,
    sch.localeducationagencyid
   FROM (edfi.school sch
     JOIN edfi.educationorganization edorg ON ((edorg.educationorganizationid = sch.schoolid)));


ALTER TABLE auth.school OWNER TO postgres;

--
-- Name: schoolidtostudentusithroughedorgassociation; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.schoolidtostudentusithroughedorgassociation AS
 SELECT DISTINCT sch.schoolid,
    seoa.studentusi
   FROM (edfi.school sch
     JOIN edfi.studenteducationorganizationresponsibilityassociation seoa ON ((sch.schoolid = seoa.educationorganizationid)));


ALTER TABLE auth.schoolidtostudentusithroughedorgassociation OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid integer NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: account; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.account (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.account OWNER TO postgres;

--
-- Name: TABLE account; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.account IS 'This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN account.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN account.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN account.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN account.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.accountname IS 'A descriptive name for the account.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid integer NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating (e.g., School Rating, Safety Score).';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the AccountabilityRating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the AccountabilityRating (e.g., NCLB, AEIS).';


--
-- Name: accountaccountcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountaccountcode (
    accountclassificationdescriptorid integer NOT NULL,
    accountcodenumber character varying(50) NOT NULL,
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.accountaccountcode OWNER TO postgres;

--
-- Name: TABLE accountaccountcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountaccountcode IS 'The set of account codes defined for the education accounting system organized by account code type (e.g., fund, function, object) that map to the account.';


--
-- Name: COLUMN accountaccountcode.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountclassificationdescriptorid IS 'The type of account code associated with the account.';


--
-- Name: COLUMN accountaccountcode.accountcodenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountcodenumber IS 'An account code defined for the education accounting system by the education organization.';


--
-- Name: COLUMN accountaccountcode.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN accountaccountcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountaccountcode.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.fiscalyear IS 'The financial accounting year.';


--
-- Name: accountclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountclassificationdescriptor (
    accountclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accountclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE accountclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountclassificationdescriptor IS 'This descriptor holds the set of account code categories defined for the education accounting system organized by account code type (e.g., fund, function, object).';


--
-- Name: COLUMN accountclassificationdescriptor.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountclassificationdescriptor.accountclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountcode (
    accountclassificationdescriptorid integer NOT NULL,
    accountcodenumber character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountcodedescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.accountcode OWNER TO postgres;

--
-- Name: TABLE accountcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountcode IS 'The set of account codes defined by an education organization for a fiscal year.';


--
-- Name: COLUMN accountcode.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountclassificationdescriptorid IS 'The type of account code associated with the account.';


--
-- Name: COLUMN accountcode.accountcodenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountcodenumber IS 'An account code defined for the education accounting system by the education organization.';


--
-- Name: COLUMN accountcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountcode.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN accountcode.accountcodedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountcodedescription IS 'A description of the account code.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: actual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.actual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.actual OWNER TO postgres;

--
-- Name: TABLE actual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.actual IS 'This financial entity represents the sum of the financial transactions to date relating to a specific account.';


--
-- Name: COLUMN actual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN actual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.asofdate IS 'The date of the reported actual element.';


--
-- Name: COLUMN actual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN actual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN actual.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.amounttodate IS 'Current balance for the account.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmenttitle character varying(100) NOT NULL,
    assessmentcategorydescriptorid integer,
    assessmentform character varying(60),
    assessmentversion integer,
    revisiondate date,
    maxrawscore numeric(15,5),
    nomenclature character varying(35),
    assessmentfamily character varying(60),
    educationorganizationid integer,
    adaptiveassessment boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the Assessment.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content. For example:
        Achievement test
        Advanced placement test
        Alternate assessment/grade-level standards
        Attitudinal test
        Cognitive and perceptual skills test
        ...';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for Assessment.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The AssessmentFamily this Assessment is a member of.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    maxrawscore numeric(15,5),
    itemtext character varying(1024),
    correctresponse character varying(20),
    expectedtimeassessed character varying(30),
    nomenclature character varying(35),
    assessmentitemuri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the AssessmentItem. For example:
        Multiple choice
        Analytic
        Prose
        ...';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.correctresponse IS 'The correct response for the AssessmentItem.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the AssessmentItem.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for AssessmentItem.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item (e.g., Multiple Choice, Analytic, Prose).';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'LearningStandard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    responsedescription character varying(1024),
    correctresponse boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    languagedescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported:
        1. Specification of performance level by minimum and maximum score
        2. Specification of performance level by cut score, using only minimum score
        3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the Assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the Assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    alternatedayname character varying(20),
    starttime time without time zone,
    endtime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this BellSchedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the BellSchedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the BellSchedule applies.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular BellSchedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular BellSchedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: budget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.budget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.budget OWNER TO postgres;

--
-- Name: TABLE budget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.budget IS 'This financial entity represents the amount of monies allocated to be spent or received by an education organization as related to a specific account.';


--
-- Name: COLUMN budget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN budget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.asofdate IS 'The date of the reported budget element.';


--
-- Name: COLUMN budget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN budget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN budget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.amount IS 'Amount budgeted for the account for this fiscal year.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of Calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the GradeLevel associated with the Calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the GradeLevel associated with the Calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a Section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    schoolid integer NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    cohortdescription character varying(1024),
    cohorttypedescriptorid integer NOT NULL,
    cohortscopedescriptorid integer,
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the Cohort and its purpose.';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this Cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid integer NOT NULL,
    licenseidentifier character varying(20) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    authorizedfacilitycapacity integer,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the CommunityProvider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a CommunityProvider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the CompetencyObjective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the CompetencyObjective.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.contractedstaff OWNER TO postgres;

--
-- Name: TABLE contractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contractedstaff IS 'This financial entity represents the sum of the financial transactions to date for contracted staff. ContractedStaff includes "contractors" or "consultants" who perform services for an agreed upon fee, or an employee of a management service contracted to work on site.';


--
-- Name: COLUMN contractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN contractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.asofdate IS 'The date of the reported contracted staff element.';


--
-- Name: COLUMN contractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN contractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN contractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN contractedstaff.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.amounttodate IS 'Current balance (amount paid to contractor) for account for the fiscal year.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    coursetitle character varying(60) NOT NULL,
    numberofparts integer NOT NULL,
    academicsubjectdescriptorid integer,
    coursedescription character varying(1024),
    timerequiredforcompletion integer,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    coursegpaapplicabilitydescriptorid integer,
    coursedefinedbydescriptorid integer,
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    maximumavailablecreditconversion numeric(9,2),
    careerpathwaydescriptorid integer,
    maxcompletionsforcredit integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.academicsubjectdescriptorid IS 'The intended major subject area of the course.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion.  This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course, for example:
    Pass
    Fail
    Incomplete
    Withdrawn';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    competencyleveldescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningobjective (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningobjective OWNER TO postgres;

--
-- Name: TABLE courselearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningobjective IS 'Learning Objectives to be mastered in the course.';


--
-- Name: COLUMN courselearningobjective.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN courselearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning Standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    localcoursetitle character varying(60),
    instructionaltimeplanned integer,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    curriculumuseddescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    attemptedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3) NOT NULL,
    earnedcredittypedescriptorid integer,
    earnedcreditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    methodcreditearneddescriptorid integer,
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    alternativecoursetitle character varying(60),
    alternativecoursecode character varying(60),
    externaleducationorganizationid integer,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned (e.g., Classroom, Examination, Transfer).';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.alternativecoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursecode IS 'The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    additionalcredittypedescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course (e.g., dual credit, AP, IB).';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    credentialfielddescriptorid integer NOT NULL,
    issuancedate date NOT NULL,
    credentialtypedescriptorid integer NOT NULL,
    teachingcredentialdescriptorid integer NOT NULL,
    teachingcredentialbasisdescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the Credential.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialendorsement character varying(255) NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplineactionlength numeric(5,2),
    actualdisciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid integer NOT NULL,
    assignmentschoolid integer,
    receivededucationservicesduringexpulsion boolean,
    iepplacementmeetingindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the DisciplineAction (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.receivededucationservicesduringexpulsion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.receivededucationservicesduringexpulsion IS 'An indication of whether the student received educational services when removed from the regular school program for disciplinary reasons.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentassociation (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentassociation IS 'Reference to the DisciplineIncident associated with the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    incidentdate date NOT NULL,
    incidenttime time without time zone,
    incidentlocationdescriptorid integer,
    incidentdescription character varying(1024),
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    reportedtolawenforcement boolean,
    casenumber character varying(20),
    incidentcost money,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the DisciplineIncident occurred.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the DisciplineIncident occurred and whether or not it occurred on school, for example:
        On school
        Administrative offices area
        Cafeteria area
        Classroom
        Hallway or stairs
        ...';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the DisciplineIncident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff"); for example:
        Student
        Parent/guardian
        Law enforcement officer
        Nonschool personnel
        Representative of visiting school
        ...';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the DisciplineIncident by name.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the DisciplineIncident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the Discipline Incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    learningresourcemetadatauri character varying(255),
    shortdescription character varying(75),
    description character varying(1024),
    additionalauthorsindicator boolean,
    publisher character varying(50),
    timerequired character varying(30),
    interactivitystyledescriptorid integer,
    contentclassdescriptorid integer,
    userightsurl character varying(255),
    publicationdate date,
    publicationyear smallint,
    version character varying(10),
    learningstandardid character varying(60),
    cost money,
    costratedescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the EducationContent.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the EducationContent.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable-if omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable-if omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    author character varying(100) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes the physical location of the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid integer NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid integer NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the InterventionPrescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the InterventionPrescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid integer NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid integer NOT NULL,
    membereducationorganizationid integer NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the EducationOrganization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the EducationOrganization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the EducationOrganization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid integer NOT NULL,
    peereducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid integer NOT NULL,
    schoolid integer NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the Student exited the Program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the child left the Program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the Student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date,
    statusenddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradebookentrytypedescriptorid integer,
    description character varying(1024),
    gradingperioddescriptorid integer,
    periodsequence integer,
    duedate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the GradebookEntry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: gradebookentrylearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningobjective (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningobjective OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningobjective IS 'LearningObjectives associated with the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningobjective.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentrylearningobjective.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradebookentrylearningobjective.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentrylearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN gradebookentrylearningobjective.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentrylearningobjective.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentrylearningobjective.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentrylearningobjective.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningstandard.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradebookentrylearningstandard.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentrylearningstandard.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentrylearningstandard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentrylearningstandard.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentrylearningstandard.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the GradingPeriod.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the GradingPeriod.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the GradingPeriod.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    totalrequiredcreditconversion numeric(9,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the GraduationPlan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    mindosage integer,
    maxdosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the Intervention-if omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the Intervention-if omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the Intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the Intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the Intervention (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the Intervention (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid integer NOT NULL,
    endtime time without time zone NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the Intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the Intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    mindosage integer,
    maxdosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the InterventionPrescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the InterventionPrescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the InterventionPrescription (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the InterventionPrescription (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the InterventionPrescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the InterventionPrescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the InterventionStudy per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the InterventionStudy.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the InterventionStudy.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjective (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    objective character varying(60) NOT NULL,
    description character varying(1024),
    nomenclature character varying(35),
    successcriteria character varying(150),
    parentlearningobjectiveid character varying(60),
    parentnamespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.learningobjective OWNER TO postgres;

--
-- Name: TABLE learningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjective IS 'This entity represents identified learning objectives for courses in specific grades.';


--
-- Name: COLUMN learningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN learningobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.objective IS 'The designated title of the LearningObjective.';


--
-- Name: COLUMN learningobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.description IS 'The description of the LearningObjective.';


--
-- Name: COLUMN learningobjective.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.nomenclature IS 'Reflects the specific nomenclature used for the LearningObjective.';


--
-- Name: COLUMN learningobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningObjective.';


--
-- Name: COLUMN learningobjective.parentlearningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentlearningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.parentnamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentnamespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectiveacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectiveacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectiveacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningobjectiveacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectiveacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectiveacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectivecontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandard (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandard IS 'A reference to the type of content standard (e.g., state, national)';


--
-- Name: COLUMN learningobjectivecontentstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN learningobjectivecontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningobjectivecontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningobjectivecontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningobjectivecontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningobjectivecontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningobjectivecontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningobjectivecontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandardauthor (
    author character varying(100) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectivegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivegradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivegradelevel OWNER TO postgres;

--
-- Name: TABLE learningobjectivegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivegradelevel IS 'The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.gradeleveldescriptorid IS 'The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivegradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectiveh; Type: VIEW; Schema: edfi; Owner: postgres
--

CREATE VIEW edfi.learningobjectiveh AS
 WITH RECURSIVE learningobjectiveh_cte AS (
         SELECT learningobjective.learningobjectiveid,
            learningobjective.namespace,
            learningobjective.objective,
            learningobjective.description,
            learningobjective.nomenclature,
            learningobjective.successcriteria,
            learningobjective.parentlearningobjectiveid,
            learningobjective.parentnamespace,
            learningobjective.createdate,
            learningobjective.lastmodifieddate,
            learningobjective.id
           FROM edfi.learningobjective
          WHERE ((learningobjective.parentlearningobjectiveid IS NULL) AND (learningobjective.parentnamespace IS NULL))
        UNION ALL
         SELECT t1.learningobjectiveid,
            t1.namespace,
            t1.objective,
            t1.description,
            t1.nomenclature,
            t1.successcriteria,
            t1.parentlearningobjectiveid,
            t1.parentnamespace,
            t1.createdate,
            t1.lastmodifieddate,
            t1.id
           FROM (edfi.learningobjective t1
             JOIN learningobjectiveh_cte learningobjectiveh_cte_1 ON ((((t1.parentlearningobjectiveid)::text = (learningobjectiveh_cte_1.learningobjectiveid)::text) AND ((t1.parentnamespace)::text = (learningobjectiveh_cte_1.namespace)::text))))
          WHERE ((t1.parentlearningobjectiveid IS NOT NULL) AND (t1.parentnamespace IS NOT NULL))
        )
 SELECT learningobjectiveh_cte.learningobjectiveid,
    learningobjectiveh_cte.namespace,
    learningobjectiveh_cte.objective,
    learningobjectiveh_cte.description,
    learningobjectiveh_cte.nomenclature,
    learningobjectiveh_cte.successcriteria,
    learningobjectiveh_cte.parentlearningobjectiveid,
    learningobjectiveh_cte.parentnamespace,
    learningobjectiveh_cte.createdate,
    learningobjectiveh_cte.lastmodifieddate,
    learningobjectiveh_cte.id
   FROM learningobjectiveh_cte;


ALTER TABLE edfi.learningobjectiveh OWNER TO postgres;

--
-- Name: learningobjectivelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivelearningstandard (
    learningobjectiveid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivelearningstandard IS 'LearningStandard(s) included in this objective.';


--
-- Name: COLUMN learningobjectivelearningstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    description character varying(1024) NOT NULL,
    learningstandarditemcode character varying(60),
    uri character varying(255),
    coursetitle character varying(60),
    successcriteria character varying(150),
    parentlearningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandardscopedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official Course Title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningStandard.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the LearningStandard.';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the LearningStandard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the LearningStandard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    author character varying(100) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescriptorid integer,
    learningstandardequivalencestrengthdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is  partial.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardh; Type: VIEW; Schema: edfi; Owner: postgres
--

CREATE VIEW edfi.learningstandardh AS
 WITH RECURSIVE learningstandardh_cte AS (
         SELECT learningstandard.learningstandardid,
            learningstandard.description,
            learningstandard.learningstandarditemcode,
            learningstandard.uri,
            learningstandard.coursetitle,
            learningstandard.successcriteria,
            learningstandard.parentlearningstandardid,
            learningstandard.namespace,
            learningstandard.learningstandardcategorydescriptorid,
            learningstandard.learningstandardscopedescriptorid,
            learningstandard.createdate,
            learningstandard.lastmodifieddate,
            learningstandard.id
           FROM edfi.learningstandard
          WHERE (learningstandard.parentlearningstandardid IS NULL)
        UNION ALL
         SELECT t1.learningstandardid,
            t1.description,
            t1.learningstandarditemcode,
            t1.uri,
            t1.coursetitle,
            t1.successcriteria,
            t1.parentlearningstandardid,
            t1.namespace,
            t1.learningstandardcategorydescriptorid,
            t1.learningstandardscopedescriptorid,
            t1.createdate,
            t1.lastmodifieddate,
            t1.id
           FROM (edfi.learningstandard t1
             JOIN learningstandardh_cte learningstandardh_cte_1 ON (((t1.parentlearningstandardid)::text = (learningstandardh_cte_1.learningstandardid)::text)))
          WHERE (t1.parentlearningstandardid IS NOT NULL)
        )
 SELECT learningstandardh_cte.learningstandardid,
    learningstandardh_cte.description,
    learningstandardh_cte.learningstandarditemcode,
    learningstandardh_cte.uri,
    learningstandardh_cte.coursetitle,
    learningstandardh_cte.successcriteria,
    learningstandardh_cte.parentlearningstandardid,
    learningstandardh_cte.namespace,
    learningstandardh_cte.learningstandardcategorydescriptorid,
    learningstandardh_cte.learningstandardscopedescriptorid,
    learningstandardh_cte.createdate,
    learningstandardh_cte.lastmodifieddate,
    learningstandardh_cte.id
   FROM learningstandardh_cte;


ALTER TABLE edfi.learningstandardh OWNER TO postgres;

--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardprerequisitelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardprerequisitelearningstandard (
    learningstandardid character varying(60) NOT NULL,
    prerequisitelearningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardprerequisitelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardprerequisitelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardprerequisitelearningstandard IS 'The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.prerequisitelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.prerequisitelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid integer NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    localeducationagencyid integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    stateassessmentadministrationfunding numeric(5,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: localeducationagencyh; Type: VIEW; Schema: edfi; Owner: postgres
--

CREATE VIEW edfi.localeducationagencyh AS
 WITH RECURSIVE localeducationagencyh_cte AS (
         SELECT localeducationagency.localeducationagencyid,
            localeducationagency.charterstatusdescriptorid,
            localeducationagency.educationservicecenterid,
            localeducationagency.parentlocaleducationagencyid,
            localeducationagency.localeducationagencycategorydescriptorid,
            localeducationagency.stateeducationagencyid
           FROM edfi.localeducationagency
          WHERE (localeducationagency.parentlocaleducationagencyid IS NULL)
        UNION ALL
         SELECT t1.localeducationagencyid,
            t1.charterstatusdescriptorid,
            t1.educationservicecenterid,
            t1.parentlocaleducationagencyid,
            t1.localeducationagencycategorydescriptorid,
            t1.stateeducationagencyid
           FROM (edfi.localeducationagency t1
             JOIN localeducationagencyh_cte localeducationagencyh_cte_1 ON ((t1.parentlocaleducationagencyid = localeducationagencyh_cte_1.localeducationagencyid)))
          WHERE (t1.parentlocaleducationagencyid IS NOT NULL)
        )
 SELECT localeducationagencyh_cte.localeducationagencyid,
    localeducationagencyh_cte.charterstatusdescriptorid,
    localeducationagencyh_cte.educationservicecenterid,
    localeducationagencyh_cte.parentlocaleducationagencyid,
    localeducationagencyh_cte.localeducationagencycategorydescriptorid,
    localeducationagencyh_cte.stateeducationagencyid
   FROM localeducationagencyh_cte;


ALTER TABLE edfi.localeducationagencyh OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The Location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    maxrawscore numeric(15,5),
    percentofassessment numeric(5,4),
    nomenclature character varying(35),
    description character varying(1024),
    parentidentificationcode character varying(60),
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the Assessment that tests this objective.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of ObjectiveAssessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the ObjectiveAssessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmenth; Type: VIEW; Schema: edfi; Owner: postgres
--

CREATE VIEW edfi.objectiveassessmenth AS
 WITH RECURSIVE objectiveassessmenth_cte AS (
         SELECT objectiveassessment.assessmentidentifier,
            objectiveassessment.identificationcode,
            objectiveassessment.namespace,
            objectiveassessment.maxrawscore,
            objectiveassessment.percentofassessment,
            objectiveassessment.nomenclature,
            objectiveassessment.description,
            objectiveassessment.parentidentificationcode,
            objectiveassessment.academicsubjectdescriptorid,
            objectiveassessment.createdate,
            objectiveassessment.lastmodifieddate,
            objectiveassessment.id
           FROM edfi.objectiveassessment
          WHERE (objectiveassessment.parentidentificationcode IS NULL)
        UNION ALL
         SELECT t1.assessmentidentifier,
            t1.identificationcode,
            t1.namespace,
            t1.maxrawscore,
            t1.percentofassessment,
            t1.nomenclature,
            t1.description,
            t1.parentidentificationcode,
            t1.academicsubjectdescriptorid,
            t1.createdate,
            t1.lastmodifieddate,
            t1.id
           FROM (edfi.objectiveassessment t1
             JOIN objectiveassessmenth_cte objectiveassessmenth_cte_1 ON ((((t1.assessmentidentifier)::text = (objectiveassessmenth_cte_1.assessmentidentifier)::text) AND ((t1.parentidentificationcode)::text = (objectiveassessmenth_cte_1.identificationcode)::text) AND ((t1.namespace)::text = (objectiveassessmenth_cte_1.namespace)::text))))
          WHERE ((t1.assessmentidentifier IS NOT NULL) AND (t1.parentidentificationcode IS NOT NULL) AND (t1.namespace IS NOT NULL))
        )
 SELECT objectiveassessmenth_cte.assessmentidentifier,
    objectiveassessmenth_cte.identificationcode,
    objectiveassessmenth_cte.namespace,
    objectiveassessmenth_cte.maxrawscore,
    objectiveassessmenth_cte.percentofassessment,
    objectiveassessmenth_cte.nomenclature,
    objectiveassessmenth_cte.description,
    objectiveassessmenth_cte.parentidentificationcode,
    objectiveassessmenth_cte.academicsubjectdescriptorid,
    objectiveassessmenth_cte.createdate,
    objectiveassessmenth_cte.lastmodifieddate,
    objectiveassessmenth_cte.id
   FROM objectiveassessmenth_cte;


ALTER TABLE edfi.objectiveassessmenth OWNER TO postgres;

--
-- Name: objectiveassessmentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningobjective (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    learningobjectivenamespace character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningobjective OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningobjective IS 'References the LearningObjective(s) the ObjectiveAssessment tests.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN objectiveassessmentlearningobjective.learningobjectivenamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.learningobjectivenamespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'LearningStandard tested by this ObjectiveAssessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported:
        1. Specification of performance level by minimum and maximum score
        2. Specification of performance level by cut score, using only minimum score
        3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: oldethnicitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.oldethnicitydescriptor (
    oldethnicitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.oldethnicitydescriptor OWNER TO postgres;

--
-- Name: TABLE oldethnicitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.oldethnicitydescriptor IS 'Previous definition of Ethnicity combining Hispanic/Latino and Race.';


--
-- Name: COLUMN oldethnicitydescriptor.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.oldethnicitydescriptor.oldethnicitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    programassignmentdescriptorid integer,
    dateposted date NOT NULL,
    datepostingremoved date,
    postingresultdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the OpenStaffPosition will be assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education''
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the OpenStaffPosition was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the OpenStaffPosition, for example English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the OpenStaffPosition, for example English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: parent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parent (
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    loginid character varying(60),
    parentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.parent OWNER TO postgres;

--
-- Name: TABLE parent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parent IS 'This entity represents a parent or guardian of a student, such as mother, father, or caretaker.';


--
-- Name: COLUMN parent.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parent.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN parent.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parent.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parent.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parent.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN parent.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN parent.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN parent.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN parent.parentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentuniqueid IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parent_parentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.parent_parentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.parent_parentusi_seq OWNER TO postgres;

--
-- Name: parent_parentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.parent_parentusi_seq OWNED BY edfi.parent.parentusi;


--
-- Name: parentaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddress OWNER TO postgres;

--
-- Name: TABLE parentaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddress IS 'Parent''s address, if different from the student address.';


--
-- Name: COLUMN parentaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN parentaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN parentaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN parentaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN parentaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN parentaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN parentaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: parentaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddressperiod OWNER TO postgres;

--
-- Name: TABLE parentaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN parentaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN parentaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: parentelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentelectronicmail OWNER TO postgres;

--
-- Name: TABLE parentelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN parentelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN parentelectronicmail.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: parentinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentinternationaladdress OWNER TO postgres;

--
-- Name: TABLE parentinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN parentinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentinternationaladdress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN parentinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN parentinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN parentinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: parentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguage (
    languagedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguage OWNER TO postgres;

--
-- Name: TABLE parentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN parentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguage.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguageuse OWNER TO postgres;

--
-- Name: TABLE parentlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentothername (
    othernametypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentothername OWNER TO postgres;

--
-- Name: TABLE parentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN parentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN parentothername.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN parentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: parentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE parentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN parentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN parentpersonalidentificationdocument.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: parenttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parenttelephone (
    parentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parenttelephone OWNER TO postgres;

--
-- Name: TABLE parenttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parenttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN parenttelephone.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parenttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN parenttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN parenttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN parenttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN parenttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: payroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.payroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.payroll OWNER TO postgres;

--
-- Name: TABLE payroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.payroll IS 'This financial entity represents the sum of the financial transactions to date for employee compensation. An "employee" who performs services under the direction of the employing institution or agency, is compensated for such services by the employer and is eligible for employee benefits and wage or salary tax withholdings.';


--
-- Name: COLUMN payroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN payroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.asofdate IS 'The date of the reported payroll element.';


--
-- Name: COLUMN payroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN payroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN payroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN payroll.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.amounttodate IS 'Current balance (amount paid to employee) for account for the fiscal year.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The PostSecondaryEvent that is logged (e.g., FAFSA application, college application, college acceptance).';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of whether a post-secondary institution''s highest level of offering is a program of 4 years or higher (4 year), 2 but less than 4 years (2 year) or less than 2 years.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    mediumofinstructiondescriptorid integer NOT NULL,
    postsecondaryinstitutionid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningobjective (
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningobjective OWNER TO postgres;

--
-- Name: TABLE programlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningobjective IS 'References the LearningObjective(s) with which the Program is associated.';


--
-- Name: COLUMN programlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN programlearningobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'LearningStandard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: programservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programservice (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programservice OWNER TO postgres;

--
-- Name: TABLE programservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programservice IS 'Defines the services this program provides to students.';


--
-- Name: COLUMN programservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.servicedescriptorid IS 'Defines the services this program provides to students.';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested. For example:
    Absent
    Refusal by parent
    Refusal by student
    Medical waiver
    Illness
    Disruptive behavior
    LEP Exempt
    ''...';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    gpagivengradingperiod numeric(18,4),
    gpacumulative numeric(18,4),
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.gpagivengradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpagivengradingperiod IS 'A measure of average performance in all courses taken by an individual for the current grading period.';


--
-- Name: COLUMN reportcard.gpacumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpacumulative IS 'A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the Student for this grading period.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The Student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardstudentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentlearningobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentlearningobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentlearningobjective IS 'The StudentLearningObjective evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN reportcardstudentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN reportcardstudentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.  For example:
    Nonscorable response
    Ineffective response
    Effective response
    Partial response
    ...';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    eventdate date NOT NULL,
    educationalenvironmentdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the RestraintEvent.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the RestraintEvent.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(20) NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.  For example:
    Primary administration
    First retest
    Second retest
    ...';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolcategorydescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school. For example: High School, Middle School, and/or Elementary School.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school. For example: High School, Middle School, and/or Elementary School.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sequenceofcourse integer,
    educationalenvironmentdescriptorid integer,
    mediumofinstructiondescriptorid integer,
    populationserveddescriptorid integer,
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    availablecreditconversion numeric(9,2),
    instructionlanguagedescriptorid integer,
    locationschoolid integer,
    locationclassroomidentificationcode character varying(60),
    officialattendanceperiod boolean,
    sectionname character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services; for example:
        Center-based instruction
        Home-based instruction
        Hospital class
        Mainstream
        Residential care and treatment facility
        ...';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters; for example:
        Technology-based instruction in classroom
        Correspondence instruction
        Face-to-face instruction
        Virtual/On-line Distance learning
        Center-based instruction
        ...';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the Section is offered and tailored to; for example:
        Bilingual students
        Remedial education students
        Gifted and talented students
        Career and Technical Education students
        Special education students
        ...';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction, if omitted English is assumed.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a Class Period.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the SectionIdentifier.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the SectionAttendanceTakenEvent was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    classperiodname character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the Section meets.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course Offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course Offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course Offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course Offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program (e.g., CTE) to which the Section is associated.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A term in the school year, generally a unit of time into which courses are scheduled, instruction occurs and by which credits are awarded. Sessions may be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the Session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the Session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'An descriptor value indicating the term (e.g. ''Semester'', ''Quarter'', etc.).';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    birthdate date,
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    citizenshipstatusdescriptorid integer,
    highestcompletedlevelofeducationdescriptorid integer,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    loginid character varying(60),
    highlyqualifiedteacher boolean,
    staffuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion. For example, this includes:
    1. An "employee" who performs services under the direction of the employing institution or agency is compensated for such services by the employer and is eligible for employee benefits and wage or salary tax withholdings
    2. A "contractor" or "consultant" who performs services for an agreed upon fee or an employee of a management service contracted to work on site
    3. A "volunteer" who performs services on a voluntary and uncompensated basis
    4. An in-kind service provider
    5. An independent contractor or businessperson working at a school site.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.oldethnicitydescriptorid IS 'Previous definition of Ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the Staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    credentialidentifier character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident (e.g., Victim, Perpetrator, Witness, Reporter).';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident (e.g., Victim, Perpetrator, Witness, Reporter).';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the EducationOrganization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    addresstypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    begindate date NOT NULL,
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffidentificationsystemdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    languagedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken, for example: Sick, Personal, Vacation.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    othernametypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the Staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    racedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    recognitiontypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the learner for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the School(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    classroompositiondescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    highlyqualifiedteacher boolean,
    teacherstudentdatalinkexclusion boolean,
    percentagecontribution numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the Staff member holds in the specific class/section; for example:
        Teacher of Record, Assistant Teacher, Support Teacher, Substitute Teacher...';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the Section. If blank, defaults to the first day of the first grading period for the Section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the Section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    schoolyear smallint NOT NULL,
    stateeducationagencyid integer NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    stateeducationagencyid integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativegradepointsearned numeric(18,4),
    cumulativegradepointaverage numeric(18,4),
    gradevaluequalifier character varying(80),
    projectedgraduationdate date,
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionattemptedcreditconversion numeric(9,2),
    sessiongradepointsearned numeric(18,4),
    sessiongradepointaverage numeric(18,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointsearned IS 'The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointaverage IS 'A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.gradevaluequalifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.gradevaluequalifier IS 'The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student''s Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointsearned IS 'The number of grade points an individual earned for this session.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointaverage IS 'The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    academichonorcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    honorawarddate date,
    honorawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    totalnumberinclass integer NOT NULL,
    percentageranking integer,
    classrankingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    diplomaleveldescriptorid integer,
    ctecompleter boolean,
    diplomadescription character varying(80),
    diplomaawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.
        Minimum high school program
        Recommended high school program
        Distinguished Achievement Program.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the learner for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone NOT NULL,
    administrationenddate timestamp without time zone,
    serialnumber character varying(60),
    administrationlanguagedescriptorid integer,
    administrationenvironmentdescriptorid integer,
    retestindicatordescriptorid integer,
    reasonnottesteddescriptorid integer,
    whenassessedgradeleveldescriptorid integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    schoolyear smallint,
    platformtypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was retaken. For example:
        Primary administration
        First retest
        Second retest
        ...';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested. For example:
        Absent
        Refusal by parent
        Refusal by student
        Medical waiver
        Illness
        Disruptive behavior
        LEP Exempt
        ...';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    accommodationdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria. For example:
        Braille
        Enlarged monitor view
        Extra time
        Large Print
        Setting
        Oral Administration
        ...';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria. For example:
        Braille
        Enlarged monitor view
        Extra time
        Large Print
        Setting
        Oral Administration
        ...';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentresponse character varying(60),
    descriptivefeedback character varying(1024),
    responseindicatordescriptorid integer,
    assessmentitemresultdescriptorid integer NOT NULL,
    rawscoreresult numeric(15,5),
    timeassessed character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a learner in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response. For example:
        Nonscorable response
        Ineffective response
        Effective response
        Partial response
        ...';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item. For example:
        Correct
        Incorrect
         Met standard
        ...';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of an individual on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the AssessmentItem.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelmet boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the StudentAssessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelmet; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelmet IS 'Indicator of whether the performance level was met.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an ObjectiveAssessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentassessmentstudentobjectiveassessmenth; Type: VIEW; Schema: edfi; Owner: postgres
--

CREATE VIEW edfi.studentassessmentstudentobjectiveassessmenth AS
 WITH RECURSIVE recursivelyordereddata AS (
         SELECT objectiveassessment.assessmentidentifier,
            objectiveassessment.identificationcode,
            objectiveassessment.namespace,
            objectiveassessment.maxrawscore,
            objectiveassessment.percentofassessment,
            objectiveassessment.nomenclature,
            objectiveassessment.description,
            objectiveassessment.parentidentificationcode,
            objectiveassessment.academicsubjectdescriptorid,
            objectiveassessment.discriminator,
            objectiveassessment.createdate,
            objectiveassessment.lastmodifieddate,
            objectiveassessment.id
           FROM edfi.objectiveassessment
          WHERE (objectiveassessment.parentidentificationcode IS NULL)
        UNION ALL
         SELECT childselector.assessmentidentifier,
            childselector.identificationcode,
            childselector.namespace,
            childselector.maxrawscore,
            childselector.percentofassessment,
            childselector.nomenclature,
            childselector.description,
            childselector.parentidentificationcode,
            childselector.academicsubjectdescriptorid,
            childselector.discriminator,
            childselector.createdate,
            childselector.lastmodifieddate,
            childselector.id
           FROM (edfi.objectiveassessment childselector
             JOIN recursivelyordereddata ON (((childselector.identificationcode)::text = (recursivelyordereddata.parentidentificationcode)::text)))
        )
 SELECT t.assessmentidentifier,
    t.identificationcode,
    t.namespace,
    t.studentassessmentidentifier,
    rt.maxrawscore,
    rt.percentofassessment,
    rt.nomenclature,
    rt.description,
    rt.parentidentificationcode,
    t.createdate
   FROM (edfi.studentassessmentstudentobjectiveassessment t
     JOIN recursivelyordereddata rt ON ((((t.assessmentidentifier)::text = (rt.assessmentidentifier)::text) AND ((t.identificationcode)::text = (rt.identificationcode)::text) AND ((t.namespace)::text = (rt.namespace)::text))));


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmenth OWNER TO postgres;

--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelmet boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The PerformanceLevel(s) achieved for the ObjectiveAssessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelmet; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelmet IS 'Indicator of whether the performance level was met.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the Cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the Student was first identified as part of the Cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the Student was removed as part of the Cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The Cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the Student was first identified as part of the Cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA).
Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogram (
    begindate date NOT NULL,
    careerpathwaydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cipcode character varying(120),
    primarycteprogramindicator boolean,
    cteprogramcompletionindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogram OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogram IS 'The career cluster representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.careerpathwaydescriptorid IS 'A sequence of courses within an area of interest that is a student''s educational road map to a chosen career.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cipcode IS 'Number and description of the CIP Code associated with the student''s CTEProgram.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.primarycteprogramindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.primarycteprogramindicator IS 'A boolean indicator of whether this CTEProgram, is the student''s primary CTEProgram.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cteprogramcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cteprogramcompletionindicator IS 'A boolean indicator of whether the Student has completed the CTEProgram.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    cipcode character varying(120),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the Service(s) being provided to the Student by the CTE Program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE Program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP Code associated with the student''s CTE Program.';


--
-- Name: studentcteprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studentcteprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studentcteprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    studentparticipationcodedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociation IS 'This association indicates those students who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident; 
        for example:
        Victim
        Perpetrator
        Witness
        Reporter.';


--
-- Name: studentdisciplineincidentassociationbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociationbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociationbehavior OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociationbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociationbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    sexdescriptorid integer NOT NULL,
    profilethumbnail character varying(255),
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the Education Organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s gender as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.oldethnicitydescriptorid IS 'Previous definition of Ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    cohortyeartypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The value of the  school year for the Cohort.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipat_810575; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipation (
    educationorganizationid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date,
    enddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipation IS 'Key programs the student is participating in or receives services from.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.begindate IS 'The date the Student was associated with the Program or service.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.enddate IS 'The date the Program participation ended.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid integer NOT NULL,
    racedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the Student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of the student''s home situation:
        Displaced Homemaker, Immigrant, Migratory, Military Parent, Pregnant Teen, Single Parent, and Unaccompanied Youth.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the Student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    indicatorgroup character varying(200),
    indicator character varying(35) NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'Indicator(s) or metric(s) computed for the student (e.g., at risk) to influence more effective education or direct specific interventions.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    begindate date NOT NULL,
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    datefulfilled date,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    competencyleveldescriptorid integer,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentgradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN studentgradebookentry.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN studentgradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentgradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentgradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentgradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentgradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The CompetencyLevel assessed for the student for the referenced LearningObjective.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprimarynighttimeresidencedescriptorid integer,
    awaitingfostercare boolean,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the Student by the Homeless Program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Homeless Program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(20),
    cohorteducationorganizationid integer,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    englishlearnerparticipation boolean,
    dosage integer
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English Learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    monitoreddescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The School Year for which the Assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the Student by the Language Instruction Program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Language Instruction Program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: TABLE studentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.competencyleveldescriptorid IS 'The CompetencyLevel assessed for the student for the referenced LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentlearningobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    priorityforservices boolean NOT NULL,
    lastqualifyingmove date NOT NULL,
    continuationofservicesreasondescriptorid integer,
    usinitialentry date,
    usmostrecententry date,
    usinitialschoolentry date,
    qualifyingarrivaldate date,
    stateresidencydate date,
    eligibilityexpirationdate date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the State''s challenging State academic content standards and challenging State student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the Student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the Student''s most recent entry into the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the Student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The Qualifying Arrival Date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified State residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The Eligibility Expiration Date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by States'' requirements), or if the child passes away.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the Service(s) being provided to the Student by the Migrant Education Program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the Service being provided to the student by the Migrant Education Program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramdescriptorid integer,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the Student by the Neglected or Delinquent Program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Neglected or Delinquent Program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    othernametypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the Program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    alternativeeducationorganizationid integer NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    educationplandescriptorid integer NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch Program, that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the Student by the School Food Service Program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the School Food Service Program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    attemptstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the Student from the Section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the Section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.
        Repeated, counted in grade point average
        Repeated, not counted in grade point average
        Not repeated
        Other.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    specialeducationsettingdescriptorid integer,
    specialeducationhoursperweek numeric(5,2),
    schoolhoursperweek numeric(5,2),
    multiplydisabled boolean,
    medicallyfragile boolean,
    lastevaluationdate date,
    iepreviewdate date,
    iepbegindate date,
    iependdate date
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the Student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the Student receiving special education and related services is:
        1) in the age range of birth to 22 years, and
        2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and
        3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and
        4) lives with ongoing threat to his or her continued well-being.
        Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The Staff providing special education services to the Student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the Service(s) being provided to the Student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The Staff providing the service to the Student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the Student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served:
        Public Targeted Assistance Program
        Public Schoolwide Program
        Private School Students Participating
        Local Neglected Program.';


--
-- Name: studenttitleipartaprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the Student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'This descriptor defines the term of a session during the school year (e.g., Semester).';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: parent parentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent ALTER COLUMN parentusi SET DEFAULT nextval('edfi.parent_parentusi_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
1
2
3
4
5
6
7
8
9
10
11
12
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
50
51
52
53
54
55
56
57
58
\.


--
-- Data for Name: account; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.account (accountidentifier, educationorganizationid, fiscalyear, accountname, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: accountaccountcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountaccountcode (accountclassificationdescriptorid, accountcodenumber, accountidentifier, educationorganizationid, fiscalyear, createdate) FROM stdin;
\.


--
-- Data for Name: accountclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountclassificationdescriptor (accountclassificationdescriptorid) FROM stdin;
59
60
61
62
63
64
65
66
67
\.


--
-- Data for Name: accountcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountcode (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear, accountcodedescription, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
68
69
70
71
72
73
74
75
76
77
78
79
\.


--
-- Data for Name: actual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.actual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amounttodate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
80
81
82
83
84
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
100
101
102
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
103
104
105
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, assessmenttitle, assessmentcategorydescriptorid, assessmentform, assessmentversion, revisiondate, maxrawscore, nomenclature, assessmentfamily, educationorganizationid, adaptiveassessment, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (academicsubjectdescriptorid, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, gradeleveldescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, author, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
150
151
152
153
154
155
156
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, maxrawscore, itemtext, correctresponse, expectedtimeassessed, nomenclature, assessmentitemuri, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, responsedescription, correctresponse, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
179
180
181
182
183
184
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, languagedescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, namespace, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
185
186
187
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
248
249
250
251
252
253
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
254
255
256
257
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, starttime, endtime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, classperiodname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, date, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: budget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.budget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
258
259
260
261
262
263
264
265
266
267
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, gradeleveldescriptorid, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
268
269
270
271
272
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
290
291
292
293
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
294
295
296
297
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
298
299
300
301
302
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, endtime, schoolid, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
303
304
305
306
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, cohortdescription, cohorttypedescriptorid, cohortscopedescriptorid, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
307
308
309
310
311
312
313
314
315
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
316
317
318
319
320
321
322
323
324
325
326
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
327
328
329
330
331
332
333
334
335
336
337
338
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, providerprofitabilitydescriptorid, providerstatusdescriptorid, providercategorydescriptorid, schoolindicator, licenseexemptindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, authorizedfacilitycapacity, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
339
340
341
342
343
344
345
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
346
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
347
348
349
350
351
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
352
353
354
\.


--
-- Data for Name: contractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amounttodate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
355
356
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, coursetitle, numberofparts, academicsubjectdescriptorid, coursedescription, timerequiredforcompletion, datecourseadopted, highschoolcourserequirement, coursegpaapplicabilitydescriptorid, coursedefinedbydescriptorid, minimumavailablecredits, minimumavailablecredittypedescriptorid, minimumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, maximumavailablecreditconversion, careerpathwaydescriptorid, maxcompletionsforcredit, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
606
607
608
609
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (competencyleveldescriptorid, coursecode, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
610
611
612
613
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
614
615
616
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, courseidentificationsystemdescriptorid, educationorganizationid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
617
618
619
620
621
622
623
624
625
\.


--
-- Data for Name: courselearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningobjective (coursecode, educationorganizationid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, localcoursetitle, instructionaltimeplanned, coursecode, educationorganizationid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
649
650
651
652
653
654
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, attemptedcredits, attemptedcredittypedescriptorid, attemptedcreditconversion, earnedcredits, earnedcredittypedescriptorid, earnedcreditconversion, whentakengradeleveldescriptorid, methodcreditearneddescriptorid, finallettergradeearned, finalnumericgradeearned, courserepeatcodedescriptorid, coursetitle, alternativecoursetitle, alternativecoursecode, externaleducationorganizationid, assigningorganizationidentificationcode, coursecatalogurl, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, effectivedate, expirationdate, credentialfielddescriptorid, issuancedate, credentialtypedescriptorid, teachingcredentialdescriptorid, teachingcredentialbasisdescriptorid, namespace, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
670
671
672
673
674
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
709
710
711
712
713
714
715
716
717
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
718
719
720
721
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, createdate, lastmodifieddate, id) FROM stdin;
1	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2020-04-17 14:48:33.12209	2020-04-17 14:48:33.104419	6cd2ae92-21fe-4958-bca0-89646cea7f92
2	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2020-04-17 14:48:33.28995	2020-04-17 14:48:33.28995	4d029abb-028e-47e0-b467-c2da3399b320
3	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2020-04-17 14:48:33.297416	2020-04-17 14:48:33.297416	d8b0b602-f49c-4f77-a6b8-ea9ca3d4fd03
4	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2020-04-17 14:48:33.303828	2020-04-17 14:48:33.303828	c531be1f-5eef-428e-a48a-cbef274d9808
5	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:33.310262	2020-04-17 14:48:33.310262	9d436c4a-e026-4098-a6af-f7201e0ee087
6	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2020-04-17 14:48:33.317548	2020-04-17 14:48:33.316512	a0829330-f74c-48d2-8149-01ffdbcdeab2
7	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2020-04-17 14:48:33.322908	2020-04-17 14:48:33.322908	c96d6da3-67d3-4e41-9d10-5dd2e7a715f1
8	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2020-04-17 14:48:33.329329	2020-04-17 14:48:33.329329	c14ac2b1-e607-40ca-aa4a-db1d24f7e488
9	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2020-04-17 14:48:33.341085	2020-04-17 14:48:33.341085	3ef16da5-7ca3-4718-8b37-6d0e5b24e672
10	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2020-04-17 14:48:33.583874	2020-04-17 14:48:33.583874	cc50afb2-d93b-4a30-b3b6-01c8ebe766b1
11	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2020-04-17 14:48:33.590175	2020-04-17 14:48:33.589177	6ac890be-6cb3-4046-b313-c7d50770dfeb
12	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2020-04-17 14:48:33.595504	2020-04-17 14:48:33.595504	8051c125-6017-452b-b901-58519c65de29
13	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	2020-04-17 14:48:33.627296	2020-04-17 14:48:33.626249	42fda112-3213-4a2c-a4c3-b8f37da23abd
14	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2020-04-17 14:48:33.636134	2020-04-17 14:48:33.636134	447df323-496d-4320-9f2e-02d7be4079c9
15	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2020-04-17 14:48:33.64247	2020-04-17 14:48:33.64247	40e6d652-e8de-4711-8da4-71cfdd106951
16	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2020-04-17 14:48:33.648877	2020-04-17 14:48:33.648877	e99b78fd-0491-414a-bf81-2b2226017a66
17	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2020-04-17 14:48:33.655276	2020-04-17 14:48:33.655276	9dba03c1-ff7d-4c1a-9917-2495a16a400e
18	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2020-04-17 14:48:33.662741	2020-04-17 14:48:33.662741	62ec1793-6147-445e-a069-6ad43688d7ce
19	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	2020-04-17 14:48:33.669171	2020-04-17 14:48:33.669171	dc7764ea-f7ef-4d34-b3db-c1abaf8a5402
20	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	2020-04-17 14:48:33.674512	2020-04-17 14:48:33.674512	a6872425-4c11-4447-8987-b06121df68bd
21	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	2020-04-17 14:48:33.686196	2020-04-17 14:48:33.686196	3c9423c9-1033-4f1e-a06a-490dab6a4e6e
22	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	2020-04-17 14:48:33.691529	2020-04-17 14:48:33.691529	a3432fbb-036d-4963-8a31-34836401db26
23	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	2020-04-17 14:48:33.697973	2020-04-17 14:48:33.697973	ef7fcac8-7398-4675-8702-d217457b886f
24	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	2020-04-17 14:48:33.703321	2020-04-17 14:48:33.703321	0d5d5eb0-24d1-4f23-9866-3bfa2538ee36
25	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	2020-04-17 14:48:33.708679	2020-04-17 14:48:33.708679	c60e9a88-4426-4cf2-9dc5-40b8b597e350
26	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:33.713995	2020-04-17 14:48:33.713995	fdbced20-2631-4a76-af4b-f61ebadd907d
27	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	2020-04-17 14:48:33.720426	2020-04-17 14:48:33.720426	72eca4d1-6eb3-4b3a-8821-e1d46a72c1f8
28	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	2020-04-17 14:48:33.725768	2020-04-17 14:48:33.725768	0ad4b869-0440-49e8-b15c-5e41cae0bacc
29	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2020-04-17 14:48:33.732148	2020-04-17 14:48:33.732148	f73049dc-b88a-4104-b203-63e6a7fcf336
30	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	2020-04-17 14:48:33.738539	2020-04-17 14:48:33.738539	66e0ecd8-7af3-4006-8469-bb4d396792dd
31	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	2020-04-17 14:48:33.76906	2020-04-17 14:48:33.76906	0adf1aa5-87c5-4dc3-b643-44b5c3155d33
32	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	2020-04-17 14:48:33.77653	2020-04-17 14:48:33.77653	fd39fcaf-c31b-47ba-938c-e29623589ba0
33	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	2020-04-17 14:48:33.789096	2020-04-17 14:48:33.788087	73567b98-8f67-4e80-bd0e-8c0053a7476c
34	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	2020-04-17 14:48:33.794479	2020-04-17 14:48:33.794479	ab8c42c3-3edb-4a12-a3cd-317624db3545
35	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	2020-04-17 14:48:33.800862	2020-04-17 14:48:33.800862	e36b23c6-ede1-49c3-a4f5-c9880c7a4881
36	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2020-04-17 14:48:33.807248	2020-04-17 14:48:33.807248	dc8fac28-887b-4f7d-8971-3d6f8945cf91
37	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2020-04-17 14:48:33.812553	2020-04-17 14:48:33.812553	a79001b4-fc3d-4fab-8133-3f941bb5a115
38	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	2020-04-17 14:48:33.820107	2020-04-17 14:48:33.820107	ff36d630-d0fe-468d-9612-2d0339ec33ba
39	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2020-04-17 14:48:33.826575	2020-04-17 14:48:33.826575	9a454e90-77f4-42df-8e4d-069baa5f2fcc
40	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	2020-04-17 14:48:33.833037	2020-04-17 14:48:33.833037	5db9ca23-e3be-4cf2-9929-cb8bee6381f3
41	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	2020-04-17 14:48:33.838412	2020-04-17 14:48:33.838412	7ca3c4b0-555f-4e93-9ec6-9c078500778b
42	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	2020-04-17 14:48:33.844924	2020-04-17 14:48:33.844924	b5072d5f-57ff-4b83-80a4-c3d0e00f6728
43	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	2020-04-17 14:48:33.851378	2020-04-17 14:48:33.851378	13cbb3f8-eb57-4ea2-8d9a-cec9d4137038
44	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	2020-04-17 14:48:33.856756	2020-04-17 14:48:33.856756	0bdd5647-11f6-48c9-ac76-84e46a71af4d
45	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:33.86324	2020-04-17 14:48:33.86324	a496c5df-8dac-4ead-8fe5-83c0ac3da26b
46	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	2020-04-17 14:48:33.868642	2020-04-17 14:48:33.868642	03a1e2bc-ba84-49c4-912e-1c24bf80bb44
47	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	2020-04-17 14:48:33.878269	2020-04-17 14:48:33.878269	718027d2-2be8-424d-8911-c2f6c81afa52
48	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:33.885621	2020-04-17 14:48:33.885621	c395bf4b-1495-4a11-a14a-83bb15f0a039
49	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	2020-04-17 14:48:33.89207	2020-04-17 14:48:33.89207	21bd9671-ba98-4afd-bf2d-8256f22a2221
50	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	2020-04-17 14:48:33.923851	2020-04-17 14:48:33.922792	81d58d8d-312c-4159-aa76-ddc670f0579d
51	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	2020-04-17 14:48:33.930237	2020-04-17 14:48:33.930237	2aebfa21-7b8c-4942-a939-96e06d97c137
52	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:33.936608	2020-04-17 14:48:33.936608	c14bb747-5355-40ec-a4d1-b8dd192a15d0
53	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	2020-04-17 14:48:33.942873	2020-04-17 14:48:33.942873	f67aebe6-755b-4629-858f-9cd6ded88531
54	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	2020-04-17 14:48:33.949312	2020-04-17 14:48:33.949312	2a86367d-e0d2-42b8-a2a3-20828acee4e2
55	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology	Student equipment/technology	Student equipment/technology	\N	\N	\N	2020-04-17 14:48:33.954642	2020-04-17 14:48:33.954642	d3331da8-bb48-4faf-b128-cbdc4d51b463
56	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	2020-04-17 14:48:33.962075	2020-04-17 14:48:33.961066	c63da3c5-1b38-402b-9b7a-fb26c6fa9282
57	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	2020-04-17 14:48:33.968417	2020-04-17 14:48:33.967408	4517bf77-2a31-4c42-82f5-8eafb39b385a
58	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	2020-04-17 14:48:33.976997	2020-04-17 14:48:33.976997	71e66a7d-5ef3-4723-9b00-9b2b9dc82f41
59	uri://ed-fi.org/AccountClassificationDescriptor	Fund	Fund	Fund	\N	\N	\N	2020-04-17 14:48:34.007044	2020-04-17 14:48:34.005991	5447fbda-70ec-446a-959a-890ed7335637
60	uri://ed-fi.org/AccountClassificationDescriptor	Program	Program	Program	\N	\N	\N	2020-04-17 14:48:34.013469	2020-04-17 14:48:34.013469	cd4c7645-3c15-46d0-990e-1da86c365146
61	uri://ed-fi.org/AccountClassificationDescriptor	Function	Function	Function	\N	\N	\N	2020-04-17 14:48:34.019881	2020-04-17 14:48:34.019881	f4b78f1c-1888-4021-a664-a4cae9129c43
62	uri://ed-fi.org/AccountClassificationDescriptor	Object	Object	Object	\N	\N	\N	2020-04-17 14:48:34.026283	2020-04-17 14:48:34.026283	84997b87-6eee-4442-af4e-00987c2fb27b
63	uri://ed-fi.org/AccountClassificationDescriptor	Project	Project	Project	\N	\N	\N	2020-04-17 14:48:34.032714	2020-04-17 14:48:34.031698	bc64e7a2-dd8d-40ae-b426-5ded091a51ff
64	uri://ed-fi.org/AccountClassificationDescriptor	Level of Instruction	Level of Instruction	Level of Instruction	\N	\N	\N	2020-04-17 14:48:34.038164	2020-04-17 14:48:34.038164	837c57c1-8e70-4c71-9b7a-a09a5b2522ca
65	uri://ed-fi.org/AccountClassificationDescriptor	Operational Unit	Operational Unit	Operational Unit	\N	\N	\N	2020-04-17 14:48:34.044442	2020-04-17 14:48:34.044442	10aa99ee-0278-4a76-948a-b538a59105b6
66	uri://ed-fi.org/AccountClassificationDescriptor	Subject Matter	Subject Matter	Subject Matter	\N	\N	\N	2020-04-17 14:48:34.050747	2020-04-17 14:48:34.050747	562c0327-d6a7-4b8f-9495-9c7911b139d6
67	uri://ed-fi.org/AccountClassificationDescriptor	Job Class	Job Class	Job Class	\N	\N	\N	2020-04-17 14:48:34.057098	2020-04-17 14:48:34.057098	5c36e320-8b65-485d-863b-cc894af41905
68	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	2020-04-17 14:48:34.09064	2020-04-17 14:48:34.09064	53517a00-cada-4dd1-a527-5a6dd9df7510
69	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	2020-04-17 14:48:34.098077	2020-04-17 14:48:34.098077	bdd0fb57-91b4-4c47-a878-a7a39e91ba3b
70	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	2020-04-17 14:48:34.10342	2020-04-17 14:48:34.10342	1877fc13-d7b2-4f8c-a93c-6e51ab5833db
71	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	2020-04-17 14:48:34.108639	2020-04-17 14:48:34.108639	cee56ac3-0ee1-4b1b-965d-68264fb38334
72	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	2020-04-17 14:48:34.114002	2020-04-17 14:48:34.114002	08f5d266-7138-4d09-946c-e3f5eec928e4
73	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	2020-04-17 14:48:34.119196	2020-04-17 14:48:34.119196	1d8177dd-52ca-4b7f-b9bf-8a91607d086b
74	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	2020-04-17 14:48:34.124546	2020-04-17 14:48:34.124546	3f18b42a-6336-4788-b3bb-1bfe6dbc300c
75	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	2020-04-17 14:48:34.130854	2020-04-17 14:48:34.129848	b806b3ad-d5da-49dc-aa5c-5869833d4561
76	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	2020-04-17 14:48:34.135174	2020-04-17 14:48:34.135174	b79736a2-4b40-4344-b9bd-978de21ffc51
77	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	2020-04-17 14:48:34.141477	2020-04-17 14:48:34.140471	82b486d6-3118-4d2b-879d-45202be8b97b
78	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	2020-04-17 14:48:34.146876	2020-04-17 14:48:34.146876	cb373c47-7936-4a19-afaa-f2f2098ce705
79	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	2020-04-17 14:48:34.153141	2020-04-17 14:48:34.153141	9362b783-c64c-4491-8d1a-37a913bbc74c
80	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2020-04-17 14:48:34.186952	2020-04-17 14:48:34.185892	14da6df3-37b0-4373-ac21-4d4eb659c2fc
81	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:34.193349	2020-04-17 14:48:34.193349	3e4b1d75-e182-4bde-b90d-b05e24fd6e6e
82	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	2020-04-17 14:48:34.199755	2020-04-17 14:48:34.199755	ea4331e8-705d-4905-990c-84273ce6c246
83	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2020-04-17 14:48:34.206179	2020-04-17 14:48:34.206179	65ee0fc5-c438-4514-bb5c-98457fb7d5c8
84	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.212586	2020-04-17 14:48:34.212555	8ac43f69-68ff-4b66-8e6f-8474ce2f4b57
85	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	2020-04-17 14:48:34.241865	2020-04-17 14:48:34.240867	a0ebce78-b03c-43a2-bc6a-67814bd7b9e6
86	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	2020-04-17 14:48:34.248237	2020-04-17 14:48:34.248237	fb12552f-7faa-41b4-af50-790bd1d63dfb
87	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	2020-04-17 14:48:34.254653	2020-04-17 14:48:34.254653	13eac42b-f0a2-459b-82fb-409a92b0928b
88	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	2020-04-17 14:48:34.25997	2020-04-17 14:48:34.25997	4f04738a-4dbc-4bd8-b450-ee483e59a0bf
89	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	2020-04-17 14:48:34.269392	2020-04-17 14:48:34.269392	ce46255c-3d88-40d1-8572-107cf138fcbb
90	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	2020-04-17 14:48:34.275688	2020-04-17 14:48:34.275688	8e512b8d-8d5b-498d-b784-e8e4949a2cc3
91	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	2020-04-17 14:48:34.281107	2020-04-17 14:48:34.281107	c958fac9-a7ba-4b1a-946d-aa15ff528fca
92	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	2020-04-17 14:48:34.288347	2020-04-17 14:48:34.288347	b8e251e6-febe-40bf-ba31-ca0b81944ac8
93	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.293713	2020-04-17 14:48:34.293713	18004e36-b6ee-418e-bc22-9cb661d544fd
94	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	2020-04-17 14:48:34.299949	2020-04-17 14:48:34.299949	5151b9a5-5274-4ae9-ac63-5502ead6a686
95	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	2020-04-17 14:48:34.306284	2020-04-17 14:48:34.305276	e1c6fb4d-ffad-4823-878c-cd3b4fe9eb02
96	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	2020-04-17 14:48:34.311687	2020-04-17 14:48:34.311687	91d120bf-22f2-42be-880d-7dae447f4d18
97	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2020-04-17 14:48:34.31901	2020-04-17 14:48:34.31901	ca4d6490-c850-4dde-bca9-7021ed8b99cc
98	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	2020-04-17 14:48:34.325318	2020-04-17 14:48:34.325318	e9f57c1e-b0b5-4374-be86-37ed2d85b19b
99	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	2020-04-17 14:48:34.330625	2020-04-17 14:48:34.330625	fde4c2fb-3233-4d82-b952-e842ef270852
100	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2020-04-17 14:48:34.362451	2020-04-17 14:48:34.362451	3fb47d65-f007-4042-b8a1-f63d4c6a92f4
101	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:34.373153	2020-04-17 14:48:34.373153	204f13df-2a61-46a2-be31-cb348a80e62a
102	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	2020-04-17 14:48:34.37941	2020-04-17 14:48:34.37941	a20ba916-807f-4ccd-b1dc-38c553b5efab
103	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.408964	2020-04-17 14:48:34.407899	e096b434-7328-400d-9c47-bbb3653aad0c
104	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	2020-04-17 14:48:34.415374	2020-04-17 14:48:34.415374	733fd9f2-5fb5-4bb7-94bd-f1bde465f8dd
105	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	2020-04-17 14:48:34.420689	2020-04-17 14:48:34.420689	cbd60ea9-fe82-4e31-80cf-cbec2bb35d75
106	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2020-04-17 14:48:34.451321	2020-04-17 14:48:34.45026	4b35d446-73f4-4d47-902c-1bd756e85283
107	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	2020-04-17 14:48:34.458647	2020-04-17 14:48:34.458647	27cf4ab6-db96-445d-a50d-665e36603eb8
108	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	2020-04-17 14:48:34.463971	2020-04-17 14:48:34.463971	c6461313-2c84-41e8-a590-7fc7d92539a7
109	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	2020-04-17 14:48:34.474497	2020-04-17 14:48:34.474497	953b8c89-353d-490f-b13a-5d3103fb216e
110	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	2020-04-17 14:48:34.479827	2020-04-17 14:48:34.479827	64b89379-25e7-4def-b6dd-f97c8129dcbf
111	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	2020-04-17 14:48:34.486199	2020-04-17 14:48:34.486199	559f7efa-d237-4435-b5da-d6242eb851d1
112	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	2020-04-17 14:48:34.491382	2020-04-17 14:48:34.491382	5e05bf85-c3d1-474e-bd10-6aa1956edcb7
113	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	2020-04-17 14:48:34.497788	2020-04-17 14:48:34.497788	4b0d2fd7-f8a6-44dc-8342-be74eb158e1c
114	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	2020-04-17 14:48:34.504158	2020-04-17 14:48:34.503127	6b30081a-0fd0-4606-9b78-0a104daab95d
115	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	2020-04-17 14:48:34.509523	2020-04-17 14:48:34.508448	90c66919-c441-4a86-8a43-cb167d2255ad
116	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	2020-04-17 14:48:34.514847	2020-04-17 14:48:34.513845	0ee4a985-9aa6-44a8-a450-1ca8852438e5
117	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	2020-04-17 14:48:34.520187	2020-04-17 14:48:34.520187	afbdc81c-3b32-48ad-a256-3eb1e63680a9
118	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	2020-04-17 14:48:34.525508	2020-04-17 14:48:34.525508	00583f64-def8-4cc3-bfa3-0b68d7e801d4
119	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	2020-04-17 14:48:34.530863	2020-04-17 14:48:34.530863	213560c6-c15d-493f-97eb-6779ee6e128d
120	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	2020-04-17 14:48:34.53606	2020-04-17 14:48:34.53606	e24242bf-9e95-4bec-a060-778caa8f242d
121	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2020-04-17 14:48:34.541291	2020-04-17 14:48:34.541291	bd8a8068-38ed-425d-83b1-930331436dc0
122	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	2020-04-17 14:48:34.549803	2020-04-17 14:48:34.549803	45e7923e-c0ae-4d21-9e3d-94406edc57cc
123	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	2020-04-17 14:48:34.555138	2020-04-17 14:48:34.555138	37931831-3879-4fda-a778-bb790158c6d3
124	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	2020-04-17 14:48:34.560366	2020-04-17 14:48:34.560366	5cc6898c-b872-45e7-9c79-8f69f49bc625
125	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	2020-04-17 14:48:34.566646	2020-04-17 14:48:34.566625	778fc5e0-c27e-458e-b2c5-db69f29e5953
126	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	2020-04-17 14:48:34.571863	2020-04-17 14:48:34.571863	20e04eee-e630-49c0-888b-2805f0776241
127	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	2020-04-17 14:48:34.578268	2020-04-17 14:48:34.578268	ea8a8872-9fa3-41b6-9e17-aee566e13a61
128	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	2020-04-17 14:48:34.584638	2020-04-17 14:48:34.584638	25d0ab24-6756-4cdd-975d-051e8974b3d8
129	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	2020-04-17 14:48:34.591011	2020-04-17 14:48:34.590002	1ed55ca8-7981-46bf-80d7-1dfb96214d3c
130	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	2020-04-17 14:48:34.596421	2020-04-17 14:48:34.596421	9f8469ca-481c-441a-88b3-3a5c2028e1e1
131	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	2020-04-17 14:48:34.601741	2020-04-17 14:48:34.601741	9dcc6c28-0134-451c-8063-20d0da3d047d
132	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	2020-04-17 14:48:34.608066	2020-04-17 14:48:34.608066	d07df26d-abb5-4eaa-baf4-bac1d078e61e
133	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	2020-04-17 14:48:34.614398	2020-04-17 14:48:34.614398	617951ea-4cf8-4612-90f5-8ddd16c2faf3
134	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	2020-04-17 14:48:34.62079	2020-04-17 14:48:34.62079	bb7cca10-b845-4fba-bdfb-f5f1fd5b1fd8
135	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	2020-04-17 14:48:34.627151	2020-04-17 14:48:34.627151	62eb3fc9-51e3-499c-aa04-1f6d39b5c750
136	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	2020-04-17 14:48:34.639824	2020-04-17 14:48:34.639824	e2499bd3-6307-4ff2-8b10-312400decc78
137	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	2020-04-17 14:48:34.646197	2020-04-17 14:48:34.646197	34920ca1-fdc5-4191-b512-7470106b03c7
138	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	2020-04-17 14:48:34.652431	2020-04-17 14:48:34.652431	aedae278-4df4-46ae-8375-b25f72b1ac09
139	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	2020-04-17 14:48:34.658805	2020-04-17 14:48:34.658805	fb6abd4e-9de3-4672-96db-3282376466a0
140	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	2020-04-17 14:48:34.665134	2020-04-17 14:48:34.665134	13852392-6a90-4774-ade7-1005b7d78452
141	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	2020-04-17 14:48:34.671526	2020-04-17 14:48:34.671526	7d0ef49a-ead5-4985-9248-3361a83697ce
142	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	2020-04-17 14:48:34.676855	2020-04-17 14:48:34.676855	e2309838-0fd7-44c6-a5be-6dd92a4f4943
143	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	2020-04-17 14:48:34.682141	2020-04-17 14:48:34.682141	6b22f019-7530-4bc9-9b07-a2893048c8d8
144	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	2020-04-17 14:48:34.687445	2020-04-17 14:48:34.687445	754c80fa-4b58-4ff7-8b99-f5319f78d57d
145	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	2020-04-17 14:48:34.6926	2020-04-17 14:48:34.6926	3792dc18-260b-43bf-9d6a-f639c49d0224
146	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	2020-04-17 14:48:34.697865	2020-04-17 14:48:34.697865	0934c16b-49bf-4ab3-90ee-3d045da5250f
147	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	2020-04-17 14:48:34.703193	2020-04-17 14:48:34.703193	7c61ca57-9581-41ca-a218-6f07bcfd343e
148	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	2020-04-17 14:48:34.708518	2020-04-17 14:48:34.708518	2994bdd3-39a6-456d-b956-ed8c3dbcec41
149	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.714892	2020-04-17 14:48:34.714892	057a4371-fbaf-42a2-97ba-8e28034b1440
150	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2020-04-17 14:48:34.745566	2020-04-17 14:48:34.744507	2d120ac5-b648-4e7a-ad0f-d43f8b2350d7
151	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2020-04-17 14:48:34.751952	2020-04-17 14:48:34.751952	ecef8ee4-1cdd-4ec9-97d8-27c4ce2a38bb
152	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.757261	2020-04-17 14:48:34.757261	c1aeccbd-e972-4dc3-af6e-870448ce0b68
153	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2020-04-17 14:48:34.762554	2020-04-17 14:48:34.762554	92e98e36-9050-41b6-8d79-cb2b697256f9
154	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:34.767864	2020-04-17 14:48:34.767864	6bcd5525-baa9-459e-9566-16a30c9ddc09
155	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2020-04-17 14:48:34.773062	2020-04-17 14:48:34.773062	29ad4194-9044-47d6-b763-67e50b305932
156	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	2020-04-17 14:48:34.778268	2020-04-17 14:48:34.778268	944794d5-1d6f-4213-8236-d578e3595b25
157	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	2020-04-17 14:48:34.810735	2020-04-17 14:48:34.809686	7042bc5a-2ef9-49fa-8b22-f04668cb5361
158	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	2020-04-17 14:48:34.817115	2020-04-17 14:48:34.817115	c3f7aecd-996c-4194-954d-77b3761e419e
159	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	2020-04-17 14:48:34.823512	2020-04-17 14:48:34.823442	d48a5491-b23f-4af9-a9ad-e44cf7f3783e
160	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	2020-04-17 14:48:34.8278	2020-04-17 14:48:34.8278	c6460f61-77da-40bd-8c5a-6ca1806801ac
161	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	2020-04-17 14:48:34.832997	2020-04-17 14:48:34.832997	fff50daf-a94e-4b88-b916-60dd1d92c2b1
162	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	2020-04-17 14:48:34.838341	2020-04-17 14:48:34.838341	a290ede0-92c0-4ab4-a8b0-6528efed507b
163	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	2020-04-17 14:48:34.843544	2020-04-17 14:48:34.843544	17fb3250-0804-41e1-ba6a-22dc0088d1ab
164	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	2020-04-17 14:48:34.84887	2020-04-17 14:48:34.84887	211980b5-5109-4a03-b764-56983cd9d73c
165	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	2020-04-17 14:48:34.854202	2020-04-17 14:48:34.854202	db30ed14-a783-4d32-a0cd-6aab6e747c47
166	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	2020-04-17 14:48:34.859509	2020-04-17 14:48:34.859509	c4222654-338d-4d7d-b460-e1d04ad49a2b
167	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:34.863775	2020-04-17 14:48:34.863775	6a17068e-72f4-4007-9979-238aac1aeb46
168	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	2020-04-17 14:48:34.870029	2020-04-17 14:48:34.870029	c305e358-eaa4-406e-8877-fcc93673fd01
169	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	2020-04-17 14:48:34.876301	2020-04-17 14:48:34.876301	7b062748-caa8-4e45-9767-be91c0300b64
170	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	2020-04-17 14:48:34.88056	2020-04-17 14:48:34.88056	66b73f2d-235f-4982-9060-e0b8393e4e2b
171	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	2020-04-17 14:48:34.887862	2020-04-17 14:48:34.887862	85706716-1d77-459b-a5ee-ffc19b5d7efb
172	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	2020-04-17 14:48:34.893167	2020-04-17 14:48:34.893167	e593b90e-a932-436b-bdf0-21cd208e00d6
173	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	2020-04-17 14:48:34.899508	2020-04-17 14:48:34.899469	24975f84-5f1a-4c1b-b2f4-48cc690e569f
174	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	2020-04-17 14:48:34.904863	2020-04-17 14:48:34.904863	1191ca58-b3f1-4f93-9ad1-fcc2df405c36
175	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	2020-04-17 14:48:34.911125	2020-04-17 14:48:34.911125	56bba375-1464-4caa-ba72-926bed2cbae0
176	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	2020-04-17 14:48:34.91631	2020-04-17 14:48:34.91631	dc07b9bb-0860-4f2f-8806-54b10741284a
177	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	2020-04-17 14:48:34.923798	2020-04-17 14:48:34.923798	02bb6cf6-57e5-4792-a2ff-0798d3e2efc6
178	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	2020-04-17 14:48:34.931122	2020-04-17 14:48:34.931122	634b9c15-8a1f-461a-9a21-ca421af9d5a0
179	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	2020-04-17 14:48:34.96282	2020-04-17 14:48:34.961759	c969fc91-43f2-4b2d-a6ca-d8e844cf9ddb
180	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	2020-04-17 14:48:34.970267	2020-04-17 14:48:34.970267	a606d33c-826b-4fb1-98f5-121f54e75ffc
181	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	2020-04-17 14:48:34.979165	2020-04-17 14:48:34.979165	ac82c0b0-e31b-4899-90de-52319cd37355
182	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	2020-04-17 14:48:34.986572	2020-04-17 14:48:34.985515	f70e5266-b4e0-4966-b06a-c7c3efda44f2
183	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2020-04-17 14:48:34.992904	2020-04-17 14:48:34.992904	928ed992-bda5-404c-8685-879411a0f9b9
184	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	2020-04-17 14:48:35.005424	2020-04-17 14:48:35.005424	7877d3fa-25ff-4e4f-8a5d-ff0554f0220b
185	uri://ed-fi.org/AssessmentPeriodDescriptor	BOY	BOY	Beginning of Year	\N	\N	\N	2020-04-17 14:48:35.037534	2020-04-17 14:48:35.036526	66bc6475-a192-48fe-b2c1-4b19c29d9889
186	uri://ed-fi.org/AssessmentPeriodDescriptor	MOY	MOY	Middle of Year	\N	\N	\N	2020-04-17 14:48:35.044791	2020-04-17 14:48:35.044791	6bb28ae8-f481-49e3-8b37-a4ef0b05ef51
187	uri://ed-fi.org/AssessmentPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	2020-04-17 14:48:35.049973	2020-04-17 14:48:35.049973	509e8b93-dd07-4e5d-991c-4bb5a40df280
188	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	2020-04-17 14:48:35.079426	2020-04-17 14:48:35.07837	6253e5a3-552b-4efc-8a93-71fdf1849506
189	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	2020-04-17 14:48:35.085778	2020-04-17 14:48:35.085778	0b97bb57-49dc-4776-9af1-006e0bee37b2
190	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	2020-04-17 14:48:35.096426	2020-04-17 14:48:35.096426	455d30ff-fadf-4e01-ac5a-e00b94011876
191	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	2020-04-17 14:48:35.101775	2020-04-17 14:48:35.101775	a8e2fcab-0fd0-47dd-a4cf-5f1ef53b6384
192	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	2020-04-17 14:48:35.106985	2020-04-17 14:48:35.106985	d7597c0f-4721-4f9e-a333-481c97d6326a
193	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	2020-04-17 14:48:35.112198	2020-04-17 14:48:35.112198	391c13de-5d64-40d4-afc5-f93d216658cb
194	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	2020-04-17 14:48:35.117519	2020-04-17 14:48:35.117519	d0771c77-998e-417d-adcf-73b3c7570f52
195	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	2020-04-17 14:48:35.122849	2020-04-17 14:48:35.122849	61518309-df97-4eea-99bd-28acf9524dfe
196	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	2020-04-17 14:48:35.130322	2020-04-17 14:48:35.130322	7bfd331c-c77a-42f6-9fe3-45e096552c50
197	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	2020-04-17 14:48:35.135514	2020-04-17 14:48:35.135514	0ca15cdb-e25d-4e6e-89d4-0e41d1f9ca24
198	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	2020-04-17 14:48:35.140823	2020-04-17 14:48:35.140823	c04fb1a2-08fa-4d18-aad6-7abc53c7997a
199	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	2020-04-17 14:48:35.147239	2020-04-17 14:48:35.147239	282c36f1-11d4-4eae-ae8f-572a127d8cac
200	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	2020-04-17 14:48:35.152527	2020-04-17 14:48:35.152527	7aacfecf-1117-413c-a172-1492c8293cf6
201	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	2020-04-17 14:48:35.159941	2020-04-17 14:48:35.159941	4017365f-9c94-459c-bc15-8ad57b9ffe19
202	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	2020-04-17 14:48:35.165258	2020-04-17 14:48:35.165258	67c603fe-4849-4b8f-b1ae-63ab5ea41693
203	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	2020-04-17 14:48:35.170544	2020-04-17 14:48:35.170544	4359e543-0ddb-4abb-a086-5711ec655a86
204	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	2020-04-17 14:48:35.176865	2020-04-17 14:48:35.176865	24f2cc61-6de7-41ab-afcf-224c1af950d3
205	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	2020-04-17 14:48:35.185278	2020-04-17 14:48:35.185278	9c7ba165-89c9-430e-9e2b-600b4108cc9d
206	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	2020-04-17 14:48:35.19061	2020-04-17 14:48:35.19061	3884d78b-06d3-433e-bd53-5c87109c3a8c
207	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2020-04-17 14:48:35.195857	2020-04-17 14:48:35.195857	6d175231-7958-464d-a3e3-b71a24cffc6e
208	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	2020-04-17 14:48:35.201066	2020-04-17 14:48:35.201066	23560a47-c6d1-4f58-9758-047486bd9032
209	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	2020-04-17 14:48:35.207413	2020-04-17 14:48:35.207413	ba22281b-ed84-4663-8957-d024a8d410a0
210	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	2020-04-17 14:48:35.212696	2020-04-17 14:48:35.212696	2d6bcd87-abc2-4b0e-9da5-2dbf9d8546fd
211	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	2020-04-17 14:48:35.217988	2020-04-17 14:48:35.217988	421514b1-1cdd-4acd-ab4b-2eb0e0053e04
212	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	2020-04-17 14:48:35.223164	2020-04-17 14:48:35.223164	e5ceab17-8ed0-4876-8e43-9619fe76b371
213	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	2020-04-17 14:48:35.228364	2020-04-17 14:48:35.228364	ad1315fe-f2a8-4f06-afd6-e328296dc188
214	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	2020-04-17 14:48:35.233679	2020-04-17 14:48:35.233679	71a7ddc7-2808-4663-aacd-5bb7975d75f0
215	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	2020-04-17 14:48:35.239004	2020-04-17 14:48:35.239004	a9cf09f5-0afe-4f3a-81a5-a3598c989c60
216	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	2020-04-17 14:48:35.244318	2020-04-17 14:48:35.244318	5a6a5b02-d7b2-49eb-8dc8-af3f438db467
217	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	2020-04-17 14:48:35.249628	2020-04-17 14:48:35.249628	f5492800-5697-4612-b78b-50bcbcba521c
218	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	2020-04-17 14:48:35.261083	2020-04-17 14:48:35.261083	8d5d6397-5fb4-485e-845a-0a67692093ab
219	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	2020-04-17 14:48:35.267458	2020-04-17 14:48:35.267458	da894305-c0ab-48ce-aa9a-057122764c65
220	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	2020-04-17 14:48:35.273789	2020-04-17 14:48:35.273789	91c5460a-f235-46ea-b249-a1c5f92a80f1
221	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	2020-04-17 14:48:35.280069	2020-04-17 14:48:35.280069	c0e7ef62-1b13-4b07-8d2e-392fc8577d55
222	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	2020-04-17 14:48:35.285373	2020-04-17 14:48:35.285373	9cfffff1-b76d-4da1-a2f7-6750f14a6f8d
223	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	2020-04-17 14:48:35.290694	2020-04-17 14:48:35.290694	27884165-3a83-49b9-a201-905085a1fa2a
224	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:35.297087	2020-04-17 14:48:35.297087	181f3380-0245-472d-a7ac-8b252a03acea
225	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	2020-04-17 14:48:35.302405	2020-04-17 14:48:35.302405	6635e28a-bc8d-4482-ad3c-50e5b42534ac
226	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	2020-04-17 14:48:35.30872	2020-04-17 14:48:35.307709	3de0425b-616e-4df4-8d2c-f2b1b7c8d5db
227	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	2020-04-17 14:48:35.3141	2020-04-17 14:48:35.3141	85aac8e7-d0bd-4398-b5eb-f5895c8ad941
228	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	2020-04-17 14:48:35.319434	2020-04-17 14:48:35.319434	9ce97c46-5a7f-44de-9e26-21c0560ce651
229	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	2020-04-17 14:48:35.32475	2020-04-17 14:48:35.32475	73b9a94f-d2c0-4456-941a-329e690046ec
230	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	2020-04-17 14:48:35.331079	2020-04-17 14:48:35.331079	bea3de2c-3457-4bab-9f78-119c252eacb4
231	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	2020-04-17 14:48:35.336362	2020-04-17 14:48:35.336362	4f3f7284-f1f2-4d8b-94be-a781aae306b4
232	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	2020-04-17 14:48:35.368136	2020-04-17 14:48:35.367067	52159416-8dd0-4e9d-a347-eafc6f15738c
233	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	2020-04-17 14:48:35.375603	2020-04-17 14:48:35.375603	c07724c5-ea6e-4656-b326-9b5ea061e29e
234	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2020-04-17 14:48:35.381992	2020-04-17 14:48:35.381992	1e7be5d8-5e9e-4f93-a881-cf2ce50e7d3e
235	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2020-04-17 14:48:35.387325	2020-04-17 14:48:35.387325	d3d72c9e-75f0-44b0-ba0d-ffeeec21f53f
236	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	2020-04-17 14:48:35.393688	2020-04-17 14:48:35.393688	0f263ed9-09a6-45de-8e4d-0a95cf3ed0e6
237	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	2020-04-17 14:48:35.400009	2020-04-17 14:48:35.399002	5b55d66d-8df6-4d55-bd98-38fe5c5b9891
238	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	2020-04-17 14:48:35.405272	2020-04-17 14:48:35.405272	9573ce8b-4c8d-42c4-859f-080a25ab6b92
239	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	2020-04-17 14:48:35.411637	2020-04-17 14:48:35.411637	ad6bf06d-4891-4c83-bc94-0a13c86db796
240	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	2020-04-17 14:48:35.416862	2020-04-17 14:48:35.416862	dccf6ee8-3594-4450-8723-28313fad110f
241	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	2020-04-17 14:48:35.423165	2020-04-17 14:48:35.423165	20a04e17-4cda-4e59-a46d-272211da1f1e
242	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	2020-04-17 14:48:35.42848	2020-04-17 14:48:35.42848	eaa91db0-5dba-4ee4-ba3d-ca63ff860686
243	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2020-04-17 14:48:35.438002	2020-04-17 14:48:35.438002	377c05b7-d8dc-4189-81e3-94449793032f
244	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	2020-04-17 14:48:35.445464	2020-04-17 14:48:35.445464	f7f57698-c44a-4690-85ab-4713e9caed7a
245	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	2020-04-17 14:48:35.450662	2020-04-17 14:48:35.450662	35a94e76-7168-48c8-9919-7a19630ed8c1
246	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	2020-04-17 14:48:35.456957	2020-04-17 14:48:35.456957	55e791fc-afbe-4692-9985-7258ed36ae98
247	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	2020-04-17 14:48:35.463242	2020-04-17 14:48:35.463242	1dec1410-b7c9-4b49-a834-9734fa3cd191
248	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	2020-04-17 14:48:35.494648	2020-04-17 14:48:35.493594	983c13a1-fd05-4bc5-80fb-9e27d70617d6
249	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	2020-04-17 14:48:35.50102	2020-04-17 14:48:35.50102	d2528180-a552-446f-9c25-9611e5bc7519
250	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	2020-04-17 14:48:35.50742	2020-04-17 14:48:35.50742	908df929-b84e-411d-a437-3bbfee8e8030
251	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	2020-04-17 14:48:35.512749	2020-04-17 14:48:35.512749	6e1e3527-a3b6-4307-bb65-1119457e3c74
252	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	2020-04-17 14:48:35.518997	2020-04-17 14:48:35.518997	1f7e00b5-6760-46aa-ad01-bb69e04e2b4c
253	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	2020-04-17 14:48:35.527473	2020-04-17 14:48:35.527473	48519358-f880-4152-9730-c2fc71599e9a
254	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	2020-04-17 14:48:35.558188	2020-04-17 14:48:35.557129	89e252f0-6f00-4e79-9c6a-6c572bf50563
255	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	2020-04-17 14:48:35.564628	2020-04-17 14:48:35.564628	8b7b7e72-46fc-4b8a-b409-5ad3d3f9291d
256	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	2020-04-17 14:48:35.570965	2020-04-17 14:48:35.569959	9595497f-6db6-448e-abb7-c62bf12bf9ef
257	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:35.576317	2020-04-17 14:48:35.576317	09fdb97f-8307-4ef7-b836-97886a722b47
258	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	2020-04-17 14:48:35.605648	2020-04-17 14:48:35.604592	a22eda8a-671d-4f19-8c9b-32ade44fd9c1
259	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	2020-04-17 14:48:35.613112	2020-04-17 14:48:35.612055	8e6832e1-ba6f-460c-babb-316a09febd3b
260	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	2020-04-17 14:48:35.618371	2020-04-17 14:48:35.618371	1cf42d39-d8ba-4335-81f5-b8e6275ebcca
261	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	2020-04-17 14:48:35.624705	2020-04-17 14:48:35.624705	8d9a0f0a-4e61-4ac3-a87e-94a2a7ac3ff6
262	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:35.635143	2020-04-17 14:48:35.635143	6d2f7cb6-4539-4f36-bf09-c0cdedd49282
263	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	2020-04-17 14:48:35.640486	2020-04-17 14:48:35.640486	54c4377f-80fa-40cf-8b05-89f7ba4c47b8
264	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	2020-04-17 14:48:35.646897	2020-04-17 14:48:35.646897	e83a578b-4f70-4307-985a-dbca628b1fa7
265	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	2020-04-17 14:48:35.65331	2020-04-17 14:48:35.65331	cdd87d87-0347-408c-8d99-d0527d3a8800
266	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	2020-04-17 14:48:35.658606	2020-04-17 14:48:35.658606	eea19edc-a763-4041-b080-685e40e586f5
267	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	2020-04-17 14:48:35.664978	2020-04-17 14:48:35.664978	574621ea-3c07-44e3-9291-a4c9a843654e
268	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	2020-04-17 14:48:35.694594	2020-04-17 14:48:35.693536	7d741527-f3f5-46ea-b82f-c4b656200e4c
269	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	2020-04-17 14:48:35.702049	2020-04-17 14:48:35.702049	ce888d21-5e09-43c0-a86d-223c6a3b4339
270	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	2020-04-17 14:48:35.70848	2020-04-17 14:48:35.70842	f78e73d9-4800-48dc-ba8a-28369cd64bbf
271	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:35.715941	2020-04-17 14:48:35.715941	ab4e4793-49eb-41a5-842b-fe22cd81e33d
272	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	2020-04-17 14:48:35.721268	2020-04-17 14:48:35.721268	7142e2a6-e76f-4533-afb7-b0deb2d82586
273	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2020-04-17 14:48:35.755112	2020-04-17 14:48:35.754047	caa72c0c-eb6b-4b29-8f00-e1e920e631db
274	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2020-04-17 14:48:35.761511	2020-04-17 14:48:35.761511	4721c1d8-33c9-43d5-ba90-c567e15a5877
275	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2020-04-17 14:48:35.767835	2020-04-17 14:48:35.766833	82c03251-6a7e-4f22-83d7-cc7e110251b4
276	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2020-04-17 14:48:35.773167	2020-04-17 14:48:35.772157	325aed14-d560-4970-98a2-508865336960
277	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2020-04-17 14:48:35.77745	2020-04-17 14:48:35.77745	2d0e50ad-76c3-471f-a122-dde05928fd88
278	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	2020-04-17 14:48:35.783832	2020-04-17 14:48:35.783832	d23b1de9-5b3f-4b6f-8e3d-a4d86b6913c8
279	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2020-04-17 14:48:35.789174	2020-04-17 14:48:35.789174	89a1d408-3000-456e-90dc-161b457dd2d7
280	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2020-04-17 14:48:35.794512	2020-04-17 14:48:35.794512	c7316216-6717-4219-949a-fa6d2325fff5
281	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2020-04-17 14:48:35.799816	2020-04-17 14:48:35.799816	9a85685c-991b-4d87-b38c-5546cadcb838
282	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2020-04-17 14:48:35.806097	2020-04-17 14:48:35.806097	82acfde5-b16a-437a-90b9-36c074477cb2
283	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2020-04-17 14:48:35.811397	2020-04-17 14:48:35.811397	706a74f7-3892-4d64-8d85-f869158b1b83
284	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2020-04-17 14:48:35.816732	2020-04-17 14:48:35.816732	255b5ba9-8ad0-44ab-b7a7-9841b905482a
285	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2020-04-17 14:48:35.822081	2020-04-17 14:48:35.822081	9141c134-08bc-46d3-be68-35bb1fd4cf19
286	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2020-04-17 14:48:35.830556	2020-04-17 14:48:35.830556	34519b84-6636-4c24-9202-ea1b1c907812
287	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:35.835893	2020-04-17 14:48:35.835893	109eb347-61f7-4ef0-9c7f-5e284a630f0f
288	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2020-04-17 14:48:35.841207	2020-04-17 14:48:35.841207	e850c78d-bf71-4c0f-bfb9-690b915e1923
289	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2020-04-17 14:48:35.847599	2020-04-17 14:48:35.847526	0e50976d-515c-44ee-817a-39f9042f3f48
290	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:35.882397	2020-04-17 14:48:35.882397	2e3b16d7-2d52-43bc-a4ac-1a4472eed947
291	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	2020-04-17 14:48:35.889735	2020-04-17 14:48:35.888725	e11abdc4-8718-4ad4-8fed-eb7b873d5d54
292	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	2020-04-17 14:48:35.895135	2020-04-17 14:48:35.895135	dc8450a4-0660-454c-9bba-bd1aaf76d65e
293	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	2020-04-17 14:48:35.901537	2020-04-17 14:48:35.901537	0e75513c-3691-40e1-9f4e-5fa54e02040d
294	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	2020-04-17 14:48:35.930991	2020-04-17 14:48:35.929939	19c3a14c-f886-4d14-a449-6322ab94c235
295	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	2020-04-17 14:48:35.944808	2020-04-17 14:48:35.944808	5e669722-bf75-4184-a72f-19d494e6189a
296	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2020-04-17 14:48:35.950149	2020-04-17 14:48:35.950149	83a8de3f-780a-4e1c-82e9-3f07d5b997ef
297	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	2020-04-17 14:48:35.95654	2020-04-17 14:48:35.95654	58a8d9ba-b6af-4248-b80f-fb690b7e3994
298	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	2020-04-17 14:48:35.98599	2020-04-17 14:48:35.984945	c01f8e94-daa2-4cda-9355-da4d70ab4225
299	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	2020-04-17 14:48:35.992331	2020-04-17 14:48:35.992331	3895146c-aa06-457c-a2ee-88ae3c4096ac
300	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2020-04-17 14:48:35.99866	2020-04-17 14:48:35.99866	2a55a268-be55-41f9-95bb-ef1e0e512455
301	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	2020-04-17 14:48:36.003818	2020-04-17 14:48:36.003818	12e74915-9d9a-4484-ac52-76f94ee8d04f
302	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	2020-04-17 14:48:36.010195	2020-04-17 14:48:36.010195	7bc70927-e3e0-4f92-bd42-b87425f4e9b8
303	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	2020-04-17 14:48:36.045921	2020-04-17 14:48:36.044864	22662fdb-fa60-49be-aa03-eff00c5b260d
304	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	2020-04-17 14:48:36.052329	2020-04-17 14:48:36.052329	f6a739c2-52b8-4107-a2d6-7b9f12064150
305	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	2020-04-17 14:48:36.058753	2020-04-17 14:48:36.058753	5eef9336-5b75-44ed-bdec-c5291b131e4e
306	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	2020-04-17 14:48:36.064076	2020-04-17 14:48:36.064076	b0ae6ae4-d250-4b92-b69e-083a3047830f
307	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2020-04-17 14:48:36.094742	2020-04-17 14:48:36.094742	b1972c39-59df-47c2-9c4d-46f6ffabb002
308	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2020-04-17 14:48:36.102232	2020-04-17 14:48:36.102232	b5005c87-3fa1-44d0-967a-fb5d56078064
309	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	2020-04-17 14:48:36.108648	2020-04-17 14:48:36.108648	dde0f971-e7a3-467f-93da-a4ad9be27240
310	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	2020-04-17 14:48:36.113999	2020-04-17 14:48:36.113999	05780c0b-cb59-4cd4-a924-c48662f17158
311	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:36.1193	2020-04-17 14:48:36.1193	e7ba7362-deb2-430a-947b-3a622b91ffd7
312	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	2020-04-17 14:48:36.12557	2020-04-17 14:48:36.124568	39542895-e1c0-430d-973f-95bda76c8b8a
313	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:36.130822	2020-04-17 14:48:36.130767	b3555c8a-1253-4976-ba05-d31c5936176c
314	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	2020-04-17 14:48:36.138126	2020-04-17 14:48:36.138126	770979d9-197b-4780-a46c-fd48970a8f88
315	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2020-04-17 14:48:36.143431	2020-04-17 14:48:36.143431	84a8771a-6e60-413b-8219-01f3e69caea3
316	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	2020-04-17 14:48:36.173056	2020-04-17 14:48:36.173056	d1b4671a-b64d-4d47-897b-b994f07c3e6e
317	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	2020-04-17 14:48:36.180482	2020-04-17 14:48:36.179425	4e437a27-c327-435c-9a5a-8ffa9642ce5d
318	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	2020-04-17 14:48:36.185813	2020-04-17 14:48:36.185813	7b246612-86b2-4561-9e5c-79cc93d113d4
319	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	2020-04-17 14:48:36.191123	2020-04-17 14:48:36.191123	336d4822-0331-4c7e-8d35-e8cd5fd60a08
320	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	2020-04-17 14:48:36.196296	2020-04-17 14:48:36.196296	29a33ecb-7944-4eb5-bce1-14155904e5b9
321	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	2020-04-17 14:48:36.20149	2020-04-17 14:48:36.20149	d78deed5-e13f-4b06-bee7-504d4530d26b
322	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	2020-04-17 14:48:36.206828	2020-04-17 14:48:36.206828	91537938-5fae-4486-806b-dbf6df1d7c69
323	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	2020-04-17 14:48:36.21214	2020-04-17 14:48:36.21214	2b76ce7f-6cb4-4cfc-acb4-1516b1c8c703
324	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:36.217341	2020-04-17 14:48:36.217341	fb4c43cf-f9d4-4406-8cf8-2ac98549371b
325	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	2020-04-17 14:48:36.222657	2020-04-17 14:48:36.222657	7f57e91e-b1dd-4074-bb0e-1a667a7ddf8f
326	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	2020-04-17 14:48:36.232096	2020-04-17 14:48:36.232096	6d6caf57-07d7-447d-a299-3065606273f5
327	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2020-04-17 14:48:36.264576	2020-04-17 14:48:36.263516	8d1ab6a4-7603-40e4-860c-95b8ae5bf0fe
328	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2020-04-17 14:48:36.270991	2020-04-17 14:48:36.270991	c39f8938-004c-4612-bc94-04b8c52841be
329	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2020-04-17 14:48:36.277398	2020-04-17 14:48:36.277398	5efccfaf-4aff-49d8-bc12-c8bc7167ebe8
330	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	2020-04-17 14:48:36.282747	2020-04-17 14:48:36.282747	dc048c19-64bd-4c58-b967-39397f43302a
331	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2020-04-17 14:48:36.288096	2020-04-17 14:48:36.288096	ee0453e3-6687-4b6b-86e9-351551063490
332	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2020-04-17 14:48:36.293439	2020-04-17 14:48:36.293439	bf0fd3f0-401a-4632-a89e-40cf808b5d67
333	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2020-04-17 14:48:36.299759	2020-04-17 14:48:36.299759	2b19a9ae-ce61-45be-a9cd-5c4656add687
334	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2020-04-17 14:48:36.306006	2020-04-17 14:48:36.306006	c288a4d9-1522-4cf3-9e92-6f3594524355
335	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2020-04-17 14:48:36.312426	2020-04-17 14:48:36.312426	59fec148-ea14-4c3d-938e-b77d5e59258c
336	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2020-04-17 14:48:36.31774	2020-04-17 14:48:36.31774	2d4018b2-5c2d-4870-a5d0-652271ba505f
337	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2020-04-17 14:48:36.322917	2020-04-17 14:48:36.322917	ecd3a048-f5be-40ff-a56c-6ddd18eb3923
338	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2020-04-17 14:48:36.338777	2020-04-17 14:48:36.338777	c2bf8962-0949-41c3-a351-753a5da3dfc4
339	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2020-04-17 14:48:36.373641	2020-04-17 14:48:36.373641	2c6f480c-4636-4328-a514-7668dea46a60
340	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2020-04-17 14:48:36.380991	2020-04-17 14:48:36.380991	ceeda4f9-36c0-47fb-a2b6-202966c324ca
341	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2020-04-17 14:48:36.387406	2020-04-17 14:48:36.387406	d3ec80fc-21c8-42eb-8a05-afdaeace7daa
342	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2020-04-17 14:48:36.393821	2020-04-17 14:48:36.393821	8bcdcce8-c8d0-499b-b5dd-ea970918978d
343	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2020-04-17 14:48:36.400076	2020-04-17 14:48:36.399068	3140246f-28bf-4136-86d9-6402684ae1c0
344	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2020-04-17 14:48:36.405472	2020-04-17 14:48:36.405472	1d1ed55a-36d0-4daa-8447-468e9b7bdd2e
345	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2020-04-17 14:48:36.411749	2020-04-17 14:48:36.411749	b9c5e23d-6f44-4f7a-8cf9-9afe2612e8ee
346	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:36.446523	2020-04-17 14:48:36.44546	306bbad0-2be7-4e55-8b5f-52e7bdb7ea8d
347	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	2020-04-17 14:48:36.479183	2020-04-17 14:48:36.479183	dd3e4391-36aa-4d07-b41f-248b6f1a1dd8
348	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	2020-04-17 14:48:36.487752	2020-04-17 14:48:36.487752	2bd127ee-8c88-4f2d-9f17-771a698fb886
349	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	2020-04-17 14:48:36.495177	2020-04-17 14:48:36.495177	f672bb38-f319-4e67-a261-cffeacb8fda9
350	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	2020-04-17 14:48:36.501495	2020-04-17 14:48:36.501495	f654917b-f557-4144-bb04-5995e8f078c4
351	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	2020-04-17 14:48:36.50792	2020-04-17 14:48:36.50792	53c7ffd6-ad65-4738-81b6-58de5379562d
352	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	2020-04-17 14:48:36.539529	2020-04-17 14:48:36.538531	2cc55220-1db1-424b-a401-71e7efa32a8d
353	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	2020-04-17 14:48:36.551044	2020-04-17 14:48:36.551044	287e2df0-d61b-4165-b861-f74a8c8cac3e
354	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	2020-04-17 14:48:36.556396	2020-04-17 14:48:36.556396	8016465e-7b46-45e0-a7ca-023f2f14ba07
355	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	2020-04-17 14:48:36.586731	2020-04-17 14:48:36.585675	1b051aad-4abe-4a6b-93dd-9837f83fbe56
356	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	2020-04-17 14:48:36.593391	2020-04-17 14:48:36.593391	a4d2174a-43c7-4a8b-bad5-23e7941cad08
357	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	2020-04-17 14:48:36.623715	2020-04-17 14:48:36.623715	0364eebe-6933-47a1-831e-509755ce291d
358	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	2020-04-17 14:48:36.631043	2020-04-17 14:48:36.631043	eed2d56f-afd1-4fe7-b6db-ab3ad258bb8d
359	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	2020-04-17 14:48:36.636362	2020-04-17 14:48:36.636362	789c829a-f046-424b-b514-924264a7c998
360	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	2020-04-17 14:48:36.642764	2020-04-17 14:48:36.642764	616054df-c84c-4d07-97c3-8a1cbe7d94cf
361	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	2020-04-17 14:48:36.648097	2020-04-17 14:48:36.648097	6de356e5-1073-40a7-b570-0bdd5ff8e497
362	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	2020-04-17 14:48:36.657579	2020-04-17 14:48:36.657579	046b8f97-4816-4bb6-80dd-239018a32090
363	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	2020-04-17 14:48:36.663924	2020-04-17 14:48:36.663924	18827ee1-4d76-44ad-8a65-920877d7df0d
364	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	2020-04-17 14:48:36.669282	2020-04-17 14:48:36.669282	4174c0c2-2c7c-4d24-ba33-d3dd530c30bc
365	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	2020-04-17 14:48:36.675769	2020-04-17 14:48:36.675769	078e64f2-a22e-489e-9ac9-25e9d3be069d
366	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	2020-04-17 14:48:36.682259	2020-04-17 14:48:36.682259	aa829f79-85eb-4861-b0ea-d855aad8dc36
367	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	2020-04-17 14:48:36.688748	2020-04-17 14:48:36.688748	61c991dc-6d27-41fb-904d-ca1af5e78d47
368	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	2020-04-17 14:48:36.695243	2020-04-17 14:48:36.695243	313a8fba-5c4d-4c6f-9e0f-7260ada86dba
369	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	2020-04-17 14:48:36.701746	2020-04-17 14:48:36.701746	06f1cf5c-c974-45f3-b06b-fa3bd6a7ee2c
370	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	2020-04-17 14:48:36.707054	2020-04-17 14:48:36.707054	94879636-7beb-4053-a8c6-4d5f374e6065
371	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	2020-04-17 14:48:36.71351	2020-04-17 14:48:36.71351	23e79a43-0d88-42a8-96d8-75a3a78db1f0
372	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	2020-04-17 14:48:36.718839	2020-04-17 14:48:36.718839	dcefae51-8456-450e-a2df-32adfe37cbc6
373	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	2020-04-17 14:48:36.725149	2020-04-17 14:48:36.725149	c3e99f7a-f90d-44e3-afbe-8c80d23fef20
374	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	2020-04-17 14:48:36.730472	2020-04-17 14:48:36.730472	8846758a-d631-4844-b5ac-81448995c7cb
375	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	2020-04-17 14:48:36.736885	2020-04-17 14:48:36.736885	09fcf1de-fdf0-4c79-95cf-21a2779ff118
376	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	2020-04-17 14:48:36.744216	2020-04-17 14:48:36.744216	022cedcc-77da-4a2e-b430-e991057a1c78
377	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	2020-04-17 14:48:36.752663	2020-04-17 14:48:36.752663	e77d4653-148b-49a3-8d53-8a1e71765c44
378	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	2020-04-17 14:48:36.759013	2020-04-17 14:48:36.759013	56738cc0-e15a-4bd4-9ba3-4352752e397a
379	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	2020-04-17 14:48:36.765359	2020-04-17 14:48:36.765359	f0c18fc6-881a-4c2b-b4fc-954b04acb251
380	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	2020-04-17 14:48:36.77181	2020-04-17 14:48:36.77181	5d3e30ab-824e-4db4-b970-6f488ddbe720
381	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	2020-04-17 14:48:36.778259	2020-04-17 14:48:36.778259	391a7cfd-c686-4805-9f5a-6086a3e37d5e
382	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	2020-04-17 14:48:36.784652	2020-04-17 14:48:36.784652	b85272a7-08af-4c37-8579-8acb6a68ba7e
383	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	2020-04-17 14:48:36.789989	2020-04-17 14:48:36.789989	948d7ffb-388c-45c3-be5b-670456ff9983
384	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	2020-04-17 14:48:36.798484	2020-04-17 14:48:36.798484	3e0de394-3051-4bf0-80bf-33cab3e40e3e
385	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	2020-04-17 14:48:36.804912	2020-04-17 14:48:36.804912	5d99de3f-248d-4c7d-a052-b7a49de8d82d
386	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	2020-04-17 14:48:36.81135	2020-04-17 14:48:36.81135	033a9421-4b79-4303-8993-315502876a2a
387	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	2020-04-17 14:48:36.816702	2020-04-17 14:48:36.816702	7b49f959-6ef9-4461-8a4d-980e8e1fd194
388	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	2020-04-17 14:48:36.82308	2020-04-17 14:48:36.82308	058593bc-0302-4df3-a86a-0b7d203f868b
389	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	2020-04-17 14:48:36.829486	2020-04-17 14:48:36.829486	970cac9b-9c12-4fa7-9f40-467f6a426bc8
390	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	2020-04-17 14:48:36.835903	2020-04-17 14:48:36.835903	0dd26212-9044-44dc-afd0-3f6eff8a092f
391	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	2020-04-17 14:48:36.848766	2020-04-17 14:48:36.848766	deb0389a-c4ea-40b7-8ddc-9cd23687eb2b
392	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	2020-04-17 14:48:36.855042	2020-04-17 14:48:36.855042	d7d3c5f6-086e-4338-8104-ba73a6157fee
393	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	2020-04-17 14:48:36.861462	2020-04-17 14:48:36.861462	acac12e6-3bf4-4fe2-a456-7f04e81edbf3
394	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	2020-04-17 14:48:36.866798	2020-04-17 14:48:36.866798	a4d693b5-f987-4869-9e8d-604e4c70eb54
395	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	2020-04-17 14:48:36.873228	2020-04-17 14:48:36.873228	d06d68c3-735f-4e69-a21d-3489c0f15475
396	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	2020-04-17 14:48:36.879618	2020-04-17 14:48:36.879618	e5a48046-da55-4413-b603-6232ca74483f
397	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	2020-04-17 14:48:36.886054	2020-04-17 14:48:36.886054	a36d7c2f-21b6-4dad-be8f-c4171ddf37e6
398	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	2020-04-17 14:48:36.892483	2020-04-17 14:48:36.892483	6d7624c4-32db-4efc-bad1-ecf6128d0c83
399	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	2020-04-17 14:48:36.898966	2020-04-17 14:48:36.898966	c8ef98be-6fce-4058-8908-4fab14fe4d5f
400	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	2020-04-17 14:48:36.90542	2020-04-17 14:48:36.90542	8a45d4da-788a-491f-85cd-96e256ff85b7
401	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	2020-04-17 14:48:36.911874	2020-04-17 14:48:36.911874	661b5d2f-1b1d-4e5a-b3d7-da3feb4d850e
402	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	2020-04-17 14:48:36.91719	2020-04-17 14:48:36.91719	cd209585-bdb4-4b26-b832-f0db77478774
403	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	2020-04-17 14:48:36.924649	2020-04-17 14:48:36.924594	fa89de30-68f9-43c9-abc4-561b743336e5
404	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	2020-04-17 14:48:36.930949	2020-04-17 14:48:36.930949	8ba36ee5-97c1-440a-88d4-86c5c82e0920
405	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	2020-04-17 14:48:36.938483	2020-04-17 14:48:36.938483	471affe8-0257-4f97-8ed1-ed038c2c55a8
406	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	2020-04-17 14:48:36.944952	2020-04-17 14:48:36.944952	9fad1c27-629b-4b9e-a3c7-7f61d6a1ca63
407	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	2020-04-17 14:48:36.952469	2020-04-17 14:48:36.952469	421696ce-232c-4fb7-809c-378277d9ec4c
408	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	2020-04-17 14:48:36.958824	2020-04-17 14:48:36.958824	c4509943-bff3-4bf7-b2b9-877d709fe717
409	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	2020-04-17 14:48:36.965281	2020-04-17 14:48:36.965281	bf844b2d-89a3-456e-a9cb-27149ad097f8
410	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	2020-04-17 14:48:36.971564	2020-04-17 14:48:36.971564	bbb1c339-3558-49a9-a451-b6a3f94a32bd
411	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	2020-04-17 14:48:36.977986	2020-04-17 14:48:36.977986	5c41dc1a-039f-4b78-8f3b-df01d964fb7d
412	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	2020-04-17 14:48:36.984704	2020-04-17 14:48:36.983706	a2c7f12c-de6e-454e-8642-cc6573cf2226
413	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	2020-04-17 14:48:36.991044	2020-04-17 14:48:36.990035	c390dce0-75e0-42e1-aea8-0811f6004abb
414	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	2020-04-17 14:48:36.99752	2020-04-17 14:48:36.99647	b4246fb1-9f3f-465d-80df-6ecd85bd074e
415	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	2020-04-17 14:48:37.003854	2020-04-17 14:48:37.003854	470b1995-9458-4709-83c3-037de077c6bc
416	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	2020-04-17 14:48:37.010279	2020-04-17 14:48:37.010279	78d7fbde-9d78-42d5-b3aa-0746e99b1139
417	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	2020-04-17 14:48:37.0156	2020-04-17 14:48:37.0156	ef85785c-048c-42c7-9cb7-a59573e7eb21
418	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	2020-04-17 14:48:37.023041	2020-04-17 14:48:37.023041	3932352d-2078-461e-b82f-e982daa271aa
419	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	2020-04-17 14:48:37.029324	2020-04-17 14:48:37.029324	9e64b39d-550e-45ef-9723-39426f970409
420	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	2020-04-17 14:48:37.035584	2020-04-17 14:48:37.035584	26af8341-dd9f-41f4-a3a6-2d39481e5505
421	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	2020-04-17 14:48:37.041995	2020-04-17 14:48:37.041995	b2e82225-bbc2-4965-820d-911b574ed058
422	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	2020-04-17 14:48:37.04733	2020-04-17 14:48:37.04733	31ec64c7-1a12-4b82-82e1-4681994080e5
423	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	2020-04-17 14:48:37.053676	2020-04-17 14:48:37.053676	eed44f96-b543-469a-a3a0-0f10184a621b
424	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	2020-04-17 14:48:37.059926	2020-04-17 14:48:37.059926	9c863828-ce5e-4bb3-9eff-e3d4370e40ce
425	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	2020-04-17 14:48:37.065261	2020-04-17 14:48:37.065261	38cbb105-13a1-409a-a493-8bc531e2ad34
426	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	2020-04-17 14:48:37.071712	2020-04-17 14:48:37.071712	961b9e84-7d9f-4bc8-9dd9-6d8319013419
427	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	2020-04-17 14:48:37.07706	2020-04-17 14:48:37.07706	b3698f89-ba2c-4ef3-9cd9-0f7acd683933
428	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	2020-04-17 14:48:37.082392	2020-04-17 14:48:37.082392	2b08ffe4-c7a7-4b46-bfba-925dc74a1c47
429	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	2020-04-17 14:48:37.088805	2020-04-17 14:48:37.088805	3d9105cd-df6d-40ea-82e6-2c2a006a8178
430	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	2020-04-17 14:48:37.095222	2020-04-17 14:48:37.095222	da3bd140-9b7e-4363-a562-fd5dbae86315
431	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	2020-04-17 14:48:37.100537	2020-04-17 14:48:37.100537	8de59f1b-0f08-4989-b72a-30ce20b9ef04
432	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	2020-04-17 14:48:37.107992	2020-04-17 14:48:37.107992	962d21f6-a61b-4acd-b2e1-7d424cd0f9d9
433	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	2020-04-17 14:48:37.114371	2020-04-17 14:48:37.114371	433af4b0-17b9-4d77-b5f3-99d32c98d3f2
434	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	2020-04-17 14:48:37.119753	2020-04-17 14:48:37.119753	8420fe2b-d25f-48a0-abf4-b72f00273cf4
435	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	2020-04-17 14:48:37.128275	2020-04-17 14:48:37.128275	53b8a00a-b5f2-4cbb-b14d-d0787ebb87ac
436	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	2020-04-17 14:48:37.134544	2020-04-17 14:48:37.134544	67dd7ee3-46c6-4ee9-8e04-9d81ec776ee5
437	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	2020-04-17 14:48:37.140981	2020-04-17 14:48:37.140981	e3adfede-74d3-444c-af20-0d023a7b2ed3
438	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	2020-04-17 14:48:37.146334	2020-04-17 14:48:37.146334	057649c6-bf29-4a01-ab77-1c2fdb695cfb
439	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	2020-04-17 14:48:37.152726	2020-04-17 14:48:37.151682	78cc35b0-d60c-4e43-83f3-a6cca083f757
440	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	2020-04-17 14:48:37.1581	2020-04-17 14:48:37.1581	76c57015-115f-4ed5-ba92-c2d99d38110c
441	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	2020-04-17 14:48:37.164476	2020-04-17 14:48:37.163466	caf731ae-6dab-49af-bd19-1a1abaf901d6
442	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	2020-04-17 14:48:37.16987	2020-04-17 14:48:37.16987	6635bf37-43e8-4401-b787-8de2f983ee4f
443	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	2020-04-17 14:48:37.175205	2020-04-17 14:48:37.175205	7e98fc23-8b96-41a9-b07d-869ed41daec9
444	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	2020-04-17 14:48:37.181548	2020-04-17 14:48:37.180541	58c621b9-1046-448c-92b9-73ccb758c333
445	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	2020-04-17 14:48:37.186947	2020-04-17 14:48:37.186947	f5c364d6-df5d-40e4-ac7f-6d0d4cbe7cca
446	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	2020-04-17 14:48:37.194207	2020-04-17 14:48:37.193198	28a59d38-5f88-4af6-a09b-ecc1c45ddf41
447	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	2020-04-17 14:48:37.199602	2020-04-17 14:48:37.199602	725cc9ce-178f-4c1b-b3b3-5f0efa18896d
448	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	2020-04-17 14:48:37.204977	2020-04-17 14:48:37.204977	cad46bad-970a-46d1-a207-667aeb2acda1
449	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	2020-04-17 14:48:37.210342	2020-04-17 14:48:37.210342	74298737-274a-4ecd-afad-c2521e121668
450	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	2020-04-17 14:48:37.215716	2020-04-17 14:48:37.215716	c5f898cd-cfb5-443f-937c-81103d34bde0
451	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	2020-04-17 14:48:37.221065	2020-04-17 14:48:37.221065	ff474cb6-514a-4d0f-a44f-b075fc9aa3f0
452	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	2020-04-17 14:48:37.227414	2020-04-17 14:48:37.226403	71ef17f8-0425-4e1a-9177-3ca97052b57f
453	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	2020-04-17 14:48:37.232704	2020-04-17 14:48:37.232704	56a7558c-ea83-41e3-95af-29bef826b85e
454	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	2020-04-17 14:48:37.239087	2020-04-17 14:48:37.239087	e8919753-4c8e-4108-bdf8-e5b878b6dd75
455	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	2020-04-17 14:48:37.244422	2020-04-17 14:48:37.244422	dcfb1f22-2b1e-49fe-b84f-b05809e4cdef
456	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	2020-04-17 14:48:37.25068	2020-04-17 14:48:37.25068	fe54fc20-25ef-4da9-91a4-43c3f968821c
457	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	2020-04-17 14:48:37.25714	2020-04-17 14:48:37.25714	6be6e7fe-9f77-42fa-93be-32bc7fc448f6
458	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	2020-04-17 14:48:37.262342	2020-04-17 14:48:37.262342	94949ea3-3b03-4542-8767-73418f31d196
459	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	2020-04-17 14:48:37.268785	2020-04-17 14:48:37.268785	4cdb0af0-7edd-4e92-b55e-c661a4d9fbe5
460	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	2020-04-17 14:48:37.27507	2020-04-17 14:48:37.27507	70e06be1-b3b2-48b3-9ac8-90bf240b4111
461	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	2020-04-17 14:48:37.283482	2020-04-17 14:48:37.283482	b3b91f39-38f8-4846-aec6-5d56032c534b
462	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	2020-04-17 14:48:37.289898	2020-04-17 14:48:37.289898	4d45b44e-5870-415b-bfd1-152b9f7d98f7
463	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	2020-04-17 14:48:37.295246	2020-04-17 14:48:37.295246	ca896852-7bfd-4f7b-b1bd-3a049ed31121
464	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	2020-04-17 14:48:37.301503	2020-04-17 14:48:37.301503	7713c4c1-a4bb-43db-9d92-3b34c34b8526
465	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	2020-04-17 14:48:37.307912	2020-04-17 14:48:37.307912	376decd1-4756-41a5-b2ec-8b88d76dc610
466	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	2020-04-17 14:48:37.314319	2020-04-17 14:48:37.314268	fb143291-0f19-48b5-a777-7cd582f02cc5
467	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	2020-04-17 14:48:37.319655	2020-04-17 14:48:37.319655	88feeeb8-569f-4309-8a8e-c7d8ce12ee50
468	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	2020-04-17 14:48:37.326095	2020-04-17 14:48:37.326095	78e39c6b-afee-41dd-8c5d-c63ecd4cc47a
469	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	2020-04-17 14:48:37.331459	2020-04-17 14:48:37.331459	7ad77d0e-d155-439e-b92e-5ef987eaa1e2
470	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	2020-04-17 14:48:37.337891	2020-04-17 14:48:37.337891	016582e8-e2f5-4c2d-9b75-e3370ee50886
471	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	2020-04-17 14:48:37.343223	2020-04-17 14:48:37.343223	65790002-480f-44a1-b382-7f6473c933e4
472	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	2020-04-17 14:48:37.348565	2020-04-17 14:48:37.348565	5a871023-a69e-43f6-8d8f-332941cbbe18
473	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	2020-04-17 14:48:37.355021	2020-04-17 14:48:37.355021	8fdd7d74-d3cb-40a7-a595-a1b157ae37ce
474	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	2020-04-17 14:48:37.361485	2020-04-17 14:48:37.361449	91139568-493d-4f8e-a1d6-378bff025a09
475	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	2020-04-17 14:48:37.367868	2020-04-17 14:48:37.367868	52ed2ece-7807-48c1-af02-2b94f1455c74
476	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	2020-04-17 14:48:37.373202	2020-04-17 14:48:37.373202	a3da1112-1081-4730-ba08-4d0d3c9438c3
477	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	2020-04-17 14:48:37.378549	2020-04-17 14:48:37.378549	0cb2e4ec-4e81-4014-a4e7-74c6bf3d4bc8
478	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	2020-04-17 14:48:37.383893	2020-04-17 14:48:37.383893	3d270a3c-7075-41ff-b552-0a938dc88a76
479	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	2020-04-17 14:48:37.389179	2020-04-17 14:48:37.389179	1dc443ff-c6d1-4a59-b380-c12e9cfe0f19
480	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	2020-04-17 14:48:37.394561	2020-04-17 14:48:37.394561	a4472611-c6ba-40b0-8f7e-cd34eaa1c23e
481	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	2020-04-17 14:48:37.399912	2020-04-17 14:48:37.399912	db3f9124-20fa-494a-8203-04c09c7c01f5
482	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	2020-04-17 14:48:37.404192	2020-04-17 14:48:37.404192	fc852f9f-a4e7-4ca7-9c0b-8a2d1e26d55e
483	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	2020-04-17 14:48:37.40958	2020-04-17 14:48:37.40958	af19383b-3a99-4817-ad61-07dc42c48451
484	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	2020-04-17 14:48:37.414921	2020-04-17 14:48:37.414921	78a438f2-fad0-437c-991a-85a8ce2db3d3
485	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	2020-04-17 14:48:37.420306	2020-04-17 14:48:37.420306	b0348be0-b15f-499e-bad0-e0f75d36e908
486	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	2020-04-17 14:48:37.42765	2020-04-17 14:48:37.42765	3fc51c4b-9188-4c48-85fa-db53c744f878
487	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	2020-04-17 14:48:37.431944	2020-04-17 14:48:37.431944	54a10377-ed9c-439f-87c0-580fa92a7338
488	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	2020-04-17 14:48:37.437269	2020-04-17 14:48:37.437269	0a150622-ddd2-4d39-97bb-0eece06fd4d7
489	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	2020-04-17 14:48:37.44262	2020-04-17 14:48:37.44262	d3d2e8ea-070c-45ce-ad0b-2f27ecc47192
490	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	2020-04-17 14:48:37.449037	2020-04-17 14:48:37.449037	25c41ebb-f36d-45e0-b55b-709a29cb619b
491	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	2020-04-17 14:48:37.454401	2020-04-17 14:48:37.454401	aba7c3f1-dec2-43f4-914b-6c7e4d1786e1
492	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	2020-04-17 14:48:37.459752	2020-04-17 14:48:37.459752	e2c4b224-9d3d-44fb-af16-c43a2d28ccc1
493	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	2020-04-17 14:48:37.463981	2020-04-17 14:48:37.463981	959d12ab-0c8a-46f0-bfba-c5c3192ce1bd
494	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	2020-04-17 14:48:37.469237	2020-04-17 14:48:37.469237	a07b1075-0b02-4617-9faf-207bb8a35341
495	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	2020-04-17 14:48:37.474584	2020-04-17 14:48:37.474584	4346dbf7-9979-4288-9369-89a55e7ace64
496	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	2020-04-17 14:48:37.47985	2020-04-17 14:48:37.47985	04a0197f-e066-4024-9f50-664b64750da0
497	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	2020-04-17 14:48:37.485178	2020-04-17 14:48:37.485178	8bf79c4f-78f0-4252-b503-c1ee130a88a4
498	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	2020-04-17 14:48:37.49056	2020-04-17 14:48:37.49056	b05468b1-1c19-449c-9b8d-dd135cbd80f0
499	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	2020-04-17 14:48:37.495823	2020-04-17 14:48:37.495823	86031c73-2678-43c4-ad63-2ec17591a5cb
500	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	2020-04-17 14:48:37.502203	2020-04-17 14:48:37.502203	edcc4db9-abea-4ee1-98dd-1cc368114684
501	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	2020-04-17 14:48:37.507542	2020-04-17 14:48:37.507542	51e9f9cf-31a0-459b-9518-e8c8a0d927a3
502	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	2020-04-17 14:48:37.511752	2020-04-17 14:48:37.511752	ca081503-901c-4265-a362-f964e24c8d5d
503	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	2020-04-17 14:48:37.517076	2020-04-17 14:48:37.517076	62b043ee-255b-4e1d-98df-b491c48a110d
504	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	2020-04-17 14:48:37.523528	2020-04-17 14:48:37.523528	3d1e0dc8-03f6-4631-a274-ece4ac68f602
505	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	2020-04-17 14:48:37.529988	2020-04-17 14:48:37.529988	dfa2f040-bd38-4500-add3-ee80111c0790
506	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	2020-04-17 14:48:37.535298	2020-04-17 14:48:37.535298	d9f393b8-9045-430c-b264-7ba38e81c286
507	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	2020-04-17 14:48:37.54063	2020-04-17 14:48:37.54063	94e51f6b-0006-4440-8855-95aeb62e9509
508	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	2020-04-17 14:48:37.545861	2020-04-17 14:48:37.545861	43edcf17-59bc-466d-bdee-e52416e11f7d
509	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	2020-04-17 14:48:37.551171	2020-04-17 14:48:37.551171	b7f0202f-19b7-4755-81fd-6731f47d768d
510	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	2020-04-17 14:48:37.556532	2020-04-17 14:48:37.556532	f25570a0-a8f3-473a-a497-e65d023152de
511	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	2020-04-17 14:48:37.561846	2020-04-17 14:48:37.561846	c7c0c460-81e7-4566-a863-46d0cba3e0dd
512	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	2020-04-17 14:48:37.567098	2020-04-17 14:48:37.567098	608f736a-353e-43a6-8f5a-6b6fc9336aea
513	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	2020-04-17 14:48:37.572435	2020-04-17 14:48:37.572435	decb2aa9-8444-4581-93ff-d9de113ddc8d
514	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	2020-04-17 14:48:37.577725	2020-04-17 14:48:37.577725	f89d1a4f-8fe2-443c-bdd1-85adad9bd4fe
515	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	2020-04-17 14:48:37.584167	2020-04-17 14:48:37.584167	83fce529-604b-409a-807a-77b83a4a5652
516	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	2020-04-17 14:48:37.589582	2020-04-17 14:48:37.589582	2c2aebfa-d1de-43af-ad17-b616d36bba04
517	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	2020-04-17 14:48:37.594991	2020-04-17 14:48:37.594991	a71c7682-c84e-409c-a91c-6dbc1d77a1cb
518	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	2020-04-17 14:48:37.601351	2020-04-17 14:48:37.601351	8d7cc733-ac00-4448-8a47-e7a60eb5c352
519	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	2020-04-17 14:48:37.607826	2020-04-17 14:48:37.607826	8f24cc69-8ab4-4edb-994c-59afb7569486
520	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	2020-04-17 14:48:37.614133	2020-04-17 14:48:37.614133	79df3ace-2f83-476d-8344-21be2e64b06d
521	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	2020-04-17 14:48:37.619466	2020-04-17 14:48:37.619466	23a3f747-0bc4-42bf-a43b-b7b09f71f331
522	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	2020-04-17 14:48:37.624825	2020-04-17 14:48:37.624825	f1153e59-70c7-4bfc-b77f-f070082fac0e
523	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	2020-04-17 14:48:37.630174	2020-04-17 14:48:37.630174	809eb82c-4f51-4008-a500-cb721b62a775
524	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	2020-04-17 14:48:37.635595	2020-04-17 14:48:37.635595	ddf890b1-da5d-4858-a314-65c27cdc36d7
525	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	2020-04-17 14:48:37.641004	2020-04-17 14:48:37.641004	c4e88fcb-7bbb-4b49-b5f4-69f2d9357823
526	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	2020-04-17 14:48:37.645291	2020-04-17 14:48:37.645291	b5316c28-4fae-4140-a66c-812aace99b24
527	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	2020-04-17 14:48:37.650668	2020-04-17 14:48:37.650668	09bdfcb2-528e-4f01-93b7-337a5252574d
528	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	2020-04-17 14:48:37.656013	2020-04-17 14:48:37.656013	28297955-4af3-4abe-8fe6-6b68809f9c40
529	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	2020-04-17 14:48:37.661379	2020-04-17 14:48:37.661379	619dd138-6e30-4a4f-9391-286b80b011d4
530	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	2020-04-17 14:48:37.667787	2020-04-17 14:48:37.667787	f73ec8b7-3d6d-48f8-8c3e-8a88dba16f22
531	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	2020-04-17 14:48:37.673155	2020-04-17 14:48:37.673155	90ccf1ef-f38a-497c-82ac-da03be41a2cd
532	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	2020-04-17 14:48:37.67953	2020-04-17 14:48:37.67953	2ccd2f0f-cd7b-4ad3-9149-3e7082346e4b
533	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	2020-04-17 14:48:37.686899	2020-04-17 14:48:37.686899	1092e127-8a4b-4a78-9328-656ad33d6bb9
534	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	2020-04-17 14:48:37.692233	2020-04-17 14:48:37.692233	c2fec97a-f4aa-440d-b62d-88d4127de9fd
535	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	2020-04-17 14:48:37.698646	2020-04-17 14:48:37.698646	7fc72ab0-0e26-4ccf-807b-e220ce258e42
536	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	2020-04-17 14:48:37.705047	2020-04-17 14:48:37.705047	3372d39d-ee22-43e8-aaa5-b39e4fe4a306
537	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	2020-04-17 14:48:37.71335	2020-04-17 14:48:37.71335	36a7ac03-a4cb-4c9c-8a1b-e79af1d7ec8d
538	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	2020-04-17 14:48:37.718666	2020-04-17 14:48:37.718666	593333d7-09db-4220-af64-8db6b7212363
539	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	2020-04-17 14:48:37.725104	2020-04-17 14:48:37.725104	0e3c2aa8-9502-4252-8fd6-c6c76864131e
540	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	2020-04-17 14:48:37.731526	2020-04-17 14:48:37.731526	b9ff5a55-e379-41c2-b7bc-1f6577e49432
541	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	2020-04-17 14:48:37.738991	2020-04-17 14:48:37.738991	58bde531-102a-41e6-bbe1-1851d176359c
542	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	2020-04-17 14:48:37.745418	2020-04-17 14:48:37.745418	4cf4e9bd-906e-45ba-a891-cd990d810a5a
543	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	2020-04-17 14:48:37.750766	2020-04-17 14:48:37.750766	f2ef8ede-cd48-44a7-8827-03e6d77281a2
544	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	2020-04-17 14:48:37.756083	2020-04-17 14:48:37.756083	61c5d298-b99e-4afb-a970-4add5f9bba3d
545	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	2020-04-17 14:48:37.762486	2020-04-17 14:48:37.762486	f962e67a-9b34-46f2-aa22-0cd73b362bfb
546	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	2020-04-17 14:48:37.769009	2020-04-17 14:48:37.769009	525e76e5-4a2b-417e-85cc-49aed93bd431
547	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	2020-04-17 14:48:37.77645	2020-04-17 14:48:37.77645	49632e5a-46e2-41c6-9f11-90b920e6c244
548	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	2020-04-17 14:48:37.78283	2020-04-17 14:48:37.78283	7435567e-9559-47e9-8ff9-dd171301ed60
549	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	2020-04-17 14:48:37.789213	2020-04-17 14:48:37.789213	9ab7bb7b-0b0f-496e-9cc8-8c0830f2ae90
550	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	2020-04-17 14:48:37.79548	2020-04-17 14:48:37.79548	8e8fb356-d88f-439a-8764-b1e379cc1723
551	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	2020-04-17 14:48:37.801889	2020-04-17 14:48:37.80182	fcceaf5d-b0ab-418c-a550-ce54936c0ee6
552	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	2020-04-17 14:48:37.807175	2020-04-17 14:48:37.807175	f01b9f67-4df4-4908-bed7-fa8b3a91793c
553	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	2020-04-17 14:48:37.812531	2020-04-17 14:48:37.812531	f09a2218-c3cb-4f88-9fdb-8180ff4c035d
554	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	2020-04-17 14:48:37.818909	2020-04-17 14:48:37.818909	3f1e61dd-5647-423d-943c-6817904331f1
555	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	2020-04-17 14:48:37.825233	2020-04-17 14:48:37.825233	a1c31a43-106b-4a59-a258-12256d19f775
556	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	2020-04-17 14:48:37.831626	2020-04-17 14:48:37.831626	5328d201-e7ba-4bd4-8b59-cac26a4eda4e
557	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	2020-04-17 14:48:37.840518	2020-04-17 14:48:37.840518	46683144-0e75-434e-a673-ba84fa29d73e
558	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	2020-04-17 14:48:37.846967	2020-04-17 14:48:37.846967	0af31524-af60-41a0-9084-6df8657b6c41
559	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	2020-04-17 14:48:37.854365	2020-04-17 14:48:37.853363	2ebd17f9-6e1a-49b1-bd8f-1a071b3a9bf2
560	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	2020-04-17 14:48:37.860825	2020-04-17 14:48:37.860825	2f72a3f2-c7af-4748-a064-445a758962b7
561	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	2020-04-17 14:48:37.869393	2020-04-17 14:48:37.869393	fcf2dd04-abbc-45d0-a4cb-f661b52dafbc
562	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	2020-04-17 14:48:37.876753	2020-04-17 14:48:37.875751	e4d8137c-4691-4d21-af4e-d8e5975c48eb
563	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	2020-04-17 14:48:37.883172	2020-04-17 14:48:37.883172	ebb01eeb-3b19-4c42-9803-11e2eacf02fc
564	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	2020-04-17 14:48:37.889567	2020-04-17 14:48:37.889567	0dad564c-ed96-4df8-ba7f-f67b6dcce971
565	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	2020-04-17 14:48:37.897946	2020-04-17 14:48:37.897946	11e0e625-ab30-4db4-b288-a4f0e6d76c95
566	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	2020-04-17 14:48:37.904335	2020-04-17 14:48:37.904335	dd1f5e82-0b47-48b0-a97d-7a80733478e4
567	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	2020-04-17 14:48:37.911779	2020-04-17 14:48:37.911779	41c672df-491b-4f7c-9899-9534337d67ea
568	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	2020-04-17 14:48:37.918171	2020-04-17 14:48:37.918171	83eeed4b-6547-4f5f-a88b-6d24f593e43c
569	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	2020-04-17 14:48:37.926701	2020-04-17 14:48:37.926701	c26ae9dc-3bc8-4c96-aab0-90fb56a131dc
570	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	2020-04-17 14:48:37.933074	2020-04-17 14:48:37.933074	5c631aa2-1a99-42f9-b378-758ab2ca7713
571	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	2020-04-17 14:48:37.941526	2020-04-17 14:48:37.941526	73c89d86-b47f-4db5-b94c-4c162b12b883
572	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	2020-04-17 14:48:37.948889	2020-04-17 14:48:37.948889	2d40ad5c-730b-464e-93da-c4f321ff221f
573	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	2020-04-17 14:48:37.956346	2020-04-17 14:48:37.956346	313df2dd-1ae4-4f8d-bf0f-fd8c9cc74424
574	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	2020-04-17 14:48:37.963735	2020-04-17 14:48:37.963735	d9750de2-d610-431c-979c-eba0a91ee2a6
575	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	2020-04-17 14:48:37.970097	2020-04-17 14:48:37.970083	6d2a2533-be71-4732-aa22-5ce92fd31b23
576	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	2020-04-17 14:48:37.977536	2020-04-17 14:48:37.977536	320ffabd-f0b1-4e98-919b-627e11e42467
577	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	2020-04-17 14:48:37.983237	2020-04-17 14:48:37.983237	e488c97b-49f0-4d3a-b66d-bce502387a9a
578	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	2020-04-17 14:48:37.989571	2020-04-17 14:48:37.988532	66ed5333-76d7-47a0-931f-36972d87d3e9
579	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	2020-04-17 14:48:37.995969	2020-04-17 14:48:37.995902	4b9e9979-b08a-4fba-89d8-497eaab4b45e
580	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	2020-04-17 14:48:38.00024	2020-04-17 14:48:38.00024	42128b12-8bd3-4b01-b098-b08a320ac957
581	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	2020-04-17 14:48:38.00664	2020-04-17 14:48:38.00664	cd144755-2c10-474a-903a-cf7d56f4c865
582	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	2020-04-17 14:48:38.011937	2020-04-17 14:48:38.011937	354d66a3-7de2-4a94-93a5-bf8ca9f3cc40
583	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	2020-04-17 14:48:38.01728	2020-04-17 14:48:38.01728	85b111b9-9148-4fe3-898c-e4687a6b3d6e
584	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	2020-04-17 14:48:38.024676	2020-04-17 14:48:38.02367	ffdec595-de7f-4e23-a7b4-024a7cb1ea4f
585	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	2020-04-17 14:48:38.031029	2020-04-17 14:48:38.031029	c343ebb9-e301-484e-b898-f7b80e604bac
586	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	2020-04-17 14:48:38.036378	2020-04-17 14:48:38.036378	374c59c9-bc6d-496c-90dd-456b825eb51e
587	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	2020-04-17 14:48:38.042785	2020-04-17 14:48:38.042785	d6b3c829-1f19-4929-b743-5093107849ca
588	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	2020-04-17 14:48:38.049186	2020-04-17 14:48:38.049186	13678177-50a5-46dd-9b44-d1623ca6649e
589	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	2020-04-17 14:48:38.055456	2020-04-17 14:48:38.055456	98b28f04-9f08-43fc-b6b9-876691d60d36
590	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	2020-04-17 14:48:38.062868	2020-04-17 14:48:38.062868	c2083d22-c0fa-44ff-b045-7b9d22bf0853
591	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	2020-04-17 14:48:38.069307	2020-04-17 14:48:38.069307	51992807-4118-4b65-b366-13a0178cfe64
592	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	2020-04-17 14:48:38.07464	2020-04-17 14:48:38.07464	180a126c-4617-4770-886c-166e62de4aec
593	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	2020-04-17 14:48:38.080907	2020-04-17 14:48:38.080907	484c2608-1cb8-42c3-b477-8667a0de159d
594	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	2020-04-17 14:48:38.087307	2020-04-17 14:48:38.087307	69ce7b1e-81a2-4807-ab6a-366009aaa217
595	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	2020-04-17 14:48:38.093716	2020-04-17 14:48:38.093716	3f2143b4-44dd-41f3-b26e-801ad7562ee3
596	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	2020-04-17 14:48:38.100139	2020-04-17 14:48:38.100139	dce11777-bf65-4944-b11f-a4d89e396a9f
597	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	2020-04-17 14:48:38.105462	2020-04-17 14:48:38.105462	29f60fb7-3313-438b-a0bd-9f4e886af0b7
598	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	2020-04-17 14:48:38.112926	2020-04-17 14:48:38.112905	f0391b85-f958-415d-822e-7c62bdd40f45
599	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	2020-04-17 14:48:38.119198	2020-04-17 14:48:38.119198	07102e58-356c-47e0-90b7-5a5d7b6310bc
600	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	2020-04-17 14:48:38.126622	2020-04-17 14:48:38.126622	1df3c801-54de-4686-84c5-689f5dfa3b73
601	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	2020-04-17 14:48:38.136207	2020-04-17 14:48:38.136207	9f18fc05-4bc2-4f46-a4e6-eb6648f65d6e
602	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	2020-04-17 14:48:38.142474	2020-04-17 14:48:38.142474	c17087a9-65d0-4416-9b2b-e6f988d2956b
603	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	2020-04-17 14:48:38.148737	2020-04-17 14:48:38.148737	a9630ad2-530b-42d8-9162-26ead8728195
604	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	2020-04-17 14:48:38.155121	2020-04-17 14:48:38.155121	68e2ec17-04f7-4c73-a7c6-f2514e8679d5
605	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	2020-04-17 14:48:38.162581	2020-04-17 14:48:38.162581	fe69c89e-eacf-4436-b06a-ab1c2b113bc9
606	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	2020-04-17 14:48:38.197054	2020-04-17 14:48:38.197054	b4ad7855-ab04-4483-b83b-7814fc0e6c5b
607	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2020-04-17 14:48:38.205398	2020-04-17 14:48:38.205398	e13b5c84-ab57-41be-87c5-533d50971071
608	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	2020-04-17 14:48:38.210778	2020-04-17 14:48:38.210778	aa3aa66d-2bc0-46d6-a4c1-92277643a549
609	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2020-04-17 14:48:38.217054	2020-04-17 14:48:38.217054	f9cc1213-338b-4cab-ba65-8ce820e85eec
610	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	2020-04-17 14:48:38.247782	2020-04-17 14:48:38.247782	b7b490ea-7ef1-4308-a9c4-2527f5150342
611	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	2020-04-17 14:48:38.255222	2020-04-17 14:48:38.255222	23ac08c9-a5e3-412e-b29c-694b4a91e41d
612	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:38.261597	2020-04-17 14:48:38.261597	216f43ba-de17-4970-acf2-ab1b44d235c4
613	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	2020-04-17 14:48:38.273165	2020-04-17 14:48:38.273165	72cb610c-7b3b-4754-b30c-6f49337de12d
614	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	2020-04-17 14:48:38.303565	2020-04-17 14:48:38.303514	32bc7bf2-5835-4751-87b2-27f671cf2785
615	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	2020-04-17 14:48:38.311077	2020-04-17 14:48:38.311077	a842fcb7-0ab6-40e2-ab24-31deb4ae8d1a
616	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2020-04-17 14:48:38.317279	2020-04-17 14:48:38.317279	900be8da-77e7-454a-a65d-acedb3e13f3f
617	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	2020-04-17 14:48:38.348524	2020-04-17 14:48:38.348524	f3ba4d10-8b50-4ec3-901e-b4aafa9ee7d2
618	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	2020-04-17 14:48:38.35597	2020-04-17 14:48:38.35597	3c416873-ec3e-4499-bcab-e2048f639071
619	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	2020-04-17 14:48:38.362349	2020-04-17 14:48:38.362349	8b1a0135-2949-4903-8188-b474794cac6a
620	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	2020-04-17 14:48:38.370903	2020-04-17 14:48:38.370866	5b3309cd-dc69-4cbb-b4e6-8891ba501d51
621	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:38.378327	2020-04-17 14:48:38.378327	9baac7f7-8e46-4243-b699-71b60777a0ad
622	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	2020-04-17 14:48:38.389985	2020-04-17 14:48:38.389985	bc61f0a9-52d1-4b5d-8540-d9554be1b743
623	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	2020-04-17 14:48:38.397447	2020-04-17 14:48:38.397447	f4ce533e-a707-4d6f-960d-d00a62709820
624	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	2020-04-17 14:48:38.404962	2020-04-17 14:48:38.404962	26f4ca58-bc4e-45cc-9051-87d2dc8e81b6
625	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	2020-04-17 14:48:38.412409	2020-04-17 14:48:38.412409	a6252064-9b87-4e74-9c60-2b9493c71c76
626	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	2020-04-17 14:48:38.444078	2020-04-17 14:48:38.44307	3912d74d-0d50-4ab3-b202-531039614d05
627	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2020-04-17 14:48:38.451463	2020-04-17 14:48:38.451463	3518d601-5206-4457-a223-966023f93dc5
628	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2020-04-17 14:48:38.457863	2020-04-17 14:48:38.457863	276a37c7-596b-418f-8b4e-412cffb46a9d
629	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	2020-04-17 14:48:38.464295	2020-04-17 14:48:38.464295	6562fe79-9296-4932-8747-d9493be4b99f
630	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:38.470704	2020-04-17 14:48:38.470704	7ab1a2c5-d501-47a8-a570-2c67e3dcdcba
631	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	2020-04-17 14:48:38.477145	2020-04-17 14:48:38.477145	17e46246-297d-44f2-b381-916f16f83afa
632	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	2020-04-17 14:48:38.483565	2020-04-17 14:48:38.483565	8997e14f-534c-4365-9372-1f5e1968ae57
633	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	2020-04-17 14:48:38.493052	2020-04-17 14:48:38.493052	590a8551-3c16-462a-8298-b2cd9789abcb
634	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	2020-04-17 14:48:38.499494	2020-04-17 14:48:38.499494	a1f6069e-9f8c-4f0d-afb3-86ce8768c07b
635	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	2020-04-17 14:48:38.506973	2020-04-17 14:48:38.506973	e9b26a5b-a5ca-4a03-a14b-bf3e61dd1ed4
636	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	2020-04-17 14:48:38.512311	2020-04-17 14:48:38.512311	8a82481d-10fa-46f2-ad72-40d50adc64be
637	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	2020-04-17 14:48:38.518735	2020-04-17 14:48:38.518735	670ecb5c-227b-4933-824b-bf93c358360d
638	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2020-04-17 14:48:38.525098	2020-04-17 14:48:38.525098	76eb3021-3afd-46b7-bd7b-2ec0b10ba231
639	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	2020-04-17 14:48:38.530447	2020-04-17 14:48:38.530447	f845e612-3f5a-40db-b5fc-a841f24c280e
640	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	2020-04-17 14:48:38.536877	2020-04-17 14:48:38.536877	b531ef8d-2132-4a87-a347-3526003d803d
641	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2020-04-17 14:48:38.543233	2020-04-17 14:48:38.543233	afaf0be2-b8e3-4388-af39-13ea9e799f33
642	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	2020-04-17 14:48:38.549637	2020-04-17 14:48:38.549637	6d1224f6-bfec-4911-8f2a-6b94252af210
643	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:38.557124	2020-04-17 14:48:38.557124	101a5563-605f-4f73-a845-f6e59944c461
644	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	2020-04-17 14:48:38.563518	2020-04-17 14:48:38.563518	2cb88876-5098-4026-9a98-ff0f474d40ef
645	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	2020-04-17 14:48:38.56993	2020-04-17 14:48:38.56993	c3fe64da-9506-434f-aca0-35af275798af
646	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	2020-04-17 14:48:38.578462	2020-04-17 14:48:38.578462	036a25b1-8c11-4cbb-8b3f-1eb2f6bbccfb
647	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	2020-04-17 14:48:38.58488	2020-04-17 14:48:38.58488	179b5a46-181c-4ffe-8a68-9534ab7aec04
648	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	2020-04-17 14:48:38.594488	2020-04-17 14:48:38.594488	0db29eac-2480-4ae4-b592-0a7101adac77
649	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	2020-04-17 14:48:38.625123	2020-04-17 14:48:38.624017	fba5a148-c7e9-478a-963f-7de8b63ed901
961	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	2020-04-17 14:48:42.165258	2020-04-17 14:48:42.165258	eaa950c5-baef-4bb3-92c2-b48f77eb3241
650	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	2020-04-17 14:48:38.630431	2020-04-17 14:48:38.630431	b8c6aa5f-53ae-41d9-9b8a-9d0aa5c3014f
651	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	2020-04-17 14:48:38.640161	2020-04-17 14:48:38.640129	cda492da-bc2d-43cc-9427-150990bfa92b
652	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	2020-04-17 14:48:38.646565	2020-04-17 14:48:38.646565	07135a5f-c322-4f87-b41f-2e31cc788fd1
653	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	2020-04-17 14:48:38.654908	2020-04-17 14:48:38.653899	fbd89fc4-57f5-43b6-a4aa-3a6539dafe95
654	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	2020-04-17 14:48:38.660312	2020-04-17 14:48:38.660312	5305feea-149d-4d1e-b60f-f3c7876025db
655	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	2020-04-17 14:48:38.692109	2020-04-17 14:48:38.691043	5172af77-0571-4dba-8e4d-05cb19ea1142
656	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	2020-04-17 14:48:38.706856	2020-04-17 14:48:38.706856	3c0fee87-3431-4b11-921e-b4559f6b0600
657	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2020-04-17 14:48:38.715246	2020-04-17 14:48:38.715246	04772dfd-da80-4928-b610-bff901945ce4
658	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2020-04-17 14:48:38.721521	2020-04-17 14:48:38.721521	31347672-2b45-4838-a483-947d6a41905e
659	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2020-04-17 14:48:38.727808	2020-04-17 14:48:38.727808	eae5b825-5516-4a48-bd4b-729167477b47
660	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	2020-04-17 14:48:38.734066	2020-04-17 14:48:38.734066	9f734f6e-3d24-4f32-bee2-50d6c57dc94b
661	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	2020-04-17 14:48:38.741414	2020-04-17 14:48:38.741414	c6ce6018-c4c2-4523-93b5-c3e0819881ec
662	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2020-04-17 14:48:38.747842	2020-04-17 14:48:38.747842	f39dc166-fc4d-4f0c-a200-655479787a19
663	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	2020-04-17 14:48:38.754122	2020-04-17 14:48:38.754122	e92918b4-1df6-4c9c-bf1f-87fa84d832eb
664	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	2020-04-17 14:48:38.760529	2020-04-17 14:48:38.760529	2335d1cf-799f-411c-937f-b3290742708f
665	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	2020-04-17 14:48:38.766787	2020-04-17 14:48:38.766787	e2341ccd-91c3-4727-a136-9e043df88cee
666	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	2020-04-17 14:48:38.77426	2020-04-17 14:48:38.77426	1bd0d26d-b335-413c-8187-e5e311203072
667	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	2020-04-17 14:48:38.780521	2020-04-17 14:48:38.780521	612b717d-0888-4cb4-8680-be4773bb5660
668	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	2020-04-17 14:48:38.786892	2020-04-17 14:48:38.786892	0f725d03-7221-45d9-ae89-41db56ff234a
669	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	2020-04-17 14:48:38.796479	2020-04-17 14:48:38.796479	230fa275-b59a-45e5-9fd2-31da766b8b7e
670	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	2020-04-17 14:48:38.829128	2020-04-17 14:48:38.828069	dd8827ed-fbe1-4b64-962d-ff77a28f61f9
671	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	2020-04-17 14:48:38.836584	2020-04-17 14:48:38.836584	feb5aaa4-2523-44d5-ab0e-800325cce4e7
672	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	2020-04-17 14:48:38.841879	2020-04-17 14:48:38.841879	f4de91a5-4c96-4733-9498-cf68eee939a1
673	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:38.848254	2020-04-17 14:48:38.848254	90c8e626-d8a2-40b8-98a0-96ef0d398bbd
674	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	2020-04-17 14:48:38.854638	2020-04-17 14:48:38.854638	8fb0cfff-7eec-4a9a-ae79-d7448631cc73
675	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	2020-04-17 14:48:38.886105	2020-04-17 14:48:38.886105	ea78eb46-0767-4d61-b4c5-d14a4fc63794
676	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	2020-04-17 14:48:38.894597	2020-04-17 14:48:38.894597	256ed978-2fab-4111-9bec-defee508f708
677	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	2020-04-17 14:48:38.906269	2020-04-17 14:48:38.906222	83edb22e-7abe-444b-803c-b4580db1263e
678	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2020-04-17 14:48:38.912558	2020-04-17 14:48:38.912558	a31bdef2-6223-46bc-b3fc-e0c9310b9e0c
679	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2020-04-17 14:48:38.91892	2020-04-17 14:48:38.91892	aafb03c6-49b0-4f94-a3fb-ae1aa3fb30d4
680	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2020-04-17 14:48:38.92517	2020-04-17 14:48:38.92517	54f53788-c47b-4bba-a0e3-2292b66c4011
681	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	2020-04-17 14:48:38.932507	2020-04-17 14:48:38.932507	643b3d38-2509-4a1e-95e1-ffe70b674a5a
682	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	2020-04-17 14:48:38.938905	2020-04-17 14:48:38.938905	69fd4549-5c98-4085-b5a0-d0b50f62a0ea
683	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	2020-04-17 14:48:38.94529	2020-04-17 14:48:38.94529	04a5df8a-afc0-426d-a51a-955e994df163
684	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	2020-04-17 14:48:38.951708	2020-04-17 14:48:38.951708	1ab6ffac-c606-4d8c-9a52-56f5c813f715
685	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:38.958166	2020-04-17 14:48:38.958166	c7c19ad3-748d-45fb-b192-e308c2b29693
686	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	2020-04-17 14:48:38.964373	2020-04-17 14:48:38.964373	cbf49300-c380-4919-8dd9-d0100d613457
687	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	2020-04-17 14:48:38.970651	2020-04-17 14:48:38.970651	68c884d5-2062-412f-8907-521483a9bf10
688	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	2020-04-17 14:48:38.978132	2020-04-17 14:48:38.978132	d402a9e3-fcad-4767-9f5d-1236d82e21ef
689	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	2020-04-17 14:48:38.983455	2020-04-17 14:48:38.983455	4f263bc1-6c27-45d0-870e-6d4e62f82368
690	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	2020-04-17 14:48:38.98879	2020-04-17 14:48:38.98879	716ae71a-90f3-4901-8963-a7002bff23dd
691	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	2020-04-17 14:48:38.996211	2020-04-17 14:48:38.996211	bc2cb893-b24f-4dd3-8932-e74532d0b370
692	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2020-04-17 14:48:39.026617	2020-04-17 14:48:39.025555	f1630356-a3e1-4279-87e5-6ff7c9c06a14
693	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2020-04-17 14:48:39.034033	2020-04-17 14:48:39.034033	2be28d1c-696e-4199-b10c-cc8878701e61
694	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2020-04-17 14:48:39.039243	2020-04-17 14:48:39.039243	d0136318-7493-47e4-a226-a546a9f33af3
958	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2020-04-17 14:48:42.117969	2020-04-17 14:48:42.116923	d4a1328f-f1cf-4e7a-a4c3-def63f19ea4b
695	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2020-04-17 14:48:39.046573	2020-04-17 14:48:39.045538	0c040e0b-247d-48a1-89fc-ecd0ad974963
696	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2020-04-17 14:48:39.051772	2020-04-17 14:48:39.051772	41baee03-90ad-4653-a01a-bb2a9b7776e2
697	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	2020-04-17 14:48:39.058129	2020-04-17 14:48:39.058129	0bd16094-009e-468d-b74e-cc2155be21af
698	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2020-04-17 14:48:39.064539	2020-04-17 14:48:39.064539	0d53c15a-de22-4c10-9d87-527ec936dfd4
699	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2020-04-17 14:48:39.070894	2020-04-17 14:48:39.070894	40d8d82f-fdc8-4831-8996-cbe701d344a5
700	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2020-04-17 14:48:39.077298	2020-04-17 14:48:39.077298	c9d4d851-8be5-4f1e-ac56-91620bf4dbea
701	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2020-04-17 14:48:39.084607	2020-04-17 14:48:39.084607	5dd90a79-d802-4261-b52c-86d5a25e253d
702	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2020-04-17 14:48:39.097376	2020-04-17 14:48:39.097376	d0e05ddd-8028-417e-ba03-1addf845713f
703	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2020-04-17 14:48:39.103761	2020-04-17 14:48:39.103761	e8ed30b2-eb04-4a6c-9f4f-d1113297a55b
704	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2020-04-17 14:48:39.110145	2020-04-17 14:48:39.110145	45d86e5b-dafd-47bc-88a4-ffe95c05f06e
705	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2020-04-17 14:48:39.117508	2020-04-17 14:48:39.117508	67741670-8566-4495-af71-7d1439f9285f
706	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:39.123959	2020-04-17 14:48:39.123959	c97091fb-61dc-4cae-9aa5-7f6825cf9bd1
707	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2020-04-17 14:48:39.132353	2020-04-17 14:48:39.132353	1c6317e8-e914-4856-81d9-09bba46651a9
708	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2020-04-17 14:48:39.138624	2020-04-17 14:48:39.138624	4e8eb1f2-2f89-4ee9-97f1-9fc9ba468478
709	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	2020-04-17 14:48:39.172242	2020-04-17 14:48:39.172242	4f3fa261-55b1-404e-9c94-5222c8cb530d
710	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	2020-04-17 14:48:39.179661	2020-04-17 14:48:39.179661	4fb13e12-7a82-4bc8-8d55-6842bcfb8209
711	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	2020-04-17 14:48:39.187043	2020-04-17 14:48:39.187043	3196997f-a9a2-4a9f-9928-27d1759455d4
712	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	2020-04-17 14:48:39.196452	2020-04-17 14:48:39.196452	b59e2991-1f52-4d5d-bd0d-c6ec92565d2c
713	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	2020-04-17 14:48:39.203867	2020-04-17 14:48:39.203867	7e53b599-8dac-47c8-bac9-96589e1363ab
714	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	2020-04-17 14:48:39.211245	2020-04-17 14:48:39.211245	50594c9e-d0ac-4515-aff3-2477c62d6fdd
715	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	2020-04-17 14:48:39.218664	2020-04-17 14:48:39.218664	535a3bb7-efc9-4874-8e62-0e8f8e4ec8ce
716	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	2020-04-17 14:48:39.464223	2020-04-17 14:48:39.464223	bf8dcb54-581d-4da4-b6e4-2431144c8191
717	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	2020-04-17 14:48:39.470561	2020-04-17 14:48:39.470561	6cc25c28-4328-4797-890d-7ba4bb0fabf8
718	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	2020-04-17 14:48:39.510801	2020-04-17 14:48:39.509802	b0aeccec-c195-4525-8717-703fe0c81215
719	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	2020-04-17 14:48:39.517279	2020-04-17 14:48:39.517279	f9229d96-ee19-4359-907f-cfa6359c6ac7
720	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	2020-04-17 14:48:39.524793	2020-04-17 14:48:39.524793	bcababa0-c202-4489-88b3-a1ecc5554844
721	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	2020-04-17 14:48:39.532179	2020-04-17 14:48:39.532179	ec469221-6fd5-41ce-8650-e3c745bc4b92
722	uri://ed-fi.org/DiagnosisDescriptor	Low Attendance	Low Attendance	Low Attendance	\N	\N	\N	2020-04-17 14:48:39.567818	2020-04-17 14:48:39.566759	d2349865-94a3-4921-83db-5d7cf614f6b6
723	uri://ed-fi.org/DiagnosisDescriptor	Dropout Risk	Dropout Risk	Dropout Risk	\N	\N	\N	2020-04-17 14:48:39.575312	2020-04-17 14:48:39.575312	9b521214-1d26-4d7d-87a3-0f47c099d0c1
724	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	2020-04-17 14:48:39.606915	2020-04-17 14:48:39.606915	8155289b-62fe-4097-b00b-92128652f98a
725	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2020-04-17 14:48:39.615328	2020-04-17 14:48:39.615328	4dc7c474-96ca-4cc8-9363-7ebca89da045
726	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	2020-04-17 14:48:39.621714	2020-04-17 14:48:39.621714	7cb50060-c6fe-47aa-869c-b7100b61bc2f
727	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2020-04-17 14:48:39.628127	2020-04-17 14:48:39.628127	f841aa1d-5d60-48c0-9a15-cd36eecd4b73
728	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2020-04-17 14:48:39.636915	2020-04-17 14:48:39.636915	51603016-3f2a-458f-a34e-2a06be10edec
729	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2020-04-17 14:48:39.642245	2020-04-17 14:48:39.642245	9e677362-5a96-48c7-9253-333c1c76f603
730	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	2020-04-17 14:48:39.648631	2020-04-17 14:48:39.648631	7eced015-746b-4204-a49d-63fa93f9fb88
731	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	2020-04-17 14:48:39.682821	2020-04-17 14:48:39.682821	1ae8a262-a665-45a8-b8c8-1a2bf103defa
732	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	2020-04-17 14:48:39.690299	2020-04-17 14:48:39.690299	dccbbf82-9f10-425b-87b1-e246a2abe619
733	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	2020-04-17 14:48:39.696733	2020-04-17 14:48:39.696733	91d4c012-82a8-4435-bd1f-71f292afd969
734	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	2020-04-17 14:48:39.703034	2020-04-17 14:48:39.703034	f1ac2d9e-3e43-48f8-a022-65757f814374
735	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	2020-04-17 14:48:39.709404	2020-04-17 14:48:39.709404	b65095be-9679-47d6-a67d-2604ce3b4875
736	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	2020-04-17 14:48:39.7158	2020-04-17 14:48:39.7158	76863d44-3949-4fad-85f1-d60fb0c7c131
737	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	2020-04-17 14:48:39.722255	2020-04-17 14:48:39.722255	759046ed-0e2a-47a8-ba96-c2eedbf76a0c
959	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	2020-04-17 14:48:42.125431	2020-04-17 14:48:42.125431	4e891a76-f9f6-4be3-882c-4a03ea1fdd11
738	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	2020-04-17 14:48:39.728707	2020-04-17 14:48:39.728707	176b20f0-193e-4168-9530-a5495f4355d2
739	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	2020-04-17 14:48:39.736211	2020-04-17 14:48:39.736211	09f008a5-c523-49ff-9322-47eb578a9b1d
740	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2020-04-17 14:48:39.741549	2020-04-17 14:48:39.741549	91c57fa0-b50b-4754-bdbe-dad91f3542c5
741	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	2020-04-17 14:48:39.747926	2020-04-17 14:48:39.747926	0ce10102-23eb-4902-83eb-e44ed128a86b
742	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	2020-04-17 14:48:39.755262	2020-04-17 14:48:39.755262	04a6ba6e-7d89-433e-b3c3-4a8d537c3590
743	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:39.761536	2020-04-17 14:48:39.761536	ea8995fd-acfc-4e8b-aaa0-bebf326a8b53
744	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	2020-04-17 14:48:39.771085	2020-04-17 14:48:39.771085	4db59316-03f7-4222-b79b-808577a29bea
745	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	2020-04-17 14:48:39.777481	2020-04-17 14:48:39.777481	e62e08a6-7d67-490c-a699-7c83d55120ac
746	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	2020-04-17 14:48:39.783844	2020-04-17 14:48:39.783844	9209aeec-0cc4-4c49-9c39-0e2dc3a5d437
747	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	2020-04-17 14:48:39.792391	2020-04-17 14:48:39.792391	45afeccd-5043-449c-9af1-e9c73d9b714c
748	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	2020-04-17 14:48:39.823028	2020-04-17 14:48:39.823028	02ff6f08-9599-498d-8894-a48a4ee0b240
749	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	2020-04-17 14:48:39.831557	2020-04-17 14:48:39.831557	4cea5b2a-35f0-436f-883a-21c7bc16a7cd
750	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	2020-04-17 14:48:39.839039	2020-04-17 14:48:39.838981	e3b23da1-146c-4abe-8ccf-26aa5bd35a04
751	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	2020-04-17 14:48:39.845445	2020-04-17 14:48:39.845445	ad9c9116-2f1d-426b-a544-bb664c9c7afb
752	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	2020-04-17 14:48:39.852921	2020-04-17 14:48:39.852921	efbc275d-5d6c-49ce-a013-975c83ba8616
753	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	2020-04-17 14:48:39.859289	2020-04-17 14:48:39.859289	642f82d6-53ce-4776-9284-071fa08ddee8
754	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	2020-04-17 14:48:39.865679	2020-04-17 14:48:39.865679	163398a6-6f6d-46f4-9d45-ff09be9e33f4
755	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	2020-04-17 14:48:39.872052	2020-04-17 14:48:39.872052	59851fc5-a792-4225-835a-6f409d14fa0e
756	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	2020-04-17 14:48:39.884757	2020-04-17 14:48:39.884757	1c516cfa-4ef7-41d4-9106-d4b2ce537ef9
757	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	2020-04-17 14:48:39.891146	2020-04-17 14:48:39.891146	f37a2f09-4f92-420a-b578-26f1e09bb5bd
758	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:39.89859	2020-04-17 14:48:39.89859	a8870aeb-6548-4f19-9505-19281a6ebe04
759	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	2020-04-17 14:48:39.905942	2020-04-17 14:48:39.905942	9be8f30a-2748-423f-aa84-641bfaf984ae
760	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	2020-04-17 14:48:39.912373	2020-04-17 14:48:39.912373	2c7313e2-260d-4a42-be63-7f9daea42c3f
761	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	2020-04-17 14:48:39.918798	2020-04-17 14:48:39.918798	f3d88bd5-921f-4542-b61f-31a483c794fa
762	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	2020-04-17 14:48:39.926228	2020-04-17 14:48:39.926228	bd0e6e7b-2ee4-46f0-8d91-9ba0582a1a93
763	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	2020-04-17 14:48:39.932521	2020-04-17 14:48:39.932521	b6ce6f6f-241a-4c9b-a2e2-8981e817972a
764	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	2020-04-17 14:48:39.938949	2020-04-17 14:48:39.938949	e2a5637d-2aed-4fcc-a851-82be7931b41d
765	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	2020-04-17 14:48:39.945283	2020-04-17 14:48:39.945283	c2044be4-1011-4513-ba20-60900a8e006b
766	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	2020-04-17 14:48:39.951739	2020-04-17 14:48:39.951739	6534fd79-9bc3-4f64-b65d-1c8fe19ec75a
767	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	2020-04-17 14:48:39.957081	2020-04-17 14:48:39.957081	7512bccc-413f-43c1-ab8e-97e7d52fb9a2
768	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	2020-04-17 14:48:39.992822	2020-04-17 14:48:39.992822	910a61d9-4940-4a6b-ba7f-5d16aa46500d
769	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.235283	2020-04-17 14:48:40.235283	2435dc8e-4807-42e0-bf74-14cbb84e8af8
770	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	2020-04-17 14:48:40.242699	2020-04-17 14:48:40.242699	7e234ebf-2ca2-46ed-8fd1-0bca9e614ae4
771	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	2020-04-17 14:48:40.273403	2020-04-17 14:48:40.272329	44d29685-a146-4882-b36d-963f2c7f0c3f
772	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	2020-04-17 14:48:40.280855	2020-04-17 14:48:40.280855	b91ac5b3-902e-45d9-af7f-ee54d2ddc892
773	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	2020-04-17 14:48:40.288171	2020-04-17 14:48:40.288171	50ecd995-f7f0-495d-be59-a85a40c97f93
774	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	2020-04-17 14:48:40.293479	2020-04-17 14:48:40.293479	a81fead8-2c8e-4363-9bba-0d2c51ac4581
775	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	2020-04-17 14:48:40.301976	2020-04-17 14:48:40.301976	80461f63-ce3c-4b4b-8e48-4aabec7b8ea8
776	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	2020-04-17 14:48:40.309406	2020-04-17 14:48:40.309406	bdf047ad-2aee-4ab4-a629-50070dc2e1ab
777	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.320055	2020-04-17 14:48:40.320055	fd1c1592-81ae-4e15-a5d2-6552796e46fe
778	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	2020-04-17 14:48:40.326509	2020-04-17 14:48:40.326509	b80f0971-c3b8-44bf-b1dd-313e5586acd3
779	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	2020-04-17 14:48:40.335063	2020-04-17 14:48:40.335063	240dcd91-9bfa-45bc-afad-ad1ee5f99d91
960	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	2020-04-17 14:48:42.157837	2020-04-17 14:48:42.156839	0df79fb9-43f7-4016-8c27-9c120ac4f2c2
780	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	2020-04-17 14:48:40.366912	2020-04-17 14:48:40.36585	2ac75751-188e-4184-9e9d-301e2b1edf6a
781	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	2020-04-17 14:48:40.374223	2020-04-17 14:48:40.374223	5162debf-adbe-47d8-894e-429fa4f6f30f
782	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.381605	2020-04-17 14:48:40.380589	bee82f48-543a-486b-bf6f-e736ebbd279f
783	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	2020-04-17 14:48:40.387013	2020-04-17 14:48:40.387013	9dcb8055-6830-4562-b0a0-87c83ec2219e
784	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	2020-04-17 14:48:40.393395	2020-04-17 14:48:40.393395	b3a3c40e-b5b9-4fdd-9a8d-cc48ac73a3c5
785	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	2020-04-17 14:48:40.399833	2020-04-17 14:48:40.399833	577b58d5-9adb-49bc-a6d5-43db065b227e
786	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	2020-04-17 14:48:40.406223	2020-04-17 14:48:40.406223	63b007a7-c00a-44c3-848b-b1a80e2afc57
787	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	2020-04-17 14:48:40.415801	2020-04-17 14:48:40.415801	9a0fd0a3-202d-4d62-a5d2-9b7e64df82b5
788	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	2020-04-17 14:48:40.423129	2020-04-17 14:48:40.423129	04374204-1815-4b9a-ac28-a9e3d7d65b81
789	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	2020-04-17 14:48:40.429543	2020-04-17 14:48:40.429543	e2f6b15c-a759-4c0f-8e99-2c6d3868214c
790	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	2020-04-17 14:48:40.435973	2020-04-17 14:48:40.435973	9b876c1e-9a9c-45a1-9966-bb9d339b536a
791	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	2020-04-17 14:48:40.442229	2020-04-17 14:48:40.442229	dcac5c06-c4b1-44b7-809e-dd3ec6f39505
792	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	2020-04-17 14:48:40.47841	2020-04-17 14:48:40.47836	584cd7e9-9ddc-48b0-9540-c3cd5839d559
793	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	2020-04-17 14:48:40.487924	2020-04-17 14:48:40.487924	a38633d9-8f6d-4723-a307-689cbcb6be15
794	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	2020-04-17 14:48:40.496461	2020-04-17 14:48:40.496461	96965e2d-7d46-454e-9927-271749da7950
795	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	2020-04-17 14:48:40.502871	2020-04-17 14:48:40.502871	e5cab483-9caf-4205-ac2b-7f40b7049e5e
796	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	2020-04-17 14:48:40.574281	2020-04-17 14:48:40.574281	740391e6-443c-4a78-92e6-0578fb7be54d
797	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	2020-04-17 14:48:40.580639	2020-04-17 14:48:40.580639	105d498e-fdff-4702-9a6b-5e4bd09bcfba
798	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.587028	2020-04-17 14:48:40.587028	906f5f96-0c15-47b8-89fe-48bf35f301ed
799	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	2020-04-17 14:48:40.596576	2020-04-17 14:48:40.596576	51754c4e-c223-49c9-be38-20c20a0823b9
800	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	2020-04-17 14:48:40.602947	2020-04-17 14:48:40.602947	be9a0109-fea9-49fe-96ae-24db681b6df6
801	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	2020-04-17 14:48:40.609321	2020-04-17 14:48:40.609321	f5858ca0-9ea7-4d81-b3c6-7e633bd8043d
802	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2020-04-17 14:48:40.640618	2020-04-17 14:48:40.640569	e965a856-5834-4269-bac4-efae4a8ed466
803	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2020-04-17 14:48:40.647967	2020-04-17 14:48:40.647967	007dae05-2966-483b-9ebe-a8436296e3f3
804	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2020-04-17 14:48:40.654334	2020-04-17 14:48:40.654334	c8cc167e-2e2f-414f-9cfb-ead15c170ffa
805	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2020-04-17 14:48:40.660724	2020-04-17 14:48:40.660724	0ad56e9c-b799-45d0-a3ed-66147eca3fe6
806	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2020-04-17 14:48:40.691146	2020-04-17 14:48:40.690085	5416b3cd-9740-4ca5-a436-cdcd7732690d
807	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2020-04-17 14:48:40.698664	2020-04-17 14:48:40.698664	9d182c38-af52-4b84-9c9a-d2811c566974
808	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	2020-04-17 14:48:40.710156	2020-04-17 14:48:40.710141	01a14c5c-ebc9-4c67-a11a-f3b7c237449b
809	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	2020-04-17 14:48:40.715483	2020-04-17 14:48:40.715483	393267e0-5ce6-49df-9350-646cc559d487
810	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	2020-04-17 14:48:40.721879	2020-04-17 14:48:40.721879	c970796c-c0d2-4021-a114-6aaf85b993ed
811	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	2020-04-17 14:48:40.728149	2020-04-17 14:48:40.728149	c529236b-0c07-46c1-aa5e-cccc92e0e0f7
812	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	2020-04-17 14:48:40.734538	2020-04-17 14:48:40.734538	0b125111-35ac-43a1-8968-53f07278032b
813	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	2020-04-17 14:48:40.742002	2020-04-17 14:48:40.742002	88d59196-7c8d-4358-9bca-dafb164c4c4c
814	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	2020-04-17 14:48:40.748382	2020-04-17 14:48:40.748382	46534703-711b-48aa-a2e7-0655fa815c08
815	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	2020-04-17 14:48:40.755786	2020-04-17 14:48:40.755786	24f747e7-f135-4118-886a-c0c92e5d3cea
816	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	2020-04-17 14:48:40.762175	2020-04-17 14:48:40.762175	4b1be5ca-7886-4f99-9452-7cfbb3f87977
817	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	2020-04-17 14:48:40.769503	2020-04-17 14:48:40.768498	032c5975-67dc-457a-a12b-9049f871e9fa
818	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	2020-04-17 14:48:40.775882	2020-04-17 14:48:40.775882	775479b3-0f98-4ac2-9db1-100bb546b31e
819	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	2020-04-17 14:48:40.810352	2020-04-17 14:48:40.809297	c9a9cf06-343b-4a68-888f-1e366668707f
820	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2020-04-17 14:48:40.820789	2020-04-17 14:48:40.820789	5dd8ad59-8257-4e86-b195-f963a9e47238
821	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2020-04-17 14:48:40.827193	2020-04-17 14:48:40.827193	82a42aac-4d3f-4bbb-bc96-8f8c7a2a821a
822	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.833438	2020-04-17 14:48:40.833438	63e31a7c-8f60-41e9-b60e-b2fc87c8e049
823	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:40.839633	2020-04-17 14:48:40.839633	918fe27d-879d-47ff-9662-a7d1bcde18fa
824	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2020-04-17 14:48:40.847856	2020-04-17 14:48:40.847856	76520f94-5a56-4dec-a647-36fda4f2a019
825	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	2020-04-17 14:48:40.854089	2020-04-17 14:48:40.854089	f6ed5b4f-f8a6-4b68-82a4-6ae1780b3be9
826	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	2020-04-17 14:48:40.888305	2020-04-17 14:48:40.887261	d8accee6-0d4b-4c50-86d5-61c901944838
827	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	2020-04-17 14:48:40.89578	2020-04-17 14:48:40.89578	b6cd101c-2b8c-4c00-9303-a541d60042c4
828	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2020-04-17 14:48:40.903142	2020-04-17 14:48:40.903142	816c1990-9568-4f8a-861e-13092bae99ff
829	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	2020-04-17 14:48:40.909361	2020-04-17 14:48:40.909361	7ff2202a-7711-4289-8820-56a63a519bec
830	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	2020-04-17 14:48:40.915662	2020-04-17 14:48:40.915662	6b912f7e-bfe8-4665-8016-c8503c8e3bfe
831	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	2020-04-17 14:48:40.929287	2020-04-17 14:48:40.929287	5d1f704c-311a-47ab-904f-913155d6396c
832	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:40.936631	2020-04-17 14:48:40.936631	9fe38d9a-67e2-4e64-b7dd-55deee8f3483
833	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2020-04-17 14:48:40.942992	2020-04-17 14:48:40.942992	7ffe3cad-9e60-4cb4-b28d-c1c95d4c1490
834	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:40.949272	2020-04-17 14:48:40.949272	4fb2039d-fe64-4c2c-806c-cab7f6f557e2
835	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	2020-04-17 14:48:40.955459	2020-04-17 14:48:40.955459	6ffffd5a-f446-45ee-aa3a-f0f2c05d1f0c
836	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	2020-04-17 14:48:40.961839	2020-04-17 14:48:40.961839	e05e232b-d532-4359-9bd7-efff0ece80c0
837	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	2020-04-17 14:48:41.012581	2020-04-17 14:48:41.01151	721ecf2e-6e39-4ced-adfe-cb2339544bb5
838	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	2020-04-17 14:48:41.021052	2020-04-17 14:48:41.021052	c0b0127b-3ddf-408b-b9ea-b4a1b46d4a00
839	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	2020-04-17 14:48:41.027429	2020-04-17 14:48:41.027429	285fc177-234b-46c6-a815-4ce3f91db14f
840	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	2020-04-17 14:48:41.035888	2020-04-17 14:48:41.035868	da1cd1bc-5a15-4248-af08-424b1b89ce4a
841	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	2020-04-17 14:48:41.043366	2020-04-17 14:48:41.043366	e737f63d-939f-429c-b994-579465053099
842	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	2020-04-17 14:48:41.054921	2020-04-17 14:48:41.054921	806a218e-b380-422d-99c9-328d97a57a15
843	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	2020-04-17 14:48:41.063407	2020-04-17 14:48:41.063407	69bc23ed-6dc7-43d4-8a97-b4ad0e0d0451
844	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	2020-04-17 14:48:41.069695	2020-04-17 14:48:41.069695	596d6c86-b0bf-406d-8366-5e115402db6e
845	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.077278	2020-04-17 14:48:41.077278	c0e229a0-f2f0-43a4-889e-f489bab9357b
846	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	2020-04-17 14:48:41.083618	2020-04-17 14:48:41.082602	8ff346e3-7df2-4135-adcf-72b5acfaa018
847	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	2020-04-17 14:48:41.090055	2020-04-17 14:48:41.090055	4b827aa1-c529-493e-a041-3f8e72e3825f
848	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	2020-04-17 14:48:41.096481	2020-04-17 14:48:41.096481	b19b9d10-60ee-44ef-a33f-e4bef36b7238
849	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	2020-04-17 14:48:41.130279	2020-04-17 14:48:41.129274	f7d2efb3-44ec-4966-8399-04d5abee85d6
850	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	2020-04-17 14:48:41.137786	2020-04-17 14:48:41.137786	c6e11f85-74f0-48fd-8fa0-85bf43f5be6d
851	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.143131	2020-04-17 14:48:41.143131	68f2e6f8-8592-4ab2-a3b5-dae45132bbd8
852	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	2020-04-17 14:48:41.151604	2020-04-17 14:48:41.151604	cd87f7bb-302a-4d99-8ec9-31f0a4d0ce56
853	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	2020-04-17 14:48:41.18319	2020-04-17 14:48:41.182182	dc514775-556f-471c-8d45-54d0055f62c6
854	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	2020-04-17 14:48:41.190512	2020-04-17 14:48:41.189503	97466727-faf7-419a-9e4f-89e046487ef2
855	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	2020-04-17 14:48:41.195875	2020-04-17 14:48:41.195875	50cfaaab-5ec8-40b4-b552-fcb4915151b1
856	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	2020-04-17 14:48:41.202142	2020-04-17 14:48:41.202142	096bc607-bba4-4e08-b84b-52f4dea779de
857	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	2020-04-17 14:48:41.207483	2020-04-17 14:48:41.207483	a92777e1-4407-40c6-b77d-f4c7866df1a5
858	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	2020-04-17 14:48:41.213888	2020-04-17 14:48:41.213888	5cef2ca8-e507-4493-bb53-161073901bff
859	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.219268	2020-04-17 14:48:41.219268	65901308-a1db-440d-aea9-a9daca369e32
860	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	2020-04-17 14:48:41.226753	2020-04-17 14:48:41.226691	7bac646c-2dc1-49ed-a413-7bc4711761d5
861	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	2020-04-17 14:48:41.232096	2020-04-17 14:48:41.232096	c775e484-e72d-4ed0-8cd8-fc2664e02208
862	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	2020-04-17 14:48:41.238503	2020-04-17 14:48:41.238503	92a90082-cda8-4c6c-ab9f-4f256e99fd50
863	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	2020-04-17 14:48:41.2746	2020-04-17 14:48:41.27354	92fa7f40-369d-4254-95b6-c30426f2a1d0
864	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	2020-04-17 14:48:41.282035	2020-04-17 14:48:41.282035	449196cc-5e07-4355-a9a1-f3a3e729529d
865	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	2020-04-17 14:48:41.288417	2020-04-17 14:48:41.288417	2dfcd29e-06d3-4f59-b7ca-2872bd2734c3
866	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	2020-04-17 14:48:41.295704	2020-04-17 14:48:41.29467	dfe91207-96fa-4a4d-9b3d-689b02431c5d
867	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	2020-04-17 14:48:41.301026	2020-04-17 14:48:41.301026	daf3f062-e8e4-4dac-9314-cec85e80b3d8
868	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	2020-04-17 14:48:41.307389	2020-04-17 14:48:41.307389	35cf1955-f63a-4599-97b6-fd1eff7cef1b
869	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	2020-04-17 14:48:41.313754	2020-04-17 14:48:41.313754	30486844-7ffe-4ad5-b6d5-4759bdf60e25
870	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	2020-04-17 14:48:41.320137	2020-04-17 14:48:41.320137	a856a2c0-b341-4aa4-a14e-2dc504630182
871	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	2020-04-17 14:48:41.326502	2020-04-17 14:48:41.326502	fb414c7e-6440-4b0b-8d76-d3d8a59819f5
872	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	2020-04-17 14:48:41.331827	2020-04-17 14:48:41.331827	fdc11330-9be8-4739-8960-96db830b7f40
873	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	2020-04-17 14:48:41.337165	2020-04-17 14:48:41.337165	e87e5507-088d-410d-8fb1-46b880674768
874	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	2020-04-17 14:48:41.342494	2020-04-17 14:48:41.342494	c50ab693-6645-493f-80c1-91e6850f4583
875	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	2020-04-17 14:48:41.353121	2020-04-17 14:48:41.353121	94c01f9e-8047-4379-b119-f533519c3e2b
876	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	2020-04-17 14:48:41.38807	2020-04-17 14:48:41.387017	a39b4661-9c8d-444e-8687-6bd3edc28653
877	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	2020-04-17 14:48:41.396439	2020-04-17 14:48:41.396439	777f38b4-0edf-4b44-9469-5c567789f069
878	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	2020-04-17 14:48:41.402792	2020-04-17 14:48:41.402792	09af9292-0964-4e48-88ef-dd85bb65bd39
879	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.411232	2020-04-17 14:48:41.411232	ce9d7024-b5cd-46dd-81e9-cf6c93016450
880	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	2020-04-17 14:48:41.419744	2020-04-17 14:48:41.419744	dab27ef8-7d94-4d47-9971-15a6debdd1f8
881	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	2020-04-17 14:48:41.457884	2020-04-17 14:48:41.457884	c7f6efdd-90b1-4d88-8d1b-0a72ccd67400
882	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	2020-04-17 14:48:41.46635	2020-04-17 14:48:41.46635	d24e318e-20ea-4510-a7e9-397eb1e695d2
883	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	2020-04-17 14:48:41.473791	2020-04-17 14:48:41.473791	52995e3e-b0c7-4d4a-a1cd-bdd9abe0a8ae
884	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	2020-04-17 14:48:41.48549	2020-04-17 14:48:41.48549	594334ef-a72b-4566-b834-3dd277f68af9
885	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	2020-04-17 14:48:41.491897	2020-04-17 14:48:41.491897	59954513-86d4-444a-9adc-9a8dbe61052a
886	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	2020-04-17 14:48:41.499351	2020-04-17 14:48:41.499351	e4268e61-145d-477e-b7ac-eb5c8c6b1754
887	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	2020-04-17 14:48:41.505742	2020-04-17 14:48:41.505742	5fba5a8d-4234-4971-80b6-d66792fc151a
888	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	2020-04-17 14:48:41.514211	2020-04-17 14:48:41.513182	59f9d8a4-14f1-458e-ba16-4f727f216c96
889	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	2020-04-17 14:48:41.520589	2020-04-17 14:48:41.520589	b57d74ad-017b-4075-ab37-02de11b1295a
890	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2020-04-17 14:48:41.528038	2020-04-17 14:48:41.527027	0dab80fb-f172-4301-b0e3-136685274408
891	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	2020-04-17 14:48:41.535491	2020-04-17 14:48:41.535446	868f8495-ea0b-4847-a9d4-cda657deab22
892	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	2020-04-17 14:48:41.540835	2020-04-17 14:48:41.540835	e4d130f6-1838-4941-aa04-3af86b66a7df
893	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	2020-04-17 14:48:41.548306	2020-04-17 14:48:41.548306	956649aa-66f2-4114-9702-919670461d33
894	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	2020-04-17 14:48:41.55469	2020-04-17 14:48:41.55469	e0f8404b-0026-4a52-be60-d6081edf7d2a
895	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	2020-04-17 14:48:41.56095	2020-04-17 14:48:41.56095	54c1ebe7-656a-472d-b3be-a6a9f4a05b6c
896	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.568457	2020-04-17 14:48:41.568457	1be580b9-a1be-4c90-b1d4-1c7ab08ccbb2
897	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	2020-04-17 14:48:41.575949	2020-04-17 14:48:41.575886	8d7a466a-446f-4a90-9376-b29d48c6ef07
898	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	2020-04-17 14:48:41.582331	2020-04-17 14:48:41.582307	fc8776f0-63fb-4211-92f8-42f10a576d48
899	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	2020-04-17 14:48:41.59085	2020-04-17 14:48:41.59085	c8dfed9f-4241-4a81-88c7-31b69cc24feb
900	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	2020-04-17 14:48:41.597252	2020-04-17 14:48:41.597252	b2bba146-40f0-48a0-9ad0-cce8dbdf9e86
901	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	2020-04-17 14:48:41.604748	2020-04-17 14:48:41.604748	0d7899fe-e6ce-43ed-a512-f8329aa58a19
902	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	2020-04-17 14:48:41.614286	2020-04-17 14:48:41.614286	aad18a69-2d12-4e70-b65d-bf1a05edb336
903	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	2020-04-17 14:48:41.621634	2020-04-17 14:48:41.621634	7ab533a5-f39e-4073-b644-f97fdcaa4b98
904	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	2020-04-17 14:48:41.630144	2020-04-17 14:48:41.630144	a40c1e89-8d46-44b3-8ef4-e3ded42c9708
905	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	2020-04-17 14:48:41.636549	2020-04-17 14:48:41.636549	5b1c6dc6-0806-47e9-9655-3592cc815f42
906	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	2020-04-17 14:48:41.642952	2020-04-17 14:48:41.642952	1ffec39d-69fe-4e86-bc28-725176232a84
907	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	2020-04-17 14:48:41.649297	2020-04-17 14:48:41.649297	0dc53034-63af-4cf0-a1ca-aec5f7ea8685
908	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	2020-04-17 14:48:41.656745	2020-04-17 14:48:41.656745	6b533d93-3149-4ace-9ac1-7381da907b11
909	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	2020-04-17 14:48:41.663118	2020-04-17 14:48:41.663118	f42c25fe-44a3-4575-850e-beb1fedf6ab5
910	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	2020-04-17 14:48:41.669491	2020-04-17 14:48:41.669491	f7ff7a0c-0c00-49fa-839c-72c23a50abec
911	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	2020-04-17 14:48:41.675905	2020-04-17 14:48:41.675905	5fdcbc4a-7ade-4ab7-8d17-ba2027f75b2c
912	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	2020-04-17 14:48:41.681233	2020-04-17 14:48:41.681233	d5eaa988-8129-49a6-ac09-2a65664540b3
913	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	2020-04-17 14:48:41.718116	2020-04-17 14:48:41.718116	0e831503-4a5e-40ee-8040-fada1b3a5341
914	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2020-04-17 14:48:41.726489	2020-04-17 14:48:41.726489	1f04da3e-b2e8-415d-a19e-32bcda4920d6
915	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	2020-04-17 14:48:41.732751	2020-04-17 14:48:41.732751	d3584bdf-9838-4172-91c9-869134cabd41
916	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	2020-04-17 14:48:41.739115	2020-04-17 14:48:41.739115	b02a37f1-4175-44c1-955c-d62222965686
917	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	2020-04-17 14:48:41.745487	2020-04-17 14:48:41.745487	c85a9020-de54-45a7-841d-88e4d4395a0b
918	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	2020-04-17 14:48:41.751852	2020-04-17 14:48:41.751852	670caaba-d331-44d0-9c22-3135ebf46e9d
919	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	2020-04-17 14:48:41.758222	2020-04-17 14:48:41.758222	ef037687-ff7f-4356-835d-7111c0730087
920	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	2020-04-17 14:48:41.764603	2020-04-17 14:48:41.764603	38306600-bece-4a70-a9b7-06208ceeab85
921	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	2020-04-17 14:48:41.770984	2020-04-17 14:48:41.770984	ca593b01-1876-4155-9ade-24ae0d97f8ac
922	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	2020-04-17 14:48:41.777299	2020-04-17 14:48:41.777299	25859b36-275b-4a16-83d4-1a41818bff85
923	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	2020-04-17 14:48:41.786663	2020-04-17 14:48:41.786663	745cda61-8285-4712-979e-770a75c9b425
924	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:41.792131	2020-04-17 14:48:41.792131	06ba865b-f0d1-4000-b84b-df3aae553b39
925	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2020-04-17 14:48:41.798503	2020-04-17 14:48:41.798503	70b3e813-8025-46c6-bdc1-5beb9b7710a6
926	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	2020-04-17 14:48:41.805792	2020-04-17 14:48:41.805792	a09c263c-bd2a-4f14-86bb-5c98e61ccced
927	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2020-04-17 14:48:41.811919	2020-04-17 14:48:41.811919	44ad719a-023b-4edd-a2a1-27d6113fc4cb
928	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	2020-04-17 14:48:41.847619	2020-04-17 14:48:41.847565	e4805afd-29ff-44d6-82ef-4ca1b3b60b22
929	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	2020-04-17 14:48:41.855054	2020-04-17 14:48:41.855054	1b9be1c3-6883-40bb-855e-a3d62503900a
930	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	2020-04-17 14:48:41.861423	2020-04-17 14:48:41.861423	158c6690-0c1d-45f2-8b2d-89ea41b3e462
931	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	2020-04-17 14:48:41.867757	2020-04-17 14:48:41.867757	a7759f3f-dda6-4919-8efa-e761f23303cb
932	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	2020-04-17 14:48:41.875235	2020-04-17 14:48:41.875235	ccdb8a74-2614-44aa-95ec-a12243617d5c
933	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	2020-04-17 14:48:41.881493	2020-04-17 14:48:41.881493	486dcd87-6f37-42b2-8c4c-6d87eff62b96
934	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	2020-04-17 14:48:41.891844	2020-04-17 14:48:41.891844	a8b34a00-5e78-40bf-af72-2bf6a68e11bd
935	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	2020-04-17 14:48:41.900281	2020-04-17 14:48:41.899246	07e022a0-b119-4187-8d50-14a86699a1ad
936	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	2020-04-17 14:48:41.933745	2020-04-17 14:48:41.932745	74820875-0612-4830-a7bb-2938b189191d
937	uri://ed-fi.org/GradeLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	2020-04-17 14:48:41.94213	2020-04-17 14:48:41.94213	f17244bf-face-4c0a-9165-32a25b405e79
938	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2020-04-17 14:48:41.949449	2020-04-17 14:48:41.949449	7dd51f1c-618a-464a-9eed-5b1602b3a67b
939	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2020-04-17 14:48:41.956749	2020-04-17 14:48:41.956749	b61f0d58-5da9-4489-b475-d2af277744db
940	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2020-04-17 14:48:41.964069	2020-04-17 14:48:41.964069	1be2420d-da66-4177-8d4a-2b922423c3af
941	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	2020-04-17 14:48:41.970326	2020-04-17 14:48:41.970326	32b85b51-f95d-4600-8453-2e5e9903a674
942	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2020-04-17 14:48:41.977764	2020-04-17 14:48:41.977764	dc6f62e9-a535-4838-8c0d-7d2a6858133a
943	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	2020-04-17 14:48:41.984196	2020-04-17 14:48:41.984196	f9a651fb-8a39-4f41-ae92-7dee4cbd99ca
944	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	2020-04-17 14:48:41.994754	2020-04-17 14:48:41.994754	646a791b-848b-45c5-b61b-1708a8931e43
945	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	2020-04-17 14:48:42.003244	2020-04-17 14:48:42.003244	c0725645-86e0-4f29-b763-c54aa8549bb3
946	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2020-04-17 14:48:42.009609	2020-04-17 14:48:42.009609	4aee883d-87d6-498b-9007-b2dae01ffc18
947	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:42.015965	2020-04-17 14:48:42.015965	f53774bd-3945-45e6-85a7-e1b93269603d
948	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	2020-04-17 14:48:42.022342	2020-04-17 14:48:42.022342	23f799b1-ab59-4e7d-bb35-bf175d5dbfd4
949	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	2020-04-17 14:48:42.028717	2020-04-17 14:48:42.028717	c2948508-0045-410e-958f-4976db19592e
950	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2020-04-17 14:48:42.035027	2020-04-17 14:48:42.035027	e3d19d82-3e0f-4e68-9200-322f201fb5c9
951	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2020-04-17 14:48:42.043438	2020-04-17 14:48:42.043438	4cc9ccfc-d179-449b-9f36-6d2a8870f4d7
952	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2020-04-17 14:48:42.049828	2020-04-17 14:48:42.049828	2047e789-5de8-4e65-9fdf-729f93770b71
953	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2020-04-17 14:48:42.056326	2020-04-17 14:48:42.056326	9439881e-0d03-43cc-bb4f-49771d17a451
954	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2020-04-17 14:48:42.063493	2020-04-17 14:48:42.062496	5d13d1bd-6c8d-4e69-9196-00f019f5d6c5
955	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2020-04-17 14:48:42.068712	2020-04-17 14:48:42.068712	aafe1d54-6b48-4b37-8c90-83bed26cbf15
956	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2020-04-17 14:48:42.074895	2020-04-17 14:48:42.074895	a916887d-1c15-4de8-b14b-2fdcfa66f8bd
957	uri://ed-fi.org/GradeLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	2020-04-17 14:48:42.082179	2020-04-17 14:48:42.082179	47b6128d-81ad-476c-b1ef-2631967f8305
962	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	2020-04-17 14:48:42.173626	2020-04-17 14:48:42.173626	f7126e99-99d3-484b-bbc8-6d98f4980ab2
963	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	2020-04-17 14:48:42.179993	2020-04-17 14:48:42.179993	71fe5a12-2c08-4aa2-bda5-4cffaacd1549
964	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	2020-04-17 14:48:42.186332	2020-04-17 14:48:42.186332	62621098-c692-4909-860d-707090270393
965	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	2020-04-17 14:48:42.192587	2020-04-17 14:48:42.192587	bb03b259-5fa9-4ad6-b97d-9e90de3f6897
966	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	2020-04-17 14:48:42.198931	2020-04-17 14:48:42.198931	88fca56b-e44b-48b9-a100-0c49d018080b
967	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	2020-04-17 14:48:42.235282	2020-04-17 14:48:42.235282	2138709d-a39b-4815-b56c-4e3609608cbc
968	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	2020-04-17 14:48:42.243734	2020-04-17 14:48:42.243734	98a62032-54e3-4030-adae-8df4868163d8
969	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	2020-04-17 14:48:42.250124	2020-04-17 14:48:42.250124	29400ead-b2f9-41f6-bb8c-7d82bd46d747
970	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	2020-04-17 14:48:42.256258	2020-04-17 14:48:42.256258	ec1501d2-49c5-4b1b-93e0-e7757ff2263f
971	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	2020-04-17 14:48:42.262618	2020-04-17 14:48:42.262618	8eea45e1-6072-4226-96c3-86d3c4d9db09
972	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	2020-04-17 14:48:42.268861	2020-04-17 14:48:42.268861	c00ac110-b141-4204-9bf9-709f3200ebf2
973	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2020-04-17 14:48:42.275111	2020-04-17 14:48:42.275111	f38c3c16-16df-4522-a709-7b43225a7751
974	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	2020-04-17 14:48:42.281306	2020-04-17 14:48:42.281306	6eb342fa-d8a6-4ea3-aa0d-41de668af46c
975	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	2020-04-17 14:48:42.287568	2020-04-17 14:48:42.287568	a8a656a8-2b7b-46f1-8a0f-a36105cc949f
976	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	2020-04-17 14:48:42.294925	2020-04-17 14:48:42.294925	8971d973-b4e7-45c9-85c3-def3d6c07102
977	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	2020-04-17 14:48:42.301256	2020-04-17 14:48:42.301256	622daa39-0472-4d72-9eae-e3fcf38445a0
978	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	2020-04-17 14:48:42.306902	2020-04-17 14:48:42.306902	b62c92a0-f621-43d6-bf73-a58033441cfb
979	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	2020-04-17 14:48:42.31546	2020-04-17 14:48:42.31546	9b9a3e6f-a188-4835-bb93-05e1fe1e0577
980	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2020-04-17 14:48:42.325027	2020-04-17 14:48:42.325027	6a0b8606-c133-41eb-a2d3-a8c535f73c85
981	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	2020-04-17 14:48:42.331485	2020-04-17 14:48:42.331485	11230064-9794-4d3e-83ab-94d7a6ccd320
982	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2020-04-17 14:48:42.337922	2020-04-17 14:48:42.337922	5d81376e-2d2b-423d-bf54-9c10f326bd46
983	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	2020-04-17 14:48:42.346432	2020-04-17 14:48:42.346432	5fac3e8f-f213-48c2-90d8-8b63693d5aa9
984	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	2020-04-17 14:48:42.353889	2020-04-17 14:48:42.353889	41d112b6-df79-47b9-8421-08c3f58c6a72
985	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	2020-04-17 14:48:42.359326	2020-04-17 14:48:42.359326	e8613414-cdbd-4877-b230-43c6452e9fab
986	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2020-04-17 14:48:42.366128	2020-04-17 14:48:42.366128	3fb56bff-2099-4e90-81b8-a0aa008d32c2
987	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:42.397377	2020-04-17 14:48:42.396379	13191108-e9c2-45f5-9b76-fc3d88f5b6ce
988	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2020-04-17 14:48:42.404713	2020-04-17 14:48:42.404713	6c0c062a-1ff5-4849-a034-98efda00bd97
989	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2020-04-17 14:48:42.411089	2020-04-17 14:48:42.411089	45f62c4c-f64b-45c4-a839-edc2136c2228
990	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2020-04-17 14:48:42.417498	2020-04-17 14:48:42.417498	f5eda6c1-47a0-43ce-9962-907b568807f9
991	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	2020-04-17 14:48:42.423837	2020-04-17 14:48:42.423837	0a777344-7abf-4119-8ddd-5778f2563bdc
992	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	2020-04-17 14:48:42.461693	2020-04-17 14:48:42.460636	d5b80d48-6164-4b79-b2d1-674a45d8eb1c
993	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	2020-04-17 14:48:42.469171	2020-04-17 14:48:42.469171	e099e3da-ad0b-4281-a5fc-bbc866b262b2
994	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	2020-04-17 14:48:42.475568	2020-04-17 14:48:42.475568	c235a77e-106a-4ce5-a9b0-70a0dc9cbe1c
995	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	2020-04-17 14:48:42.481926	2020-04-17 14:48:42.481926	d78d22fd-e53c-432b-ac0f-909d6c01cc63
996	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	2020-04-17 14:48:42.514556	2020-04-17 14:48:42.513505	32873df3-af33-45df-aae1-6ddfa4f2840a
997	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	2020-04-17 14:48:42.522039	2020-04-17 14:48:42.522039	8abee15e-a367-4e33-be81-8ec09244e03e
998	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	2020-04-17 14:48:42.528351	2020-04-17 14:48:42.528351	6a96ab25-e3c7-4461-b27b-534d6caf9afa
999	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	2020-04-17 14:48:42.534712	2020-04-17 14:48:42.534712	c89aacbc-296a-4b28-af44-3f946e8cb558
1000	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2020-04-17 14:48:42.569554	2020-04-17 14:48:42.568502	15ae7374-2fe3-4c9f-ba65-3a3a271d937c
1001	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	2020-04-17 14:48:42.577046	2020-04-17 14:48:42.577046	36af0817-e24d-4d9e-b258-5ccdc69522b2
1002	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	2020-04-17 14:48:42.584505	2020-04-17 14:48:42.584505	c65d5ba3-4ad4-4926-977a-56b7c32151a5
1003	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	2020-04-17 14:48:42.590938	2020-04-17 14:48:42.590938	5dfac568-4904-4082-b448-2f0fdcdfcf1a
1004	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	2020-04-17 14:48:42.59833	2020-04-17 14:48:42.597296	2ea94f79-c58a-4f94-a0f7-fe6c43cc8135
1005	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	2020-04-17 14:48:42.603682	2020-04-17 14:48:42.603682	cb39031d-c57e-4e80-bba5-c429827a302b
1006	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	2020-04-17 14:48:42.611147	2020-04-17 14:48:42.611147	1ac308e3-ea2a-4802-9268-ed4951955e28
1007	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	2020-04-17 14:48:42.617539	2020-04-17 14:48:42.617539	4c58d7e2-7aef-4e54-a427-a02eaf3961db
1008	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	2020-04-17 14:48:42.65169	2020-04-17 14:48:42.65169	1c69356b-d74c-4959-8e4c-2e1df58ea5d4
1009	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	2020-04-17 14:48:42.658971	2020-04-17 14:48:42.658971	c2cf768a-cf3e-4e1e-b2fb-4569b38e5155
1010	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	2020-04-17 14:48:42.666456	2020-04-17 14:48:42.666456	e92914e3-b4ae-41c2-9527-99de4c595892
1011	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	2020-04-17 14:48:42.698063	2020-04-17 14:48:42.697006	be711080-a177-4f67-8c86-698285b36cee
1012	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	2020-04-17 14:48:42.705655	2020-04-17 14:48:42.705655	c2727396-5654-48ed-a5c3-d3924b141bc4
1013	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	2020-04-17 14:48:42.711959	2020-04-17 14:48:42.711959	316205d1-fceb-4c15-bb6e-195b404b4b8a
1014	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	2020-04-17 14:48:42.719274	2020-04-17 14:48:42.719274	4824b9b9-20ff-447e-909b-83caa2e1c386
1015	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	2020-04-17 14:48:42.727793	2020-04-17 14:48:42.727793	9ae6ef80-f25c-43d9-b707-815e32ac5cc0
1016	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2020-04-17 14:48:42.734175	2020-04-17 14:48:42.734175	e4e9b444-e514-41f1-9192-64c16d4482c2
1017	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	2020-04-17 14:48:42.740451	2020-04-17 14:48:42.740451	dfc908ee-702c-45e8-9516-78611fd878f4
1018	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	2020-04-17 14:48:42.750069	2020-04-17 14:48:42.750069	e57997bf-94ae-42a4-bd57-80a1affd25bf
1019	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	2020-04-17 14:48:42.757539	2020-04-17 14:48:42.757478	930b88c5-24b0-4fae-818b-4422e4c24645
1020	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	2020-04-17 14:48:42.763955	2020-04-17 14:48:42.763955	7fbace12-f3a9-4881-9714-95d32ad873c5
1021	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	2020-04-17 14:48:42.770343	2020-04-17 14:48:42.770343	66257842-466a-4131-9b43-b2577d361b9c
1022	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	2020-04-17 14:48:42.776647	2020-04-17 14:48:42.776647	1eced099-419a-4732-88d3-d729690ba89c
1023	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	2020-04-17 14:48:42.783042	2020-04-17 14:48:42.783042	477a535e-daa5-46c1-9796-c8b186150f2e
1024	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	2020-04-17 14:48:42.789291	2020-04-17 14:48:42.789291	abbbbb82-f788-445a-baaf-ebab9eaea947
1025	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	2020-04-17 14:48:42.795719	2020-04-17 14:48:42.795719	fe7acc8a-24b0-4537-bda6-9133b587ee4f
1026	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	2020-04-17 14:48:42.802129	2020-04-17 14:48:42.802129	edf5c5be-c615-4cde-af8e-4a3eab21b5ae
1027	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	2020-04-17 14:48:42.808531	2020-04-17 14:48:42.808531	abdb896f-00a7-402d-afb8-f43a2ad0fc75
1028	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	2020-04-17 14:48:42.814961	2020-04-17 14:48:42.814961	0b158115-f0cd-4f5b-a5b6-f3587fa14dde
1029	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	2020-04-17 14:48:42.821255	2020-04-17 14:48:42.821255	c5457cc4-2703-4507-b05b-e640c902dbc2
1030	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	2020-04-17 14:48:42.826609	2020-04-17 14:48:42.826609	1af8d58e-e226-4326-8421-29af32f57285
1031	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	2020-04-17 14:48:42.835195	2020-04-17 14:48:42.835195	4a34bbdf-aae5-4e9c-a41f-f7e5b3f87758
1032	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	2020-04-17 14:48:42.842707	2020-04-17 14:48:42.842707	7fbe159d-bd83-4fc3-a22a-fec1aa62b7b8
1033	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	2020-04-17 14:48:42.849998	2020-04-17 14:48:42.849998	8c27f311-1ba2-4fc9-8df3-f34d47b536a1
1034	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:42.856406	2020-04-17 14:48:42.856406	af4f5e8a-5bf1-4564-8084-8f24aa567716
1035	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	2020-04-17 14:48:42.862815	2020-04-17 14:48:42.862815	5676df5d-4977-4996-80ec-489422b66ee2
1036	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2020-04-17 14:48:42.903387	2020-04-17 14:48:42.902387	7b0c742d-db4a-4be7-be1e-83b0118497cd
1037	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2020-04-17 14:48:42.911917	2020-04-17 14:48:42.911917	6356a751-a2d7-4736-ba0c-0c3f11bac137
1038	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2020-04-17 14:48:42.918345	2020-04-17 14:48:42.918345	12fbd01e-0bc1-489e-9475-d51d6aff0e30
1039	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	2020-04-17 14:48:42.92474	2020-04-17 14:48:42.92474	c97ce68a-5085-4c8c-a0f9-ac21380feb7c
1040	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	2020-04-17 14:48:42.93113	2020-04-17 14:48:42.93113	d63d737d-9d9a-4af9-b72d-0bcc81d5213b
1041	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	2020-04-17 14:48:42.937489	2020-04-17 14:48:42.937489	23943c9c-5a89-45be-9b31-162786c51023
1042	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:42.942819	2020-04-17 14:48:42.942819	092f363b-c3bb-4553-b00f-d0357374f231
1043	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	2020-04-17 14:48:42.980764	2020-04-17 14:48:42.980764	7958c1ae-c656-4a4d-8074-b18fc30f5f43
1044	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	2020-04-17 14:48:42.988151	2020-04-17 14:48:42.988151	60311885-7773-40e8-9884-99123dcb8d4d
1045	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	2020-04-17 14:48:42.994499	2020-04-17 14:48:42.994499	e1268dd7-bfe4-4365-b5dd-9196f782fed2
1046	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:43.000848	2020-04-17 14:48:43.000848	7ccc423d-8d0d-4b7d-a5fc-c15652557bc3
1047	uri://ed-fi.org/InternetAccessDescriptor	High Speed	High Speed	High Speed	\N	\N	\N	2020-04-17 14:48:43.031095	2020-04-17 14:48:43.031095	0897314b-5294-43fc-a7ec-44278c36db65
1048	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	Less Than High Speed	Less Than High Speed	\N	\N	\N	2020-04-17 14:48:43.038551	2020-04-17 14:48:43.038551	bbff4377-8d08-452d-8467-7d993d2fe00e
1049	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	2020-04-17 14:48:43.044942	2020-04-17 14:48:43.044942	2d147c2a-1499-4c8f-88c7-35d61918fe60
1050	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	2020-04-17 14:48:43.08169	2020-04-17 14:48:43.080636	6551bbcb-c4ac-45db-b6a4-c58ed43d76af
1051	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:43.089064	2020-04-17 14:48:43.089064	a1bb9fd6-c460-4715-a24c-04d4edcd6245
1052	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	2020-04-17 14:48:43.095478	2020-04-17 14:48:43.095478	76fb3c9c-8f04-4a40-8dd2-bbdc4da8d207
1053	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	2020-04-17 14:48:43.101909	2020-04-17 14:48:43.101909	bb923f07-f66e-4e8d-ab70-e390bf68b6b6
1054	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	2020-04-17 14:48:43.133353	2020-04-17 14:48:43.133353	55238150-f4b2-495a-a687-98419f89f573
1055	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	2020-04-17 14:48:43.140802	2020-04-17 14:48:43.140802	4621b773-8c4f-480a-b6df-0d3a91bc7d86
1056	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	2020-04-17 14:48:43.148004	2020-04-17 14:48:43.148004	1c397229-488a-45c5-a7f9-c65a1e4e7ddf
1057	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:43.154354	2020-04-17 14:48:43.153344	51f04a77-e110-4709-8822-6ef891f55777
1058	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	2020-04-17 14:48:43.159602	2020-04-17 14:48:43.159602	54abb5ca-5341-4601-a4d1-becae59f1d06
1059	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	2020-04-17 14:48:43.168057	2020-04-17 14:48:43.168057	44e2116c-5035-430c-9e29-cb952bf23d8a
1060	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	2020-04-17 14:48:43.174397	2020-04-17 14:48:43.174397	71b4edef-6dba-4898-a68c-552b54481185
1061	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	2020-04-17 14:48:43.207497	2020-04-17 14:48:43.206462	d45d0c45-9a17-4f1e-9339-d20a877093b2
1062	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	2020-04-17 14:48:43.213946	2020-04-17 14:48:43.213946	cc74a6a2-f848-4c18-a8f6-ca7c1a0e8a14
1063	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	2020-04-17 14:48:43.22034	2020-04-17 14:48:43.219305	6fa41516-b586-4fcd-831d-0c2ae9b3766e
1064	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	2020-04-17 14:48:43.226783	2020-04-17 14:48:43.226783	9839e600-732a-459f-b41a-ed659184df8a
1065	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	2020-04-17 14:48:43.232117	2020-04-17 14:48:43.232117	e49379ff-e048-4222-aa3e-dc8aebb02588
1066	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	2020-04-17 14:48:43.237458	2020-04-17 14:48:43.237458	c31d30df-83fd-431d-abdc-1daff4cec316
1067	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	2020-04-17 14:48:43.242717	2020-04-17 14:48:43.242717	42cf7a5e-bec2-477c-b06b-fdeb2503037f
1068	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	2020-04-17 14:48:43.249065	2020-04-17 14:48:43.249065	74e6287e-88e2-4d2b-86e1-f3c4c43f8c50
1069	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	2020-04-17 14:48:43.255455	2020-04-17 14:48:43.255455	0ad484ea-2ca9-4fe6-a168-cf0c6b2828d6
1070	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	2020-04-17 14:48:43.260817	2020-04-17 14:48:43.260817	092ac018-5b25-4262-b094-a03b0ba82c46
1071	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	2020-04-17 14:48:43.268239	2020-04-17 14:48:43.268239	bb4f0417-54ae-4083-b2ed-39b8cbc13e10
1072	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	2020-04-17 14:48:43.274628	2020-04-17 14:48:43.274628	eeb33ca4-b8a8-44a4-85a9-9231e7ad92ce
1073	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	2020-04-17 14:48:43.279849	2020-04-17 14:48:43.279849	2b3965eb-7ae0-44b1-81cc-7a6e8d56ae7b
1074	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	2020-04-17 14:48:43.285182	2020-04-17 14:48:43.285182	a2e1690e-5904-47b6-adde-1708c89b5446
1075	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	2020-04-17 14:48:43.290524	2020-04-17 14:48:43.290524	f3f8c3ca-c66e-444e-92cd-1ef52a2c98fb
1076	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	2020-04-17 14:48:43.297982	2020-04-17 14:48:43.296971	e0a85ba4-cb50-413a-af8d-7a8733619927
1077	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	2020-04-17 14:48:43.303443	2020-04-17 14:48:43.303443	e680a29c-6d2f-410a-9914-4778838f9f10
1078	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	2020-04-17 14:48:43.310937	2020-04-17 14:48:43.310937	7b620882-8267-41a6-b67d-cf747c12eeb8
1079	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	2020-04-17 14:48:43.317553	2020-04-17 14:48:43.317553	11203db4-2b33-4835-8bcd-040575979a1c
1080	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	2020-04-17 14:48:43.32504	2020-04-17 14:48:43.32504	ed145ebe-c09f-4aac-b28f-edc22444b2a8
1081	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	2020-04-17 14:48:43.330378	2020-04-17 14:48:43.330378	15f4543d-d764-4c1b-b7b3-f51c43953065
1082	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	2020-04-17 14:48:43.336779	2020-04-17 14:48:43.336779	6f744f64-6c83-4c40-afc2-a27ede264914
1083	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	2020-04-17 14:48:43.342158	2020-04-17 14:48:43.342158	940816c6-3e11-427a-a443-6e0b438718b1
1084	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	2020-04-17 14:48:43.349551	2020-04-17 14:48:43.349551	01ef2732-55d3-419e-bdbf-e27556913375
1085	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	2020-04-17 14:48:43.360196	2020-04-17 14:48:43.360196	3d592417-64f0-42e5-a358-1dff83d23d78
1086	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	2020-04-17 14:48:43.366564	2020-04-17 14:48:43.366564	2d9cc35b-7adf-4a73-8c6c-080e8e05b36e
1087	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	2020-04-17 14:48:43.371877	2020-04-17 14:48:43.371877	24d89632-2f5b-40b1-8bcf-dc7f285121f2
1088	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	2020-04-17 14:48:43.377168	2020-04-17 14:48:43.377168	bba90d64-14e4-4a37-a98d-ffb5e5def4bb
1089	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	2020-04-17 14:48:43.382498	2020-04-17 14:48:43.382498	54282c13-fd6c-4619-8c5d-d10072d0554e
1090	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	2020-04-17 14:48:43.388761	2020-04-17 14:48:43.388761	695f0b63-1181-4458-9f48-0953bf2a18d8
1091	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	2020-04-17 14:48:43.39406	2020-04-17 14:48:43.39406	ee50f012-16c2-41df-b4c3-7db880be3d68
1092	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	2020-04-17 14:48:43.399399	2020-04-17 14:48:43.399399	41d7efb0-f63d-4db4-a408-6e2b583bfb3c
1093	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	2020-04-17 14:48:43.404652	2020-04-17 14:48:43.404652	c1f0bbd5-6c34-4bb6-9291-798c92cc2a7e
1094	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	2020-04-17 14:48:43.411009	2020-04-17 14:48:43.409999	a79a2fa3-8c5f-45c8-add3-3f4ce21e19c4
1095	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	2020-04-17 14:48:43.416411	2020-04-17 14:48:43.416411	d709aa31-ee19-4126-bac3-5a97c638b0e0
1096	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	2020-04-17 14:48:43.421722	2020-04-17 14:48:43.421722	d7948583-03a1-41c5-8bb1-02dbc8d881f3
1097	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	2020-04-17 14:48:43.426915	2020-04-17 14:48:43.426915	460130f3-f338-4539-8917-529aa03b2416
1098	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	2020-04-17 14:48:43.433307	2020-04-17 14:48:43.433307	aae27001-6e6d-4049-9723-90ecafd4edd4
1099	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	2020-04-17 14:48:43.439615	2020-04-17 14:48:43.438612	5f3a8d3e-f23a-4ff7-9e14-dec77b3d532e
1100	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	2020-04-17 14:48:43.446075	2020-04-17 14:48:43.446075	6507ba44-b7b0-4a87-82b7-39176fb2a9c5
1101	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	2020-04-17 14:48:43.452449	2020-04-17 14:48:43.452426	878b7862-7514-4d0d-884e-b4b81038b505
1102	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	2020-04-17 14:48:43.458874	2020-04-17 14:48:43.458823	f2ec9e48-283c-4047-9edb-d53cb35a7df0
1103	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	2020-04-17 14:48:43.464201	2020-04-17 14:48:43.464201	9fc94385-94eb-4b0a-bdd0-62b94597cd85
1104	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	2020-04-17 14:48:43.469549	2020-04-17 14:48:43.469549	97784180-c638-4928-a7e3-34f0016d63e8
1105	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	2020-04-17 14:48:43.474851	2020-04-17 14:48:43.474851	f82f3d60-4e5a-4af0-b54a-8aafa290ce76
1106	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	2020-04-17 14:48:43.48131	2020-04-17 14:48:43.48131	1ce5b9f9-0b46-4039-8ba4-887ff8cf09b6
1107	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	2020-04-17 14:48:43.486922	2020-04-17 14:48:43.486922	10fbcef7-4d4b-4570-9d11-68ca9255d2f1
1108	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	2020-04-17 14:48:43.49228	2020-04-17 14:48:43.49228	851d4426-cd88-4ce3-9415-85544cbb0f45
1109	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	2020-04-17 14:48:43.497612	2020-04-17 14:48:43.497612	3d6ccf6a-3874-4e70-a2b4-cdc4299e3c3f
1110	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	2020-04-17 14:48:43.504031	2020-04-17 14:48:43.502992	9b318e50-7249-48d1-ab7e-31c4a460ac73
1111	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	2020-04-17 14:48:43.509361	2020-04-17 14:48:43.509361	349dcd7b-7593-4989-9ad4-a86bf3a5ae89
1112	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	2020-04-17 14:48:43.515767	2020-04-17 14:48:43.515767	7a36250e-e433-4107-b52b-a4e6c68be2cc
1113	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	2020-04-17 14:48:43.521107	2020-04-17 14:48:43.521107	1f652519-d93e-483b-905f-78cf831f4ee6
1114	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	2020-04-17 14:48:43.526367	2020-04-17 14:48:43.526367	3c23173d-736a-4aab-b3a2-771d7886d335
1115	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	2020-04-17 14:48:43.532778	2020-04-17 14:48:43.532778	2b27219d-5a3c-4495-9391-f19eb75c16d3
1116	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	2020-04-17 14:48:43.538095	2020-04-17 14:48:43.538095	e5e3e2bb-ac37-4ef6-adb1-84900b0627fa
1117	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	2020-04-17 14:48:43.544479	2020-04-17 14:48:43.544479	6cc79f43-2e42-4588-80ae-4465199f09ae
1118	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	2020-04-17 14:48:43.549731	2020-04-17 14:48:43.549731	b4340482-cbb7-4936-a1fc-2760f1e01bb7
1119	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	2020-04-17 14:48:43.556164	2020-04-17 14:48:43.556164	83695e87-88b8-4a0f-984c-b87a23d37ab1
1120	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	2020-04-17 14:48:43.562583	2020-04-17 14:48:43.562583	ae999f53-71ff-46a0-b226-2162f56984ec
1121	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	2020-04-17 14:48:43.567901	2020-04-17 14:48:43.567901	a1459607-6114-4cb7-9e83-35dbab8a0c80
1122	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	2020-04-17 14:48:43.573238	2020-04-17 14:48:43.573238	c369d38c-628e-45b4-b9c2-6f78d3755bea
1123	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	2020-04-17 14:48:43.578567	2020-04-17 14:48:43.578567	dd74b1f0-e944-40ee-9458-9c2ca852685e
1124	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	2020-04-17 14:48:43.583886	2020-04-17 14:48:43.583886	6c2c81b1-90a4-401c-a16f-b3c486eb30dc
1125	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	2020-04-17 14:48:43.589201	2020-04-17 14:48:43.589201	40fdb4f5-ffb1-41ac-b753-ab0dd484b5ef
1126	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	2020-04-17 14:48:43.597721	2020-04-17 14:48:43.596684	8c48c373-617a-4bbd-915a-821ab0265d14
1127	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	2020-04-17 14:48:43.603074	2020-04-17 14:48:43.603074	f70dc58e-9047-4032-9b04-ea211145027c
1128	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	2020-04-17 14:48:43.608424	2020-04-17 14:48:43.608424	bded11e1-2f3b-44d8-9b0d-de2cd9284103
1129	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	2020-04-17 14:48:43.613762	2020-04-17 14:48:43.613762	1a63c008-f83f-4861-811a-0000bfae9520
1130	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	2020-04-17 14:48:43.620133	2020-04-17 14:48:43.620133	7a5e682f-732e-4dce-bca1-3ec5ef263341
1131	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	2020-04-17 14:48:43.6255	2020-04-17 14:48:43.6255	908262f5-cfc2-434d-bf94-eddb09cf6884
1132	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	2020-04-17 14:48:43.630884	2020-04-17 14:48:43.630884	3db3d94e-2816-41c1-b18b-8a3f9240bbdc
1133	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	2020-04-17 14:48:43.636585	2020-04-17 14:48:43.636585	f033e4e8-4157-46c1-bf66-85a7b940ff1d
1134	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	2020-04-17 14:48:43.641884	2020-04-17 14:48:43.641884	0ac9d865-c550-477a-9323-5a48a728fe45
1135	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	2020-04-17 14:48:43.648189	2020-04-17 14:48:43.648189	c7858460-29e9-4f3d-848a-e41064b1603d
1136	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	2020-04-17 14:48:43.653434	2020-04-17 14:48:43.653434	334073cb-ab17-413f-a5c1-77d82a00b0cd
1137	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	2020-04-17 14:48:43.658777	2020-04-17 14:48:43.658777	67fd7bc7-8fb1-482a-92ae-3d093bcbb453
1138	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	2020-04-17 14:48:43.664131	2020-04-17 14:48:43.664131	37d0fcb6-588e-4bdf-8d39-5df27c675bd6
1139	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	2020-04-17 14:48:43.670508	2020-04-17 14:48:43.670508	b0a65c8a-f353-41d8-baef-11bb333b7e45
1140	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	2020-04-17 14:48:43.677908	2020-04-17 14:48:43.677908	9077d78f-2d66-4c9a-bf17-7a1959f29c30
1141	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	2020-04-17 14:48:43.684132	2020-04-17 14:48:43.684132	da38408f-617f-4395-b763-6088ece5ec52
1142	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	2020-04-17 14:48:43.690533	2020-04-17 14:48:43.690533	d799f410-6da2-43b6-83ce-a3809c8932bc
1143	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	2020-04-17 14:48:43.696818	2020-04-17 14:48:43.696818	910c60f0-be47-4ad1-a599-8a755942e89f
1144	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	2020-04-17 14:48:43.703254	2020-04-17 14:48:43.703254	cfc6a288-35a1-4ec7-b778-f568c23e6727
1145	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	2020-04-17 14:48:43.709675	2020-04-17 14:48:43.709675	c99f912a-840d-4990-bf04-bdaa56c23e86
1146	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	2020-04-17 14:48:43.714995	2020-04-17 14:48:43.714995	e0fafbee-02a5-4a7a-a401-d623b1bbe3a9
1147	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	2020-04-17 14:48:43.72033	2020-04-17 14:48:43.72033	3fff2f51-1245-45d4-90bf-33bd2224bef6
1148	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	2020-04-17 14:48:43.725668	2020-04-17 14:48:43.725668	80a5e5e1-6606-4f5b-ad90-d958dc29628a
1149	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	2020-04-17 14:48:43.730945	2020-04-17 14:48:43.730945	09fd4f83-5ba4-4227-bbc3-4faac96a951a
1150	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	2020-04-17 14:48:43.73628	2020-04-17 14:48:43.73628	96eba209-be21-46f5-8c28-ba7a8f205ab5
1151	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	2020-04-17 14:48:43.741555	2020-04-17 14:48:43.741555	aa574fa0-65aa-4f91-be28-3dcf6ad1d0e6
1152	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	2020-04-17 14:48:43.746893	2020-04-17 14:48:43.746893	0ce7f1a2-fa50-4f14-bf7d-1e056f724e21
1153	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	2020-04-17 14:48:43.752215	2020-04-17 14:48:43.752215	07b19db7-157c-47bd-ba42-d57da00a7994
1154	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	2020-04-17 14:48:43.758574	2020-04-17 14:48:43.758574	6f0622a6-f313-4657-92f8-e9a3d0014e91
1155	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	2020-04-17 14:48:43.763894	2020-04-17 14:48:43.763894	529b3f81-ab1d-4ce3-8f41-2dc62a6d0a30
1156	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	2020-04-17 14:48:43.768174	2020-04-17 14:48:43.768174	336985c1-a368-4015-b372-604caa01ac07
1157	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	2020-04-17 14:48:43.773479	2020-04-17 14:48:43.773479	bcaf2fd2-a424-463c-94bb-c423fc774ee2
1158	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	2020-04-17 14:48:43.778793	2020-04-17 14:48:43.778793	f7917307-b0df-47d1-890c-711e32af7529
1159	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	2020-04-17 14:48:43.784164	2020-04-17 14:48:43.784164	8b6da2b2-874d-42b2-8e71-ce98cb62ce33
1160	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	2020-04-17 14:48:43.789466	2020-04-17 14:48:43.789466	bff632db-6399-4c34-81d4-26451a86f90a
1161	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	2020-04-17 14:48:43.793766	2020-04-17 14:48:43.793766	633508dd-8243-46f7-b91d-c633d8f0e5d6
1162	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	2020-04-17 14:48:43.798975	2020-04-17 14:48:43.798975	66155986-b137-4d6e-95fb-61605618f4c9
1163	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	2020-04-17 14:48:43.804231	2020-04-17 14:48:43.804231	27b6f1f4-1e88-4090-aa59-2c5a73c15f67
1164	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	2020-04-17 14:48:43.809542	2020-04-17 14:48:43.809542	6f01134e-b688-4cec-bc14-4032871f4d26
1165	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	2020-04-17 14:48:43.814836	2020-04-17 14:48:43.814807	f4b01318-85f9-4a57-968e-4b820638c61b
1166	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	2020-04-17 14:48:43.819141	2020-04-17 14:48:43.819141	8ada9ce3-3037-40bc-a49d-43353388d0ed
1167	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	2020-04-17 14:48:43.824477	2020-04-17 14:48:43.824477	a0046646-ee96-47ea-a6f2-083fd2dd1518
1168	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	2020-04-17 14:48:43.830903	2020-04-17 14:48:43.830903	5cec7bf5-7c2f-479a-8df2-9f4adface8d2
1169	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	2020-04-17 14:48:43.836223	2020-04-17 14:48:43.836223	5e04f079-70f0-4495-8a7e-6007c92ebefe
1170	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	2020-04-17 14:48:43.841566	2020-04-17 14:48:43.841566	4af58ff3-aa44-45eb-a61f-74d15bef1b7f
1171	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	2020-04-17 14:48:43.846916	2020-04-17 14:48:43.846916	448df115-ff1e-436a-8e55-b3e9dc610856
1172	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	2020-04-17 14:48:43.852255	2020-04-17 14:48:43.852255	2ccc4b8b-0a20-491a-8265-cdcfc62e37a6
1173	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	2020-04-17 14:48:43.857552	2020-04-17 14:48:43.857552	15d82bd4-8f56-41e1-bcb0-d879308c6581
1174	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	2020-04-17 14:48:43.862726	2020-04-17 14:48:43.862726	bc1e0fa5-8ec8-4c01-8d47-530943c4f269
1175	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	2020-04-17 14:48:43.868065	2020-04-17 14:48:43.868065	6142b645-f3df-4c11-a7c3-f6123bba8b20
1176	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	2020-04-17 14:48:43.873426	2020-04-17 14:48:43.873426	60feada3-45d2-4710-aa2b-f94fba653668
1177	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	2020-04-17 14:48:43.878615	2020-04-17 14:48:43.878615	4c82cbab-6ea8-4fd6-bed2-164ad23b9588
1178	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	2020-04-17 14:48:43.885068	2020-04-17 14:48:43.885068	f4042942-64f2-4dd0-9175-8cb1b211538c
1179	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	2020-04-17 14:48:43.89027	2020-04-17 14:48:43.89027	e3d23c20-cc7f-4e4d-8b75-b1de0a3b0f55
1180	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	2020-04-17 14:48:43.896699	2020-04-17 14:48:43.896699	98215a28-f043-44d2-b439-271a436abf7c
1181	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	2020-04-17 14:48:43.905178	2020-04-17 14:48:43.905178	82f12032-a2e8-4644-8c7f-27199c923b99
1182	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	2020-04-17 14:48:43.911507	2020-04-17 14:48:43.911507	8062f020-11e2-4ac4-ba4f-bf5a12941cf6
1183	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	2020-04-17 14:48:43.916879	2020-04-17 14:48:43.916879	41e313f7-d8a6-42c7-8bb7-5ca969f68658
1184	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	2020-04-17 14:48:43.923333	2020-04-17 14:48:43.923333	ea6220f5-fe19-440f-97b4-22abba04d945
1185	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	2020-04-17 14:48:43.92872	2020-04-17 14:48:43.92872	e973a6db-20be-4f24-b60b-ea92f521abda
1186	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	2020-04-17 14:48:43.935136	2020-04-17 14:48:43.935136	a5ed7620-6b75-4b84-af95-87031f38039c
1187	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	2020-04-17 14:48:43.941579	2020-04-17 14:48:43.941579	49ea40b8-290f-4bab-9044-f40885ee5904
1188	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	2020-04-17 14:48:43.946915	2020-04-17 14:48:43.946915	2935d9a3-c3a5-4fcb-8ff4-b19c84acd220
1189	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	2020-04-17 14:48:43.952263	2020-04-17 14:48:43.952263	d2dd091f-0e1e-4d9a-a183-06a3c707d103
1190	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	2020-04-17 14:48:43.958695	2020-04-17 14:48:43.958695	efaddb98-664d-4f5d-a272-4b8893ddf7b7
1191	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	2020-04-17 14:48:43.964055	2020-04-17 14:48:43.964055	f344a29c-3cd4-42e4-b60e-a5dc5a1f0ce2
1192	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	2020-04-17 14:48:43.969386	2020-04-17 14:48:43.969386	85bee984-eb47-4a2a-be8a-4d7f83cbbf7b
1193	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	2020-04-17 14:48:43.974734	2020-04-17 14:48:43.974734	34544752-a31b-4c1d-bda6-55681bdc9a50
1194	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	2020-04-17 14:48:43.980066	2020-04-17 14:48:43.980066	4dfd0130-c254-4ac8-a173-1f823d9c8d34
1195	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	2020-04-17 14:48:43.986058	2020-04-17 14:48:43.986058	a9caf20a-df71-4197-b9ff-32a69d5f1bba
1196	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	2020-04-17 14:48:43.992442	2020-04-17 14:48:43.992442	4fa2a3f9-db21-4286-8ca2-7e9e581a7d17
1197	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	2020-04-17 14:48:43.997762	2020-04-17 14:48:43.997762	083b68de-3c70-46c7-b585-5f186dca6c18
1198	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	2020-04-17 14:48:44.004173	2020-04-17 14:48:44.004128	fe8f914d-438e-4822-b9b5-782d32f9c110
1199	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	2020-04-17 14:48:44.009548	2020-04-17 14:48:44.008506	eb400dc9-c111-4b59-8d33-0c2d8a5bdfc2
1200	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	2020-04-17 14:48:44.014848	2020-04-17 14:48:44.013853	4f08a0ce-1e3a-4de6-ad4d-f1b46463ea5d
1201	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	2020-04-17 14:48:44.019154	2020-04-17 14:48:44.019154	e45e7b31-7889-4fe9-9e6a-73bd5cd501fb
1202	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	2020-04-17 14:48:44.024521	2020-04-17 14:48:44.024521	27f3ef3f-01a7-4c85-9611-6832fcbd8945
1203	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	2020-04-17 14:48:44.029864	2020-04-17 14:48:44.029864	d6ee28fb-6ef1-4360-a7da-1db6832f9a82
1204	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	2020-04-17 14:48:44.035229	2020-04-17 14:48:44.035229	0f963e97-13ce-48b9-ac2d-010f48a83eb5
1205	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	2020-04-17 14:48:44.040547	2020-04-17 14:48:44.040547	b1814be1-3c40-442a-be3a-cc76ed87bc7e
1206	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	2020-04-17 14:48:44.045863	2020-04-17 14:48:44.044827	73c9096e-58ff-498a-8cd8-8980844ed44f
1207	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	2020-04-17 14:48:44.051229	2020-04-17 14:48:44.050188	f69446c3-1403-4217-8777-470bcc04ca0d
1208	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	2020-04-17 14:48:44.056564	2020-04-17 14:48:44.055557	404e684f-5eab-43da-a8b8-680307ee62ad
1209	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	2020-04-17 14:48:44.06199	2020-04-17 14:48:44.061968	fa888ec0-ade8-44b7-b31c-39bbad72b1cc
1210	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	2020-04-17 14:48:44.068333	2020-04-17 14:48:44.068333	acce3ac5-845f-40f9-a2ad-f9535ed074e6
1211	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	2020-04-17 14:48:44.073615	2020-04-17 14:48:44.073615	7aeb079e-470e-4acd-a7cd-d174169fe4b2
1212	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	2020-04-17 14:48:44.078954	2020-04-17 14:48:44.078954	cc34d838-12c8-4882-883a-acdb3d10a67d
1213	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	2020-04-17 14:48:44.084193	2020-04-17 14:48:44.084193	547e034b-d101-408a-a917-9a7fff105541
1214	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	2020-04-17 14:48:44.08854	2020-04-17 14:48:44.08854	59e6d477-70cf-4ee9-a98e-0777fc6e6e9a
1215	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	2020-04-17 14:48:44.093932	2020-04-17 14:48:44.093932	73dd0b32-df3d-407a-870f-2e9e1e130131
1216	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	2020-04-17 14:48:44.099292	2020-04-17 14:48:44.099292	2d52e7be-951d-45dc-a8b9-a82e2ed361cb
1217	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	2020-04-17 14:48:44.105726	2020-04-17 14:48:44.105726	1c9ab02d-38b3-41d6-870b-9f379b47efbb
1218	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	2020-04-17 14:48:44.111064	2020-04-17 14:48:44.111041	ab86866d-be7e-4b48-865a-fff114ad7d0c
1219	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	2020-04-17 14:48:44.115954	2020-04-17 14:48:44.115954	19b53ee4-904e-4f73-bd54-8732bb74a6a3
1220	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	2020-04-17 14:48:44.12131	2020-04-17 14:48:44.12131	4f073b45-374e-42b6-907d-c2e01e3d3843
1221	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	2020-04-17 14:48:44.126619	2020-04-17 14:48:44.126619	5f750484-4e60-4a92-9381-c9495a477b71
1222	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	2020-04-17 14:48:44.131817	2020-04-17 14:48:44.131817	69264101-f38b-466c-81dc-d14e5d86b638
1223	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	2020-04-17 14:48:44.137106	2020-04-17 14:48:44.137106	522409a0-3f1f-40f3-b6a6-f7c4d0844564
1224	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	2020-04-17 14:48:44.142432	2020-04-17 14:48:44.142432	ec10bf93-76e4-4dde-9b7a-912d2a557f57
1225	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	2020-04-17 14:48:44.148833	2020-04-17 14:48:44.148833	1146a3f3-7b1a-45c1-9dbf-953a096b68b2
1226	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	2020-04-17 14:48:44.154173	2020-04-17 14:48:44.154173	f049a112-092f-408f-8e24-4cdcba5c7b12
1227	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	2020-04-17 14:48:44.158463	2020-04-17 14:48:44.158463	a5d86f08-9e12-4459-8820-56856c2a3e4f
1228	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	2020-04-17 14:48:44.163809	2020-04-17 14:48:44.163809	0e847a17-51f1-4bd8-b017-d8f1c39e6c0e
1229	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	2020-04-17 14:48:44.169633	2020-04-17 14:48:44.169633	ce7a0765-b243-4a91-af7e-91daa4b2c595
1230	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	2020-04-17 14:48:44.174984	2020-04-17 14:48:44.174984	67d075fd-28d4-4862-aa6d-1aaab7dd666d
1231	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	2020-04-17 14:48:44.182446	2020-04-17 14:48:44.182446	8f186bdd-b96e-49c0-a4bb-1ecbee686075
1232	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	2020-04-17 14:48:44.187654	2020-04-17 14:48:44.187654	5cc78d5b-07ad-4c24-b48f-2a7ef9405a24
1233	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	2020-04-17 14:48:44.19299	2020-04-17 14:48:44.19299	8bd8cb2e-588e-472a-8d7c-460b7e070c75
1234	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	2020-04-17 14:48:44.19831	2020-04-17 14:48:44.19831	c1ed9f54-b9d8-44f2-a987-77f0773ff307
1235	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	2020-04-17 14:48:44.204716	2020-04-17 14:48:44.204716	a63fb207-40fb-42bc-8430-a40c3fea5cca
1236	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	2020-04-17 14:48:44.210043	2020-04-17 14:48:44.210043	b018b982-9112-4509-a71f-e0f480939ef9
1237	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	2020-04-17 14:48:44.215378	2020-04-17 14:48:44.215378	183fe4ee-c168-4f37-872c-3705a5e64e98
1238	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	2020-04-17 14:48:44.220705	2020-04-17 14:48:44.220705	3f9859b6-da37-4801-9981-58182250aee7
1239	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	2020-04-17 14:48:44.227077	2020-04-17 14:48:44.226038	f597ca3e-9cf3-4c9f-90a9-8c96e0e78930
1240	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	2020-04-17 14:48:44.23245	2020-04-17 14:48:44.23245	6631194b-ff1a-4906-9127-35f8ac98fda2
1241	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	2020-04-17 14:48:44.237778	2020-04-17 14:48:44.237778	c26b325b-e7cc-4403-98bd-5cb9c7020e84
1242	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	2020-04-17 14:48:44.244153	2020-04-17 14:48:44.244153	15dd94f7-478b-4947-a227-904053b57ae9
1243	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	2020-04-17 14:48:44.249488	2020-04-17 14:48:44.249488	8df44393-3f97-421a-911c-9366621c2d05
1244	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	2020-04-17 14:48:44.254803	2020-04-17 14:48:44.254803	408254a5-be4a-4fb9-9b6c-f1a3561299e9
1245	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	2020-04-17 14:48:44.260159	2020-04-17 14:48:44.260159	d069cea0-e41d-49df-b987-b060f9bd5f25
1246	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	2020-04-17 14:48:44.265527	2020-04-17 14:48:44.265527	ced1f81e-0744-45bd-aecf-ffcc2d037512
1247	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	2020-04-17 14:48:44.269806	2020-04-17 14:48:44.269806	2974b331-6824-4b69-86be-49afc4c84395
1248	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	2020-04-17 14:48:44.275102	2020-04-17 14:48:44.275102	6370c362-09dd-4595-96ea-37cd283f295d
1249	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	2020-04-17 14:48:44.280433	2020-04-17 14:48:44.280433	f982c270-044a-40fd-a710-eef0ddbf27aa
1250	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	2020-04-17 14:48:44.285753	2020-04-17 14:48:44.285753	8afaf822-ec96-4a97-9c7d-20da6f94dc4d
1251	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	2020-04-17 14:48:44.291112	2020-04-17 14:48:44.291112	e61c0903-db7f-4960-9370-76a3ffde568d
1252	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	2020-04-17 14:48:44.296448	2020-04-17 14:48:44.296448	d3e908db-92be-4d52-8777-2ed359570534
1253	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	2020-04-17 14:48:44.301812	2020-04-17 14:48:44.30179	0128193d-7b40-4e5b-adf6-dbc772aa0e15
1254	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	2020-04-17 14:48:44.308231	2020-04-17 14:48:44.308231	8c5372c1-f5db-4ca5-b5f3-ae473773a819
1255	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	2020-04-17 14:48:44.313584	2020-04-17 14:48:44.313584	ccec5754-f603-4117-b6a5-d39e222d3c83
1256	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	2020-04-17 14:48:44.3189	2020-04-17 14:48:44.3189	c9972f1a-e62d-4217-ade9-c9b45a2d12e5
1257	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	2020-04-17 14:48:44.324234	2020-04-17 14:48:44.324234	bfc87292-ecb8-4b2b-a596-925a27220ded
1258	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	2020-04-17 14:48:44.329588	2020-04-17 14:48:44.329588	d354d92c-2403-46d5-91d2-0f764a3d89d0
1259	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	2020-04-17 14:48:44.334927	2020-04-17 14:48:44.334927	b420ce55-6d6d-4c20-8a41-57e222f24a0c
1260	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	2020-04-17 14:48:44.340277	2020-04-17 14:48:44.340277	25a7685e-1712-444d-8199-6dd52d29482d
1261	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	2020-04-17 14:48:44.34559	2020-04-17 14:48:44.34559	5835cb2c-4ed3-45d8-a5d2-181ccf3753a8
1262	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	2020-04-17 14:48:44.350925	2020-04-17 14:48:44.350925	74e3e16b-76b8-4d8f-961f-9d5d3e374206
1263	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	2020-04-17 14:48:44.35629	2020-04-17 14:48:44.35629	89617eea-bf83-474e-adf5-c56a32bc86ca
1264	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	2020-04-17 14:48:44.361639	2020-04-17 14:48:44.361639	fdce9d45-cc6a-47db-bc06-79d980d4d184
1265	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	2020-04-17 14:48:44.366949	2020-04-17 14:48:44.366949	06821003-0391-4dea-86a2-c4fc6918cfc1
1266	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	2020-04-17 14:48:44.372273	2020-04-17 14:48:44.372273	82b5b9fd-31e3-498d-9e33-ce243b792b3b
1267	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	2020-04-17 14:48:44.377582	2020-04-17 14:48:44.377582	e0b4928a-c070-471a-b46e-c4dc041db0de
1268	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	2020-04-17 14:48:44.383971	2020-04-17 14:48:44.383971	2ffe0977-fe72-4493-a3f3-9698a5f75542
1269	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	2020-04-17 14:48:44.389333	2020-04-17 14:48:44.389333	574a1bcb-f40d-4811-8cb0-7e54ba4ffb1c
1270	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	2020-04-17 14:48:44.394669	2020-04-17 14:48:44.394669	e0a9c4a9-0aa9-424a-bf95-b8fd0ee1f153
1271	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	2020-04-17 14:48:44.400014	2020-04-17 14:48:44.400014	b128a907-a603-4a34-821a-4bb8396a51d1
1272	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	2020-04-17 14:48:44.404519	2020-04-17 14:48:44.404519	a42554dd-e826-4575-891f-51605cb689f4
1273	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	2020-04-17 14:48:44.409843	2020-04-17 14:48:44.409843	c237c92e-23e9-4746-a890-abd9d920941f
1274	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	2020-04-17 14:48:44.41517	2020-04-17 14:48:44.41517	3a27dcd2-d11c-4751-a905-327494350f63
1275	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	2020-04-17 14:48:44.420496	2020-04-17 14:48:44.420496	5c23bb10-1d6b-4010-81f9-9d936a311dd7
1276	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	2020-04-17 14:48:44.425825	2020-04-17 14:48:44.425825	54abbacc-ae94-42ea-91d6-1070387b2232
1277	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	2020-04-17 14:48:44.431182	2020-04-17 14:48:44.431157	f2953786-b982-4acd-8c57-4cc65e28f6d1
1278	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	2020-04-17 14:48:44.435467	2020-04-17 14:48:44.435467	078ffdd3-6aef-45ed-9761-941659049bbe
1279	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	2020-04-17 14:48:44.440799	2020-04-17 14:48:44.440799	a5339ebe-6c38-4c6f-a99f-4b30efc478d6
1280	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	2020-04-17 14:48:44.446129	2020-04-17 14:48:44.446129	4c2294dd-f4cd-437b-ae9a-289e9381efc2
1281	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	2020-04-17 14:48:44.451461	2020-04-17 14:48:44.451461	ddc490d2-41e9-42ae-afb1-d7073368fa32
1282	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	2020-04-17 14:48:44.459933	2020-04-17 14:48:44.459933	395c760a-c41b-4ed5-98f2-5048487549fb
1283	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	2020-04-17 14:48:44.465285	2020-04-17 14:48:44.465285	70a1942f-a89c-4946-b8f7-507058b216c2
1284	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	2020-04-17 14:48:44.471738	2020-04-17 14:48:44.471738	a576046f-170f-4c05-a98d-dcd350b19ead
1285	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	2020-04-17 14:48:44.477046	2020-04-17 14:48:44.477046	545628d3-e754-490f-b942-f561bd8b44f3
1286	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	2020-04-17 14:48:44.482227	2020-04-17 14:48:44.482227	f9dd57bc-3f47-4102-b0d8-f04aa96a3e85
1287	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	2020-04-17 14:48:44.488665	2020-04-17 14:48:44.488643	bb6ea33e-4e1f-40be-b83f-5f599cc10cc8
1288	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	2020-04-17 14:48:44.494023	2020-04-17 14:48:44.494023	897229cf-e237-4b5f-ac82-a9ad5d132854
1289	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	2020-04-17 14:48:44.499391	2020-04-17 14:48:44.499391	5ae624f9-3b17-454f-acc3-a68d2ec3162d
1290	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	2020-04-17 14:48:44.505757	2020-04-17 14:48:44.505757	ca707bac-5fc9-44fb-927b-e21d5ff589ac
1291	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	2020-04-17 14:48:44.512039	2020-04-17 14:48:44.512039	fc427bbe-a043-4498-ae4a-91963dde63cb
1292	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	2020-04-17 14:48:44.518473	2020-04-17 14:48:44.518473	0630357d-b64c-4c15-9b48-683ea09d87b0
1293	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	2020-04-17 14:48:44.523823	2020-04-17 14:48:44.523823	e60ccf69-5f34-455a-8c41-8c888a993858
1294	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	2020-04-17 14:48:44.529153	2020-04-17 14:48:44.529153	64d0c1a8-1f37-41cb-adfe-ec16a34588fa
1295	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	2020-04-17 14:48:44.534475	2020-04-17 14:48:44.534475	47fa6f5d-0ad1-41a4-8efb-e5e92e8ac913
1296	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	2020-04-17 14:48:44.541939	2020-04-17 14:48:44.541939	68401bca-b8d2-496b-b3cd-a7a1b7207fff
1297	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	2020-04-17 14:48:44.547282	2020-04-17 14:48:44.547282	81b196fc-ee55-4a75-911a-0e021286ac61
1298	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	2020-04-17 14:48:44.552593	2020-04-17 14:48:44.552593	977c90dc-6d8f-4c2c-98a6-8d80339df36d
1299	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	2020-04-17 14:48:44.557875	2020-04-17 14:48:44.557875	45d28b90-0906-4da5-bcf7-9317b2a7ff6f
1300	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	2020-04-17 14:48:44.563197	2020-04-17 14:48:44.563197	00fb8584-46fd-4670-8c05-99d71e1d6559
1301	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	2020-04-17 14:48:44.568544	2020-04-17 14:48:44.567484	e26559af-9bb5-480c-9e6d-00a93260dc37
1302	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	2020-04-17 14:48:44.572842	2020-04-17 14:48:44.572842	08b4ccd6-3256-4a22-a61e-7a8cbfcbf233
1303	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	2020-04-17 14:48:44.578066	2020-04-17 14:48:44.578066	9b64b3c6-f18e-498a-bf1c-54c637a85e6c
1304	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	2020-04-17 14:48:44.583404	2020-04-17 14:48:44.583404	5266d0dc-9a82-4924-b385-31df48f7412c
1305	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	2020-04-17 14:48:44.588725	2020-04-17 14:48:44.588725	2edd0d7b-e6c1-4456-ba20-15abbbc7722e
1306	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	2020-04-17 14:48:44.59406	2020-04-17 14:48:44.59406	b82a60ce-a6f0-4c8d-b5d7-aef673264c88
1307	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	2020-04-17 14:48:44.599412	2020-04-17 14:48:44.599412	96b45205-b9fa-4244-9996-aed9d2d313d5
1308	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	2020-04-17 14:48:44.60472	2020-04-17 14:48:44.60472	97032c4f-862c-4354-962e-6e083f8337c2
1309	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	2020-04-17 14:48:44.610048	2020-04-17 14:48:44.610048	951b44fa-6999-4f63-b7ce-dbbb7de44e73
1310	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	2020-04-17 14:48:44.615264	2020-04-17 14:48:44.615264	8d69d708-61c7-4136-b7b2-187dc79f68f7
1311	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	2020-04-17 14:48:44.622592	2020-04-17 14:48:44.622592	8f9962cc-97fd-4fc4-b341-cdb3819bfe66
1312	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	2020-04-17 14:48:44.627943	2020-04-17 14:48:44.627943	c9d0190a-22e0-49d2-a006-70079b1ba9eb
1313	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	2020-04-17 14:48:44.63434	2020-04-17 14:48:44.63434	6fb3de9c-7e19-4476-aeee-b363ea66eab8
1314	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	2020-04-17 14:48:44.639018	2020-04-17 14:48:44.639018	73572b53-ee83-46a1-badf-71268060a32f
1315	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	2020-04-17 14:48:44.645267	2020-04-17 14:48:44.645267	913abfdc-1a59-4585-ac90-a2f85e1ee138
1316	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	2020-04-17 14:48:44.650613	2020-04-17 14:48:44.650613	67d0dc04-d9de-4d94-8b78-3479b701b96f
1317	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	2020-04-17 14:48:44.655933	2020-04-17 14:48:44.655933	c6e6c4b0-2e50-4e48-9828-305b0b8c2158
1318	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	2020-04-17 14:48:44.661221	2020-04-17 14:48:44.661221	e8b8022d-9996-425d-af61-444aaf456218
1319	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	2020-04-17 14:48:44.666548	2020-04-17 14:48:44.666526	b824184f-d3a2-4ae4-a303-3ccf0ad46ba8
1320	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	2020-04-17 14:48:44.671859	2020-04-17 14:48:44.670852	79f59ecb-c443-4882-b484-336ca2c4c7c3
1321	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	2020-04-17 14:48:44.67623	2020-04-17 14:48:44.67623	51e2996f-79cc-4fb3-bc81-c2c4b23fa6cf
1322	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	2020-04-17 14:48:44.681556	2020-04-17 14:48:44.681556	98c2534d-ce64-4218-9e05-d17fb06f0b00
1323	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	2020-04-17 14:48:44.686884	2020-04-17 14:48:44.686884	dde48a74-dfd4-4abb-8894-d5a128c1af11
1324	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	2020-04-17 14:48:44.693233	2020-04-17 14:48:44.693233	ad81dfec-edd3-468e-b27b-c3758029f6f6
1325	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	2020-04-17 14:48:44.69851	2020-04-17 14:48:44.69851	9ad19f4a-8f04-4999-969d-3f12762de37a
1326	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	2020-04-17 14:48:44.703844	2020-04-17 14:48:44.703844	d382b523-abd3-4fb3-afa2-97b6838861d0
1327	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	2020-04-17 14:48:44.709153	2020-04-17 14:48:44.709153	179a8234-0f7b-45c4-9d1e-b2431767cee2
1328	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	2020-04-17 14:48:44.717694	2020-04-17 14:48:44.717694	46f1517e-f374-49e0-bfa9-7084ba88d4b1
1329	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	2020-04-17 14:48:44.72304	2020-04-17 14:48:44.72304	98c150b7-3f09-4d11-b58a-0c01481e0bab
1330	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	2020-04-17 14:48:44.729454	2020-04-17 14:48:44.729454	ccadf08f-a0b2-4c9d-8ed3-cf520624b6c3
1331	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	2020-04-17 14:48:44.73476	2020-04-17 14:48:44.73476	ab2a8f79-3d06-4b9d-9c03-4a12295d24e5
1332	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	2020-04-17 14:48:44.742092	2020-04-17 14:48:44.742092	0162dbd4-fe37-4b5f-9ad9-e8796a1b9ca9
1333	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	2020-04-17 14:48:44.747406	2020-04-17 14:48:44.747406	c59b60d4-2575-40c5-b075-c0dc1d0304aa
1334	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	2020-04-17 14:48:44.752781	2020-04-17 14:48:44.752781	1bca8fef-e991-49e9-9a38-96fbad09fa92
1335	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	2020-04-17 14:48:44.758139	2020-04-17 14:48:44.758139	ae2363b4-2e3d-48c6-8579-c313f8c49a2d
1336	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	2020-04-17 14:48:44.763474	2020-04-17 14:48:44.763474	b98eb674-3b0c-4f2e-9230-25f95f4ef1c8
1337	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	2020-04-17 14:48:44.76881	2020-04-17 14:48:44.76881	c3065c6e-7f5f-44cd-8339-b2a6db4f89af
1338	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	2020-04-17 14:48:44.774142	2020-04-17 14:48:44.774142	a1f09713-eea7-4913-96e3-bdc91593e49e
1339	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	2020-04-17 14:48:44.77949	2020-04-17 14:48:44.77949	6e8a4f2c-cce8-4515-b2b5-b22b15164d12
1340	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	2020-04-17 14:48:44.785935	2020-04-17 14:48:44.785935	89acf31a-b126-479e-9979-f27e0cdf86e3
1341	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	2020-04-17 14:48:44.791305	2020-04-17 14:48:44.791305	8a962137-bea6-4238-8c75-6d89d7baa89b
1342	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	2020-04-17 14:48:44.796628	2020-04-17 14:48:44.796628	b686aeaa-1837-4c48-a663-ba571f8f0037
1343	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	2020-04-17 14:48:44.801979	2020-04-17 14:48:44.801979	ea4b305c-4262-4a35-8375-c9536bc1c7ba
1344	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	2020-04-17 14:48:44.807281	2020-04-17 14:48:44.806279	ecac8649-71ba-4197-ae37-b9c2e459c703
1345	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	2020-04-17 14:48:44.811623	2020-04-17 14:48:44.811623	a0a803b2-2125-4ec2-bdff-37971d481c7c
1346	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	2020-04-17 14:48:44.816957	2020-04-17 14:48:44.816957	c9e2144d-cdf8-453a-936c-ebe5eb52e053
1347	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	2020-04-17 14:48:44.82227	2020-04-17 14:48:44.82227	f40ae342-7489-43f4-9fed-ed58ada3a6aa
1348	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	2020-04-17 14:48:44.82764	2020-04-17 14:48:44.827608	cae4a9ad-6230-46b0-aa67-2d953f95ff48
1349	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	2020-04-17 14:48:44.832961	2020-04-17 14:48:44.832961	1b27ee47-3a6c-4796-a01f-eb6bb8ea8789
1350	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	2020-04-17 14:48:44.838276	2020-04-17 14:48:44.838276	a8af3073-6cdc-474c-9d74-fd490087b4b8
1351	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	2020-04-17 14:48:44.843613	2020-04-17 14:48:44.843613	3d3db0b2-adf1-4ae6-96ca-e2f6ccb54b80
1352	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	2020-04-17 14:48:44.848938	2020-04-17 14:48:44.8489	b96d3a0d-c867-4ea3-9a17-836290139a72
1353	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	2020-04-17 14:48:44.855323	2020-04-17 14:48:44.855323	bb695af2-8e5e-45b2-8cae-33e054795348
1354	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	2020-04-17 14:48:44.860662	2020-04-17 14:48:44.860662	a5ceb71b-c518-4aa0-949f-2f1aba386c87
1355	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	2020-04-17 14:48:44.866017	2020-04-17 14:48:44.866017	1bbf9bd5-0868-4bdf-b2fc-0ad3cab5dff4
1356	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	2020-04-17 14:48:44.871348	2020-04-17 14:48:44.871348	2f3b8227-1dee-4eaf-9fd9-8e6caf7abd84
1357	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	2020-04-17 14:48:44.876708	2020-04-17 14:48:44.876708	073a0277-5723-4002-a0ae-092db20a39a8
1358	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	2020-04-17 14:48:44.88316	2020-04-17 14:48:44.88316	6268ed60-a3f7-4c76-9813-6bd535a3847e
1359	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	2020-04-17 14:48:44.888488	2020-04-17 14:48:44.888488	c67f93df-07d6-4c20-9413-620134c0aa8f
1360	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	2020-04-17 14:48:44.893815	2020-04-17 14:48:44.893815	2123ed62-7f02-4938-9413-5dc89bd5933f
1361	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	2020-04-17 14:48:44.899167	2020-04-17 14:48:44.899167	f839bb3a-41a7-467b-ad8a-c9f4c053caf1
1362	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	2020-04-17 14:48:44.904495	2020-04-17 14:48:44.904495	7f4fa02d-5bc4-4577-af70-bd89c74c263c
1363	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	2020-04-17 14:48:44.909811	2020-04-17 14:48:44.909811	2a084f91-5ccb-452f-a699-005e249a0b96
1364	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	2020-04-17 14:48:44.915115	2020-04-17 14:48:44.915115	7b389cc0-3bca-4d32-838a-a14874e28bcb
1365	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	2020-04-17 14:48:44.920464	2020-04-17 14:48:44.920464	a3379010-d83c-40a7-b321-d032c11d73ec
1366	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	2020-04-17 14:48:44.925824	2020-04-17 14:48:44.925824	69f8addd-a157-4a16-a11b-eedd6aad28a4
1367	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	2020-04-17 14:48:44.931162	2020-04-17 14:48:44.931162	ea6e8d83-9876-4f33-84e8-a8d6821db294
1368	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	2020-04-17 14:48:44.937624	2020-04-17 14:48:44.937624	b82da2b9-6887-4917-a4b3-5f630c0a6f2c
1369	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	2020-04-17 14:48:44.942968	2020-04-17 14:48:44.942968	6076c0db-6dfa-43d6-b292-945ff5f5cb6b
1370	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	2020-04-17 14:48:44.948273	2020-04-17 14:48:44.948273	0caa774c-7fe4-4f2e-a377-bec82968769d
1371	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	2020-04-17 14:48:44.953638	2020-04-17 14:48:44.953638	95daa144-cd8c-401c-ba1f-b0570ec6b52a
1372	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	2020-04-17 14:48:44.958991	2020-04-17 14:48:44.958991	dad05988-fbf3-4607-81f5-9f936dd6da9e
1373	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	2020-04-17 14:48:44.964387	2020-04-17 14:48:44.96436	94a5f988-f0a9-4940-9f92-7137f774822a
1374	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	2020-04-17 14:48:44.968726	2020-04-17 14:48:44.968726	ee31dadf-a69a-464e-a786-ebd16102a3f7
1375	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	2020-04-17 14:48:44.975207	2020-04-17 14:48:44.975207	47348c9c-ea16-47fb-8b61-b6f2d96806ac
1376	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	2020-04-17 14:48:44.980574	2020-04-17 14:48:44.980515	080bada6-2b67-4780-aff6-2aa2e008d591
1377	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	2020-04-17 14:48:44.985848	2020-04-17 14:48:44.984796	8631f178-5559-4ea8-9b9e-84981258458f
1378	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	2020-04-17 14:48:44.991157	2020-04-17 14:48:44.991157	ac7d6b84-fe14-4bb9-9888-63f9ae3c8489
1379	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	2020-04-17 14:48:44.996467	2020-04-17 14:48:44.996467	c3f8287e-b8cd-4fcb-ade6-28082106a686
1380	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	2020-04-17 14:48:45.001821	2020-04-17 14:48:45.001803	73cb4787-dd71-46bb-8ca5-a64b44110e37
1381	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	2020-04-17 14:48:45.006137	2020-04-17 14:48:45.006137	cb72004c-2804-4677-8612-58e2bf904c11
1382	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	2020-04-17 14:48:45.012544	2020-04-17 14:48:45.012544	7e1a9197-ae22-4f41-8af6-782b782c077a
1383	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	2020-04-17 14:48:45.018968	2020-04-17 14:48:45.018968	aa01a60f-3a32-46bc-a8de-3595457fb705
1384	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	2020-04-17 14:48:45.024344	2020-04-17 14:48:45.024344	cc6e8e05-e5a1-4122-864b-381633d2ce65
1385	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	2020-04-17 14:48:45.029659	2020-04-17 14:48:45.029659	a96beac1-4192-40d3-bde5-1f01011de4ad
1386	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	2020-04-17 14:48:45.036058	2020-04-17 14:48:45.035019	1435564d-1a1f-4e98-9a41-0d195acf7d1b
1387	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	2020-04-17 14:48:45.041373	2020-04-17 14:48:45.041373	859b5ec4-a2b1-4984-aca3-3b7e8946c0bc
1388	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	2020-04-17 14:48:45.046693	2020-04-17 14:48:45.046693	f0b12dba-33e3-44fd-b6e8-3189b8d34cd7
1389	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	2020-04-17 14:48:45.053089	2020-04-17 14:48:45.053089	0e488d16-750a-4b6c-98aa-02645d770e74
1390	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	2020-04-17 14:48:45.058414	2020-04-17 14:48:45.058414	dd761f3c-eed9-474d-8013-8a23e373d13b
1391	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	2020-04-17 14:48:45.063762	2020-04-17 14:48:45.063762	ad4ae188-032c-4301-8279-5219909471eb
1392	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	2020-04-17 14:48:45.074338	2020-04-17 14:48:45.074338	4da672b2-97e0-47f0-8587-578f10f8cb62
1393	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	2020-04-17 14:48:45.079732	2020-04-17 14:48:45.079732	86cd6d15-29ee-4e3f-8f5d-f0dae1cf3519
1394	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	2020-04-17 14:48:45.085067	2020-04-17 14:48:45.085067	72612e49-75d5-4143-b842-a8739de47756
1395	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	2020-04-17 14:48:45.091515	2020-04-17 14:48:45.091515	e13b7d91-8b12-429b-bd37-d413ccea1c09
1396	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	2020-04-17 14:48:45.09681	2020-04-17 14:48:45.09681	cd11668c-10ae-4cac-b39b-ffc6515254f2
1397	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	2020-04-17 14:48:45.103172	2020-04-17 14:48:45.103172	2939717d-0601-417c-8289-1289df27e848
1398	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	2020-04-17 14:48:45.109553	2020-04-17 14:48:45.109553	2ae3aed0-c873-4aa7-a1e9-2e916a4c302a
1399	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	2020-04-17 14:48:45.114899	2020-04-17 14:48:45.114899	75dab47d-8a73-48d7-be15-e41fcd6acceb
1400	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	2020-04-17 14:48:45.120162	2020-04-17 14:48:45.120162	95e16d68-e851-4100-8d02-d271bae3f2d2
1401	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	2020-04-17 14:48:45.126514	2020-04-17 14:48:45.126514	261504b1-ebc9-42ad-a580-c3f2c6ed328a
1402	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	2020-04-17 14:48:45.131833	2020-04-17 14:48:45.131833	70b1ee32-a380-4972-b3c2-f843ee0b1fd7
1403	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	2020-04-17 14:48:45.137129	2020-04-17 14:48:45.137129	1358d689-3359-4e54-87e1-89b7a6cfc5c2
1404	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	2020-04-17 14:48:45.142422	2020-04-17 14:48:45.142422	c1f223d5-5526-4884-9e37-dbde2435e9dc
1405	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	2020-04-17 14:48:45.147714	2020-04-17 14:48:45.147699	a68a556b-e768-47d6-b8e1-c8c65c0b500f
1406	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	2020-04-17 14:48:45.152004	2020-04-17 14:48:45.152004	9241b877-63d9-4ee3-8f47-62fafd455c96
1407	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	2020-04-17 14:48:45.157319	2020-04-17 14:48:45.157319	5ddeb63d-16c4-4136-8192-3533708a29eb
1408	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	2020-04-17 14:48:45.163687	2020-04-17 14:48:45.162645	ea4b979e-818d-4a66-b7dc-9cc9f3e92d6e
1409	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	2020-04-17 14:48:45.167843	2020-04-17 14:48:45.167843	549a6925-dbbe-462b-b33d-b004a169e4d6
1410	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	2020-04-17 14:48:45.173175	2020-04-17 14:48:45.173175	f95eb42a-7fbd-4a78-81ac-519c11520f9b
1411	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	2020-04-17 14:48:45.180635	2020-04-17 14:48:45.180609	80f7992c-c393-4be9-abc8-5a4fd12723d9
1412	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	2020-04-17 14:48:45.1849	2020-04-17 14:48:45.1849	ff73e672-74fc-4a55-8270-4b42bf9fa2b0
1413	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	2020-04-17 14:48:45.190228	2020-04-17 14:48:45.190228	fb3a4a71-00d9-456e-a417-5c69b5d52dc4
1414	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	2020-04-17 14:48:45.195535	2020-04-17 14:48:45.195535	6d0dfc1a-2a7e-4686-8654-22847d8d4569
1415	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	2020-04-17 14:48:45.200862	2020-04-17 14:48:45.200862	dfb2b3c1-ac6c-419f-ba09-a3735337e979
1416	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	2020-04-17 14:48:45.206203	2020-04-17 14:48:45.206203	b0f82f2e-63db-494c-8221-3889bfa43cce
1417	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	2020-04-17 14:48:45.211509	2020-04-17 14:48:45.211483	d69cf3ee-52a7-46d3-aadb-b840b3d4c851
1418	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	2020-04-17 14:48:45.215823	2020-04-17 14:48:45.215823	98f1980f-66dc-4f1d-8399-c86621b52d1f
1419	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	2020-04-17 14:48:45.221152	2020-04-17 14:48:45.221152	adcafba5-ea09-41d3-95a5-1fedd39c1f2b
1420	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	2020-04-17 14:48:45.226516	2020-04-17 14:48:45.226516	d8143717-c7c9-4b79-affa-081b8d45e6cc
1421	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	2020-04-17 14:48:45.232934	2020-04-17 14:48:45.232934	5a76f514-0f5d-49fe-9d3a-c80311fcc8c9
1422	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	2020-04-17 14:48:45.239339	2020-04-17 14:48:45.239285	4d77e3f0-60ff-4ee2-9faa-5c3a04944c8a
1423	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	2020-04-17 14:48:45.244659	2020-04-17 14:48:45.244659	cbfb08d2-77e1-4ec6-a9be-b5525d7b9b9d
1424	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	2020-04-17 14:48:45.250001	2020-04-17 14:48:45.250001	f4544605-6fdd-4f85-b014-5ed5b97720b4
1425	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	2020-04-17 14:48:45.257483	2020-04-17 14:48:45.257483	0b5aeecb-5b41-4bbc-907d-13eb818ceb6b
1426	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	2020-04-17 14:48:45.262841	2020-04-17 14:48:45.262841	d430256f-23c2-4e89-9937-31350aa88552
1427	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	2020-04-17 14:48:45.268177	2020-04-17 14:48:45.268177	9390294f-98af-4e57-a6b0-ee224f23eb72
1428	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	2020-04-17 14:48:45.273473	2020-04-17 14:48:45.273473	7d0a2127-fa54-4e17-bbb5-277192f160b7
1429	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	2020-04-17 14:48:45.278788	2020-04-17 14:48:45.278788	f1054538-cca2-41a9-9d31-3c04dc5ddb2d
1430	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	2020-04-17 14:48:45.284109	2020-04-17 14:48:45.284109	272de7d3-b764-48db-887b-93be0a031679
1431	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	2020-04-17 14:48:45.289453	2020-04-17 14:48:45.289453	c6eececf-f114-4d2c-97a4-4584db2b5b02
1432	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	2020-04-17 14:48:45.294827	2020-04-17 14:48:45.294827	47dd175e-d431-408a-8b07-9f1e88293054
1433	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	2020-04-17 14:48:45.300163	2020-04-17 14:48:45.300163	d45a7d47-6eb6-497a-aee1-364853452c53
1434	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	2020-04-17 14:48:45.307607	2020-04-17 14:48:45.307607	fb11c418-1307-4a32-83d5-36910cba62ac
1435	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	2020-04-17 14:48:45.314035	2020-04-17 14:48:45.314035	93a361e1-e666-4ca5-8099-a25d547ea2c2
1436	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	2020-04-17 14:48:45.319326	2020-04-17 14:48:45.319326	da32b95d-781f-43ff-baaf-45e7c6a8ab3d
1437	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	2020-04-17 14:48:45.324672	2020-04-17 14:48:45.324672	944bbdc7-0fea-4ddf-ac64-6cb91115f273
1438	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	2020-04-17 14:48:45.329985	2020-04-17 14:48:45.329985	37971abd-5596-4cf3-a240-ac0508b3baeb
1439	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	2020-04-17 14:48:45.337453	2020-04-17 14:48:45.337453	eb4dcbbc-f3b9-4769-9c12-744c5bf5baa3
1440	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	2020-04-17 14:48:45.342736	2020-04-17 14:48:45.342736	718b5597-787a-47df-8ca3-289670fcc9cd
1441	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	2020-04-17 14:48:45.349169	2020-04-17 14:48:45.349169	53baaa0f-e9f5-4622-898d-9c204fb90565
1442	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	2020-04-17 14:48:45.35448	2020-04-17 14:48:45.35448	2919563b-a8e8-4317-8c0b-103c03955dc8
1443	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	2020-04-17 14:48:45.35982	2020-04-17 14:48:45.35982	2f3d5c44-d637-4b32-98a3-aef3d4ee40fb
1444	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	2020-04-17 14:48:45.366302	2020-04-17 14:48:45.366302	fdba1bb5-60cc-4562-8172-69dac6893894
1445	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	2020-04-17 14:48:45.372625	2020-04-17 14:48:45.371615	844481ff-dfae-4486-ae43-3a47383dfcdb
1446	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	2020-04-17 14:48:45.378012	2020-04-17 14:48:45.378012	31bcb176-46f0-4b63-b00e-61f5ae3908b9
1447	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	2020-04-17 14:48:45.38445	2020-04-17 14:48:45.38445	81b95e3b-9bce-49c3-9fdb-bde3e0bdc43a
1448	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	2020-04-17 14:48:45.389788	2020-04-17 14:48:45.389788	427b1562-7b1f-43f2-946c-9774dc02b2a0
1449	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	2020-04-17 14:48:45.395114	2020-04-17 14:48:45.395114	a1d28aa5-9404-48ee-8f72-7afb6716591f
1450	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	2020-04-17 14:48:45.400427	2020-04-17 14:48:45.400427	90c1fd5e-9d4d-42c5-b242-81c884e6af90
1451	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	2020-04-17 14:48:45.405765	2020-04-17 14:48:45.405765	58b2f718-9c94-4ba5-a18c-4c3b98024f31
1452	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	2020-04-17 14:48:45.412229	2020-04-17 14:48:45.412229	30baccd4-da11-4a96-9269-819e36731ca7
1453	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	2020-04-17 14:48:45.417577	2020-04-17 14:48:45.417577	d66bddfa-d7a3-4d9d-99d0-946b804b1cd3
1454	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	2020-04-17 14:48:45.42294	2020-04-17 14:48:45.42294	aa0b303b-9dce-424f-a06d-e5f49758bd98
1455	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	2020-04-17 14:48:45.429362	2020-04-17 14:48:45.429362	8cba9a40-0b7d-4803-9d27-da70ec990339
1456	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	2020-04-17 14:48:45.434726	2020-04-17 14:48:45.434726	d7e87b3e-a504-4721-85ce-358c4fc819be
1457	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	2020-04-17 14:48:45.440095	2020-04-17 14:48:45.440095	9063edb5-3d55-491b-afad-86251ea2c3e5
1458	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	2020-04-17 14:48:45.4453	2020-04-17 14:48:45.4453	1b2d3b15-dbee-496d-a490-150517d4849f
1459	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	2020-04-17 14:48:45.450628	2020-04-17 14:48:45.450628	12092e26-a81c-4560-ade3-cc3c5563f0ec
1460	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	2020-04-17 14:48:45.457091	2020-04-17 14:48:45.457045	8de2460a-b658-44ca-8ba7-4d075fcc4757
1461	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	2020-04-17 14:48:45.462462	2020-04-17 14:48:45.462462	5b9077c2-8452-4c21-9126-13a5aa33ad97
1462	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	2020-04-17 14:48:45.467817	2020-04-17 14:48:45.467817	239d4a7d-d552-46b4-a08b-47ee50388513
1463	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	2020-04-17 14:48:45.473183	2020-04-17 14:48:45.473183	18dc96f4-e3b1-4656-8c7e-98f2c05d43c6
1464	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	2020-04-17 14:48:45.479595	2020-04-17 14:48:45.479595	482533fc-d32d-4d01-86f3-07a715669a22
1465	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	2020-04-17 14:48:45.484924	2020-04-17 14:48:45.484924	f7dd317a-6a87-4c91-a693-72cea7c7fe95
1466	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	2020-04-17 14:48:45.490257	2020-04-17 14:48:45.490257	2c4c0304-efc0-4bf2-a478-c9b1dbd24f45
1467	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	2020-04-17 14:48:45.496591	2020-04-17 14:48:45.496591	8a16e732-a895-4c5d-a174-d5db6546cf68
1468	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	2020-04-17 14:48:45.502995	2020-04-17 14:48:45.502995	5e2e128f-9045-4df5-8b86-b36a7a0c8a59
1469	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	2020-04-17 14:48:45.508391	2020-04-17 14:48:45.508391	03dbf890-608e-4f28-a57d-22cb4629c074
1470	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	2020-04-17 14:48:45.51483	2020-04-17 14:48:45.51483	dbe52d31-f3b2-40b9-8ac3-abe946714ab7
1471	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	2020-04-17 14:48:45.520198	2020-04-17 14:48:45.520198	1b5e03a1-e717-4f1d-b638-67c8f881ffa6
1472	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	2020-04-17 14:48:45.526607	2020-04-17 14:48:45.526607	def11444-e640-473a-aa72-3ad9fc653e2e
1473	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	2020-04-17 14:48:45.532921	2020-04-17 14:48:45.531917	d48a2971-19d2-4325-a34b-42b7d1f22865
1474	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	2020-04-17 14:48:45.538333	2020-04-17 14:48:45.538333	499bc91e-216b-4159-bcf6-81ac2b5ce341
1475	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	2020-04-17 14:48:45.543661	2020-04-17 14:48:45.543661	10454617-4624-4771-887f-34d1e3170033
1476	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	2020-04-17 14:48:45.549001	2020-04-17 14:48:45.549001	1410147c-581f-4a18-b375-f9db21df86f8
1477	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	2020-04-17 14:48:45.554326	2020-04-17 14:48:45.554326	c9c1381e-5f2d-4c72-b23e-ca19242e5c03
1478	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	2020-04-17 14:48:45.559687	2020-04-17 14:48:45.559687	8ca88cc2-5c9f-4b6b-a48f-404438011bf0
1479	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	2020-04-17 14:48:45.566017	2020-04-17 14:48:45.565014	3e867e01-5dcd-4680-963f-680f5ef130d6
1480	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	2020-04-17 14:48:45.571406	2020-04-17 14:48:45.571406	6a93d502-9b9f-45f2-bc30-fcd1a6c19f51
1481	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	2020-04-17 14:48:45.577801	2020-04-17 14:48:45.577801	704ce5ad-3db6-44f8-b1ce-a4e947b10a53
1482	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	2020-04-17 14:48:45.584249	2020-04-17 14:48:45.584249	e67960d0-3865-48e1-87f2-290efcf50171
1483	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	2020-04-17 14:48:45.589539	2020-04-17 14:48:45.589539	6ead5e89-a33c-4386-9151-11d7ffe8abbf
1484	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	2020-04-17 14:48:45.595801	2020-04-17 14:48:45.595801	5124baed-b162-4a77-9f59-13e8d5ae8d79
1485	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	2020-04-17 14:48:45.602207	2020-04-17 14:48:45.602207	b09162a3-2975-4ce1-bc41-f2905de4914b
1486	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	2020-04-17 14:48:45.607557	2020-04-17 14:48:45.607557	611fff0a-91e2-42a1-a3ee-2dc53a3ccbab
1487	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	2020-04-17 14:48:45.612877	2020-04-17 14:48:45.612877	158402d3-88fa-4ef7-8030-072ce8293f1c
1488	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	2020-04-17 14:48:45.6182	2020-04-17 14:48:45.6182	a93fcb59-ed8f-481e-9379-f2bee6faf93a
1489	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	2020-04-17 14:48:45.623549	2020-04-17 14:48:45.623549	3679fbbd-9444-4c64-86d7-f1efdaf60a3d
1490	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	2020-04-17 14:48:45.628897	2020-04-17 14:48:45.628897	d1baff11-ed79-41f9-9472-fa58fdff3b1b
1491	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	2020-04-17 14:48:45.634218	2020-04-17 14:48:45.634218	53c8bcde-fdc3-44a3-8cf6-5f669b5363d9
1492	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	2020-04-17 14:48:45.640061	2020-04-17 14:48:45.640061	59f90d1d-02d1-4184-b4e6-acde073b4429
1493	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	2020-04-17 14:48:45.645345	2020-04-17 14:48:45.645345	184d6760-1ea8-49fe-9661-2c26d2c3cc15
1494	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	2020-04-17 14:48:45.650668	2020-04-17 14:48:45.650668	86162c47-f211-4698-9c9b-bdd64f28f037
1495	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	2020-04-17 14:48:45.65597	2020-04-17 14:48:45.65597	25619aa6-e1d1-4d33-b599-2ea4806550f9
1496	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	2020-04-17 14:48:45.662334	2020-04-17 14:48:45.662334	239deb92-fd5c-41d1-ac27-180012b4de30
1497	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	2020-04-17 14:48:45.667642	2020-04-17 14:48:45.667642	945e581f-9cea-4484-98b9-8a3696a1d029
1498	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	2020-04-17 14:48:45.672949	2020-04-17 14:48:45.672949	bdbfb163-11d1-4e67-b9df-0d16e432977c
1499	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	2020-04-17 14:48:45.678271	2020-04-17 14:48:45.678271	34fdc7bc-1f81-46cd-95a2-a0b4d4fe5b3f
1500	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	2020-04-17 14:48:45.683614	2020-04-17 14:48:45.683614	d61fcd1b-9d28-4c3e-951e-ab3ef5b4fefc
1501	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	2020-04-17 14:48:45.688917	2020-04-17 14:48:45.688917	faf6ff52-7d54-458d-9ace-197e4f7aef57
1502	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	2020-04-17 14:48:45.694231	2020-04-17 14:48:45.694175	96da1971-9693-406b-8768-8a7e5b9537de
1503	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	2020-04-17 14:48:45.69955	2020-04-17 14:48:45.698536	b4f2b184-f295-471f-af27-23f6d7622858
1504	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	2020-04-17 14:48:45.704912	2020-04-17 14:48:45.703902	012562ec-56d2-4b83-81ec-f71d3b3d2be2
1505	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	2020-04-17 14:48:45.709214	2020-04-17 14:48:45.709214	00ebfc89-9c8c-48bc-a187-3c06f70e7d2a
1506	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	2020-04-17 14:48:45.715572	2020-04-17 14:48:45.715572	8ece7caf-1fa5-4dc5-85a9-5295078814b6
1507	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	2020-04-17 14:48:45.721943	2020-04-17 14:48:45.721888	1607d7b6-158b-472c-828d-b8d137941afd
1508	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	2020-04-17 14:48:45.726207	2020-04-17 14:48:45.726207	b659cc52-4a71-4dc5-adc6-0f920e9b3f1b
1509	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	2020-04-17 14:48:45.732626	2020-04-17 14:48:45.732626	073cdea0-379c-4d6d-ad4a-3c35fc5ec1fb
1510	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	2020-04-17 14:48:45.738984	2020-04-17 14:48:45.738984	23f274bf-435e-48f7-ab45-121c3b0a2230
1511	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	2020-04-17 14:48:45.744293	2020-04-17 14:48:45.744293	7b1ffc21-f49a-438b-a2ea-b4cb518e73dc
1512	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	2020-04-17 14:48:45.749639	2020-04-17 14:48:45.749639	a207dcb9-45f1-443a-b096-21946b8a39aa
1513	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	2020-04-17 14:48:45.754951	2020-04-17 14:48:45.754951	23b193f0-4eb2-42a6-88d2-0051c6b1b30f
1514	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	2020-04-17 14:48:45.760244	2020-04-17 14:48:45.760244	2a35bc6a-82d9-475c-9caa-68eb36d347d1
1515	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	2020-04-17 14:48:45.765567	2020-04-17 14:48:45.765567	0fe87a12-e994-4e3f-bb35-c59f44dcf018
1516	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	2020-04-17 14:48:45.771911	2020-04-17 14:48:45.771911	b342476d-2822-49ca-a272-d2f47b8cb899
1517	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	2020-04-17 14:48:45.777199	2020-04-17 14:48:45.777199	193e6720-7808-48c4-8eee-acdca904d661
1518	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	2020-04-17 14:48:45.78252	2020-04-17 14:48:45.78252	b8d97ada-0c17-4747-ae86-9379210b9d80
1519	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	2020-04-17 14:48:45.788939	2020-04-17 14:48:45.788939	1561c076-4c21-4317-b3b6-e97f13120831
1520	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	2020-04-17 14:48:45.794227	2020-04-17 14:48:45.794174	c6d5e39e-93d1-44f4-9237-02c8fb88e401
1521	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	2020-04-17 14:48:45.79952	2020-04-17 14:48:45.798476	539cb264-2b89-4573-aaa8-af204e893f41
1522	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	2020-04-17 14:48:45.804861	2020-04-17 14:48:45.804861	452e505f-1826-4f88-bb66-4de9a2e5d433
1523	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	2020-04-17 14:48:45.810143	2020-04-17 14:48:45.810143	fcc2bb6f-71a0-41f0-85d6-eb279211f8c9
1524	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	2020-04-17 14:48:45.815427	2020-04-17 14:48:45.815427	c1eafe42-3878-49c9-8745-175e1c9af743
1525	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	2020-04-17 14:48:45.822882	2020-04-17 14:48:45.822882	5844d8a8-5551-4b62-92ac-d90ec2ebb328
1526	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	2020-04-17 14:48:45.828201	2020-04-17 14:48:45.828201	1f9df70a-e995-43f7-b9c4-10668cd9f455
1527	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	2020-04-17 14:48:45.833497	2020-04-17 14:48:45.833497	f723a7bf-0fed-4aab-919f-d87461296cea
1528	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	2020-04-17 14:48:45.838822	2020-04-17 14:48:45.838822	ac984497-3930-4bdf-a975-81dce566b4b5
1529	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	2020-04-17 14:48:45.845178	2020-04-17 14:48:45.845178	ed92acd2-6437-4612-8049-a3b3c7d7357d
1530	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	2020-04-17 14:48:45.851546	2020-04-17 14:48:45.851546	0760aa4a-42ca-4910-9f1e-7504760987de
1531	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	2020-04-17 14:48:45.856879	2020-04-17 14:48:45.856879	ebc62025-ded8-4ae7-9596-21b3ec503374
1532	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	2020-04-17 14:48:45.862219	2020-04-17 14:48:45.862219	8dcc56a3-00b9-4bcd-9bc3-8f0cf6a1fc96
1533	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	2020-04-17 14:48:45.867544	2020-04-17 14:48:45.867544	8fe993d3-1e5d-4652-bd11-94230498886a
1534	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	2020-04-17 14:48:45.872862	2020-04-17 14:48:45.872862	ad8c50de-b810-47ff-b156-df4b31c911f9
1535	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	2020-04-17 14:48:45.87819	2020-04-17 14:48:45.87819	563c0bb4-8448-42d1-a31e-18d2b9cb6d9d
1536	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	2020-04-17 14:48:45.883503	2020-04-17 14:48:45.883503	4f184024-db78-4052-a48d-e23f9b318557
1537	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	2020-04-17 14:48:45.888797	2020-04-17 14:48:45.888797	32dde7d3-0f49-4fce-92a2-04f0881cc1bf
1538	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	2020-04-17 14:48:45.894111	2020-04-17 14:48:45.894111	3856e2bc-0988-42b4-a74f-a224851e53fa
1539	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	2020-04-17 14:48:45.902597	2020-04-17 14:48:45.902597	0152aff6-e352-40f4-8015-70606b9070e7
1540	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	2020-04-17 14:48:45.907909	2020-04-17 14:48:45.907909	fa97943f-7882-44f3-9ee2-1c0079161f68
1541	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	2020-04-17 14:48:45.913204	2020-04-17 14:48:45.913204	3d3962b7-6cf6-4e9f-96e0-dba3d3c62901
1542	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	2020-04-17 14:48:45.918506	2020-04-17 14:48:45.918506	bbfeff01-6bfc-44a7-9fb8-0050c01f931b
1543	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	2020-04-17 14:48:45.923841	2020-04-17 14:48:45.923841	35576af2-607f-4488-8d4e-ca8714240b18
1544	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	2020-04-17 14:48:45.929189	2020-04-17 14:48:45.929189	6d47861a-cb2f-4be7-a9c5-29fadd04cd2d
1545	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	Dual Language	Dual Language	\N	\N	\N	2020-04-17 14:48:45.959531	2020-04-17 14:48:45.959531	0121d493-d391-4e96-a1a8-a9b2393f7a8b
1546	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	Two-Way Immersion	Two-Way Immersion	\N	\N	\N	2020-04-17 14:48:45.965914	2020-04-17 14:48:45.965914	b0fad3b0-aced-4ddc-9fae-0f130a078ece
1547	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	Transitional Bilingual	Transitional Bilingual	\N	\N	\N	2020-04-17 14:48:45.972302	2020-04-17 14:48:45.972302	630404e9-6d92-44a3-9ee0-f73366059e7b
1548	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	Developmental Bilingual	Developmental Bilingual	\N	\N	\N	2020-04-17 14:48:45.977622	2020-04-17 14:48:45.977622	8c7db87b-babf-4381-b1ca-a7144f3fcbc7
1549	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	Heritage Language	Heritage Language	\N	\N	\N	2020-04-17 14:48:45.982904	2020-04-17 14:48:45.982904	438bb842-c8ea-42f4-ad23-39e6a6c46249
1550	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	Sheltered English Instruction	Sheltered English Instruction	\N	\N	\N	2020-04-17 14:48:45.990335	2020-04-17 14:48:45.990335	ba9dbbf6-c6ee-4d80-be00-bb469020f79d
1551	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	Structured English Immersion	Structured English Immersion	\N	\N	\N	2020-04-17 14:48:45.995646	2020-04-17 14:48:45.995646	3e8451d0-553a-44fd-828e-3d40c93e985c
1552	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	SDAIE - Specially Designed Academic Instruction Delivered In English	SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	2020-04-17 14:48:46.002038	2020-04-17 14:48:46.002038	b5bbc450-c550-4e50-84f5-d063094e5aa8
1553	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	Content-Based ESL	Content-Based ESL	\N	\N	\N	2020-04-17 14:48:46.00725	2020-04-17 14:48:46.00725	76f93a28-d014-46c2-aa82-db6f319dc151
1554	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	Pull-Out ESL	Pull-Out ESL	\N	\N	\N	2020-04-17 14:48:46.012591	2020-04-17 14:48:46.012591	ce2a62a0-83bd-4091-987a-4e2fe4b4b77d
1555	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:46.018961	2020-04-17 14:48:46.018961	0e746ac0-e6b8-417a-af83-ee1390659e64
1556	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	2020-04-17 14:48:46.050051	2020-04-17 14:48:46.049054	61358135-9292-4225-be01-bd0e188bbd76
1557	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	2020-04-17 14:48:46.056435	2020-04-17 14:48:46.056435	7a9d15d5-8671-4033-b127-a7426067ea9e
1558	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	2020-04-17 14:48:46.061752	2020-04-17 14:48:46.061752	043b7078-a6b2-4309-be3e-fb4d6ac52b2d
1559	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	2020-04-17 14:48:46.067093	2020-04-17 14:48:46.067093	ec4c1b1d-f38f-4288-ad43-288ec6ef40d0
1560	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:46.07243	2020-04-17 14:48:46.07243	a86eab38-37f6-469a-bb81-10b474bda65d
1561	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	2020-04-17 14:48:46.080932	2020-04-17 14:48:46.080932	0dbab10f-c7cd-4da6-a7b9-2996d03b2a25
1562	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	2020-04-17 14:48:46.086223	2020-04-17 14:48:46.086223	a0ecd5a5-49e2-4fa7-b358-e8f8796dbed4
1563	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	2020-04-17 14:48:46.091572	2020-04-17 14:48:46.091572	e35b3083-8e23-471b-8562-d40c65ef8ef6
1564	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	2020-04-17 14:48:46.12205	2020-04-17 14:48:46.12205	6c10bbc4-76e0-4c6d-9fcf-9480ea6063bb
1565	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	2020-04-17 14:48:46.128409	2020-04-17 14:48:46.128409	21b9c350-8d5e-47b7-8256-f4966584da31
1566	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	2020-04-17 14:48:46.133697	2020-04-17 14:48:46.133697	fb762268-561d-406c-a924-440370fe1216
1567	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	2020-04-17 14:48:46.188178	2020-04-17 14:48:46.188178	1c046fc0-2d39-4711-bbc3-c5018d9f4b7c
1568	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	2020-04-17 14:48:46.195621	2020-04-17 14:48:46.195621	889b7f02-4252-40dd-bad2-ba508b330099
1569	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	2020-04-17 14:48:46.201998	2020-04-17 14:48:46.201998	1485bf19-5def-4af1-adaa-c7d937d38414
1570	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	2020-04-17 14:48:46.211517	2020-04-17 14:48:46.211517	221c568f-62cf-4c2b-9163-e42dc24d9352
1571	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	2020-04-17 14:48:46.243132	2020-04-17 14:48:46.242071	50732cb6-196b-4ac6-9ffa-3c277b8a40b8
1572	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	2020-04-17 14:48:46.250518	2020-04-17 14:48:46.250518	0c7ac83e-5801-4939-a601-325a6c78231d
1573	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:46.256816	2020-04-17 14:48:46.256816	f6dae955-ca8a-4eab-be45-1f00c32116d9
1574	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2020-04-17 14:48:46.262166	2020-04-17 14:48:46.262166	26a2b05e-7571-4d19-9fb8-7b5304c0f71a
1575	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	2020-04-17 14:48:46.26855	2020-04-17 14:48:46.26855	d8336bb7-227e-4f7c-8050-c81ad9c72c03
1576	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	2020-04-17 14:48:46.274937	2020-04-17 14:48:46.274937	c3de10d1-7022-4f73-9033-63fdf162dc41
1577	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	2020-04-17 14:48:46.306361	2020-04-17 14:48:46.305284	f84fac78-8285-4cd5-a76a-e5ce40944f41
1578	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	2020-04-17 14:48:46.313848	2020-04-17 14:48:46.313848	c6ae88d0-1cea-452d-a2c0-8d77f22e78b5
1579	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	2020-04-17 14:48:46.325325	2020-04-17 14:48:46.325325	0d3729e9-39f9-43f8-b052-25be70eda2f4
1580	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	2020-04-17 14:48:46.330665	2020-04-17 14:48:46.330665	09fb4999-ceb9-4645-ab92-0d18039cb1f1
1581	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	2020-04-17 14:48:46.33916	2020-04-17 14:48:46.33916	80d1b038-8f11-409a-ac80-22a5f5a8328c
1582	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	2020-04-17 14:48:46.344402	2020-04-17 14:48:46.344402	7666aac1-f9ec-476b-bdaf-7b8834f2fd0e
1583	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	2020-04-17 14:48:46.350783	2020-04-17 14:48:46.350783	296389ef-62b7-46e1-b6fe-d54110d48191
1584	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	2020-04-17 14:48:46.387956	2020-04-17 14:48:46.386903	70dbede8-2c80-4dbd-81b8-28827a8d4d98
1585	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	2020-04-17 14:48:46.394316	2020-04-17 14:48:46.394316	8ba7b085-0ac1-47eb-890d-90d0dc545521
1586	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	2020-04-17 14:48:46.402826	2020-04-17 14:48:46.402826	fb6e7107-21d7-4ded-87dc-ee0b190f878a
1587	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	2020-04-17 14:48:46.44798	2020-04-17 14:48:46.446982	26eacb18-f8c4-42c6-b20a-3de55f466abb
1588	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	2020-04-17 14:48:46.455397	2020-04-17 14:48:46.455374	2f1ca9ce-fc9d-4743-9472-2f6191a8e976
1589	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	2020-04-17 14:48:46.460714	2020-04-17 14:48:46.460714	e109af85-65e8-49b1-aebd-6e9434cef75b
1590	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	2020-04-17 14:48:46.469216	2020-04-17 14:48:46.469216	f6fa10a6-6e33-45cc-ab6c-8756bbc5176f
1591	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	2020-04-17 14:48:46.474526	2020-04-17 14:48:46.474526	1f9f2975-b8dc-4a9a-a618-46c200480457
1592	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	2020-04-17 14:48:46.480801	2020-04-17 14:48:46.479807	8073727a-5464-4d93-aa90-050ab48a8c97
1593	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	2020-04-17 14:48:46.489298	2020-04-17 14:48:46.489298	56f8315d-48e3-4d41-a261-26d47235f317
1594	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	2020-04-17 14:48:46.495661	2020-04-17 14:48:46.495661	62a6755c-c998-4a7e-b326-40d262c2ac89
1595	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	2020-04-17 14:48:46.503087	2020-04-17 14:48:46.503087	3779631f-92ab-4c53-b6c5-83c18d0bc6c6
1596	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	2020-04-17 14:48:46.509462	2020-04-17 14:48:46.509462	e66615e9-3ef3-4fd1-95fe-8cc6e02f06f3
1597	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	2020-04-17 14:48:46.753065	2020-04-17 14:48:46.753065	24d753fa-b657-4173-ab52-253fa1243bcd
1598	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	2020-04-17 14:48:46.758429	2020-04-17 14:48:46.758429	0597ab3c-382d-413b-84de-346d5b359585
1599	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	2020-04-17 14:48:46.764912	2020-04-17 14:48:46.764912	628761b9-cf4e-4f96-a1c1-6600e6c74819
1600	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	2020-04-17 14:48:46.775511	2020-04-17 14:48:46.775511	11b64050-7a1f-4393-a8c2-3363fa1bfb97
1601	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	2020-04-17 14:48:46.781894	2020-04-17 14:48:46.781894	9b7c1046-4035-4525-aeaa-7fc804622c91
1602	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	2020-04-17 14:48:46.81604	2020-04-17 14:48:46.815032	63544450-cece-4b4c-a400-4f09edf91652
1603	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	2020-04-17 14:48:46.822345	2020-04-17 14:48:46.822345	8a513900-bdd5-4009-9a7d-3f575a6891b4
1604	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	2020-04-17 14:48:46.828722	2020-04-17 14:48:46.828722	92fe7471-7c1d-4a20-8044-4465b451b679
1605	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	2020-04-17 14:48:46.835114	2020-04-17 14:48:46.835114	737f5515-126e-4ea4-8d97-11fa4580b34f
1606	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	2020-04-17 14:48:46.869936	2020-04-17 14:48:46.869936	d6977dcf-be9c-4eea-9f9f-b505b337bdcb
1607	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	2020-04-17 14:48:46.878416	2020-04-17 14:48:46.878393	174092f0-8b52-420a-9b21-011336d20cbc
1608	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	2020-04-17 14:48:46.884763	2020-04-17 14:48:46.883725	b10cfade-c954-403e-b5da-61fb6c48983f
1609	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	2020-04-17 14:48:46.897223	2020-04-17 14:48:46.897223	8b84d869-4e9c-4619-bc3d-3415f464ff38
1610	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	2020-04-17 14:48:46.904655	2020-04-17 14:48:46.903585	2c60dc9d-9304-48d6-b7c7-f4bc7a073815
1611	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	2020-04-17 14:48:46.911034	2020-04-17 14:48:46.911034	c4ec8098-c7f0-4c33-ad41-62536f047023
1612	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	2020-04-17 14:48:46.917389	2020-04-17 14:48:46.916386	bc434996-186c-4d1e-8bd6-b4de39b6044e
1613	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	2020-04-17 14:48:46.922724	2020-04-17 14:48:46.922724	b41c7b1b-bc4a-41e3-938b-f0d552c86304
1614	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	2020-04-17 14:48:46.92911	2020-04-17 14:48:46.92911	3057d41b-b484-422b-b2a1-dae6e5478079
1615	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	2020-04-17 14:48:46.934386	2020-04-17 14:48:46.934386	6220179a-e707-4719-94cf-de94c1edebcd
1616	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	2020-04-17 14:48:46.940735	2020-04-17 14:48:46.940735	266ce987-71b3-45db-9487-32d841e4bf96
1617	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	2020-04-17 14:48:46.946017	2020-04-17 14:48:46.946017	9535ce22-61df-4a06-bba3-31693028894d
1618	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	Charter	Charter	\N	\N	\N	2020-04-17 14:48:46.977421	2020-04-17 14:48:46.977421	1fee3f6f-5798-48fa-a6f2-1afa2b01b952
1619	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	Independent	Independent	\N	\N	\N	2020-04-17 14:48:46.988025	2020-04-17 14:48:46.988025	2e9dcccf-f34f-4db9-bd26-a37407e42fad
1620	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	2020-04-17 14:48:47.019291	2020-04-17 14:48:47.018235	b6686c5b-760f-45b1-8e5b-70aa2411b23a
1621	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	2020-04-17 14:48:47.02573	2020-04-17 14:48:47.02573	0d0ad198-3c8e-4242-b792-3e0baf24b569
1664	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-risk Indian Youth Programs	At-risk Indian Youth Programs	At-risk Indian Youth Programs	\N	\N	\N	2020-04-17 14:48:48.165789	2020-04-17 14:48:48.165789	713d55e7-276b-43b2-b36d-4ad2c897eec5
1622	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	2020-04-17 14:48:47.032122	2020-04-17 14:48:47.032122	a4abdd21-3635-461d-a6b7-104568a7fbfc
1623	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	2020-04-17 14:48:47.062778	2020-04-17 14:48:47.061769	35e5f9eb-4411-4fae-a3df-e3544ddaead1
1624	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	2020-04-17 14:48:47.070248	2020-04-17 14:48:47.070248	193538a8-3a98-4cc2-9cc7-38252a502f64
1625	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	2020-04-17 14:48:47.075595	2020-04-17 14:48:47.075595	c1402c4d-3971-4023-9a74-393f41566e14
1626	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	2020-04-17 14:48:47.080937	2020-04-17 14:48:47.080937	6df97575-d178-44ee-9373-aa6ec429dd0d
1627	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	2020-04-17 14:48:47.09157	2020-04-17 14:48:47.091552	c9ffda4c-b469-49e7-9e75-0f4ab0501e93
1628	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	2020-04-17 14:48:47.096925	2020-04-17 14:48:47.096925	28d88f0e-0a07-42db-a8fe-900724a2fee6
1629	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:47.102246	2020-04-17 14:48:47.102246	bf5f775c-881e-4465-af0b-3612218ec58b
1630	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	2020-04-17 14:48:47.107572	2020-04-17 14:48:47.107572	1cee26f3-383b-4c58-8a56-e1c1f45f7dd9
1631	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	2020-04-17 14:48:47.112875	2020-04-17 14:48:47.112875	9e4dabb7-5c4f-4f87-bd9b-73e1bb6e3dac
1632	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	2020-04-17 14:48:47.118195	2020-04-17 14:48:47.118195	a4f3d357-7479-4892-8682-5b1061dc7c77
1633	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	2020-04-17 14:48:47.12358	2020-04-17 14:48:47.12358	d0a1b906-f608-4fad-8ebb-467610a49a68
1634	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	2020-04-17 14:48:47.132099	2020-04-17 14:48:47.132099	3fbbefc6-5532-4b7d-a3a0-913690cfa386
1635	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	2020-04-17 14:48:47.137405	2020-04-17 14:48:47.137405	efc44e53-c253-4c27-9aeb-735a588690c1
1636	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	2020-04-17 14:48:47.173209	2020-04-17 14:48:47.172148	74b103c5-319d-4ea1-ac7f-07f98a6038e8
1637	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2020-04-17 14:48:47.183693	2020-04-17 14:48:47.183693	90e4d546-4b94-425b-ab35-9ca7b5a99a6f
1638	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2020-04-17 14:48:47.191106	2020-04-17 14:48:47.191106	96087b37-c35f-4aaf-bc92-2288d874fb62
1639	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2020-04-17 14:48:47.197469	2020-04-17 14:48:47.197469	3ae4fd04-e425-492d-8fa6-7675ebc7a131
1640	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	2020-04-17 14:48:47.204822	2020-04-17 14:48:47.203808	e2b82df8-a184-4652-a158-cb5a3a75cdaf
1641	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	2020-04-17 14:48:47.210222	2020-04-17 14:48:47.210222	1d3aab4a-1046-42eb-9d7c-f99e3d67f390
1642	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:47.217637	2020-04-17 14:48:47.217637	f73ea049-8adb-4080-915c-0a8bb83f6365
1643	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	2020-04-17 14:48:47.224003	2020-04-17 14:48:47.224003	7d22ab57-a5fb-4232-ade2-04a3aae3f333
1644	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2020-04-17 14:48:47.257657	2020-04-17 14:48:47.256595	2e67eafe-0094-4dc7-8947-c824b5a2e79d
1645	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	2020-04-17 14:48:47.265522	2020-04-17 14:48:47.265522	7127e911-411d-4ba4-b244-a76643174993
1646	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2020-04-17 14:48:47.504735	2020-04-17 14:48:47.504735	9dfbf84e-3a67-4b75-b5ca-acd47d42a1fc
1647	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	2020-04-17 14:48:47.512229	2020-04-17 14:48:47.512229	8c836b78-8f71-48b8-8961-3c4355f5e881
1648	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	2020-04-17 14:48:47.518648	2020-04-17 14:48:47.518648	d4a83150-9fec-4311-bdce-104d2473fa20
1649	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	2020-04-17 14:48:47.531256	2020-04-17 14:48:47.531256	9870faaf-6014-4400-91e2-5059b35fa8a1
1650	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	2020-04-17 14:48:47.53762	2020-04-17 14:48:47.53762	c74c7f70-6715-4d60-9e43-4ea4c66eaefd
1651	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	2020-04-17 14:48:47.570049	2020-04-17 14:48:47.568989	85b2dd01-322d-455e-a25a-9311dd1b4005
1652	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	2020-04-17 14:48:47.577522	2020-04-17 14:48:47.577522	855bc635-7d3e-4728-b727-ad003c1769f2
1653	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	2020-04-17 14:48:47.58287	2020-04-17 14:48:47.58287	ac219da0-7141-4fce-9bd8-dceb48308eda
1654	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	2020-04-17 14:48:47.615681	2020-04-17 14:48:47.61461	886d2227-230e-456d-9481-7ae06d6846ba
1655	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	2020-04-17 14:48:47.625242	2020-04-17 14:48:47.625242	8a1819c9-6391-4a22-9e3e-61b66d3e82db
1656	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	2020-04-17 14:48:47.631549	2020-04-17 14:48:47.630507	5f2856e1-8a83-40e6-89df-7bba0e946f63
1657	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	2020-04-17 14:48:48.088537	2020-04-17 14:48:48.088517	b13ac641-4694-4ca2-9265-65efa461e3f1
1658	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	2020-04-17 14:48:48.095979	2020-04-17 14:48:48.095979	8481de74-fd36-49f7-82ed-eab7e1f54d66
1659	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	Transition Programs	Transition Programs	\N	\N	\N	2020-04-17 14:48:48.128859	2020-04-17 14:48:48.128859	abb8bb82-6061-4990-a7b1-323d2111ed60
1660	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	Dropout Prevention Programs	Dropout Prevention Programs	\N	\N	\N	2020-04-17 14:48:48.139494	2020-04-17 14:48:48.139494	9c208cc2-863e-4e83-8948-22dfc4fe6060
1661	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	Health And Social Services	Health And Social Services	\N	\N	\N	2020-04-17 14:48:48.146829	2020-04-17 14:48:48.146829	e4dc2dbb-26dd-4332-aa83-4f9be0ae2dc7
1662	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	Special Programs	Special Programs	\N	\N	\N	2020-04-17 14:48:48.152066	2020-04-17 14:48:48.152066	9a3f4051-e4b2-4e87-9742-c430a95a4c1a
1663	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	Mentoring Programs	Mentoring Programs	\N	\N	\N	2020-04-17 14:48:48.158357	2020-04-17 14:48:48.158357	e5023ba8-9d53-4301-a40c-b4350b0f55d2
2181	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	2020-04-17 14:48:53.707526	2020-04-17 14:48:53.707526	38ca9c85-e6c0-4beb-a8c1-24d3c58ddd6c
1665	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	Pay For Success Initiatives	Pay For Success Initiatives	\N	\N	\N	2020-04-17 14:48:48.176185	2020-04-17 14:48:48.176185	db3187f8-9d56-421b-ad22-218bb5c1ee30
1666	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	2020-04-17 14:48:48.212638	2020-04-17 14:48:48.212638	bd872884-4e13-42bc-97ae-f644ff565a71
1667	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	2020-04-17 14:48:48.220962	2020-04-17 14:48:48.220962	7b6321cb-64b9-40a8-8268-0f097fbf6b06
1668	uri://ed-fi.org/OldEthnicityDescriptor	American Indian Or Alaskan Native	American Indian Or Alaskan Native	American Indian Or Alaskan Native	\N	\N	\N	2020-04-17 14:48:48.255972	2020-04-17 14:48:48.255972	3d41b88b-7256-4264-b67d-b2376284096f
1669	uri://ed-fi.org/OldEthnicityDescriptor	Asian Or Pacific Islander	Asian Or Pacific Islander	Asian Or Pacific Islander	\N	\N	\N	2020-04-17 14:48:48.265481	2020-04-17 14:48:48.265481	1baa4648-8bbd-48af-beb4-9e6d147be499
1670	uri://ed-fi.org/OldEthnicityDescriptor	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	\N	\N	\N	2020-04-17 14:48:48.272867	2020-04-17 14:48:48.272867	6b9c7307-383b-410f-a6f2-6051c81c0ae5
1671	uri://ed-fi.org/OldEthnicityDescriptor	Hispanic	Hispanic	Hispanic	\N	\N	\N	2020-04-17 14:48:48.27913	2020-04-17 14:48:48.27913	d6655a86-d429-4006-904c-037615ead5e4
1672	uri://ed-fi.org/OldEthnicityDescriptor	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	\N	\N	\N	2020-04-17 14:48:48.286514	2020-04-17 14:48:48.286514	82985de4-be85-413c-a3f1-774d01ccc801
1673	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	2020-04-17 14:48:48.323317	2020-04-17 14:48:48.322255	40c49c91-ddec-4ffd-b6d5-15c6c6e11eeb
1674	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	2020-04-17 14:48:48.330691	2020-04-17 14:48:48.330691	8104da3e-2f97-4782-98ea-a8623110a203
1675	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	2020-04-17 14:48:48.33614	2020-04-17 14:48:48.33614	480a459e-bd4b-4ff8-839a-b29c61463093
1676	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	2020-04-17 14:48:48.3426	2020-04-17 14:48:48.3426	cea32175-bc98-439f-8487-b80571b3ba8d
1677	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	2020-04-17 14:48:48.349094	2020-04-17 14:48:48.349094	c5efc2d9-9dff-4387-bf84-1a078c00af8b
1678	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2020-04-17 14:48:48.35453	2020-04-17 14:48:48.35453	0878b561-79f2-4d0d-a4ba-623034a5570a
1679	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	2020-04-17 14:48:48.36206	2020-04-17 14:48:48.36206	fc7900ef-11c9-442b-a5c4-50ed85970df3
1680	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	2020-04-17 14:48:48.367356	2020-04-17 14:48:48.367356	b2c5406b-3b4b-4392-9605-3fc228616208
1681	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	2020-04-17 14:48:48.399963	2020-04-17 14:48:48.399963	fd62e8be-fd31-490b-9d63-0860a2cb1f42
1682	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	2020-04-17 14:48:48.410422	2020-04-17 14:48:48.410422	26f09941-f089-433a-b863-308b68fa313f
1683	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	2020-04-17 14:48:48.41775	2020-04-17 14:48:48.41775	d1164817-f497-43ee-b47e-1a62e348b4fb
1684	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	2020-04-17 14:48:48.633729	2020-04-17 14:48:48.633729	49372fe2-8a7f-48cf-b32c-8557975d16a8
1685	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	2020-04-17 14:48:48.665772	2020-04-17 14:48:48.664773	b5bd87c9-a61d-4f34-abc9-c28401d75033
1686	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	2020-04-17 14:48:48.67197	2020-04-17 14:48:48.67197	0f940186-3746-4db0-807a-5dfc54500d7b
1687	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2020-04-17 14:48:48.678252	2020-04-17 14:48:48.678252	2347a89f-1419-4e78-9ffb-265d312732b1
1688	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	2020-04-17 14:48:48.683522	2020-04-17 14:48:48.683522	0cbf7563-18e4-44cc-a2e8-c98bc6d33d92
1689	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	2020-04-17 14:48:48.716188	2020-04-17 14:48:48.716188	866294c7-83e7-43ce-b1ff-07ead113cc9a
1690	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	2020-04-17 14:48:48.723637	2020-04-17 14:48:48.723637	6dd9e76b-c1bf-49cf-b374-706ff40733d5
1691	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	2020-04-17 14:48:48.738375	2020-04-17 14:48:48.738375	fa934fb1-0878-4eb0-96f8-5628e731c352
1692	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	2020-04-17 14:48:48.744755	2020-04-17 14:48:48.744755	4a60fc85-3c38-40ee-8e71-f8e6b2725816
1693	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	2020-04-17 14:48:48.750065	2020-04-17 14:48:48.750065	080ab4e6-370a-40b7-bad7-8c646f6edb3c
1694	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2020-04-17 14:48:48.783707	2020-04-17 14:48:48.783707	3793bf8b-8490-4b46-b569-49f1caac1405
1695	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	2020-04-17 14:48:48.791138	2020-04-17 14:48:48.791138	18fe948a-2013-4230-9a3b-2cb377de2aad
1696	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2020-04-17 14:48:48.796463	2020-04-17 14:48:48.796463	f07aece2-e534-48cb-976b-94df7d73d3d9
1697	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	2020-04-17 14:48:48.801801	2020-04-17 14:48:48.801801	a6b57b08-7b79-4013-9cb0-7de30ca24dd5
1698	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	2020-04-17 14:48:48.807105	2020-04-17 14:48:48.807105	1cdc8b43-c81a-4b12-9218-be13cd3fc744
1699	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2020-04-17 14:48:48.813499	2020-04-17 14:48:48.813499	59539c61-284f-466f-abd8-a1c862c4c77b
1700	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2020-04-17 14:48:48.818811	2020-04-17 14:48:48.818811	96ca8ee8-18ee-4cc2-b99a-748038c4aa87
1701	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2020-04-17 14:48:48.85335	2020-04-17 14:48:48.85335	f6aaf990-8389-4be2-9450-9faefd8b8b63
1702	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2020-04-17 14:48:48.860736	2020-04-17 14:48:48.860736	ce887b0d-2291-4bd6-9592-c6922e3ab731
1703	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2020-04-17 14:48:48.86604	2020-04-17 14:48:48.86604	61fc1f74-858b-4efc-a9c5-df9697af5877
1704	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2020-04-17 14:48:48.874705	2020-04-17 14:48:48.874705	983c75e2-875a-4775-b3d5-73137bd0fcb2
1705	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2020-04-17 14:48:48.879947	2020-04-17 14:48:48.879947	dcaeb140-94df-4e62-a70c-68e50c6f327c
1706	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2020-04-17 14:48:48.886257	2020-04-17 14:48:48.886257	f0be4be6-0ad9-43e5-82f6-4d846b149611
1707	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2020-04-17 14:48:48.891628	2020-04-17 14:48:48.891628	5d301b9f-4a0d-4fe7-89c5-953a78c95c68
1708	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2020-04-17 14:48:48.897963	2020-04-17 14:48:48.896957	f07d4183-edd9-4a38-8151-77072832adab
1709	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	Above Benchmark	Above Benchmark	\N	\N	\N	2020-04-17 14:48:48.903204	2020-04-17 14:48:48.903204	f273afc9-02ed-49e7-922a-51934b59e8b5
1710	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	Commended Performance	Commended Performance	\N	\N	\N	2020-04-17 14:48:48.908482	2020-04-17 14:48:48.908482	69e48a6c-8ea4-48c6-8430-272175322cf0
1711	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	Satisfactory	Satisfactory	\N	\N	\N	2020-04-17 14:48:48.913732	2020-04-17 14:48:48.913732	fba4fd03-7f65-4d6d-9b4e-5724793264c1
1712	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2020-04-17 14:48:48.921124	2020-04-17 14:48:48.921124	a74a2886-5ba4-42ac-b232-813288fb5ef8
1713	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	Unsatisfactory	Unsatisfactory	\N	\N	\N	2020-04-17 14:48:48.928543	2020-04-17 14:48:48.928543	26497248-af9a-4173-a75b-5c81acb27905
1714	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	2020-04-17 14:48:48.961234	2020-04-17 14:48:48.961234	ef579c45-94db-4b78-8315-664e1442a710
2182	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	2020-04-17 14:48:53.712868	2020-04-17 14:48:53.712868	b8d916df-0284-48a6-8b04-c22c529bf714
1715	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	2020-04-17 14:48:48.969735	2020-04-17 14:48:48.969735	2aa91438-fbf4-46a3-81ab-24375f863f52
1716	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	2020-04-17 14:48:48.976122	2020-04-17 14:48:48.976122	b5caa2d7-2406-441d-9945-24aff30d8032
1717	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	2020-04-17 14:48:48.982543	2020-04-17 14:48:48.982543	4afa5ebf-9517-4fa5-9889-943b9e993bae
1718	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	2020-04-17 14:48:48.988916	2020-04-17 14:48:48.988916	75fd9f04-9847-4e64-b1dd-0886bace5e8a
1719	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	2020-04-17 14:48:48.995284	2020-04-17 14:48:48.995284	664bb9fb-9846-4d2a-9121-e2c0fcbd77eb
1720	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	2020-04-17 14:48:49.000566	2020-04-17 14:48:49.000566	8b5b1ce3-29b0-4e7a-beca-6687253ddd58
1721	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:49.006928	2020-04-17 14:48:49.006928	8d1731f4-704c-4ad6-94e8-22f70a154b24
1722	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	2020-04-17 14:48:49.012212	2020-04-17 14:48:49.012212	7ff64ef1-d3f4-4d82-9472-96878d6e92a3
1723	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	2020-04-17 14:48:49.021739	2020-04-17 14:48:49.021739	041a2f47-0f93-4368-a16b-40990bfb3223
1724	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	2020-04-17 14:48:49.027995	2020-04-17 14:48:49.027995	2b6819cc-fc4e-488e-a5cc-9534b8902099
1725	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	2020-04-17 14:48:49.034243	2020-04-17 14:48:49.034243	7048ca6b-f528-4123-8171-49cf72f806ee
1726	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	2020-04-17 14:48:49.039477	2020-04-17 14:48:49.039477	13162746-811a-414c-86b4-e938d47befff
1727	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	2020-04-17 14:48:49.044791	2020-04-17 14:48:49.044791	5766007d-1e16-45dd-b220-cefa210c2587
1728	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	2020-04-17 14:48:49.050113	2020-04-17 14:48:49.050113	42304ad6-c942-45fc-967b-739c97c74043
1729	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	2020-04-17 14:48:49.083816	2020-04-17 14:48:49.082753	a8a0a10d-fcbb-4b0e-ad2a-f298aa8f5ee5
1730	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	2020-04-17 14:48:49.091205	2020-04-17 14:48:49.09017	e59b2c4c-4bba-4d7f-85c9-fe54de5aa673
1731	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	2020-04-17 14:48:49.120316	2020-04-17 14:48:49.120316	b2ae7294-0898-45b2-a211-b2a161e7a809
1732	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	2020-04-17 14:48:49.130848	2020-04-17 14:48:49.130848	e2304639-4389-4eb7-b288-a5b60c3e490d
1733	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	2020-04-17 14:48:49.137074	2020-04-17 14:48:49.137074	798a9a56-da35-45bb-8a76-69e06b7b549f
1734	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	2020-04-17 14:48:49.142311	2020-04-17 14:48:49.142311	8d74d5ae-7400-4e38-ace0-6c9f8dc6a9a7
1735	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2020-04-17 14:48:49.147506	2020-04-17 14:48:49.147506	58f0b8d8-6e5d-4c5d-adc0-d4ea43b625de
1736	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	2020-04-17 14:48:49.152754	2020-04-17 14:48:49.152754	894bf738-f308-4ca1-8d74-35bdf1604a3b
1737	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	2020-04-17 14:48:49.157985	2020-04-17 14:48:49.157985	48a1916d-9b89-451b-b1b1-a685f4226bcd
1738	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	2020-04-17 14:48:49.163302	2020-04-17 14:48:49.163302	caa21612-e9c0-41b0-9650-d0bc5a855d95
1739	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	2020-04-17 14:48:49.168588	2020-04-17 14:48:49.168588	097370b1-00ef-40ff-9e6b-e25227c4e858
1740	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	2020-04-17 14:48:49.17657	2020-04-17 14:48:49.17657	c73f3eb3-358b-4734-bd81-ed14396a573a
1741	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	2020-04-17 14:48:49.181816	2020-04-17 14:48:49.181816	684c5dd9-b591-4c6a-878a-96bc6328be77
1742	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	2020-04-17 14:48:49.213071	2020-04-17 14:48:49.212021	e2c36f8d-e412-4d79-8c1b-6eba57323412
1743	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	2020-04-17 14:48:49.219324	2020-04-17 14:48:49.219324	6c6ef64a-0979-432f-9d3c-9e70bc624189
1744	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	2020-04-17 14:48:49.254032	2020-04-17 14:48:49.252984	69cfb50d-747a-4f8c-8f08-0ef11e840ac8
1745	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	2020-04-17 14:48:49.26028	2020-04-17 14:48:49.26028	9fdcaaa0-2ef9-4d83-bb3e-feadaf12335e
1746	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	2020-04-17 14:48:49.266652	2020-04-17 14:48:49.266652	a96776cd-a15e-436b-b971-c102cd3ac631
1747	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	2020-04-17 14:48:49.271897	2020-04-17 14:48:49.271897	313b8ecf-391c-4461-9789-a19847a93319
1748	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	2020-04-17 14:48:49.27708	2020-04-17 14:48:49.27708	059572b7-c48d-4b8b-8802-802e2535d4ca
1749	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	2020-04-17 14:48:49.283337	2020-04-17 14:48:49.283337	01c4e31a-a837-423b-a8c0-d9910cf109a8
1750	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	2020-04-17 14:48:49.289729	2020-04-17 14:48:49.288688	189d3fc6-183f-407d-9452-fecb6bf98656
1751	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	2020-04-17 14:48:49.295087	2020-04-17 14:48:49.295087	326c09b3-0998-4f27-abe2-34fa367a24a6
1752	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	2020-04-17 14:48:49.30059	2020-04-17 14:48:49.30059	79cf9ade-1e21-44fb-a363-3d449fdc68ac
1753	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	2020-04-17 14:48:49.306845	2020-04-17 14:48:49.306845	2915757b-ad13-486e-9f81-07094749315b
1754	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	2020-04-17 14:48:49.312146	2020-04-17 14:48:49.312146	89669ec0-921b-49ee-8195-22502133d71b
1755	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	At least 2 but less than 4 years	At least 2 but less than 4 years	\N	\N	\N	2020-04-17 14:48:49.351971	2020-04-17 14:48:49.350963	fd47267c-f7d6-40a7-8af9-24fb331c0d37
1756	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	Four or more years	Four or more years	\N	\N	\N	2020-04-17 14:48:49.358326	2020-04-17 14:48:49.358326	262db31a-5682-488d-aee3-cb013e69778f
1801	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	2020-04-17 14:48:49.775014	2020-04-17 14:48:49.775014	caa0a242-975c-45af-b0c5-b1647b3cbf3b
1757	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	Less than 2 years (below associate)	Less than 2 years (below associate)	\N	\N	\N	2020-04-17 14:48:49.364612	2020-04-17 14:48:49.364612	1c1a0092-620d-4f18-b8de-ecef79f3f3a8
1758	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2020-04-17 14:48:49.396482	2020-04-17 14:48:49.396482	68176bc2-8cb5-42b0-9191-60d32d4010cb
1759	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	2020-04-17 14:48:49.403906	2020-04-17 14:48:49.403906	3fd597b0-c1b8-4c12-8733-0560e51a0e3d
1760	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	2020-04-17 14:48:49.439511	2020-04-17 14:48:49.439511	1f37fc35-b81b-435f-96f9-3ca212b312b8
1761	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:49.446927	2020-04-17 14:48:49.446927	73b7e08b-2179-4992-98f7-eb5ef66655cf
1762	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2020-04-17 14:48:49.453185	2020-04-17 14:48:49.453185	948e421a-43fb-4430-b72c-0c7db11ca440
1763	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2020-04-17 14:48:49.459407	2020-04-17 14:48:49.459407	45351627-171b-478a-92a9-489703971b95
1764	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	2020-04-17 14:48:49.464984	2020-04-17 14:48:49.464984	10f9bede-24d5-433f-a4c8-556ed8edf4c8
1765	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	2020-04-17 14:48:49.470474	2020-04-17 14:48:49.470474	5f5974ac-1a96-4eae-a666-ea5b6b0d4721
1766	uri://ed-fi.org/ProgramCharacteristicDescriptor	A McKinney-Vento Program for Homelessness	A McKinney-Vento Program for Homelessness	A McKinney-Vento Program for Homelessness	\N	\N	\N	2020-04-17 14:48:49.503091	2020-04-17 14:48:49.503091	965b3375-5ee8-4429-9946-32216d8c43c5
1767	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	2020-04-17 14:48:49.53545	2020-04-17 14:48:49.53545	e76fc1d1-cb2d-4d49-89a3-e81b92e8612b
1768	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	2020-04-17 14:48:49.547096	2020-04-17 14:48:49.547096	a8520dbb-c4a0-4ccb-8577-e23843fd799d
1769	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2020-04-17 14:48:49.553468	2020-04-17 14:48:49.552427	fa01a610-d8bb-44f3-87e6-893351c7d5da
1770	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	2020-04-17 14:48:49.558667	2020-04-17 14:48:49.558667	a0442372-6631-4f3a-8668-0dc39f56195a
1771	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2020-04-17 14:48:49.563953	2020-04-17 14:48:49.563953	cac7f178-35fb-480e-8d56-00e05ffa5f48
1772	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	2020-04-17 14:48:49.56926	2020-04-17 14:48:49.56926	58723c13-9387-4de2-8bc3-1d49929d7c9d
1773	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:49.575639	2020-04-17 14:48:49.575639	7c40a2d7-a507-4078-8793-01b296881489
1774	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	2020-04-17 14:48:49.583065	2020-04-17 14:48:49.583065	970dfdb5-0603-462e-9b74-40d1324a66d1
1775	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	2020-04-17 14:48:49.590383	2020-04-17 14:48:49.590383	4397641f-cd29-4b9a-bab7-56e2a90fa62c
1776	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	2020-04-17 14:48:49.596614	2020-04-17 14:48:49.596614	50be2272-c603-4b1b-adb2-c4edc734dace
1777	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:49.601815	2020-04-17 14:48:49.601815	60286c9a-2060-4003-a4e4-0f2d43ff65eb
1778	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2020-04-17 14:48:49.608098	2020-04-17 14:48:49.608098	f8d61ce5-8cd7-4b25-aa69-8cca0bacb9fa
1779	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	2020-04-17 14:48:49.643352	2020-04-17 14:48:49.642357	c60e13b9-40a6-4e49-8853-0102681a87d9
1780	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	2020-04-17 14:48:49.649706	2020-04-17 14:48:49.649706	fe20697b-824c-4f3f-9b17-27fa89cc4a98
1781	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	2020-04-17 14:48:49.655864	2020-04-17 14:48:49.655864	df3f28e6-e08c-4ec9-9433-bbfc54b8d1c5
1782	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2020-04-17 14:48:49.66211	2020-04-17 14:48:49.662049	bc64c434-77af-49f1-9dfe-d9855bcc02cf
1783	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	2020-04-17 14:48:49.667356	2020-04-17 14:48:49.667356	7ecd0b63-352b-4729-81b3-d6d06a3752b4
1784	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:49.672535	2020-04-17 14:48:49.672535	25101575-e8c8-466c-922c-743296f4c542
1785	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	2020-04-17 14:48:49.678781	2020-04-17 14:48:49.678781	a6a395ea-268b-49f0-abff-69eb4f95078a
1786	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	2020-04-17 14:48:49.684019	2020-04-17 14:48:49.684019	d1d2033a-9788-44cf-a073-8eb5d087436d
1787	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	2020-04-17 14:48:49.689258	2020-04-17 14:48:49.689258	ec59ecd8-ac62-49b3-8459-31b172370b78
1788	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	2020-04-17 14:48:49.6945	2020-04-17 14:48:49.6945	45d5c963-a204-4ccf-b472-d8152d3604e2
1789	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	2020-04-17 14:48:49.699775	2020-04-17 14:48:49.699775	ac6ce473-7a52-4d9e-9082-a16255b37206
1790	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2020-04-17 14:48:49.706095	2020-04-17 14:48:49.706062	af051c73-f1ad-4379-8612-50808d997cc7
1791	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	2020-04-17 14:48:49.711432	2020-04-17 14:48:49.711432	1fde39e5-9300-406c-81fb-911cb8c23521
1792	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	2020-04-17 14:48:49.723	2020-04-17 14:48:49.723	bfcb5b89-1195-4738-b89f-9ba57d5cf9e5
1793	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	2020-04-17 14:48:49.728315	2020-04-17 14:48:49.728315	364773e2-bf90-43f8-a7e8-3df00ede3764
1794	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	2020-04-17 14:48:49.733648	2020-04-17 14:48:49.733648	3e21cf6b-e7e6-4305-a19b-5a4d245f32c9
1795	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	2020-04-17 14:48:49.738943	2020-04-17 14:48:49.738943	e265e0b6-11ef-4013-97f1-7ec14b687b8f
1796	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	2020-04-17 14:48:49.746351	2020-04-17 14:48:49.746351	86957023-45f7-476f-9689-a010759dccc6
1797	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	2020-04-17 14:48:49.75171	2020-04-17 14:48:49.75171	45411358-749e-4bef-b513-6e1173d4be5d
1798	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	2020-04-17 14:48:49.757007	2020-04-17 14:48:49.757007	3a5ddf1e-fef8-44d7-aca6-7ee2dfb5eafb
1799	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	2020-04-17 14:48:49.763401	2020-04-17 14:48:49.763401	be84b5fd-416c-4077-bf54-450a01dba30b
1800	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2020-04-17 14:48:49.7687	2020-04-17 14:48:49.7687	f8b6400b-68bf-4577-a0b5-4b1b2a94f0b9
2179	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	2020-04-17 14:48:53.696047	2020-04-17 14:48:53.696047	0f9ebaed-05d4-4228-958a-33d9e1c2159b
1802	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	2020-04-17 14:48:49.780287	2020-04-17 14:48:49.780287	38a7ed04-2a6f-4e68-b517-2b0d1ed1f83e
1803	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	2020-04-17 14:48:49.78559	2020-04-17 14:48:49.78559	3f9292c3-0e78-4f98-9ab0-42b51345b0a0
1804	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	2020-04-17 14:48:49.791901	2020-04-17 14:48:49.790865	d27a7ebe-1f93-4b15-bccd-37c35fad4db3
1805	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2020-04-17 14:48:49.797224	2020-04-17 14:48:49.797224	dc2cf3e0-1f99-4d28-87fc-6adbc86cf7c0
1806	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	2020-04-17 14:48:49.803547	2020-04-17 14:48:49.803547	4f372bd6-24de-47ff-9649-4019b1a28c7b
1807	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	2020-04-17 14:48:49.80889	2020-04-17 14:48:49.80889	ab017c21-3ada-4819-b7bb-3da05a7abbb5
1808	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	2020-04-17 14:48:49.814238	2020-04-17 14:48:49.814238	170cc9d4-1f93-450a-9a61-e7c58dfee689
1809	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	2020-04-17 14:48:49.819533	2020-04-17 14:48:49.819533	af82038c-820c-493f-9887-ea1b506e28be
1810	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2020-04-17 14:48:49.825875	2020-04-17 14:48:49.825875	3c7dae0f-1e37-40dc-a34a-c8f6593ac038
1811	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	2020-04-17 14:48:49.832244	2020-04-17 14:48:49.832215	4274371b-b27e-450f-bbb2-46273f9f043a
1812	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	2020-04-17 14:48:49.837504	2020-04-17 14:48:49.837504	eead5e9a-4bc5-4710-80a3-4ea5d2b1f812
1813	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	2020-04-17 14:48:49.844855	2020-04-17 14:48:49.844855	219b28c6-bbf0-4097-931d-7daad6f91bab
1814	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	2020-04-17 14:48:49.85118	2020-04-17 14:48:49.850177	0e266a15-3130-4782-b092-770fbeb8f570
1815	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	2020-04-17 14:48:49.856547	2020-04-17 14:48:49.856547	6f48f6dd-24c6-45ff-b37a-5f1219babf96
1816	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	2020-04-17 14:48:49.995857	2020-04-17 14:48:49.995857	05745c1d-6176-45d9-9ed1-88888e7f0ef4
1817	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	2020-04-17 14:48:50.003071	2020-04-17 14:48:50.003071	35161ffe-ae30-462e-a341-d48c79eef08b
1818	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	2020-04-17 14:48:50.008333	2020-04-17 14:48:50.008333	f184f718-c49a-41cc-9598-cb2de3b2341c
1819	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:50.014542	2020-04-17 14:48:50.014542	31292260-e3d0-4bc0-9d37-8a64dc2de4fc
1820	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	2020-04-17 14:48:50.022784	2020-04-17 14:48:50.021787	547a3ecf-7b38-4a13-a02c-e16138c6f301
1821	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	2020-04-17 14:48:50.028909	2020-04-17 14:48:50.027912	2c8a8307-c18f-4bb3-8a52-45768bc53793
1822	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	2020-04-17 14:48:50.034159	2020-04-17 14:48:50.034159	037578a3-0ec8-427e-b19e-7c242566d812
1823	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	2020-04-17 14:48:50.04047	2020-04-17 14:48:50.04047	261fb1e6-8c81-4eef-9ed6-acaa2a652a15
1824	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	2020-04-17 14:48:50.046863	2020-04-17 14:48:50.046863	0d85af0a-c0d7-4412-9e63-7f70eacdde56
1825	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2020-04-17 14:48:50.052038	2020-04-17 14:48:50.052038	10bd5dd3-e700-421f-9001-39b36172d7f1
1826	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	2020-04-17 14:48:50.058249	2020-04-17 14:48:50.058249	de0e7f15-46f7-4a56-acbf-b0be360c16ec
1827	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	2020-04-17 14:48:50.064422	2020-04-17 14:48:50.064422	652c9b36-254d-4dfb-a66d-74db0545d08e
1828	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	2020-04-17 14:48:50.069625	2020-04-17 14:48:50.069625	8723e563-03ac-4312-abbf-03cc38e951dd
1829	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2020-04-17 14:48:50.074954	2020-04-17 14:48:50.074954	e562051d-90e5-41e3-9e1b-f41cc74693e8
1830	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	2020-04-17 14:48:50.080385	2020-04-17 14:48:50.080385	2291c4c6-ff6e-489e-916c-781694f28e2e
1831	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	2020-04-17 14:48:50.085619	2020-04-17 14:48:50.085619	ef6b50f9-2f31-443a-bee0-ba57bb5b25ae
1832	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	2020-04-17 14:48:50.091872	2020-04-17 14:48:50.091872	c8f611c1-ad01-4895-a0cd-dda7b981acb4
1833	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	2020-04-17 14:48:50.099327	2020-04-17 14:48:50.098277	c4c48e44-c604-41ca-a7df-41fda6fb5c7c
1834	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	2020-04-17 14:48:50.104656	2020-04-17 14:48:50.104656	68b867a7-1500-47cf-9d64-0cccaaec7587
1835	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	2020-04-17 14:48:50.111985	2020-04-17 14:48:50.111985	f043fcf2-efb7-476d-829a-872d48ed3537
1836	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	2020-04-17 14:48:50.117249	2020-04-17 14:48:50.117249	297dbacd-7212-4f8e-9396-3a8cb464ad94
1837	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	2020-04-17 14:48:50.123528	2020-04-17 14:48:50.123528	83e81e52-f349-4289-a7b6-d271f7a0ac6a
1838	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	2020-04-17 14:48:50.129908	2020-04-17 14:48:50.129908	562beb01-4598-4f82-b472-326e722ec3a1
1839	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	2020-04-17 14:48:50.174232	2020-04-17 14:48:50.173156	ade6f244-6f4a-463d-86b5-dbfb10637e2d
1840	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	2020-04-17 14:48:50.180594	2020-04-17 14:48:50.180594	cc1d5c29-19ca-49f2-9725-21b5e4daa64c
1841	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2020-04-17 14:48:50.186981	2020-04-17 14:48:50.186981	356b2d6c-e611-428d-a820-90c430945be6
1842	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	2020-04-17 14:48:50.221572	2020-04-17 14:48:50.220523	551853d8-3327-486d-9bfc-1de8d593a1c6
1843	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	2020-04-17 14:48:50.228909	2020-04-17 14:48:50.228909	fd3af1b9-7da1-4126-abbc-f4b754e6f4fd
1844	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	2020-04-17 14:48:50.235099	2020-04-17 14:48:50.235099	640d3a46-9875-4d77-8d57-690dd240a548
1845	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	2020-04-17 14:48:50.240488	2020-04-17 14:48:50.240488	cdccbdef-5d89-4b5e-93cc-6e6bf091f453
1846	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	Center-EC with SA	Center-EC with SA	\N	\N	\N	2020-04-17 14:48:50.276478	2020-04-17 14:48:50.276454	6dbaf00b-f99e-42c6-a8dc-7c563cebbc75
1847	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	Center-EC	Center-EC	\N	\N	\N	2020-04-17 14:48:50.284152	2020-04-17 14:48:50.284152	d2dbe2dd-dafc-47e1-8435-2b77bb551d25
1848	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	Center-SA Only	Center-SA Only	\N	\N	\N	2020-04-17 14:48:50.290496	2020-04-17 14:48:50.290496	48a9c0f9-400a-4f08-ba37-81e26089fe1a
1849	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	Licensed Day Care Center	Licensed Day Care Center	\N	\N	\N	2020-04-17 14:48:50.296848	2020-04-17 14:48:50.296848	93d41d35-875f-407e-bb2a-98b98d050ed2
1850	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	Licensed Family Child Care	Licensed Family Child Care	\N	\N	\N	2020-04-17 14:48:50.30326	2020-04-17 14:48:50.30326	b68c484c-32d4-4fda-a972-465201573171
1851	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	Licensed Large Family Child Care	Licensed Large Family Child Care	\N	\N	\N	2020-04-17 14:48:50.308571	2020-04-17 14:48:50.308571	d3e203a5-f35c-4f33-bc6f-64d893c4ee0d
1852	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	2020-04-17 14:48:50.313798	2020-04-17 14:48:50.313798	c365c8d9-3f0e-4769-8fd9-c38e34653469
1853	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	2020-04-17 14:48:50.348563	2020-04-17 14:48:50.348563	0336bceb-1b26-4631-930d-ebb21a309009
1854	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	2020-04-17 14:48:50.356001	2020-04-17 14:48:50.355974	5b7221e4-d59d-4d6c-8f5d-63cd84f600b7
1855	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	2020-04-17 14:48:50.361315	2020-04-17 14:48:50.361315	9cc742b4-4d11-4472-800d-2943fbda5445
1856	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	2020-04-17 14:48:50.397966	2020-04-17 14:48:50.397928	b5d5a739-f5c2-413d-a08f-19333b9af84b
1857	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2020-04-17 14:48:50.405231	2020-04-17 14:48:50.405231	2e7b517f-3126-4a95-bf44-b7960320c936
1858	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:50.41156	2020-04-17 14:48:50.41156	848f2d0d-343f-4c80-8f11-a6a69dc779e5
1859	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	2020-04-17 14:48:50.445243	2020-04-17 14:48:50.445243	5bc26b73-1b6d-4c33-a45d-4cd9f526e7fd
1860	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	2020-04-17 14:48:50.456802	2020-04-17 14:48:50.456802	b97964bf-b8f1-41f5-8cc1-497231c7fdc2
1861	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	2020-04-17 14:48:50.463009	2020-04-17 14:48:50.463009	67ca13a3-1fa7-4e27-b661-dcb42c6c3f20
1862	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	2020-04-17 14:48:50.469396	2020-04-17 14:48:50.469396	60d8136a-212c-4043-82b8-af8221acdd69
1863	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:50.474725	2020-04-17 14:48:50.474725	cf58d1d0-b4d2-48ee-a09f-0c661c831a04
1864	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	2020-04-17 14:48:50.507521	2020-04-17 14:48:50.506494	5701402e-f33b-4ce9-af10-7dda41e5ce9e
1865	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	2020-04-17 14:48:50.513811	2020-04-17 14:48:50.513811	5ec44f0c-ebf9-4987-9cb6-e9b505ca55ba
1866	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	2020-04-17 14:48:50.52013	2020-04-17 14:48:50.52013	eeaa761c-475c-4ad1-99b0-0fc5d2e3cdbd
1867	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	2020-04-17 14:48:50.52633	2020-04-17 14:48:50.52633	ba7f605a-d24a-48ed-a880-dcaf4382a08e
1868	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	2020-04-17 14:48:50.531591	2020-04-17 14:48:50.531591	79e92b5d-037b-47ae-b11d-68ef1f327165
1869	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:50.540033	2020-04-17 14:48:50.539023	e0c63c1f-8311-4301-b995-9244c2f89dbb
1870	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	2020-04-17 14:48:50.545409	2020-04-17 14:48:50.545409	b3413b62-bf63-4856-afe2-5a4a741f031d
1871	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2020-04-17 14:48:50.582104	2020-04-17 14:48:50.581053	df58e547-973e-455d-be2e-03f2e22feb6e
1872	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	2020-04-17 14:48:50.589363	2020-04-17 14:48:50.589363	b274bfbf-294b-4c41-ab09-d7e25e4dec61
1873	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	2020-04-17 14:48:50.595477	2020-04-17 14:48:50.595477	ea1df556-9835-4cb3-82ca-dbdcbeb7428b
1874	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	2020-04-17 14:48:50.600705	2020-04-17 14:48:50.600705	df55bf76-025b-42be-8cc9-25994dab4075
1875	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:50.606011	2020-04-17 14:48:50.606011	ae2392fe-3647-4885-886f-34f544827832
1876	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2020-04-17 14:48:50.612407	2020-04-17 14:48:50.611351	5cb2221f-f19e-4fdb-8afe-defc5f079dd7
1877	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2020-04-17 14:48:50.617809	2020-04-17 14:48:50.617809	a6d85cdc-ac29-47a8-bc8d-7d40577d5667
1878	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	2020-04-17 14:48:50.623026	2020-04-17 14:48:50.623026	2c1ed9d5-15f3-4583-b06f-089b4b4d09e5
1879	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	2020-04-17 14:48:50.628421	2020-04-17 14:48:50.628421	1fc083b7-de75-45b8-a763-b1f8ec54db88
1880	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	2020-04-17 14:48:50.633687	2020-04-17 14:48:50.633687	e5348fd3-6f3b-400a-b4a7-d2a9a0fd80f1
1881	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	2020-04-17 14:48:50.640129	2020-04-17 14:48:50.640129	e26eee12-363d-4307-8df3-d63be327bc16
1882	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	2020-04-17 14:48:50.679662	2020-04-17 14:48:50.679662	a3f40386-3b6d-4337-938b-1714b22149fe
1883	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	2020-04-17 14:48:50.686915	2020-04-17 14:48:50.686915	d802b568-8633-4010-a78f-245ae00caa1a
1884	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	2020-04-17 14:48:50.693098	2020-04-17 14:48:50.693098	8327f8fd-1c0f-4ead-9dce-a47fdeb57ce8
1885	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	2020-04-17 14:48:50.698312	2020-04-17 14:48:50.698312	765a5274-2d51-4aa4-bcde-b2faca7e4a1e
1886	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	2020-04-17 14:48:50.70364	2020-04-17 14:48:50.70364	47aa842a-2a3f-43c4-8987-dea10e78e5df
1887	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	2020-04-17 14:48:50.709962	2020-04-17 14:48:50.709962	5d7cdf2d-c702-4711-b530-d7d250fd6269
1888	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	2020-04-17 14:48:50.715152	2020-04-17 14:48:50.715152	43abb6e4-84bf-4e71-9611-b887713c0389
1889	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	2020-04-17 14:48:50.721362	2020-04-17 14:48:50.721362	d01578b1-6129-42e7-a1f1-61f0f89a9120
1890	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	2020-04-17 14:48:50.726673	2020-04-17 14:48:50.726673	512077cb-652d-4679-9c3e-519e39f9dfb7
1891	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:50.733093	2020-04-17 14:48:50.733093	2b634501-1a83-4259-afab-414e2f0290f9
1892	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	2020-04-17 14:48:50.739355	2020-04-17 14:48:50.739355	0fb73665-0d83-49ca-9b59-231e1c3121d1
1893	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	2020-04-17 14:48:50.744691	2020-04-17 14:48:50.744691	4b9b632e-3fbf-47fa-8af6-edd50769672f
1894	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	2020-04-17 14:48:50.751081	2020-04-17 14:48:50.751081	c0405142-5c87-40d9-be6d-5bdf9e7a9a38
1895	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	2020-04-17 14:48:50.760449	2020-04-17 14:48:50.760449	f05cb3e3-157c-42f6-b0df-d184c23061ed
1896	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	2020-04-17 14:48:50.793981	2020-04-17 14:48:50.792983	bd381f0f-f319-4bcb-815e-1a7f63bf822e
1897	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2020-04-17 14:48:50.800173	2020-04-17 14:48:50.800173	9efc623d-7dff-4cfd-9979-23a74cca1ce2
1898	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2020-04-17 14:48:50.806462	2020-04-17 14:48:50.806462	2a48e887-eca0-4325-9330-bf55b88046d3
1899	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2020-04-17 14:48:50.811649	2020-04-17 14:48:50.811649	01f5d3e2-8bb4-47eb-90b7-2b63dbd40e9d
1900	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2020-04-17 14:48:50.818027	2020-04-17 14:48:50.817973	e2893872-d3c2-4fa2-9a7f-402587c86414
1901	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2020-04-17 14:48:50.823302	2020-04-17 14:48:50.823302	1d0e1a12-c0df-45aa-8ef7-cd5e8d6fa4ff
1902	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	2020-04-17 14:48:50.829603	2020-04-17 14:48:50.829603	597c4af2-ecbc-4e74-9ee1-6db16bfde496
1903	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	2020-04-17 14:48:50.834792	2020-04-17 14:48:50.834792	ca8afaa2-315a-4af0-ba55-9211506d5f4a
1904	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	2020-04-17 14:48:50.841091	2020-04-17 14:48:50.841091	1ae80bdc-4907-40ae-ac98-541cb2e87252
1905	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:50.847326	2020-04-17 14:48:50.847326	8008aac9-77d6-4394-a15f-ac65e41cd4c7
1906	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	2020-04-17 14:48:50.856595	2020-04-17 14:48:50.856595	14db3b71-c600-4da4-8429-ef6262f27913
1907	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2020-04-17 14:48:50.861916	2020-04-17 14:48:50.861916	168923af-e498-4844-bed3-6129d5e707a9
1908	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	2020-04-17 14:48:50.895533	2020-04-17 14:48:50.894525	0cc375ec-62b5-4af2-ab0d-0f72b26999e9
1909	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	2020-04-17 14:48:50.902731	2020-04-17 14:48:50.902731	5dc52e35-f693-4045-8bd2-a53d88229362
1910	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	2020-04-17 14:48:50.909045	2020-04-17 14:48:50.909045	ab74f3dd-2bca-431b-9630-318a0fb4c8dc
1911	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	2020-04-17 14:48:50.91428	2020-04-17 14:48:50.91428	adbf7111-c4c0-4799-9bf6-ba64f4b8eb31
1912	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	2020-04-17 14:48:50.919632	2020-04-17 14:48:50.919632	1b8b12cc-57d4-462d-a407-27fcbaf56193
1913	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	2020-04-17 14:48:50.926953	2020-04-17 14:48:50.926953	498a4fdc-54da-4de2-a85f-77fa5a6c7a2c
1914	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	2020-04-17 14:48:50.932201	2020-04-17 14:48:50.932201	f669b340-8641-4dba-85e1-7eb431954922
1915	uri://ed-fi.org/RelationDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	2020-04-17 14:48:50.938445	2020-04-17 14:48:50.938445	c62e6437-fc4e-45c2-8ecd-f9eb0aa95b41
1916	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	2020-04-17 14:48:50.947901	2020-04-17 14:48:50.947901	e8d6a039-4c3c-4aeb-b45f-d92751e88579
1917	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	2020-04-17 14:48:50.954292	2020-04-17 14:48:50.954292	09c813c5-9c25-4b2d-91cf-d9199ec7a427
1918	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	2020-04-17 14:48:50.959604	2020-04-17 14:48:50.959604	95f242bf-cdf0-4bb2-b13e-ffc8102fccb3
1919	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	2020-04-17 14:48:50.964911	2020-04-17 14:48:50.964911	6e6dc401-fc34-44c8-8645-552406b166d1
1920	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	2020-04-17 14:48:50.971284	2020-04-17 14:48:50.971284	9a75df92-a58c-4a39-b609-90f94f2f617a
1921	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	2020-04-17 14:48:50.976589	2020-04-17 14:48:50.976589	9ef9a4a3-1d60-4f5d-a9f2-3daaa6d01f62
1922	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	2020-04-17 14:48:50.980811	2020-04-17 14:48:50.980811	e9181fe6-168e-44fc-9fc2-fd6c9925f5a9
1923	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	2020-04-17 14:48:50.994765	2020-04-17 14:48:50.994765	1f67bb09-b25e-4cbd-8d9a-912373dc284a
1924	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	2020-04-17 14:48:51.001055	2020-04-17 14:48:51.001055	af28d6cf-5d04-4358-adf0-e6903a9fdb76
1925	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	2020-04-17 14:48:51.007419	2020-04-17 14:48:51.007419	1376343c-dbab-4509-a3cd-1970978756d2
1926	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	2020-04-17 14:48:51.012789	2020-04-17 14:48:51.012789	28ec502f-b724-4bc9-84d6-8efed2e1dd03
1927	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	2020-04-17 14:48:51.021222	2020-04-17 14:48:51.021222	385340ac-a89d-4dc8-b838-21f70226eaf3
1928	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	2020-04-17 14:48:51.027627	2020-04-17 14:48:51.027627	cb82becc-e3fa-4cd6-8126-608ea0ac3ebe
1929	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	2020-04-17 14:48:51.034006	2020-04-17 14:48:51.034006	fb0aacba-b63d-45e7-b7d8-8daa0a05a073
1930	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	2020-04-17 14:48:51.040432	2020-04-17 14:48:51.040432	75e5ccc2-ff9e-499c-aa77-7b48bcc081b4
1931	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	2020-04-17 14:48:51.048916	2020-04-17 14:48:51.048916	75cac9b0-2bf7-41c4-af8f-3377e326239c
1932	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	2020-04-17 14:48:51.055295	2020-04-17 14:48:51.055295	f20773b3-d7e1-4b78-9847-d915e1ceab54
1933	uri://ed-fi.org/RelationDescriptor	Guardian	Guardian	Guardian	\N	\N	\N	2020-04-17 14:48:51.061647	2020-04-17 14:48:51.061647	1e714620-f6a8-4664-ae2c-3e88d96ccae7
1934	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	2020-04-17 14:48:51.247685	2020-04-17 14:48:51.247685	cb41b749-ce31-4719-94e6-dda2a090f23b
1935	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	2020-04-17 14:48:51.25295	2020-04-17 14:48:51.25295	7a3f1990-6782-4196-99bf-7816e4b72a51
1936	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	2020-04-17 14:48:51.25922	2020-04-17 14:48:51.25922	224fe870-c552-4330-8aa1-8307c90a28d8
1937	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	2020-04-17 14:48:51.26453	2020-04-17 14:48:51.26453	8f02d904-2666-42f2-8c7a-5c2c2395d066
1938	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	2020-04-17 14:48:51.270924	2020-04-17 14:48:51.270924	efb18f7b-828a-42ab-842d-f313a4c24fce
1939	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	2020-04-17 14:48:51.277143	2020-04-17 14:48:51.2771	aa1dd6a3-7888-4ee4-8b16-f063bd3faf5c
1940	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	2020-04-17 14:48:51.282459	2020-04-17 14:48:51.282459	b889634d-a994-4013-9248-0561ee363930
1941	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	2020-04-17 14:48:51.287695	2020-04-17 14:48:51.287695	cc67eb58-0d3d-4f5f-8180-cf473404e2bc
1942	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	2020-04-17 14:48:51.294117	2020-04-17 14:48:51.294117	470d0b72-82ca-4b9d-a7d3-f6a7216642fa
1943	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:51.301529	2020-04-17 14:48:51.301529	7c40641f-0f6a-4a12-bfe4-4b2590583719
1944	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	2020-04-17 14:48:51.306785	2020-04-17 14:48:51.306785	7b3a5a66-620d-45d7-b6f9-4de9c43b805d
1945	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	2020-04-17 14:48:51.317206	2020-04-17 14:48:51.317142	cab199c5-aac8-4086-a530-9b567c7500a0
1946	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	2020-04-17 14:48:51.323403	2020-04-17 14:48:51.323403	9cb1d76f-917a-4139-a789-3afca2edaa90
1947	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	2020-04-17 14:48:51.330689	2020-04-17 14:48:51.329677	72d4fbf4-aa8d-4712-a7ee-5469130e765c
1948	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	2020-04-17 14:48:51.337039	2020-04-17 14:48:51.337039	22f3f730-c8ea-4603-b0d5-868218e98a55
1949	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	2020-04-17 14:48:51.34238	2020-04-17 14:48:51.34238	c98926f9-61eb-4655-8037-f648c8121f84
1950	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	2020-04-17 14:48:51.348772	2020-04-17 14:48:51.348772	0996ae24-77d6-4848-b899-f42fc5fb4404
1951	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	2020-04-17 14:48:51.356138	2020-04-17 14:48:51.356138	f5e3bef0-ddb3-486a-8a09-a1da76114121
1952	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	2020-04-17 14:48:51.363611	2020-04-17 14:48:51.362577	560640db-44e3-46f1-9514-b0dd2179c4da
1953	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	2020-04-17 14:48:51.369008	2020-04-17 14:48:51.36895	e4acdbdd-30e0-4675-a398-4c3b0eef3577
1954	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	2020-04-17 14:48:51.374371	2020-04-17 14:48:51.374371	3d147e8b-bbe0-4d48-8f09-da18217c0605
1955	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:51.380706	2020-04-17 14:48:51.380706	7bc00068-92da-440f-a2e3-d8974a089b0a
1956	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	2020-04-17 14:48:51.386019	2020-04-17 14:48:51.386019	cb979109-f60b-4049-ba3a-ada7bfe74519
1957	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	2020-04-17 14:48:51.391361	2020-04-17 14:48:51.391361	1213fc27-93e8-45cc-9059-f11243d69b8d
1958	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	2020-04-17 14:48:51.425124	2020-04-17 14:48:51.425124	796443cf-004d-4137-b193-443bf2c1aa81
1959	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:51.432544	2020-04-17 14:48:51.432544	8f269dac-6ce3-4a07-af35-9d07d3072d4c
1960	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	2020-04-17 14:48:51.437854	2020-04-17 14:48:51.437854	55a2303e-eea7-4e7a-b1fd-e990c2b5b00f
1961	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	2020-04-17 14:48:51.443074	2020-04-17 14:48:51.443074	81307404-b5c1-40c9-87ae-d16ece275418
1962	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	2020-04-17 14:48:51.448356	2020-04-17 14:48:51.448356	2016cfd3-df1c-4659-b51d-ebefc2212536
1963	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	2020-04-17 14:48:51.453669	2020-04-17 14:48:51.453669	4e0f302d-f4d9-40ad-a451-0a658c1acf32
1964	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	2020-04-17 14:48:51.458981	2020-04-17 14:48:51.458981	8afb25df-7b37-4cd8-9373-588ba579d0f8
1965	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	2020-04-17 14:48:51.46535	2020-04-17 14:48:51.46535	2d06c786-68f3-408d-ac3e-5d98e9721958
1966	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	2020-04-17 14:48:51.496762	2020-04-17 14:48:51.495753	5405c56d-0dd0-4ecd-b133-9522542f2dfb
1967	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	2020-04-17 14:48:51.507228	2020-04-17 14:48:51.507228	7cb76034-c06b-4c21-9eab-85551acb76ae
1968	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:51.513604	2020-04-17 14:48:51.513582	d0c12a10-f51f-4d04-a73b-c0657445d242
1969	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	2020-04-17 14:48:51.518954	2020-04-17 14:48:51.518954	860ba93a-77c1-42bb-9644-dc898ae4265f
1970	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	2020-04-17 14:48:51.524274	2020-04-17 14:48:51.524274	1dc0ab1c-bbe2-47e9-bccb-434867fec328
1971	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	2020-04-17 14:48:51.530648	2020-04-17 14:48:51.530648	239a3104-d6dc-4da8-8c69-7ff5fbebcd9e
1972	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	2020-04-17 14:48:51.563138	2020-04-17 14:48:51.562129	0d5668df-3786-4570-a506-b4becc0f2d76
1973	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	2020-04-17 14:48:51.569314	2020-04-17 14:48:51.569314	79f826b8-d981-4e6e-93b7-9fdd924c1afd
1974	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	2020-04-17 14:48:51.575696	2020-04-17 14:48:51.575696	c6bd9346-7262-4439-8d79-89f325d174b2
1975	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	2020-04-17 14:48:51.581962	2020-04-17 14:48:51.581962	0cf9c436-fbda-4fe3-bff3-1860aa8f762d
1976	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	2020-04-17 14:48:51.587169	2020-04-17 14:48:51.587169	ef0c16da-6f6d-466b-a46d-ea9e9405d6f6
1977	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	2020-04-17 14:48:51.623961	2020-04-17 14:48:51.622887	913a2d5e-0f8f-47a8-ac2e-71f8e5be28db
1978	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	2020-04-17 14:48:51.631254	2020-04-17 14:48:51.631254	0d8f440b-ffcd-4968-8d04-906bf31db1a9
1979	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	2020-04-17 14:48:51.637456	2020-04-17 14:48:51.637456	298ace4a-9271-4cb2-8c4a-d6836899f02d
1980	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	2020-04-17 14:48:51.642757	2020-04-17 14:48:51.642757	654dd03f-1e34-4b18-8966-867f3e6c03d2
1981	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	2020-04-17 14:48:51.674203	2020-04-17 14:48:51.673154	d23c5dd1-dad3-424d-bc95-043f481155b2
1982	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2020-04-17 14:48:51.680548	2020-04-17 14:48:51.680548	4e2943fe-69cc-4420-80e7-6c70d37abdc8
1983	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	2020-04-17 14:48:51.685734	2020-04-17 14:48:51.685734	ef09f9d6-b815-429f-82c8-506cd601d858
1984	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	2020-04-17 14:48:51.690934	2020-04-17 14:48:51.690934	0ba76235-e589-419d-9464-08525ba9eb04
1985	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	2020-04-17 14:48:51.69729	2020-04-17 14:48:51.696261	48ccfdd9-cb25-4769-999b-5b8fb05acb5a
1986	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	2020-04-17 14:48:51.705698	2020-04-17 14:48:51.705698	d0a38d13-5ec3-4011-9147-094e1aa11cc8
1987	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	2020-04-17 14:48:51.712061	2020-04-17 14:48:51.712061	06ddab3a-7559-4d13-bf65-4e1d006c1aff
1988	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	2020-04-17 14:48:51.717308	2020-04-17 14:48:51.717308	96c2d766-4d23-4eb1-879d-cbf3480746ab
1989	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	2020-04-17 14:48:51.749906	2020-04-17 14:48:51.748898	81d99f9b-e7fe-45be-9a66-234c449e274c
1990	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	2020-04-17 14:48:51.756235	2020-04-17 14:48:51.756235	9bbfdb12-e98c-448a-b566-bf24f92f2606
1991	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	2020-04-17 14:48:51.762569	2020-04-17 14:48:51.762569	9c7ccea6-ba10-41b7-9989-cb081ce5ecba
1992	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	2020-04-17 14:48:51.793952	2020-04-17 14:48:51.792909	cdfad322-81b4-484b-a0fc-c378e1ca70dd
1993	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	2020-04-17 14:48:51.801395	2020-04-17 14:48:51.801395	9612ae12-0fcb-464a-b5b3-4948f31b898d
1994	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	2020-04-17 14:48:51.807797	2020-04-17 14:48:51.807797	565e1c2c-107d-4df1-834c-f32472fd4dbd
1995	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	2020-04-17 14:48:51.817217	2020-04-17 14:48:51.817217	2462a38c-6db5-4449-a3e8-78bd44b80b51
1996	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2020-04-17 14:48:51.823583	2020-04-17 14:48:51.823583	f3c8392d-a024-426f-bcb3-78bb2a45fb76
1997	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	2020-04-17 14:48:51.828903	2020-04-17 14:48:51.828903	52d5ef2a-decd-431b-88ed-594d300c3aeb
1998	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	2020-04-17 14:48:51.861321	2020-04-17 14:48:51.860324	b14c8557-6db9-4890-bb4d-8fc3b4d93826
1999	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	2020-04-17 14:48:51.867581	2020-04-17 14:48:51.867581	8268d553-03d1-4c9a-b34a-7728b1272cc2
2000	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	2020-04-17 14:48:51.87617	2020-04-17 14:48:51.87617	cacdc847-3e1b-4322-ad8d-520700dab5be
2001	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	2020-04-17 14:48:51.881402	2020-04-17 14:48:51.881402	69120dc6-3fc2-48dc-ac93-7536b294c672
2002	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	2020-04-17 14:48:51.915043	2020-04-17 14:48:51.913987	0e77a958-599a-455d-84b0-0e42092353c1
2003	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	2020-04-17 14:48:51.926532	2020-04-17 14:48:51.926532	781180a7-b181-4ec9-830a-75233c615ba6
2004	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	2020-04-17 14:48:51.932807	2020-04-17 14:48:51.932807	d942c4e8-6856-4abb-bff1-4820f08ef1d7
2005	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	Elementary/Secondary School	Elementary/Secondary School	\N	\N	\N	2020-04-17 14:48:51.938092	2020-04-17 14:48:51.938092	159dc2a4-46e5-45bd-b63d-93a6253ddac7
2006	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	2020-04-17 14:48:51.944419	2020-04-17 14:48:51.944419	80fe0a10-9a85-4684-ab9d-1bd2eaac5bef
2007	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	2020-04-17 14:48:51.94971	2020-04-17 14:48:51.94971	b6f5fc4f-6c40-443a-b5f4-f8f08dce94af
2008	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	2020-04-17 14:48:51.956041	2020-04-17 14:48:51.956041	1dda749c-6d6c-46d2-a591-3025d47f1745
2009	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	2020-04-17 14:48:51.961291	2020-04-17 14:48:51.961291	61a50b6e-4579-44b9-b201-5711d8e693f7
2010	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	2020-04-17 14:48:51.967712	2020-04-17 14:48:51.967712	60d3efe9-0b7a-437a-be4c-009da7be8ddd
2011	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	2020-04-17 14:48:51.972903	2020-04-17 14:48:51.972903	5a46e3be-8504-4d70-94bb-bd43392b53f7
2012	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	2020-04-17 14:48:51.978075	2020-04-17 14:48:51.978075	cad9a92a-c1c1-4c86-98ec-81e87990be41
2013	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	2020-04-17 14:48:51.984419	2020-04-17 14:48:51.984419	1e6f288b-236a-4dfd-aa98-db9543002976
2014	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	2020-04-17 14:48:51.98966	2020-04-17 14:48:51.98966	c39a3d65-4e2c-4892-92d8-86602005d99a
2015	uri://ed-fi.org/SchoolCategoryDescriptor	SecondarySchool	SecondarySchool	SecondarySchool	\N	\N	\N	2020-04-17 14:48:51.996048	2020-04-17 14:48:51.996048	f5259741-80ab-4ff4-84aa-8dd9787dfb64
2016	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2020-04-17 14:48:52.002313	2020-04-17 14:48:52.002313	58a7c642-460d-4c6d-bae1-6771f978bec4
2017	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	2020-04-17 14:48:52.037942	2020-04-17 14:48:52.037942	7e86ad54-0498-4168-a129-dff7384e5f0c
2018	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	2020-04-17 14:48:52.045298	2020-04-17 14:48:52.045298	4b350dcf-b2f2-4286-8da1-37338412602f
2019	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	2020-04-17 14:48:52.051633	2020-04-17 14:48:52.051633	535c7567-1b54-4fd3-917d-2e59cf09301c
2020	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	2020-04-17 14:48:52.057968	2020-04-17 14:48:52.057968	b8818cfa-fed3-4c48-8b4b-e6d5a2c8d682
2021	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	2020-04-17 14:48:52.090453	2020-04-17 14:48:52.090453	a10d204b-5b0d-4e83-b4be-431bbbf091cc
2022	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	2020-04-17 14:48:52.097971	2020-04-17 14:48:52.097971	1a9133cf-c813-4c3f-9807-3d84f6c21b8f
2023	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	2020-04-17 14:48:52.103297	2020-04-17 14:48:52.103297	868f0921-8c11-486b-87a6-00586a08284a
2024	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	2020-04-17 14:48:52.109637	2020-04-17 14:48:52.109637	41588687-ff3e-45df-979d-0f415d041d5d
2025	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	2020-04-17 14:48:52.11617	2020-04-17 14:48:52.11617	57347ed1-12dc-40d2-901f-6b2664bccfe3
2026	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	2020-04-17 14:48:52.12148	2020-04-17 14:48:52.12148	20adc121-5809-4a22-a4b6-85ee46ceebf2
2027	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	2020-04-17 14:48:52.139186	2020-04-17 14:48:52.138149	753d03ef-e888-4108-85ba-1704c84d8dfb
2028	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	2020-04-17 14:48:52.144412	2020-04-17 14:48:52.144412	3d904f96-5e7b-4f9a-bfd6-e00be0cb6f49
2029	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	2020-04-17 14:48:52.150799	2020-04-17 14:48:52.150799	f71065fb-509a-4c06-8bac-0be6a9fcbfca
2030	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	2020-04-17 14:48:52.156061	2020-04-17 14:48:52.156061	d2479a16-b16b-46f6-a131-328f66f096aa
2031	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	2020-04-17 14:48:52.161329	2020-04-17 14:48:52.161329	ba43178e-479b-4f89-8bbc-c29a2a231339
2032	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	2020-04-17 14:48:52.166599	2020-04-17 14:48:52.166599	44dee312-7db6-48ae-b8d6-a40d4c881f7b
2033	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	2020-04-17 14:48:52.171828	2020-04-17 14:48:52.171828	fcb17e4d-de60-453f-919c-ede177df4f4e
2034	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	2020-04-17 14:48:52.177109	2020-04-17 14:48:52.177109	169a4df9-b868-4d6d-ba91-572f45f89f39
2035	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:52.182429	2020-04-17 14:48:52.182429	54e1e654-8afd-45fa-910c-d2ef88ec5e90
2036	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	2020-04-17 14:48:52.218103	2020-04-17 14:48:52.218103	6f6a9f68-1d52-4373-8166-c0a6da9dbe9d
2037	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2020-04-17 14:48:52.228592	2020-04-17 14:48:52.225452	102b8101-b1f4-4a06-b397-4695ead3c8e4
2038	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	2020-04-17 14:48:52.234826	2020-04-17 14:48:52.234826	ac246136-5c46-47bf-b8ec-14791e9cd5ff
2039	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2020-04-17 14:48:52.240122	2020-04-17 14:48:52.240122	36bc4596-e827-4cd0-a676-2e7fd75f865b
2040	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	2020-04-17 14:48:52.27261	2020-04-17 14:48:52.271556	40da9237-b1f5-4772-8bcb-446787758ca3
2041	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	2020-04-17 14:48:52.278857	2020-04-17 14:48:52.278857	eb0b9ddd-0d5b-42b7-acb6-64aea0751e94
2042	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	2020-04-17 14:48:52.310179	2020-04-17 14:48:52.309109	45fb23bf-82ab-42fb-ad5a-c331d66fd491
2043	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	2020-04-17 14:48:52.316546	2020-04-17 14:48:52.316546	4bf71de2-54cc-4ab9-925d-e1323453f0d2
2044	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:52.322934	2020-04-17 14:48:52.322934	cef1e8f2-715e-4bb8-8082-96ece3306a21
2045	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	2020-04-17 14:48:52.333547	2020-04-17 14:48:52.333547	9f3f846f-b1c2-42fd-94f7-59f503352f1f
2046	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	2020-04-17 14:48:52.365012	2020-04-17 14:48:52.363958	db6349ae-7a3d-4752-844a-a3e2f25bd535
2047	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	2020-04-17 14:48:52.372387	2020-04-17 14:48:52.372367	44349d0b-604d-426c-8b58-048755c9c99a
2048	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	2020-04-17 14:48:52.377704	2020-04-17 14:48:52.377704	d4f58ce1-397d-493a-9b47-b517d2ff504b
2049	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	2020-04-17 14:48:52.38415	2020-04-17 14:48:52.38415	32624604-12da-46db-a4ca-4a4a7236ee73
2050	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	2020-04-17 14:48:52.390547	2020-04-17 14:48:52.390547	4d74e087-253e-4cd4-9815-2991ed5ca046
2051	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	2020-04-17 14:48:52.396961	2020-04-17 14:48:52.396961	ae76593d-4f26-4146-9475-4e9679061875
2052	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:52.402304	2020-04-17 14:48:52.402304	9a904827-7180-42cd-9a20-ab9d8041ecba
2053	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	2020-04-17 14:48:52.408742	2020-04-17 14:48:52.408742	ceadcf73-d7b0-4b2a-9a4c-9122095b5251
2054	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	2020-04-17 14:48:52.415167	2020-04-17 14:48:52.415167	fcef6098-794d-431a-9e83-1217e5c205f5
2055	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:52.420515	2020-04-17 14:48:52.420515	db46315c-290c-43b4-9b51-93ce2ebad01f
2056	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	2020-04-17 14:48:52.428903	2020-04-17 14:48:52.428903	4ebe9243-a934-4065-be10-fb73b6ed0ce6
2057	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	2020-04-17 14:48:52.460494	2020-04-17 14:48:52.460494	09c3ccbb-1c31-4d1a-8cde-577a8c14dbfb
2058	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	2020-04-17 14:48:52.467878	2020-04-17 14:48:52.467878	8e88471c-51ec-4378-8789-48eb05761c1e
2059	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	2020-04-17 14:48:52.473209	2020-04-17 14:48:52.473209	339ac4b0-119b-4b05-87d8-1602ce3d199e
2060	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	2020-04-17 14:48:52.479427	2020-04-17 14:48:52.479427	8f53d2c9-ea7d-46f2-ae33-be4e7391d403
2061	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	2020-04-17 14:48:52.484722	2020-04-17 14:48:52.484722	e7c1cbc9-cfd2-434a-9b84-2eadad4a5d36
2062	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	2020-04-17 14:48:52.489966	2020-04-17 14:48:52.489966	e2bc5edf-4e37-467e-82fc-ffa2b4c04c74
2063	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	2020-04-17 14:48:52.496385	2020-04-17 14:48:52.496385	fb70c798-b7d9-4eca-8539-7be6944067fd
2064	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	2020-04-17 14:48:52.501579	2020-04-17 14:48:52.501579	2f6b8ff8-31ec-4a68-b1ff-755483634a21
2065	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	2020-04-17 14:48:52.506882	2020-04-17 14:48:52.506882	d67b1997-1650-40cc-b4bb-1f29879f58ff
2066	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	2020-04-17 14:48:52.51632	2020-04-17 14:48:52.515323	7d2aa772-f85a-499b-be31-5c5c10ea1a08
2067	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	2020-04-17 14:48:52.5237	2020-04-17 14:48:52.5237	238766ed-2574-4e88-a9a6-999d3a6e7c29
2068	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	2020-04-17 14:48:52.528949	2020-04-17 14:48:52.528949	c1f3d87b-b134-4f27-93f4-3caa0a20818f
2069	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	2020-04-17 14:48:52.53426	2020-04-17 14:48:52.53426	ed656a13-c08e-4673-b359-310e6d6c70dc
2070	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	2020-04-17 14:48:52.539588	2020-04-17 14:48:52.539588	57eeea3d-5c25-4363-a09d-1c3cc403d0f6
2071	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	2020-04-17 14:48:52.544921	2020-04-17 14:48:52.544921	b9c2e031-c5e9-4532-8394-8df7cd6d5308
2072	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	2020-04-17 14:48:52.577656	2020-04-17 14:48:52.576605	056c4b16-6292-4d9a-bec4-c7e5e6aa5cc0
2073	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	2020-04-17 14:48:52.584963	2020-04-17 14:48:52.584963	0ab86de7-b59e-42e6-93a1-d152e730798a
2074	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	2020-04-17 14:48:52.590265	2020-04-17 14:48:52.590265	ddc5ea96-bbf3-4c78-8543-b2f97901ee99
2075	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	2020-04-17 14:48:52.629192	2020-04-17 14:48:52.628144	e4f3524d-aa15-4832-8a43-7e51b4a1d8f9
2076	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	2020-04-17 14:48:52.636659	2020-04-17 14:48:52.636659	23b2f562-b773-4ab4-85cd-bbbb21dd3b70
2077	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	2020-04-17 14:48:52.643069	2020-04-17 14:48:52.643069	73e75d9e-4119-4b4a-a2ed-d9a05e43035e
2078	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	2020-04-17 14:48:52.649486	2020-04-17 14:48:52.649486	506a32ea-a2bb-4f09-aa60-36e267c5bac7
2079	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	2020-04-17 14:48:52.655865	2020-04-17 14:48:52.655865	34a5e77e-05e3-4598-aceb-4b75bd101e7b
2080	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	2020-04-17 14:48:52.66329	2020-04-17 14:48:52.66329	7755b12c-1129-4816-b52d-ae79826396a9
2180	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	2020-04-17 14:48:53.701323	2020-04-17 14:48:53.701323	fee885a1-7fcd-4676-a866-94a1389b527e
2081	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	2020-04-17 14:48:52.668601	2020-04-17 14:48:52.668601	9d66dd49-4d35-451e-b9e9-a6f90652585a
2082	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	2020-04-17 14:48:52.67496	2020-04-17 14:48:52.67496	848b5655-53f1-482c-837e-8eac338dbc76
2083	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	2020-04-17 14:48:52.682358	2020-04-17 14:48:52.682358	09dac686-38d6-41ab-873b-db06f4bad503
2084	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	2020-04-17 14:48:52.688757	2020-04-17 14:48:52.688757	bd67c260-6dd9-49b3-8338-40be6c841c5a
2085	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	2020-04-17 14:48:52.695128	2020-04-17 14:48:52.695128	f944399a-6603-4e0e-bc69-030eb02a15f9
2086	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	2020-04-17 14:48:52.702545	2020-04-17 14:48:52.702545	63d2ee54-f3bb-42f2-ad6a-4ac963733394
2087	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional Facilities	Correctional Facilities	Correctional Facilities	\N	\N	\N	2020-04-17 14:48:52.742379	2020-04-17 14:48:52.742379	7ef7889a-bdc4-4a63-92f8-96e3d4c81d23
2088	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	2020-04-17 14:48:52.749832	2020-04-17 14:48:52.749832	22337116-c870-4d7d-a781-7ed587553bed
2089	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	2020-04-17 14:48:52.75514	2020-04-17 14:48:52.75514	3d8f5cae-d895-4847-a2bd-c0f3e4fc5237
2090	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	2020-04-17 14:48:52.76046	2020-04-17 14:48:52.76046	c0d09b92-1594-460d-9208-b242dc323e82
2091	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	Inside reg class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	2020-04-17 14:48:52.765786	2020-04-17 14:48:52.765786	85a14278-59f4-4ead-8f5d-3f82c0a9ca07
2092	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in Private Schools	Parentally-placed in Private Schools	Parentally-placed in Private Schools	\N	\N	\N	2020-04-17 14:48:52.771121	2020-04-17 14:48:52.771121	767b35df-f2d3-4848-89c7-34e072a042dc
2093	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential Facility	Residential Facility	Residential Facility	\N	\N	\N	2020-04-17 14:48:52.776442	2020-04-17 14:48:52.776442	36c616d8-5223-4b67-b3a8-1084e1c76c8f
2094	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate School	Separate School	Separate School	\N	\N	\N	2020-04-17 14:48:52.782857	2020-04-17 14:48:52.782792	ceb7eed4-a0d4-4fa9-be45-fa4806aebbf7
2095	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	Instructional Aide	Instructional Aide	\N	\N	\N	2020-04-17 14:48:52.814308	2020-04-17 14:48:52.813253	f36cd46c-fd7d-40d5-b2be-b3f10d03a6f2
2096	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	2020-04-17 14:48:52.82493	2020-04-17 14:48:52.82493	d5f88523-3769-4b47-b734-7c0ccfc6c40e
2097	uri://ed-fi.org/StaffClassificationDescriptor	Librarians/Media Specialists	Librarians/Media Specialists	Librarians/Media Specialists	\N	\N	\N	2020-04-17 14:48:52.831336	2020-04-17 14:48:52.831336	4541b225-ae01-4851-b3a5-fbc97a2fb5e4
2098	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	2020-04-17 14:48:52.837752	2020-04-17 14:48:52.837752	4574c3e2-4fb7-4d13-8ab1-8d94c3d6da85
2099	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2020-04-17 14:48:52.843057	2020-04-17 14:48:52.843057	143b2efa-89a1-443c-8d40-26412c3de315
2100	uri://ed-fi.org/StaffClassificationDescriptor	Principal	Principal	Principal	\N	\N	\N	2020-04-17 14:48:52.848378	2020-04-17 14:48:52.848378	db5eb784-2c35-49e5-b2fb-821e4647f5af
2101	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2020-04-17 14:48:52.854715	2020-04-17 14:48:52.853706	e27738d2-7be9-4091-89ac-f968d1db91bc
2102	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	2020-04-17 14:48:52.860116	2020-04-17 14:48:52.860116	62176852-f849-4cd1-af8e-370da62229a2
2103	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	Operational Support	Operational Support	\N	\N	\N	2020-04-17 14:48:52.865451	2020-04-17 14:48:52.865451	ff9ad632-80a0-417a-af58-b3b004532f72
2104	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	2020-04-17 14:48:52.870731	2020-04-17 14:48:52.870731	39184108-327b-45c0-a4a1-da0937fe0b12
2105	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	Instructional Coordinator	Instructional Coordinator	\N	\N	\N	2020-04-17 14:48:52.877114	2020-04-17 14:48:52.877114	1ba35693-8e93-4ec3-a1d7-038e1690248b
2106	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	School Leader	School Leader	\N	\N	\N	2020-04-17 14:48:52.882374	2020-04-17 14:48:52.882374	58494e47-9389-4b89-97dd-bc1ef18b597e
2107	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	Assistant Superintendent	Assistant Superintendent	\N	\N	\N	2020-04-17 14:48:52.887562	2020-04-17 14:48:52.887562	47860a85-7367-4f90-91ec-b3266465a0cf
2108	uri://ed-fi.org/StaffClassificationDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:52.892798	2020-04-17 14:48:52.892798	333773be-402f-41a4-9f61-2314574368cd
2109	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	Support Services Staff	Support Services Staff	\N	\N	\N	2020-04-17 14:48:52.898019	2020-04-17 14:48:52.898019	5c3a77d2-19a2-49f9-8b22-8289a24f6272
2110	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	LEA Specialist	LEA Specialist	\N	\N	\N	2020-04-17 14:48:52.905412	2020-04-17 14:48:52.905412	4bad0814-fc8f-48d3-bb88-df78e9982092
2111	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	State Administrator	State Administrator	\N	\N	\N	2020-04-17 14:48:52.910686	2020-04-17 14:48:52.910686	e5eb0ef3-5ccd-4c9a-9279-30ae6c76015c
2112	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	2020-04-17 14:48:52.915887	2020-04-17 14:48:52.915887	c6af4e32-f62b-4caa-9356-d99bb567b2e4
2113	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	School Specialist	School Specialist	\N	\N	\N	2020-04-17 14:48:52.921234	2020-04-17 14:48:52.921234	e0bb0163-b479-4061-8b88-ce572b5e25bd
2114	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	LEA System Administrator	LEA System Administrator	\N	\N	\N	2020-04-17 14:48:52.926607	2020-04-17 14:48:52.926607	ab766ded-93aa-4d5b-b01c-6edfb55c7fa2
2115	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2020-04-17 14:48:52.95833	2020-04-17 14:48:52.95833	aedde64f-7076-471a-822a-4ac6e3b1b262
2116	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2020-04-17 14:48:52.965837	2020-04-17 14:48:52.965837	ae1850d2-ecb5-41e9-ab61-8b2b41d68bf5
2117	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	2020-04-17 14:48:52.973097	2020-04-17 14:48:52.973097	ae3b21f8-91b9-4e56-b7f8-4cd2f27af476
2118	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2020-04-17 14:48:52.978393	2020-04-17 14:48:52.978393	d8b7ac1d-ee2a-453a-88e7-4c3c15c57f74
2119	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	2020-04-17 14:48:52.983591	2020-04-17 14:48:52.983591	f01ae03a-fcea-40bb-8a20-15a57cca64f3
2120	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	2020-04-17 14:48:52.989951	2020-04-17 14:48:52.989951	26ef9f03-2bb6-48f1-a3a3-75694f406f4d
2121	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:53.001563	2020-04-17 14:48:53.001563	6bee22b2-f7cf-4bb6-be03-1ac09cc433de
2122	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2020-04-17 14:48:53.00786	2020-04-17 14:48:53.00786	b6b8bccd-ba6c-46aa-9f8d-330dace4b461
2123	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	2020-04-17 14:48:53.014263	2020-04-17 14:48:53.014263	af09f206-2758-44a9-946f-4a7e7bcebd81
2124	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	2020-04-17 14:48:53.020656	2020-04-17 14:48:53.020656	6c86979b-4774-4369-b536-b1c3122d6b2b
2125	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:53.029402	2020-04-17 14:48:53.029402	c2f29e5c-087a-4361-a85e-2af60deda29c
2126	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	2020-04-17 14:48:53.035726	2020-04-17 14:48:53.035726	ab083f69-c329-45de-962e-117817b95841
2127	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2020-04-17 14:48:53.042062	2020-04-17 14:48:53.042062	d34530c5-46c1-408e-8a6c-2f709ea28a21
2128	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2020-04-17 14:48:53.051552	2020-04-17 14:48:53.051552	19975b8d-f3db-43e8-9255-be7c031728f6
2129	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	2020-04-17 14:48:53.058954	2020-04-17 14:48:53.058954	ac5cf60b-b28e-4e9c-a676-3de2b4c66905
2130	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2020-04-17 14:48:53.098788	2020-04-17 14:48:53.097725	edcd6813-d5d9-4369-9301-599c30f4739e
2131	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	2020-04-17 14:48:53.11238	2020-04-17 14:48:53.11238	530674a5-a3d6-4910-81dd-ca2c717e5460
2132	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2020-04-17 14:48:53.11968	2020-04-17 14:48:53.11968	b88506ab-07f3-4ad1-9496-9e23f42d1088
2133	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2020-04-17 14:48:53.125928	2020-04-17 14:48:53.125928	fc4f53ba-9a13-4ba0-9517-8519bfb58935
2134	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	2020-04-17 14:48:53.131211	2020-04-17 14:48:53.131211	660bac34-eb87-4a05-811a-f1b7c63d8ff7
2135	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2020-04-17 14:48:53.143428	2020-04-17 14:48:53.142372	8cf36007-6f50-4aac-b36a-e3b49f1e22ed
2136	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	2020-04-17 14:48:53.151643	2020-04-17 14:48:53.151643	a7aba26b-bcfd-4639-9146-1cd48bac3e57
2137	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2020-04-17 14:48:53.16296	2020-04-17 14:48:53.16296	eb579daa-040c-4581-8cac-6dc12725822f
2138	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	2020-04-17 14:48:53.172081	2020-04-17 14:48:53.172081	07f8a171-01e0-44c8-acd0-5030b267092b
2139	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:53.178384	2020-04-17 14:48:53.178384	85b6bdf8-f033-4b14-ac8c-a798921bf11a
2140	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2020-04-17 14:48:53.187686	2020-04-17 14:48:53.187686	605118a1-ae75-4abd-96ec-629777cc25d9
2141	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2020-04-17 14:48:53.194991	2020-04-17 14:48:53.194991	aea4a0b9-29fc-4c73-ac20-3229880abfdc
2142	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2020-04-17 14:48:53.204308	2020-04-17 14:48:53.204308	5637f0c0-d2aa-414a-9d9e-608335d8e09e
2143	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	2020-04-17 14:48:53.212218	2020-04-17 14:48:53.212218	c2702636-36b0-49e9-9144-4a4932c77159
2144	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2020-04-17 14:48:53.224599	2020-04-17 14:48:53.224599	1d3694b1-1446-4bca-81bd-e9aea6a87f45
2145	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2020-04-17 14:48:53.231929	2020-04-17 14:48:53.231929	fce8cdee-9b27-4686-b40a-a1a34a2d514a
2146	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2020-04-17 14:48:53.237253	2020-04-17 14:48:53.237253	b283f2a5-d814-46ac-b2b4-a29119216f0f
2147	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2020-04-17 14:48:53.243649	2020-04-17 14:48:53.243649	f061da26-a706-4d03-93cc-07c6d0b5a935
2148	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	2020-04-17 14:48:53.276269	2020-04-17 14:48:53.275215	24a40f63-f138-4f7e-a744-f47e5b4585c1
2149	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	2020-04-17 14:48:53.282562	2020-04-17 14:48:53.282562	1d8e3227-5e7e-4809-aacd-f891cec6a462
2150	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	2020-04-17 14:48:53.287753	2020-04-17 14:48:53.287753	518fb54e-2b9e-4285-8378-0019a70e64df
2151	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	2020-04-17 14:48:53.294092	2020-04-17 14:48:53.293086	c79fcb8e-5b16-4020-9e18-d97423fdb9ab
2152	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	2020-04-17 14:48:53.29947	2020-04-17 14:48:53.29947	5bd15b2d-513e-4908-aa9b-61f427aa7bd4
2153	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	2020-04-17 14:48:53.304783	2020-04-17 14:48:53.304783	1c5b0e23-7ad7-4637-ae07-805611afd408
2154	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	2020-04-17 14:48:53.309995	2020-04-17 14:48:53.309995	7da57c7e-2314-4aba-987a-44388c43d674
2155	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	2020-04-17 14:48:53.318509	2020-04-17 14:48:53.318509	cd46df28-0322-4368-a7e7-3291defcf714
2156	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	2020-04-17 14:48:53.323837	2020-04-17 14:48:53.323837	4cd3f23a-45e5-47c2-adbf-fcfbfe36222b
2157	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	2020-04-17 14:48:53.329169	2020-04-17 14:48:53.329169	2e258928-3b77-4dbf-a8bf-e114f580e5de
2158	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	2020-04-17 14:48:53.334357	2020-04-17 14:48:53.334357	e78fb94c-85f4-43ef-b90f-6fad25128fdc
2159	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	2020-04-17 14:48:53.340746	2020-04-17 14:48:53.340746	98246dc1-30d2-455f-8d8c-a30af2ca552b
2160	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	2020-04-17 14:48:53.346051	2020-04-17 14:48:53.346051	adb302b0-c627-4c7b-a6e1-5dcbaed2b6ca
2161	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	2020-04-17 14:48:53.352466	2020-04-17 14:48:53.352466	71bd20c6-13bf-46ec-8b79-e6d5a2aaefaa
2162	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	2020-04-17 14:48:53.358869	2020-04-17 14:48:53.358869	508e2acb-6d06-4340-b60a-7b9d0d02de7c
2163	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	2020-04-17 14:48:53.365234	2020-04-17 14:48:53.365234	b497fcc8-b8c0-4b7e-9e6c-c72376b7762a
2164	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	2020-04-17 14:48:53.605094	2020-04-17 14:48:53.605094	2d6df11c-0d43-41d3-bb42-7a607b9dbede
2165	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	2020-04-17 14:48:53.612437	2020-04-17 14:48:53.611444	95243b24-9803-4003-9747-675539e73565
2166	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	2020-04-17 14:48:53.618842	2020-04-17 14:48:53.618842	23ddd372-a5fe-4ba7-b9c0-73687b7b565f
2167	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	2020-04-17 14:48:53.624111	2020-04-17 14:48:53.624111	26049916-6bc5-46e8-b321-291ee1a1f71f
2168	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	2020-04-17 14:48:53.630426	2020-04-17 14:48:53.630426	7e08e006-0823-4d31-b850-582d87b29d9b
2169	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	2020-04-17 14:48:53.63565	2020-04-17 14:48:53.63565	d66a4a4f-bc89-4796-9641-34c08aceb0f6
2170	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	2020-04-17 14:48:53.642852	2020-04-17 14:48:53.642852	e3cadab5-74a1-4edc-8b40-cd5d74c3bf5d
2171	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	2020-04-17 14:48:53.649254	2020-04-17 14:48:53.649254	f66b59b7-c778-415f-a20b-9daacee00ce5
2172	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	2020-04-17 14:48:53.655669	2020-04-17 14:48:53.655614	c76675ca-0cdb-4265-84fd-72f6870e4743
2173	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	2020-04-17 14:48:53.660971	2020-04-17 14:48:53.660971	4f3ac5e2-78e3-4c0f-9b3d-e6171b43661f
2174	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	2020-04-17 14:48:53.66633	2020-04-17 14:48:53.66633	ff9ed516-3a77-48a0-9e4c-195bf516e7da
2175	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	2020-04-17 14:48:53.672714	2020-04-17 14:48:53.672714	838415fe-18a5-4979-8783-1856b2615398
2176	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	2020-04-17 14:48:53.679095	2020-04-17 14:48:53.67908	a91519f9-3047-465c-b967-d609615896ac
2177	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	2020-04-17 14:48:53.68441	2020-04-17 14:48:53.68441	c3f9058e-b4e9-4ca6-b42c-81ec0936659e
2178	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	2020-04-17 14:48:53.690672	2020-04-17 14:48:53.690672	d9990c48-4db1-477c-8ace-4c2599734555
2183	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	2020-04-17 14:48:53.719105	2020-04-17 14:48:53.719105	d4417af2-0732-4131-9775-717ba6398e88
2184	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	2020-04-17 14:48:53.728599	2020-04-17 14:48:53.728599	819bea9d-4de5-41a3-98ce-886906c8a14f
2185	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	2020-04-17 14:48:53.734882	2020-04-17 14:48:53.734882	24caf9c4-2490-4494-ba38-82560c987ff0
2186	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	2020-04-17 14:48:53.741278	2020-04-17 14:48:53.741278	8227f1b2-50ea-4819-bd28-06431b7a1de2
2187	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	2020-04-17 14:48:53.74661	2020-04-17 14:48:53.74661	94bcbb10-2ca3-4c49-a6b8-0904852d2487
2188	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	2020-04-17 14:48:53.7521	2020-04-17 14:48:53.7521	9b5005d6-4d5c-48e2-b2a2-ea9fa5cf4f69
2189	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	2020-04-17 14:48:53.758471	2020-04-17 14:48:53.758471	15900616-2e1b-4a8b-b40c-8e3312a64ebe
2190	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	2020-04-17 14:48:53.764838	2020-04-17 14:48:53.764838	a338c100-feca-4167-8a06-e682d3a15703
2191	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	2020-04-17 14:48:53.770156	2020-04-17 14:48:53.770156	0454055f-e8da-4d69-9c2a-273625eb83f6
2192	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	2020-04-17 14:48:53.776532	2020-04-17 14:48:53.776532	6e7d2c37-f13f-4491-9768-ceb7244fa3da
2193	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	2020-04-17 14:48:53.781827	2020-04-17 14:48:53.781827	f00dfbfb-244d-4d0d-8c1c-5d0a3ff34de8
2194	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	2020-04-17 14:48:53.788099	2020-04-17 14:48:53.788099	dff3e6c7-1d73-4e9e-92f4-de04e849b81e
2195	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	2020-04-17 14:48:53.794479	2020-04-17 14:48:53.794459	e7ef5b43-2c74-4472-a5c4-1cfd1248d0f3
2196	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	2020-04-17 14:48:53.799731	2020-04-17 14:48:53.799731	e2b842f1-3a22-4688-a702-7c4e4e31facc
2197	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	2020-04-17 14:48:53.80596	2020-04-17 14:48:53.80596	b0bc0ac0-3ae4-4a3b-bd08-049a0238a71c
2198	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	2020-04-17 14:48:53.812465	2020-04-17 14:48:53.812465	df7e57da-d7fb-4cdf-b6a7-4184dc322d96
2199	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	2020-04-17 14:48:53.820953	2020-04-17 14:48:53.820953	681c1700-386f-424d-8175-e00b77141be5
2200	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	2020-04-17 14:48:53.827375	2020-04-17 14:48:53.827375	023c6e4d-b96b-47a9-a272-7bd0ed10f6b0
2201	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	2020-04-17 14:48:53.833764	2020-04-17 14:48:53.833764	b9364502-1651-4111-a04e-408cabfe7a63
2202	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	2020-04-17 14:48:53.841197	2020-04-17 14:48:53.841197	ca5e523e-5de6-43eb-ab8c-59a747b1b133
2203	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	2020-04-17 14:48:53.84867	2020-04-17 14:48:53.84867	9dfc22bb-1281-4b06-b4d7-fb45a09ddf7c
2204	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	2020-04-17 14:48:53.85603	2020-04-17 14:48:53.855032	3367e908-87c1-4dc9-b2f3-750318b7a1e7
2205	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	2020-04-17 14:48:53.862295	2020-04-17 14:48:53.862295	b9642e37-8f02-4ee5-91b1-c0b7efb43f9c
2206	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	2020-04-17 14:48:53.868699	2020-04-17 14:48:53.868699	53c30b50-108b-42fb-9757-fe4ca3362de6
2207	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	2020-04-17 14:48:53.87399	2020-04-17 14:48:53.87399	7a1bba65-f190-44ec-ace4-491f3c6bc2ea
2208	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	2020-04-17 14:48:53.880384	2020-04-17 14:48:53.880384	a1c05669-003e-494b-9061-dac79bf5114b
2209	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	2020-04-17 14:48:53.885672	2020-04-17 14:48:53.885672	0a2fb0a9-30f3-4cfc-8c9c-b3bbba50cfb0
2210	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	2020-04-17 14:48:53.92369	2020-04-17 14:48:53.923649	5dbafcab-5ed5-498f-9dd7-eb91bcf961d3
2211	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	2020-04-17 14:48:53.932032	2020-04-17 14:48:53.932032	2dace6f5-6f1a-4c6b-9435-8bc8dedcb9b8
2212	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	2020-04-17 14:48:53.93851	2020-04-17 14:48:53.93851	2cb40875-a022-41ad-b6ec-ba4d1149130f
2213	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2020-04-17 14:48:53.943685	2020-04-17 14:48:53.943685	ab745d4f-1dfb-45ff-b24c-5e7429c01fcb
2214	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	2020-04-17 14:48:53.950081	2020-04-17 14:48:53.950081	5dc536b7-08df-4392-be7f-0de6473c0913
2215	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	2020-04-17 14:48:53.955326	2020-04-17 14:48:53.955326	40203a48-e8ec-4b44-b73a-b3c92e9d74cb
2216	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	2020-04-17 14:48:53.96166	2020-04-17 14:48:53.960603	63cd88cc-e300-432b-b327-668283231c71
2217	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2020-04-17 14:48:53.966938	2020-04-17 14:48:53.966938	8f4e6acb-c890-4b2d-8d31-733ee601e42d
2218	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	2020-04-17 14:48:53.97227	2020-04-17 14:48:53.97227	40eb71c2-c3c1-4116-9b23-3d4d5f422dc0
2219	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	2020-04-17 14:48:53.977733	2020-04-17 14:48:53.977733	0b9e91a9-9bd8-4657-8325-a94f682b8b26
2220	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	2020-04-17 14:48:53.983426	2020-04-17 14:48:53.983426	9b054964-3f7d-4ce1-85f4-ded6918111d0
2221	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:53.989738	2020-04-17 14:48:53.988733	2366dfbe-4d71-47f4-a9df-6aaa7a8da073
2222	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	2020-04-17 14:48:53.995032	2020-04-17 14:48:53.994031	8f05f4d1-914f-48ea-9b6f-968e918096ff
2223	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2020-04-17 14:48:54.001441	2020-04-17 14:48:54.001441	1631d1eb-db47-4011-883e-e59098bb46f5
2224	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2020-04-17 14:48:54.034899	2020-04-17 14:48:54.033845	be5973ca-ca85-467f-a0ee-476d5fe7c53b
2225	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	2020-04-17 14:48:54.042234	2020-04-17 14:48:54.042234	ac70be6b-7123-4f5f-a3f9-0653b145f053
2226	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	2020-04-17 14:48:54.047445	2020-04-17 14:48:54.047445	b6809121-df8b-4d14-a9eb-344e658ef589
2227	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2020-04-17 14:48:54.053619	2020-04-17 14:48:54.053619	905beadc-bec7-4725-9886-e96929e9130c
2228	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	2020-04-17 14:48:54.058882	2020-04-17 14:48:54.058882	c88debfe-0867-4886-b7f0-6658637a5e6e
2229	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	2020-04-17 14:48:54.063145	2020-04-17 14:48:54.063145	47e289b6-8253-4ac9-9e36-051ee8afa383
2230	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:54.068431	2020-04-17 14:48:54.068431	710532e2-8512-468e-b1cf-1008f902995a
2231	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2020-04-17 14:48:54.073624	2020-04-17 14:48:54.073624	a2bf3d0d-c178-4941-b5ae-0e09faebf8c4
2232	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2020-04-17 14:48:54.079085	2020-04-17 14:48:54.079085	d2ce699d-2bc3-4526-9152-e5658260afc4
2233	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	2020-04-17 14:48:54.085563	2020-04-17 14:48:54.085563	ca20e7da-3f13-412a-a8b2-7fa9b9e852b7
2234	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	2020-04-17 14:48:54.093849	2020-04-17 14:48:54.093849	6858e21f-f8b9-44ff-be48-bd89ddfbfdfb
2284	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2020-04-17 14:48:54.585168	2020-04-17 14:48:54.585168	64b7fd4e-dba1-4cc1-9963-2144b0c07920
2285	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2020-04-17 14:48:54.590309	2020-04-17 14:48:54.590309	6f054329-f031-4ab4-b87d-a08c4c8164d5
2235	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	2020-04-17 14:48:54.100079	2020-04-17 14:48:54.100079	a6fa9743-bef1-4ef5-a813-27b392969360
2236	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2020-04-17 14:48:54.130623	2020-04-17 14:48:54.130623	241a2fbf-834c-4be3-af55-655b4e4f2e21
2237	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2020-04-17 14:48:54.138049	2020-04-17 14:48:54.137995	7815215b-521f-4206-a43a-2c3a03fa6898
2238	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2020-04-17 14:48:54.144372	2020-04-17 14:48:54.144372	d5207640-c7d1-4898-9dfc-e93885746f91
2239	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2020-04-17 14:48:54.150624	2020-04-17 14:48:54.149621	6ab2a6b8-a6cf-4459-b682-69b0feb3509d
2240	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	2020-04-17 14:48:54.183123	2020-04-17 14:48:54.183123	7fe59cb1-bc95-425f-bc8e-4ae0b91bc913
2241	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	2020-04-17 14:48:54.195642	2020-04-17 14:48:54.195642	e41dca51-eed7-4b9a-9343-748e125349ab
2242	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	2020-04-17 14:48:54.201913	2020-04-17 14:48:54.201913	653cdb34-1aeb-4ef3-838b-36216fd4ba8b
2243	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	2020-04-17 14:48:54.20829	2020-04-17 14:48:54.20829	625a182f-5790-4523-98ce-71e036c90d14
2244	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	2020-04-17 14:48:54.214669	2020-04-17 14:48:54.214669	487c7a3d-3d23-4094-a522-eb2925de0d5f
2245	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	2020-04-17 14:48:54.219888	2020-04-17 14:48:54.219888	f16ce432-a0e3-41a6-aac6-d98561c4b166
2246	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	2020-04-17 14:48:54.226196	2020-04-17 14:48:54.226196	7c690510-aa65-4d77-80d9-a473183d157d
2247	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	2020-04-17 14:48:54.23244	2020-04-17 14:48:54.231444	15d4d31d-e374-4083-a24d-605e6c4ecdd4
2248	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	2020-04-17 14:48:54.264087	2020-04-17 14:48:54.264087	aa954ae4-533a-4b69-9be2-9cb19c941ef0
2249	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	2020-04-17 14:48:54.271561	2020-04-17 14:48:54.271561	c50ebbd7-b71a-43ef-898e-cc4af2e4bac2
2250	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	2020-04-17 14:48:54.277925	2020-04-17 14:48:54.277925	4ed32fb1-2732-4ff4-b558-1cd1918cb98c
2251	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	2020-04-17 14:48:54.28421	2020-04-17 14:48:54.28421	538176de-8159-4e2a-92fa-9942fb91d5e7
2252	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:54.291531	2020-04-17 14:48:54.291531	d4ce3967-92ae-42d3-94eb-7f4e18720b01
2253	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	2020-04-17 14:48:54.299924	2020-04-17 14:48:54.299924	cc8ebad9-1189-4eb9-8bd6-50fb2c497f99
2254	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	2020-04-17 14:48:54.306311	2020-04-17 14:48:54.306311	8315c3e7-d0f4-4867-8975-f766bb90875e
2255	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	2020-04-17 14:48:54.312583	2020-04-17 14:48:54.312583	7d992eb8-3dd6-4a34-bcfe-afae7a75df2c
2256	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	2020-04-17 14:48:54.318964	2020-04-17 14:48:54.318964	98c87824-bae6-4be5-a465-6cd361c7826d
2257	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	2020-04-17 14:48:54.325173	2020-04-17 14:48:54.325173	3438bb7e-5121-45ed-b526-84d6a0d94a36
2258	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	2020-04-17 14:48:54.330415	2020-04-17 14:48:54.330415	c17bc672-eb98-46f4-81f8-2d1b00a9ea4c
2259	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	2020-04-17 14:48:54.33672	2020-04-17 14:48:54.33672	6a31fd4b-ab4f-48d1-831f-6347079bb7f0
2260	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	2020-04-17 14:48:54.342968	2020-04-17 14:48:54.342968	e8af2dd2-69dc-403f-bef3-ef77451ace1d
2261	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	2020-04-17 14:48:54.34927	2020-04-17 14:48:54.34927	6d5a2417-57bf-4dda-a22a-d6c67e132c03
2262	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2020-04-17 14:48:54.35567	2020-04-17 14:48:54.35567	079c8d7d-44be-4f4f-b47b-b65e27d6f17c
2263	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	2020-04-17 14:48:54.390448	2020-04-17 14:48:54.389406	da54473e-7ead-4eed-ae2f-9fb8fcc3e88e
2264	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	2020-04-17 14:48:54.397822	2020-04-17 14:48:54.397822	3b09b840-146f-4358-83d0-4601c93aa165
2265	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2020-04-17 14:48:54.407076	2020-04-17 14:48:54.407076	c816a7c8-7acb-4cf6-aac7-52ac4bf084c3
2266	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	2020-04-17 14:48:54.440529	2020-04-17 14:48:54.440529	61ac0e28-56d3-4462-8b92-40f25ba98c4c
2267	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	2020-04-17 14:48:54.448911	2020-04-17 14:48:54.448883	959315a3-a0dd-4a14-a30a-7291e0260e15
2268	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2020-04-17 14:48:54.455208	2020-04-17 14:48:54.455208	50410c0d-cd78-4ab3-8491-2e8346dabca5
2269	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	2020-04-17 14:48:54.462561	2020-04-17 14:48:54.461559	d789ee38-51e5-4d5a-b55a-4a3902b7c96a
2270	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	2020-04-17 14:48:54.467845	2020-04-17 14:48:54.467845	d3b983be-ae2e-4cf9-8831-b91bdbca5e59
2271	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:54.474143	2020-04-17 14:48:54.474143	0836dbd0-2e8d-469d-9944-eda028f82223
2272	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	2020-04-17 14:48:54.479427	2020-04-17 14:48:54.479427	e472e155-7e69-4034-94a9-7c40c9c62fef
2273	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	2020-04-17 14:48:54.485714	2020-04-17 14:48:54.485714	d5f265f4-78d4-4f42-aab0-73f370bda2ca
2274	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	2020-04-17 14:48:54.524303	2020-04-17 14:48:54.524253	f844ed87-e28f-49e3-9ea2-b516f3b42f07
2275	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	2020-04-17 14:48:54.53256	2020-04-17 14:48:54.53256	d700ec69-3889-42a4-a7fc-71e939d6bcb2
2276	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	2020-04-17 14:48:54.538911	2020-04-17 14:48:54.538911	329ad353-f04a-4866-968a-4d67a3553ab2
2277	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2020-04-17 14:48:54.545168	2020-04-17 14:48:54.545168	d754aa38-636f-48df-ae7c-99b925e2dfda
2278	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	2020-04-17 14:48:54.550357	2020-04-17 14:48:54.550357	91d11a4c-af95-4608-9ca8-f67ad4261c9c
2279	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	2020-04-17 14:48:54.5557	2020-04-17 14:48:54.5557	b9a98b82-e9a9-47c6-a53e-9a6a2386c94c
2280	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	2020-04-17 14:48:54.562036	2020-04-17 14:48:54.562036	c49b0f29-c38d-4661-a569-21e081a1cef4
2281	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	2020-04-17 14:48:54.568276	2020-04-17 14:48:54.568276	a5bbe8be-92b0-4dc6-9d04-c1d1ed35c2a1
2282	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	2020-04-17 14:48:54.57361	2020-04-17 14:48:54.57361	1cc6c981-b576-4451-bf89-072224f86f00
2283	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	2020-04-17 14:48:54.578796	2020-04-17 14:48:54.578796	9b12c9a7-21f5-4388-86ff-4b0e59132265
2286	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2020-04-17 14:48:54.596545	2020-04-17 14:48:54.596545	5100364f-bc6c-4eca-baf2-4a4ed04e740a
2287	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	2020-04-17 14:48:54.603778	2020-04-17 14:48:54.603778	f25acb59-8397-4334-8c9e-d28f8dc6e323
2288	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	2020-04-17 14:48:54.610069	2020-04-17 14:48:54.610069	391dfc40-7073-4a9c-b4e3-aac3bcf79642
2289	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:54.616302	2020-04-17 14:48:54.616302	821f3b4e-249d-481c-8884-8a2b3d6f7b05
2290	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	2020-04-17 14:48:54.649602	2020-04-17 14:48:54.648603	1cca74c7-a472-4485-9aa3-4e461fe60de1
2291	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	2020-04-17 14:48:54.657013	2020-04-17 14:48:54.657013	8b1e4cc1-d8c6-411a-bc5a-a7d05c0d4359
2292	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	2020-04-17 14:48:54.663249	2020-04-17 14:48:54.66323	1ef5ffaf-a7cd-497b-8b5a-73c3d00c7482
2293	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	2020-04-17 14:48:54.668567	2020-04-17 14:48:54.668567	227c49bf-f756-48fb-9a8b-9b1be9eceff9
2294	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	2020-04-17 14:48:54.674816	2020-04-17 14:48:54.674816	6867a508-104c-4179-91d8-7be3677d76c7
2295	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	2020-04-17 14:48:54.712307	2020-04-17 14:48:54.711249	796f8831-42fe-4ec6-9c6f-70bb9c564869
2296	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	2020-04-17 14:48:54.719633	2020-04-17 14:48:54.719633	3ae1e730-491e-460b-8d82-20936d4ae858
2297	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	2020-04-17 14:48:54.726011	2020-04-17 14:48:54.726011	b5f64b2b-0f7f-46b8-87b9-8dead39d07b1
2298	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	2020-04-17 14:48:54.732358	2020-04-17 14:48:54.732358	b659474c-35d0-41a9-b660-eaa0cf8a15cd
2299	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	2020-04-17 14:48:54.738605	2020-04-17 14:48:54.738605	079dd8bc-4c60-43c2-9c18-a29fac7ace30
2300	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	2020-04-17 14:48:54.743723	2020-04-17 14:48:54.743723	8bdc084e-4bc0-4634-8756-440c6c3b9f62
2301	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	2020-04-17 14:48:54.750098	2020-04-17 14:48:54.75005	1a03ef58-9065-42a6-951f-68ef096d0015
2302	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	2020-04-17 14:48:54.75545	2020-04-17 14:48:54.75545	33a152f4-cb4e-4eca-9b3e-5d10f47a26c2
2303	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	2020-04-17 14:48:54.760743	2020-04-17 14:48:54.760743	60a0d2b3-f009-4e60-b9d4-59e14aa16047
2304	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	2020-04-17 14:48:54.795915	2020-04-17 14:48:54.795915	85574ce0-0e79-4b55-85d5-fc80e76ed3ee
2305	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	2020-04-17 14:48:54.807299	2020-04-17 14:48:54.806301	78f94862-d147-4eb0-b2ec-dc6ccaec2183
2306	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	2020-04-17 14:48:54.812658	2020-04-17 14:48:54.812658	acbaeed8-b38a-4521-b078-b38a12f255b1
2307	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	2020-04-17 14:48:54.81908	2020-04-17 14:48:54.81908	fe9d8149-6560-489a-9613-79c914f05f1d
2308	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	2020-04-17 14:48:54.825311	2020-04-17 14:48:54.825311	55273fda-1653-430f-a322-c4e8cee1df14
2309	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	2020-04-17 14:48:54.831782	2020-04-17 14:48:54.831782	3c1f45a1-8a84-439f-843f-0e8e04dcc6ed
2310	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	2020-04-17 14:48:54.837047	2020-04-17 14:48:54.837047	f66eb708-9736-452c-8862-07423cfd2e41
2311	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	2020-04-17 14:48:54.870722	2020-04-17 14:48:54.869656	de5989ea-8045-40ea-93aa-82d048644d98
2312	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	2020-04-17 14:48:54.877115	2020-04-17 14:48:54.877115	b5fb8043-9511-4c23-ae5d-144d1f0bcdfd
2313	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	2020-04-17 14:48:54.883539	2020-04-17 14:48:54.883539	9991181c-88f0-4ff2-b52a-5a93784e843a
2314	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	2020-04-17 14:48:54.889958	2020-04-17 14:48:54.889958	12d1ea44-51ea-42f8-b152-bcae65beb7a5
2315	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community of the Maricopa (Ak Chin) Indian Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:54.89635	2020-04-17 14:48:54.895338	a127052a-a464-43e8-ac45-7b7ba5f7635f
2316	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	2020-04-17 14:48:54.901952	2020-04-17 14:48:54.901952	121514d7-3401-43ad-bff9-7a5a3f7273cc
2317	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	2020-04-17 14:48:54.911406	2020-04-17 14:48:54.911406	ac4579eb-871d-42ff-a8fb-dcc67d331a10
2318	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	2020-04-17 14:48:54.918896	2020-04-17 14:48:54.917815	d763bde0-7419-4bc4-98ff-b75f8b7caf0e
2319	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	2020-04-17 14:48:54.924201	2020-04-17 14:48:54.924201	fa073854-220e-48e5-8243-75608805786f
2320	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	2020-04-17 14:48:54.930525	2020-04-17 14:48:54.930525	ce302cd9-fb56-4d47-8d1e-a40b63722c95
2321	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	2020-04-17 14:48:54.935825	2020-04-17 14:48:54.935825	e9c383d9-25b7-4c1d-877f-31b207afe067
2322	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	2020-04-17 14:48:54.942103	2020-04-17 14:48:54.942103	cfa06f3e-0d93-41d2-bdc2-7a45a19946cf
2323	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	2020-04-17 14:48:54.948495	2020-04-17 14:48:54.948495	ed4ffbe7-fba4-42cd-a720-c275adba9fbf
2324	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	2020-04-17 14:48:54.954887	2020-04-17 14:48:54.954887	1d2ce529-cd53-4d96-878d-7299b52b726a
2325	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	2020-04-17 14:48:54.961336	2020-04-17 14:48:54.961336	0263c493-710b-4aec-b8ed-de0d89c74bd5
2326	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	2020-04-17 14:48:54.967749	2020-04-17 14:48:54.967702	7d9f925f-d57d-4a94-8601-4f0b50ba6e38
2327	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, CA	\N	\N	\N	2020-04-17 14:48:54.973051	2020-04-17 14:48:54.973051	c453404e-89fe-4ca9-830f-dba0e17f502f
2328	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	2020-04-17 14:48:54.979513	2020-04-17 14:48:54.979513	46ca84dc-ffc1-4af7-a3a8-1b712f858b20
2329	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	2020-04-17 14:48:54.985769	2020-04-17 14:48:54.985769	1c153f5e-e042-4eb4-973a-af08d9c4a3b6
2330	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	2020-04-17 14:48:54.992154	2020-04-17 14:48:54.992131	c91860b3-a93b-4703-946b-b7f26947cd6a
2331	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	2020-04-17 14:48:54.997499	2020-04-17 14:48:54.997499	4c1e3839-281f-4764-9530-a0bc6691b015
2332	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	2020-04-17 14:48:55.00601	2020-04-17 14:48:55.00601	42cbe55e-c07e-49c4-b1fe-ede9e11be782
2333	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	2020-04-17 14:48:55.012414	2020-04-17 14:48:55.012414	8168931e-167a-443f-a36c-fa1992a94bfc
2334	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	2020-04-17 14:48:55.018875	2020-04-17 14:48:55.018875	c9cddf0d-3494-45a1-871c-a98cfafd9ba7
2335	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:55.025081	2020-04-17 14:48:55.024079	205bb977-a09b-40dc-b97b-ab6e2f17796d
2336	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	2020-04-17 14:48:55.03159	2020-04-17 14:48:55.03159	889903f0-a1ef-4c83-a093-d66ad6f55ee1
2337	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	2020-04-17 14:48:55.036911	2020-04-17 14:48:55.036911	882c73fd-2a39-4702-820a-5856b4bfe772
2338	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	Aroostok	Aroostook Band of Micmacs	\N	\N	\N	2020-04-17 14:48:55.043195	2020-04-17 14:48:55.043195	0bcdff5a-a12e-48f6-9a3a-638af462d8fe
2339	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	2020-04-17 14:48:55.04958	2020-04-17 14:48:55.04958	7186a139-c125-4589-8176-73c84f5b22dc
2340	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community	\N	\N	\N	2020-04-17 14:48:55.054891	2020-04-17 14:48:55.054891	1d8617e2-d9ef-4644-a755-9a73975404ca
2341	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, MT	\N	\N	\N	2020-04-17 14:48:55.061145	2020-04-17 14:48:55.061145	770d30da-f839-455f-9412-3bee3d33eae5
2342	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	2020-04-17 14:48:55.066455	2020-04-17 14:48:55.066455	c7074ae4-0e27-41f1-a6a0-0bdbb6831200
2343	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	2020-04-17 14:48:55.072919	2020-04-17 14:48:55.072897	3edcc26f-d31c-490b-83da-254c5373b6b5
2344	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	Atqasuk	Atqasuk Village (Atkasook)	\N	\N	\N	2020-04-17 14:48:55.078258	2020-04-17 14:48:55.078258	dca6d8e2-27c5-43fb-94e6-88ef471be9f0
2345	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	2020-04-17 14:48:55.084663	2020-04-17 14:48:55.084633	249bb407-1ad4-40c9-9d59-2145092a5bcb
2346	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of Lake Superior Tribe of Chippewa Indians	\N	\N	\N	2020-04-17 14:48:55.095332	2020-04-17 14:48:55.095332	f454ad15-161c-4c1a-bbbc-149ff26daaa2
2347	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	2020-04-17 14:48:55.101697	2020-04-17 14:48:55.101697	83a0db51-b635-4f63-a1be-84b9351696d0
2348	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	2020-04-17 14:48:55.344735	2020-04-17 14:48:55.344735	10db776a-6dea-4c2f-826d-9d57819388c9
2349	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.350879	2020-04-17 14:48:55.350879	2aabc909-7463-4845-b4bb-5bfd73286792
2350	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	2020-04-17 14:48:55.357213	2020-04-17 14:48:55.35618	7b24a952-ab78-455a-9543-fe864143e34f
2351	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	2020-04-17 14:48:55.365733	2020-04-17 14:48:55.365733	d16a4584-016f-433f-be18-37bcbd9ab1a3
2352	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	2020-04-17 14:48:55.372098	2020-04-17 14:48:55.372098	d88c56f6-8b46-479b-9375-8ad0276a7e7b
2353	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	2020-04-17 14:48:55.377372	2020-04-17 14:48:55.377372	00809f3f-7661-46cd-ba2f-cb7ade14c6d5
2354	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.38375	2020-04-17 14:48:55.38375	6680fbae-4b39-4931-b919-cf4fe96134fd
2355	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	2020-04-17 14:48:55.389043	2020-04-17 14:48:55.389043	29074a91-6696-4c50-9b53-959f5e74177b
2356	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	2020-04-17 14:48:55.395362	2020-04-17 14:48:55.395362	77f19bfe-d626-4efd-82da-d3bec116db69
2357	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.401647	2020-04-17 14:48:55.401647	f02bd15f-56bb-44a3-a085-ae75fef1712f
2358	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	2020-04-17 14:48:55.406885	2020-04-17 14:48:55.406885	5f694694-4389-472b-b323-7d6e949c9c7a
2359	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	2020-04-17 14:48:55.413149	2020-04-17 14:48:55.413149	b80290d4-7ef8-43e6-bce0-6eb279ca0f4d
2360	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	2020-04-17 14:48:55.419339	2020-04-17 14:48:55.419339	f3ee5084-a01f-4726-84e0-c728b3607ee7
2361	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of MT	\N	\N	\N	2020-04-17 14:48:55.425633	2020-04-17 14:48:55.425633	f632d1e4-6236-4585-b3fe-01a900ed1edf
2362	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.431893	2020-04-17 14:48:55.431893	8a952ec7-e051-418e-8b6f-89378467e182
2363	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	2020-04-17 14:48:55.437189	2020-04-17 14:48:55.437189	44351c9b-9978-4f75-afb2-a2409fedf24f
2364	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	2020-04-17 14:48:55.444571	2020-04-17 14:48:55.444571	92ed24b1-2fa5-454e-8d4d-a140025bd7be
2365	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	2020-04-17 14:48:55.450992	2020-04-17 14:48:55.449985	14c26317-3866-4ec5-a0dc-988e6a1535ea
2366	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	2020-04-17 14:48:55.458452	2020-04-17 14:48:55.458452	7d16d17a-678b-40f3-923e-b7ace8806a81
2367	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-wuk Indians of California	\N	\N	\N	2020-04-17 14:48:55.464748	2020-04-17 14:48:55.464748	9217cf62-0d97-4570-ba22-9c571df4e277
2368	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	2020-04-17 14:48:55.470018	2020-04-17 14:48:55.470018	c37717f6-135d-44c3-9b34-dde1a1b83197
2369	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	2020-04-17 14:48:55.477369	2020-04-17 14:48:55.477369	27769be5-a9ba-480d-ac1a-2fbc7966744e
2370	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.483633	2020-04-17 14:48:55.483633	10f44832-99e6-42a3-a634-e0bdca78db03
2371	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	2020-04-17 14:48:55.490016	2020-04-17 14:48:55.490016	d36582c5-48a7-4a6d-9541-18939956682f
2372	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	2020-04-17 14:48:55.49846	2020-04-17 14:48:55.49846	e408399a-2d16-439e-a1bc-c9dd50f66189
2373	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Mission Indians of the Cahuilla Reservation, California	\N	\N	\N	2020-04-17 14:48:55.505901	2020-04-17 14:48:55.505901	5976b4e1-531f-4151-a8af-d7e751cd2bf5
2374	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	2020-04-17 14:48:55.512276	2020-04-17 14:48:55.512276	a60c3207-9304-45b6-bc56-5d19b54b0ac6
2375	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	2020-04-17 14:48:55.518653	2020-04-17 14:48:55.518653	9ff6bff2-acec-4494-8bdd-6496c0890f98
2376	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	2020-04-17 14:48:55.524003	2020-04-17 14:48:55.524003	eebd2ed8-e8a4-46ae-8ebf-dca443971d4b
2377	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	2020-04-17 14:48:55.530333	2020-04-17 14:48:55.530333	78c087fa-8d07-4fe5-8d7c-cc31574d001d
2378	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation	\N	\N	\N	2020-04-17 14:48:55.539822	2020-04-17 14:48:55.539795	df4ce732-f997-4b12-a486-1aeca6809f61
2379	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	2020-04-17 14:48:55.546078	2020-04-17 14:48:55.546078	e0728dc6-a230-452d-9674-ca1bc67e052b
2380	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.551397	2020-04-17 14:48:55.551397	2672ba43-888b-46d3-abb0-5b0f2d89416b
2381	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	2020-04-17 14:48:55.557762	2020-04-17 14:48:55.557762	540e8030-4b19-457b-9646-d88836213daf
2382	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	2020-04-17 14:48:55.563087	2020-04-17 14:48:55.563087	03918c92-86a2-4879-ae74-0eb8be1d4d69
2383	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	2020-04-17 14:48:55.569454	2020-04-17 14:48:55.569454	1990aeef-074f-4322-bbc8-6c11b300d5a8
2384	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	2020-04-17 14:48:55.575717	2020-04-17 14:48:55.575717	dc09d6ce-b146-4520-9353-c4fe4e2d8760
2385	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	2020-04-17 14:48:55.581984	2020-04-17 14:48:55.581984	2b736996-638f-499d-9548-76a4a2cf21f9
2386	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	2020-04-17 14:48:55.587228	2020-04-17 14:48:55.587228	93fbaf56-14f4-4c51-969f-2d5a86e77ed3
2387	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.594632	2020-04-17 14:48:55.594632	334da14b-3f3a-4eb9-92da-fa4a0dd97368
2388	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	2020-04-17 14:48:55.601021	2020-04-17 14:48:55.601021	bf031543-0f59-405f-900f-bb294cd1e5c2
2389	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	2020-04-17 14:48:55.606327	2020-04-17 14:48:55.606327	0ffb7c94-8576-49a5-9210-28e416c820d7
2390	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	2020-04-17 14:48:55.612705	2020-04-17 14:48:55.612705	ad8803f9-d4f8-4711-8565-65dc36a7b015
2391	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	Cheyenne-Arapaho	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	2020-04-17 14:48:55.617966	2020-04-17 14:48:55.617966	c1e03e3b-36f6-4244-be8d-33d8b4477045
2392	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	Inc.	Chickahominy Indian Tribe, Inc.	\N	\N	\N	2020-04-17 14:48:55.624094	2020-04-17 14:48:55.62309	8845ae3e-4478-45fc-b889-5cafeb25a46c
2393	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	2020-04-17 14:48:55.629462	2020-04-17 14:48:55.629462	7ce103f0-b622-4e14-b07e-531e194c61d8
2394	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	2020-04-17 14:48:55.634763	2020-04-17 14:48:55.634763	a74e373b-a8e3-4b58-8b1f-73cbf8c4622c
2395	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-wuk Indians of California	\N	\N	\N	2020-04-17 14:48:55.640077	2020-04-17 14:48:55.640077	a5efea38-bc41-4d6b-bf54-a5b904dc5594
2396	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	2020-04-17 14:48:55.646476	2020-04-17 14:48:55.646427	694876c8-97d5-4b8e-b770-b9199fbd2d76
2397	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	2020-04-17 14:48:55.651792	2020-04-17 14:48:55.651792	1b5fe4c6-2f94-4003-896b-ce0f26e7c8cf
2398	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	2020-04-17 14:48:55.65713	2020-04-17 14:48:55.65713	4d77e3d5-8c00-4ed2-b79c-beb5fade7c3e
2399	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	2020-04-17 14:48:55.663375	2020-04-17 14:48:55.663375	7ad633f8-29df-4181-a26c-379b436ad9d4
2400	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	2020-04-17 14:48:55.668684	2020-04-17 14:48:55.668684	1113adbd-e12f-41ca-a70f-1808a85acc17
2401	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	2020-04-17 14:48:55.676097	2020-04-17 14:48:55.676097	5690a1fa-6ce3-40eb-9661-8d40f07f35b7
2402	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, MT	\N	\N	\N	2020-04-17 14:48:55.681585	2020-04-17 14:48:55.681585	646a02d4-53f4-4747-8337-0d73583f8f08
2403	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	2020-04-17 14:48:55.687839	2020-04-17 14:48:55.687839	2dda1438-9fd1-4e4a-b2ba-c3e103cbd131
2404	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	2020-04-17 14:48:55.693168	2020-04-17 14:48:55.693168	0da6d31b-17c9-4274-ace5-8c117722f1a4
2405	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	2020-04-17 14:48:55.699548	2020-04-17 14:48:55.699548	d6355246-702d-4c25-ac37-8a6fc4cb779b
2406	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	2020-04-17 14:48:55.704878	2020-04-17 14:48:55.704878	cfc770cc-6de0-40fd-8970-ea53cd5dfa61
2407	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	2020-04-17 14:48:55.711309	2020-04-17 14:48:55.711309	d0a8b3eb-f5e6-4ef0-9d42-e74908a80e7a
2408	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	2020-04-17 14:48:55.716636	2020-04-17 14:48:55.716636	8bfd870e-b00e-43af-bc2a-cb654d7012ae
2409	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation (Oklahoma)	\N	\N	\N	2020-04-17 14:48:55.72196	2020-04-17 14:48:55.72196	a25bb042-099b-4d49-89a2-85d747890286
2410	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	2020-04-17 14:48:55.727267	2020-04-17 14:48:55.727267	a00b1345-d8db-46d4-ac86-c32a57034759
2411	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	2020-04-17 14:48:55.733589	2020-04-17 14:48:55.733589	1791d583-3aea-4722-8c01-21ab6fe434ea
2412	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	2020-04-17 14:48:55.738915	2020-04-17 14:48:55.738915	c6b3303c-9125-4668-8ccd-5621cab5943e
2413	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	2020-04-17 14:48:55.744224	2020-04-17 14:48:55.744173	9a753b54-8839-42a5-8217-2a32347765d6
2414	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	2020-04-17 14:48:55.749548	2020-04-17 14:48:55.749548	229c451a-bfd5-475c-b0a6-2b87aeab9bd4
2415	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado Indian Reservation, Arizona and California	\N	\N	\N	2020-04-17 14:48:55.757003	2020-04-17 14:48:55.755937	24d173df-fdd8-420e-a5fa-a75def7105d0
2416	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	2020-04-17 14:48:55.764375	2020-04-17 14:48:55.764375	8fb17c2d-5fbe-4a0f-bd7a-fd6c632af111
2417	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	2020-04-17 14:48:55.770695	2020-04-17 14:48:55.770695	86a1df84-b336-44a3-a85a-4cd87d0a5089
2418	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	2020-04-17 14:48:55.776012	2020-04-17 14:48:55.776012	7f14e0d4-14b8-4708-8682-4aaa930cb93e
2419	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	2020-04-17 14:48:55.782274	2020-04-17 14:48:55.782274	99ca86ea-1de6-4a99-90df-624f7f5d4c11
2420	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish & Kootenai Tribes of the Flathead Reservation	\N	\N	\N	2020-04-17 14:48:55.787591	2020-04-17 14:48:55.787591	e452e84c-ea40-4cbb-945c-26615c63fa78
2421	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	2020-04-17 14:48:55.793967	2020-04-17 14:48:55.793967	fc363eeb-c51c-47e1-96ef-5b87630d5861
2422	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	2020-04-17 14:48:55.800313	2020-04-17 14:48:55.800313	dc19dbcf-f9b7-42bd-9f1d-82f538bd4c84
2423	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	2020-04-17 14:48:55.805567	2020-04-17 14:48:55.805567	a89992da-10b7-46f9-9537-7be8fcad4811
2424	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	2020-04-17 14:48:55.813036	2020-04-17 14:48:55.813036	75ec5594-f1c8-4640-ac7e-10a7baa4fc3e
2425	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	2020-04-17 14:48:55.819418	2020-04-17 14:48:55.819418	5b515209-6f1f-4295-bea4-a8da393dfaa7
2426	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	2020-04-17 14:48:55.824815	2020-04-17 14:48:55.824815	36017f5b-894b-4be0-bff4-7bd280840a50
2427	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	2020-04-17 14:48:55.831067	2020-04-17 14:48:55.831067	906e993a-749c-482c-aa98-c34e896a292b
2428	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	2020-04-17 14:48:55.836282	2020-04-17 14:48:55.836282	00fe2978-f565-4c12-b438-9ac3b0ad1ff9
2429	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	2020-04-17 14:48:55.844755	2020-04-17 14:48:55.843753	7f63bdb1-ec8d-4898-a751-9dc231301b80
2430	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	2020-04-17 14:48:55.850125	2020-04-17 14:48:55.850125	ea89560e-595d-4a03-9f1c-30df4ce91421
2431	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	2020-04-17 14:48:55.857463	2020-04-17 14:48:55.857463	c9877a63-09d2-4041-998f-3f1dc1999dd8
2432	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, SD	\N	\N	\N	2020-04-17 14:48:55.863698	2020-04-17 14:48:55.86264	f1251bf2-7c58-4f49-ad9d-ac8f58bfbe95
2433	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	2020-04-17 14:48:55.869022	2020-04-17 14:48:55.869022	1b86a5b2-b1ef-4d8d-b0a0-0cd1aaca50b5
2434	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	2020-04-17 14:48:55.87421	2020-04-17 14:48:55.87421	e8fab216-9bb6-48aa-9c6f-ac6ab6b464f6
2435	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	2020-04-17 14:48:55.879501	2020-04-17 14:48:55.879501	fe7b5270-e3c1-450c-a06e-9e007ce2fa37
2436	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	2020-04-17 14:48:55.884826	2020-04-17 14:48:55.884826	e0d56525-0892-42b2-bb19-f530023ca47b
2437	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	2020-04-17 14:48:55.891228	2020-04-17 14:48:55.890186	06684dd0-b32f-4c12-aad2-5d2580f626a3
2438	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	2020-04-17 14:48:55.896556	2020-04-17 14:48:55.896556	82746b17-9ba1-4f41-bacf-12fa774aeee7
2439	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	2020-04-17 14:48:55.90191	2020-04-17 14:48:55.90191	d5f533f8-90ab-4f52-949e-06e2071d9b3e
2440	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	2020-04-17 14:48:55.907298	2020-04-17 14:48:55.907298	b1683e58-1afd-4b2b-9b0e-8141010ce447
2441	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:55.913565	2020-04-17 14:48:55.913565	598c8abf-b756-44a6-bb46-8a661245420f
2442	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	2020-04-17 14:48:55.91882	2020-04-17 14:48:55.91882	e13b2261-7830-42f2-ae54-3b9bec5131b2
2443	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	2020-04-17 14:48:55.924105	2020-04-17 14:48:55.924105	cbe9fee4-02ec-495b-94ae-b4be0c08763d
2444	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:55.931467	2020-04-17 14:48:55.931467	2c814910-9962-4648-bad8-f30237e60384
2445	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2020-04-17 14:48:55.936788	2020-04-17 14:48:55.936788	98effb6a-6b5c-4d46-af63-d2fb047d9170
2446	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	2020-04-17 14:48:55.943019	2020-04-17 14:48:55.943019	effc6688-ab31-461a-9d13-b9ed34c2217e
2447	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	2020-04-17 14:48:55.948322	2020-04-17 14:48:55.948322	65af1427-a309-4ad5-831b-5e8c903153da
2448	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	2020-04-17 14:48:55.954626	2020-04-17 14:48:55.954626	bfcb28e8-8b22-40a5-a808-6d0e32ce4e7f
2449	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	2020-04-17 14:48:55.960876	2020-04-17 14:48:55.960876	5eebc2d8-bccc-48d4-bc90-9951b7c7fd49
2450	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	2020-04-17 14:48:55.9672	2020-04-17 14:48:55.9672	ea1790bd-8ff6-49ac-ac9e-fea3f728318c
2451	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.972476	2020-04-17 14:48:55.972476	d328fc2a-e26b-47a2-84de-ee9ad334a39f
2452	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	2020-04-17 14:48:55.978762	2020-04-17 14:48:55.978762	5525a474-b5eb-48fb-a0c0-7d5a05e892fb
2453	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	2020-04-17 14:48:55.985041	2020-04-17 14:48:55.985041	5493f347-46f1-48aa-ac19-98727cdbf065
2454	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	2020-04-17 14:48:55.990369	2020-04-17 14:48:55.990369	80f78d6b-4d9c-4fa4-a3ef-162546364772
2455	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	2020-04-17 14:48:55.996739	2020-04-17 14:48:55.996739	5173c207-4f65-4ab0-adb7-c59559b0c224
2456	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	2020-04-17 14:48:56.002011	2020-04-17 14:48:56.002011	b16ad3b1-583c-4bfe-b099-a1621951a3d5
2457	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	2020-04-17 14:48:56.009315	2020-04-17 14:48:56.009315	95bbc6ff-9a3e-4577-a490-8f282f29e5af
2458	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	2020-04-17 14:48:56.017629	2020-04-17 14:48:56.017629	a51ad32f-83bb-4d04-ba91-66170c79abbf
2459	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	2020-04-17 14:48:56.023827	2020-04-17 14:48:56.022818	2eafb5a5-966d-4b8d-a5fb-091a41e1e0bf
2460	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	2020-04-17 14:48:56.030161	2020-04-17 14:48:56.030161	a669a642-6cd4-4962-a6dc-59f288dfd925
2505	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	2020-04-17 14:48:56.542654	2020-04-17 14:48:56.542654	a5611736-e8f9-46b0-a256-df12eebb6723
2461	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	2020-04-17 14:48:56.035418	2020-04-17 14:48:56.035418	1abe5950-557d-41ab-98f2-cc11f155bc02
2462	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	2020-04-17 14:48:56.041551	2020-04-17 14:48:56.041551	dc6f4d52-3b9d-495c-9fb6-3e70248f9900
2463	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	2020-04-17 14:48:56.047892	2020-04-17 14:48:56.047892	c628508c-67bd-47a6-96c5-d049b9fedcbe
2464	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	2020-04-17 14:48:56.295875	2020-04-17 14:48:56.295875	3e6602aa-b469-43e6-953c-8d0ae71c957d
2465	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	2020-04-17 14:48:56.303247	2020-04-17 14:48:56.303247	ead03f0c-e3ed-452e-b337-a63429e6909b
2466	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	2020-04-17 14:48:56.309495	2020-04-17 14:48:56.309495	8113e7b1-7bc8-4830-b673-29eb26296537
2467	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	2020-04-17 14:48:56.316951	2020-04-17 14:48:56.316951	35847961-4ac2-4b83-9617-78f427aed68e
2468	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	2020-04-17 14:48:56.323168	2020-04-17 14:48:56.323168	717ed0fd-0911-46d9-9030-1939c6c5b025
2469	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	2020-04-17 14:48:56.329357	2020-04-17 14:48:56.329357	8d87e5e7-8272-460f-b69b-5d7caa573434
2470	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:56.335547	2020-04-17 14:48:56.335547	c2cc5831-eaa7-459d-a700-65d4eb3c4e5b
2471	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	2020-04-17 14:48:56.341678	2020-04-17 14:48:56.341678	92117e2d-5dae-491a-9875-8d50ad8f1c89
2472	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	2020-04-17 14:48:56.347922	2020-04-17 14:48:56.347922	6ef14af6-7a1b-4d05-bf6f-5aa2e7c9ab2f
2473	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	2020-04-17 14:48:56.354099	2020-04-17 14:48:56.354099	bc36e234-350b-4c6c-a6e3-1f094770b366
2474	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	2020-04-17 14:48:56.360343	2020-04-17 14:48:56.360343	5bfd8246-7714-49b3-b47b-b53b4edd3ed5
2475	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	2020-04-17 14:48:56.366647	2020-04-17 14:48:56.366647	1d63cbf3-b2d7-46c9-86e4-092e26060578
2476	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:56.371894	2020-04-17 14:48:56.371894	a424c7c3-9070-444a-aec6-4677098936ce
2477	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	2020-04-17 14:48:56.378111	2020-04-17 14:48:56.378111	4e8e743a-1665-49d4-8ea2-2f547fb9dc93
2478	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	2020-04-17 14:48:56.383326	2020-04-17 14:48:56.383326	557d3878-f672-49de-b1d7-ef32da5949c0
2479	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	2020-04-17 14:48:56.390638	2020-04-17 14:48:56.390638	42a7edf0-fb41-4156-a86d-5aa1c447435c
2480	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa & Chippewa Indians, Michigan	\N	\N	\N	2020-04-17 14:48:56.396934	2020-04-17 14:48:56.396934	80e3947f-2c9e-46dc-9ee4-df9369e9a8f3
2481	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	2020-04-17 14:48:56.403182	2020-04-17 14:48:56.403182	da72553f-0d53-47bf-87d9-f0a1477f042a
2482	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	2020-04-17 14:48:56.408442	2020-04-17 14:48:56.408442	97a6f7bf-dc5f-4450-96db-c70d2eda7c60
2483	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	2020-04-17 14:48:56.413566	2020-04-17 14:48:56.413566	4c1ad62a-b314-4601-86fd-d9dfecd13752
2484	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	2020-04-17 14:48:56.418687	2020-04-17 14:48:56.418687	55ae2420-261c-44c8-b48d-4b59c9a8df14
2485	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village	\N	\N	\N	2020-04-17 14:48:56.424067	2020-04-17 14:48:56.424067	3dec2423-a268-4d58-ac17-5547789451c0
2486	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	2020-04-17 14:48:56.431333	2020-04-17 14:48:56.431333	8e3b87c0-c3cf-4f7c-b2c4-f1d092e76189
2487	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	2020-04-17 14:48:56.436749	2020-04-17 14:48:56.436749	84a0cddb-57e6-4b04-9322-91acd0eb6851
2488	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	2020-04-17 14:48:56.442113	2020-04-17 14:48:56.442113	ea2fbb12-97be-466b-b22b-b6e4e1e7ef45
2489	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:56.447457	2020-04-17 14:48:56.447457	979b2a11-74a0-4c9a-aa6a-3359d2aa61a2
2490	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	2020-04-17 14:48:56.453867	2020-04-17 14:48:56.453829	0461eb58-c6f3-40a0-b021-cee2027fa8df
2491	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	2020-04-17 14:48:56.459214	2020-04-17 14:48:56.459214	14747516-594b-4d0f-9b68-27a246f95d4c
2492	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	2020-04-17 14:48:56.465587	2020-04-17 14:48:56.465587	9332b3c6-4f8a-49e5-9259-cca1003f5b51
2493	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Village	\N	\N	\N	2020-04-17 14:48:56.470946	2020-04-17 14:48:56.470946	786a04e0-4e64-4ecf-906d-0f6cc1d97c5d
2494	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	2020-04-17 14:48:56.476329	2020-04-17 14:48:56.476329	91000f6d-1419-4142-9c96-ceb95ec205e9
2495	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	2020-04-17 14:48:56.481678	2020-04-17 14:48:56.481678	ec51e2b3-8377-4030-9af5-165bda991f8b
2496	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	2020-04-17 14:48:56.488099	2020-04-17 14:48:56.488099	71dfc15c-851f-41ef-b41a-1230156ff1b1
2497	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	2020-04-17 14:48:56.49344	2020-04-17 14:48:56.49344	9757066a-e56d-4a8a-a60c-6b4175fe3816
2498	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	2020-04-17 14:48:56.498795	2020-04-17 14:48:56.498795	7bc4dff5-0949-4028-b3e5-f3459360dc52
2499	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	2020-04-17 14:48:56.504191	2020-04-17 14:48:56.504191	f950c50a-ee44-426c-95cd-f2955dfa02ca
2500	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:56.511656	2020-04-17 14:48:56.511656	f5bcb835-b7af-40f1-86c8-30e4d4c111b3
2501	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	2020-04-17 14:48:56.516945	2020-04-17 14:48:56.516945	3f6c99f9-375d-480e-a81f-a3173d0d7e11
2502	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	2020-04-17 14:48:56.523459	2020-04-17 14:48:56.523459	820e0bfb-9697-414b-aae9-45157e71e033
2503	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	2020-04-17 14:48:56.528798	2020-04-17 14:48:56.528798	09acac74-2f9e-4569-801e-380053a76de0
2504	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	2020-04-17 14:48:56.536289	2020-04-17 14:48:56.536289	b59fa032-fe4c-433e-9c4e-61b265d347f4
2506	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	2020-04-17 14:48:56.548024	2020-04-17 14:48:56.548024	b70aec53-b599-4b5c-8ca9-c5c3bcd130df
2507	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	2020-04-17 14:48:56.554465	2020-04-17 14:48:56.554465	332f66ca-4d06-478d-a748-6db056fc094b
2508	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	2020-04-17 14:48:56.559805	2020-04-17 14:48:56.559805	ab3da9d8-e007-42e8-a4b9-c1f743c93fe3
2509	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas & Nebraska	\N	\N	\N	2020-04-17 14:48:56.566223	2020-04-17 14:48:56.566223	8bd4ea11-e1e7-48db-804e-df1c6a1b2b37
2510	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:56.571587	2020-04-17 14:48:56.571587	b089e8d7-ac61-4f2c-ba51-43f1120ce91d
2511	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	Iqurmuit	Iqurmuit Traditional Council	\N	\N	\N	2020-04-17 14:48:56.578023	2020-04-17 14:48:56.578023	64bd7876-dda7-4175-97ba-c3d684f8e275
2512	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	2020-04-17 14:48:56.583377	2020-04-17 14:48:56.583377	525be7d0-3709-45c7-b48f-13b9caf7afd1
2513	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	2020-04-17 14:48:56.590916	2020-04-17 14:48:56.590916	66186369-3ab2-4665-8b87-01365196ecf1
2514	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	2020-04-17 14:48:56.598419	2020-04-17 14:48:56.598419	a3107377-f602-400e-aed9-ef4aa13a7961
2515	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	2020-04-17 14:48:56.604854	2020-04-17 14:48:56.604854	85766852-129f-45b8-90ea-20e631414575
2516	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	2020-04-17 14:48:56.611282	2020-04-17 14:48:56.611282	31765697-d0ca-4ce3-8461-64a03dc5b630
2517	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	2020-04-17 14:48:56.616612	2020-04-17 14:48:56.616612	2c4f0168-42fe-4530-b95d-0d97e215e6a2
2518	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	2020-04-17 14:48:56.621943	2020-04-17 14:48:56.621943	2b5585d6-cbcf-4a8f-b82f-c613309c9b58
2519	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:56.628325	2020-04-17 14:48:56.628325	e6412f53-b246-4695-8d87-a2341ea93e33
2520	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	2020-04-17 14:48:56.634743	2020-04-17 14:48:56.634743	9ecadd3f-cf62-4ccc-9d62-9fad0a3e9083
2521	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	2020-04-17 14:48:56.641171	2020-04-17 14:48:56.641171	9f57a7ec-3ac0-4ba3-9e7f-3e700a0b5703
2522	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	2020-04-17 14:48:56.647639	2020-04-17 14:48:56.647639	01fae530-a03d-4967-b466-d162ea6de8c2
2523	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	2020-04-17 14:48:56.653927	2020-04-17 14:48:56.653927	299080e8-a8ef-4232-b449-3279053e143e
2524	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	2020-04-17 14:48:56.659273	2020-04-17 14:48:56.659273	526b59b7-392a-4cf1-a20a-fd1855383ddd
2525	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	2020-04-17 14:48:56.665657	2020-04-17 14:48:56.665657	77cad202-b148-4b6d-aea9-30f9f77f4d2e
2526	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	2020-04-17 14:48:56.672066	2020-04-17 14:48:56.672066	e11f768d-ad7e-4627-a1bd-b3bc56a14c87
2527	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	2020-04-17 14:48:56.679541	2020-04-17 14:48:56.679493	b7e7dadd-2365-4b2a-9d76-94249095e0c7
2528	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	2020-04-17 14:48:56.68489	2020-04-17 14:48:56.68489	a44bf765-6eba-423b-8b69-b30075b200e0
2529	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	2020-04-17 14:48:56.691308	2020-04-17 14:48:56.691308	6ae45147-f1da-458f-9f44-2367f33ccbb1
2530	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	2020-04-17 14:48:56.69775	2020-04-17 14:48:56.69775	18e9a98a-e313-4868-8a39-4a74d87ed431
2531	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	2020-04-17 14:48:56.703018	2020-04-17 14:48:56.703018	b5af17c9-43ca-4a9f-8a44-25bb8657a446
2532	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	2020-04-17 14:48:56.709345	2020-04-17 14:48:56.709345	4d80a0e8-9c70-4c12-a47e-22e7d90ad111
2533	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Corporation	\N	\N	\N	2020-04-17 14:48:56.714682	2020-04-17 14:48:56.714682	3feb502e-7256-4ad8-9605-01e5bc7b2201
2534	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	Kewa Pueblo	Kewa Pueblo	\N	\N	\N	2020-04-17 14:48:56.721072	2020-04-17 14:48:56.721072	b9f2091b-7a72-426e-a4df-aa46a03efdfa
2535	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	2020-04-17 14:48:56.727522	2020-04-17 14:48:56.727522	652d20e9-a09f-4bb8-a618-6245f0b73898
2536	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	2020-04-17 14:48:56.732853	2020-04-17 14:48:56.732853	eb2d2a2c-7ccd-4c79-a12b-abf8d3aa629d
2537	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	2020-04-17 14:48:56.739323	2020-04-17 14:48:56.739323	6eb28824-9e0a-41c1-993a-43c6e3a94881
2538	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe in Kansas	\N	\N	\N	2020-04-17 14:48:56.745754	2020-04-17 14:48:56.745754	467a8cd2-35e2-4212-8293-007506022a50
2539	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:56.751109	2020-04-17 14:48:56.751109	6efb408f-9a16-41cd-a3e1-941de0e19855
2540	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	2020-04-17 14:48:56.7575	2020-04-17 14:48:56.7575	9c85784e-420a-4ee1-833f-43f5309fc16b
2541	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	2020-04-17 14:48:56.763953	2020-04-17 14:48:56.763898	4d70dc15-a7cd-45e1-a8ac-519da8924f39
2542	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	2020-04-17 14:48:56.770352	2020-04-17 14:48:56.770352	1aa18180-5365-4436-bcb8-d3d3239039b5
2543	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Tribe	\N	\N	\N	2020-04-17 14:48:56.776799	2020-04-17 14:48:56.776799	30bbb344-b84c-4ccb-a8ef-be47d719ec66
2544	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	2020-04-17 14:48:56.782029	2020-04-17 14:48:56.782029	6a904351-7933-4c8e-a35f-a263e7e80342
2545	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	2020-04-17 14:48:56.787402	2020-04-17 14:48:56.787402	49f3a06d-b57e-4dbf-a5ce-ef56e1675299
2546	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	2020-04-17 14:48:56.793745	2020-04-17 14:48:56.793745	c56b1fa7-4b43-45b1-8de4-80bc9d225c5e
2547	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	2020-04-17 14:48:56.800133	2020-04-17 14:48:56.800133	290077ab-3579-4a9b-970f-2ab7e632afb4
2548	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	Kluti-Kaah	Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	2020-04-17 14:48:56.805478	2020-04-17 14:48:56.805478	26aeab06-d8e3-403a-aded-71b66812eee8
2549	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	2020-04-17 14:48:56.811904	2020-04-17 14:48:56.811904	4d06653f-69b4-49c3-bd4c-6252e7eb54b0
2550	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	2020-04-17 14:48:56.817261	2020-04-17 14:48:56.817261	d07aa4b4-ba72-4e47-a1e6-46fbea74c1fd
2551	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	2020-04-17 14:48:56.823657	2020-04-17 14:48:56.823657	5697fd55-63f8-489d-b5eb-e50e267ec83a
2552	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	2020-04-17 14:48:56.829012	2020-04-17 14:48:56.829012	aebef6a5-670b-4b97-99af-ac4ed10f8a5a
2553	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	2020-04-17 14:48:56.835427	2020-04-17 14:48:56.835427	83695774-c66f-4812-96f7-9024365f7128
2554	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	2020-04-17 14:48:56.841841	2020-04-17 14:48:56.841788	9c78c684-1e6b-45fd-9902-678225da4a41
2555	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	2020-04-17 14:48:56.847226	2020-04-17 14:48:56.847226	a7654f4f-56ec-439b-bb09-b9709cb8460a
2556	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	2020-04-17 14:48:56.854678	2020-04-17 14:48:56.854678	c1369a28-99d2-47c4-9335-eb01b13b169c
2557	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	2020-04-17 14:48:56.860015	2020-04-17 14:48:56.860015	5448357e-135d-4618-a1a3-86fc1e3618a4
2558	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	2020-04-17 14:48:56.865374	2020-04-17 14:48:56.865374	12191e03-f719-48ce-aa60-6c31a79196f1
2559	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	2020-04-17 14:48:56.87183	2020-04-17 14:48:56.87183	ee0f308a-2ddd-4e11-ac84-e087261174ca
2560	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	2020-04-17 14:48:56.878118	2020-04-17 14:48:56.878118	04d3c78b-ae11-4707-aa35-146954242d82
2561	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	2020-04-17 14:48:56.889701	2020-04-17 14:48:56.888692	cf68d51f-e424-4900-98e0-b4dc8496aa67
2562	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	2020-04-17 14:48:56.895107	2020-04-17 14:48:56.895107	f39486ee-54a3-4c3a-9050-2b20695676d4
2563	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	2020-04-17 14:48:56.901528	2020-04-17 14:48:56.901528	ef1785de-f479-4987-9a6e-6c2b58c68621
2564	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2020-04-17 14:48:56.906726	2020-04-17 14:48:56.906726	c462f40b-3d9d-4da9-91a8-2a01a3cb2254
2565	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2020-04-17 14:48:56.913136	2020-04-17 14:48:56.913136	60825db5-85d5-4f1e-a87b-6b8965c611b2
2566	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of MI	\N	\N	\N	2020-04-17 14:48:56.918478	2020-04-17 14:48:56.918478	c28e2a12-c5be-42b1-ba34-3290ada05ee8
2567	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	2020-04-17 14:48:56.924761	2020-04-17 14:48:56.924761	b68fe1ef-e305-4b55-be11-50578939f731
2568	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	2020-04-17 14:48:56.931051	2020-04-17 14:48:56.931051	a409ee48-f332-40ae-9cb9-1bc02016fff8
2569	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	2020-04-17 14:48:56.936402	2020-04-17 14:48:56.936402	73739023-c084-4bb2-b9b8-e220d8b147d2
2570	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	2020-04-17 14:48:56.942829	2020-04-17 14:48:56.942829	62183b74-7159-4215-bc44-37db23099f3f
2571	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	2020-04-17 14:48:56.949217	2020-04-17 14:48:56.949217	6e84fcee-1f85-40cf-9426-b00a0b7f82d8
2572	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	2020-04-17 14:48:56.955665	2020-04-17 14:48:56.955665	8567051a-4eca-461d-8eed-0cbfcd39a8ba
2573	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	2020-04-17 14:48:56.961078	2020-04-17 14:48:56.961078	084f6891-5bb8-4f14-a17b-a07b6b088fc4
2574	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	2020-04-17 14:48:56.967506	2020-04-17 14:48:56.966494	d8c53674-290d-4ba1-9c16-8b1c5a1fc268
2575	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla & Cupeno Indians, California	\N	\N	\N	2020-04-17 14:48:56.972936	2020-04-17 14:48:56.972936	b86fce6a-39cf-47f9-b25c-eb43b7f93aeb
2576	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	2020-04-17 14:48:56.978324	2020-04-17 14:48:56.978324	3a522a5c-61fd-4c15-83ea-6bfedcf3437a
2577	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, SD	\N	\N	\N	2020-04-17 14:48:56.984756	2020-04-17 14:48:56.984756	275bc210-0056-4a54-9916-2b90ba891d82
2578	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	2020-04-17 14:48:56.991201	2020-04-17 14:48:56.991201	e846ac76-67da-4d65-ab08-d6ff6652371e
2579	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	2020-04-17 14:48:56.996551	2020-04-17 14:48:56.996551	0c46f6df-1be5-49b4-a79e-838c61219ba9
2580	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	2020-04-17 14:48:57.002933	2020-04-17 14:48:57.002933	001446a5-13e0-4d62-bbe2-7e89755e24d2
2581	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	2020-04-17 14:48:57.009365	2020-04-17 14:48:57.009365	ec29ff59-6aa0-4919-b35f-d895776560d9
2582	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	2020-04-17 14:48:57.015769	2020-04-17 14:48:57.015769	e4360b62-887f-48a1-8360-95c467919477
2583	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	2020-04-17 14:48:57.02218	2020-04-17 14:48:57.02218	9ce258ff-7eb9-4728-8c93-27d00d549c6a
2584	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	2020-04-17 14:48:57.028632	2020-04-17 14:48:57.028632	63678b71-bf6d-4d7f-baf7-9486a46cea6a
2585	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	2020-04-17 14:48:57.035014	2020-04-17 14:48:57.035014	b7be58a9-e80f-4416-b443-f6e3bd0a932f
2586	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	2020-04-17 14:48:57.041326	2020-04-17 14:48:57.041326	03ef3eaf-ec84-4d46-a4bf-b4252de7f25d
2587	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, Califonria	\N	\N	\N	2020-04-17 14:48:57.04771	2020-04-17 14:48:57.04771	d98af36e-8a34-49d5-9b31-bb636074c04e
2588	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	2020-04-17 14:48:57.054106	2020-04-17 14:48:57.054106	54ab0942-1164-4654-b351-779b5d672194
2589	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	2020-04-17 14:48:57.060482	2020-04-17 14:48:57.060482	a60da468-d418-4a0e-a045-c9cc08a4630d
2590	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.067902	2020-04-17 14:48:57.067902	c3b91949-9558-4c0c-859d-b3da01c7ef23
2591	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	2020-04-17 14:48:57.076354	2020-04-17 14:48:57.076354	c5b80165-4b82-40e4-89a5-7c8a84aad85a
2592	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	2020-04-17 14:48:57.082736	2020-04-17 14:48:57.082736	66f94919-4134-43d2-82f2-a632c79b40db
2593	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	2020-04-17 14:48:57.089207	2020-04-17 14:48:57.089207	970829b8-6427-481f-841d-162cbeface3a
2594	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	2020-04-17 14:48:57.337117	2020-04-17 14:48:57.337117	4932db9f-23c3-4af0-bdf5-54bfc4f6d4bc
2595	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	2020-04-17 14:48:57.344637	2020-04-17 14:48:57.344637	0e899cea-4b95-4c32-b5cf-dc5e3976a6e1
2596	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	2020-04-17 14:48:57.352009	2020-04-17 14:48:57.352009	1e797de2-043b-4bf3-83de-4a0fca060255
2597	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	2020-04-17 14:48:57.361677	2020-04-17 14:48:57.361677	769e686f-c25f-43ac-8df7-1e47c6c0a702
2598	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	2020-04-17 14:48:57.369176	2020-04-17 14:48:57.369176	cfe6222e-5f83-4bd5-8834-645318a81255
2599	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	Mescalero	Mescalero Apache Tribe	\N	\N	\N	2020-04-17 14:48:57.375583	2020-04-17 14:48:57.375583	99851717-dd44-4d16-8089-227b241006b4
2600	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	2020-04-17 14:48:57.382161	2020-04-17 14:48:57.382161	d5f21d75-7140-408a-8783-3289689299e6
2601	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.388577	2020-04-17 14:48:57.388577	5bc7c4f5-2e7a-4b0a-92e5-cc9aaa22ae56
2602	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	2020-04-17 14:48:57.394983	2020-04-17 14:48:57.394983	51356915-13e5-428b-ad22-dc1785789e22
2603	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	2020-04-17 14:48:57.401328	2020-04-17 14:48:57.401328	7bfea05f-3cf3-4da3-88a5-0f035b87848f
2604	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	2020-04-17 14:48:57.407638	2020-04-17 14:48:57.407638	3ea32372-0a78-4612-9d85-d541dd340790
2605	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe	\N	\N	\N	2020-04-17 14:48:57.415098	2020-04-17 14:48:57.415043	c1b68748-6df1-4061-aa71-b22db9f064f1
2606	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	2020-04-17 14:48:57.421533	2020-04-17 14:48:57.421533	63b476ac-83b7-437e-981c-c7f98913b386
2607	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	2020-04-17 14:48:57.427947	2020-04-17 14:48:57.427947	3e2e5f6b-5242-48bf-93fe-5d3184264c37
2608	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:57.434386	2020-04-17 14:48:57.434386	a660ff1b-9e37-442e-a9da-61c9bc032ee8
2609	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	The Modoc Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.440773	2020-04-17 14:48:57.440773	9dbcfb80-f230-4039-ba62-d9b0821cb22d
2610	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	2020-04-17 14:48:57.448196	2020-04-17 14:48:57.448196	f61fe497-f31b-46ae-9bb7-dafa9bc3cd2d
2611	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	2020-04-17 14:48:57.454615	2020-04-17 14:48:57.454615	045ac87e-b6a1-434d-a597-b6673c1813fd
2612	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	2020-04-17 14:48:57.463159	2020-04-17 14:48:57.463159	48c587d0-563d-43e1-b199-c9f331374241
2613	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.469582	2020-04-17 14:48:57.469582	df75d20f-cb46-49e2-a4b8-2ae4953120c4
2614	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	Muscogee	The Muscogee (Creek) Nation	\N	\N	\N	2020-04-17 14:48:57.476037	2020-04-17 14:48:57.476037	e0b3fb10-fa94-497a-a305-880bee6c4872
2615	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	2020-04-17 14:48:57.482465	2020-04-17 14:48:57.482465	81c4be19-bbf0-41d0-9e23-7cb3005e931b
2616	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	2020-04-17 14:48:57.488878	2020-04-17 14:48:57.488878	c54197e5-db8d-4d75-a18b-e98e5d42ab74
2617	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	2020-04-17 14:48:57.496322	2020-04-17 14:48:57.496322	c16f8aa7-6c8b-4381-8fef-dcd2cc9a4d00
2618	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	2020-04-17 14:48:57.502694	2020-04-17 14:48:57.502694	9446b77a-f85e-4309-ac66-296060f85ae0
2619	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	2020-04-17 14:48:57.509058	2020-04-17 14:48:57.509058	533ae900-7769-4ecf-ad93-c88b6038f136
2620	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.515519	2020-04-17 14:48:57.515519	92638f5c-1259-4290-a062-53e01844f7ee
2621	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	2020-04-17 14:48:57.523043	2020-04-17 14:48:57.523043	623b4c3a-14a0-4cf7-82c1-36da3f342e34
2622	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	2020-04-17 14:48:57.529463	2020-04-17 14:48:57.529463	7dd1d877-e395-4d9c-b439-882c023fb2ad
2623	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	2020-04-17 14:48:57.534823	2020-04-17 14:48:57.534823	c4699b7e-526b-4bcd-8203-336c29adf218
2624	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	2020-04-17 14:48:57.541233	2020-04-17 14:48:57.541233	31dfce28-1e0b-4d68-b25f-4718656031a9
2625	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	2020-04-17 14:48:57.547658	2020-04-17 14:48:57.547658	65ab85da-e0e5-45eb-b966-c162fb7192ba
2626	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	2020-04-17 14:48:57.555116	2020-04-17 14:48:57.555116	cf254776-c56e-4fab-92c0-8aa532295bc6
2627	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	2020-04-17 14:48:57.561372	2020-04-17 14:48:57.561372	dd28ec9e-7c76-41bb-85ab-90395c3afec4
2628	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	2020-04-17 14:48:57.568851	2020-04-17 14:48:57.568826	f1b5957a-afe4-4a3f-ab5b-da66a8bd9f91
2629	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	2020-04-17 14:48:57.57523	2020-04-17 14:48:57.57523	e71abc47-3815-4ae8-a309-67897e50f42b
2630	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	2020-04-17 14:48:57.581654	2020-04-17 14:48:57.581654	0dc6e619-8030-438d-90b3-29ac26d1a8ec
2631	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	2020-04-17 14:48:57.590208	2020-04-17 14:48:57.590208	4c7a7d42-09d0-4894-aa16-7a62fc4bb543
2632	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	2020-04-17 14:48:57.59664	2020-04-17 14:48:57.59664	d8ea47ed-4564-47c3-b75f-5e1a62162307
2633	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.603092	2020-04-17 14:48:57.603092	dd2ce432-f71b-4d5e-8fad-75fe2e780faa
2634	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	2020-04-17 14:48:57.609467	2020-04-17 14:48:57.609467	3aaa7ace-4e4f-494f-adcb-29ece7fd5518
2635	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	2020-04-17 14:48:57.615886	2020-04-17 14:48:57.615886	1187a519-87cf-4a70-bdb9-f25ccc8ecc76
2636	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	2020-04-17 14:48:57.62234	2020-04-17 14:48:57.62234	2269c9cf-3e09-4f7a-9b31-090b7e494ad8
2637	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.628758	2020-04-17 14:48:57.627714	a735cd9e-6ee0-4ec0-8a4c-b6721fad94db
2638	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	2020-04-17 14:48:57.6341	2020-04-17 14:48:57.6341	9835d038-88e4-4056-a398-9ab82aef1f12
2639	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2020-04-17 14:48:57.641614	2020-04-17 14:48:57.641614	2fdf0366-5a8d-4b5b-a20e-facda13794a2
2640	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe	\N	\N	\N	2020-04-17 14:48:57.64802	2020-04-17 14:48:57.64802	bd5d1841-55dc-44fa-98f0-aa074b4f296e
2641	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	Northfork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	2020-04-17 14:48:57.654296	2020-04-17 14:48:57.654296	5d50dd0f-04c9-4fb5-ade5-2930bcdb5e43
2642	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	2020-04-17 14:48:57.659632	2020-04-17 14:48:57.659632	c46da1ba-e580-457a-b675-f581a23f5c69
2643	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of Shoshone Nation	\N	\N	\N	2020-04-17 14:48:57.665007	2020-04-17 14:48:57.665007	1ee5ff40-ab10-41d6-a29a-ea0747cbd720
2644	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, MI	\N	\N	\N	2020-04-17 14:48:57.671475	2020-04-17 14:48:57.671475	78e0dd50-2220-427e-bcda-7c64ec27cdb9
2645	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	2020-04-17 14:48:57.676822	2020-04-17 14:48:57.676822	ab823d2c-dde6-4b2e-9620-338b576ca978
2646	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	2020-04-17 14:48:57.683321	2020-04-17 14:48:57.683321	ee9b9e84-8bec-49da-bb8d-e51d725b98c2
2647	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	2020-04-17 14:48:57.688669	2020-04-17 14:48:57.688669	1b865668-96f6-43bb-8f74-ba20954be185
2648	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	2020-04-17 14:48:57.69508	2020-04-17 14:48:57.69508	51ea2146-a9e3-46e1-8a7b-95c19dd3dbae
2649	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	2020-04-17 14:48:57.701479	2020-04-17 14:48:57.701479	76a6d932-78bf-402c-8d1a-3124682ab5bb
2650	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	2020-04-17 14:48:57.70677	2020-04-17 14:48:57.70677	fcce432b-d152-4de4-834f-90f7b54f5e7e
2651	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	Ohkay	Ohkay Owingeh	\N	\N	\N	2020-04-17 14:48:57.713156	2020-04-17 14:48:57.713156	5808d53e-13a0-4505-8806-0796db2fcb97
2652	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	Ohogamuit	Village of Ohogamiut	\N	\N	\N	2020-04-17 14:48:57.719553	2020-04-17 14:48:57.719553	1c7e9033-1d56-4d4e-a7fa-5283174deb97
2653	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	2020-04-17 14:48:57.724873	2020-04-17 14:48:57.724873	1ceda164-f52b-49bf-93c6-8307c94cd290
2654	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	Oneida  Nation of New York	Oneida  Nation of New York	\N	\N	\N	2020-04-17 14:48:57.732354	2020-04-17 14:48:57.732354	a2a4920a-2eb4-42bf-af9f-3806138c4fad
2655	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	2020-04-17 14:48:57.738803	2020-04-17 14:48:57.738803	adc6dbc5-1399-4f54-81d2-62fbc54f3326
2656	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	2020-04-17 14:48:57.74416	2020-04-17 14:48:57.74416	c5cfb15a-8177-4951-b1fc-24c243b8edbc
2657	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	2020-04-17 14:48:57.750621	2020-04-17 14:48:57.750621	8f7d8009-4f25-45cf-a16e-4a6c2669d62d
2658	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	Osage	The Osage Nation	\N	\N	\N	2020-04-17 14:48:57.755991	2020-04-17 14:48:57.755991	f3e3c34f-475e-487b-a78e-18352f7e0eac
2659	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	2020-04-17 14:48:57.764598	2020-04-17 14:48:57.764598	64171f03-810a-4f1b-bb34-0e03c332f97b
2660	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	2020-04-17 14:48:57.771044	2020-04-17 14:48:57.771044	f0bc8b6f-07e1-4358-804f-be679d123a36
2661	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	Ottawa of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.777409	2020-04-17 14:48:57.777409	c2326162-38c0-4da5-8a9d-719ac09d7e22
2662	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	2020-04-17 14:48:57.783799	2020-04-17 14:48:57.783799	c3ae5cfb-bc1c-4298-9cd8-1ea5e37595b9
2663	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	2020-04-17 14:48:57.790257	2020-04-17 14:48:57.790257	eeb5d6b6-d2a8-456c-9491-6db6d13c50b1
2664	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	2020-04-17 14:48:57.796534	2020-04-17 14:48:57.796534	af31a35b-7ae4-4f2b-9c7e-221011e999f8
2665	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	2020-04-17 14:48:57.802924	2020-04-17 14:48:57.802924	209299f1-8c72-4a94-88a4-da524c36c8ba
2666	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	2020-04-17 14:48:57.80937	2020-04-17 14:48:57.80937	8e08df76-87cf-4b61-bef3-e9fe54e68306
2667	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	2020-04-17 14:48:57.815755	2020-04-17 14:48:57.815755	231d7415-07c0-45a9-9561-bff4621b387c
2668	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	2020-04-17 14:48:57.823282	2020-04-17 14:48:57.823282	3d6a604b-ee7f-4bf8-bb0e-0636c5ba7a74
2669	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	2020-04-17 14:48:57.829692	2020-04-17 14:48:57.829692	8fb497f1-a20d-4c26-a71b-c20e8c16203e
2670	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	Passamaquaddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	2020-04-17 14:48:57.836127	2020-04-17 14:48:57.836127	83144e8a-a873-442c-a97f-29d681b12dc0
2671	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	2020-04-17 14:48:57.841475	2020-04-17 14:48:57.841475	f74931fd-75fc-4864-b9f5-4544aff1fcbf
2672	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	2020-04-17 14:48:57.847931	2020-04-17 14:48:57.847931	d49db885-eaac-47e1-90dd-b004a14b7306
2673	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	2020-04-17 14:48:57.854389	2020-04-17 14:48:57.854389	91c7e210-3e67-459a-ada8-9b97e3e8b262
2674	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.860815	2020-04-17 14:48:57.860815	be77b353-0200-468c-aede-846af00223d7
2675	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	Pechanga	Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	2020-04-17 14:48:57.86618	2020-04-17 14:48:57.86618	7eebe123-1a50-4b55-9274-3e0c690cd314
2676	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	2020-04-17 14:48:57.872541	2020-04-17 14:48:57.872541	911429ee-2590-4c63-9dea-cfbe53396ff2
2677	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	2020-04-17 14:48:57.877873	2020-04-17 14:48:57.877873	a82165aa-9a9b-45ef-a415-748dda83c612
2678	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	Peoria	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.884223	2020-04-17 14:48:57.884223	7c196494-3a13-4cac-ab50-b8e646f9e286
2679	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	2020-04-17 14:48:57.890611	2020-04-17 14:48:57.890611	dd09f248-a025-4fcc-b096-8408c9596d53
2680	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	2020-04-17 14:48:57.896987	2020-04-17 14:48:57.896987	2162739f-00cf-4852-a8ba-83de913c2c5f
2681	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	2020-04-17 14:48:57.903362	2020-04-17 14:48:57.903362	783047ed-37d6-486d-b08f-a1f50cbc83f7
2682	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	2020-04-17 14:48:57.909737	2020-04-17 14:48:57.909737	fb0b8190-9a6b-4a19-9f73-89433b1671d6
2683	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	2020-04-17 14:48:57.91721	2020-04-17 14:48:57.91721	58adeeeb-afd1-41d2-897b-70c1698ff591
2684	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	2020-04-17 14:48:57.923617	2020-04-17 14:48:57.923617	b1459bdd-35a3-4058-8590-3d3354299bcf
2685	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	2020-04-17 14:48:57.930051	2020-04-17 14:48:57.930051	12b48863-42d2-404c-a82e-9660abe388f4
2686	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Native Village of Pitka's Point	\N	\N	\N	2020-04-17 14:48:57.935364	2020-04-17 14:48:57.935364	d46440b0-e968-41ed-b0e9-b1a90f34ef94
2687	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	2020-04-17 14:48:57.941811	2020-04-17 14:48:57.941811	491ebbdd-5521-4ba4-9075-5e32fb825d3b
2688	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creeks	\N	\N	\N	2020-04-17 14:48:57.948208	2020-04-17 14:48:57.948208	9fcf0bf1-2e63-4f30-b064-80f2586244f5
2689	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	2020-04-17 14:48:57.953516	2020-04-17 14:48:57.953516	69de835d-d0c2-4fa6-8c0a-b5f942e02995
2690	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	2020-04-17 14:48:57.959892	2020-04-17 14:48:57.959892	3f9d3dd0-589d-4b53-9e4f-91add5de1ad8
2691	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan & Indiana	\N	\N	\N	2020-04-17 14:48:57.965202	2020-04-17 14:48:57.965202	978354e2-6676-4d09-a1bc-876f4ce72c51
2692	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	2020-04-17 14:48:57.971464	2020-04-17 14:48:57.971464	c9a66f19-0282-4c11-941a-56ee86680f22
2693	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	2020-04-17 14:48:57.977879	2020-04-17 14:48:57.977879	0a3b280a-f874-4bb1-b3ac-d6e36e18f28f
2694	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	2020-04-17 14:48:57.984438	2020-04-17 14:48:57.984438	841706f4-692a-4e48-8e23-3ba73715bbbd
2695	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	2020-04-17 14:48:58.225069	2020-04-17 14:48:58.225069	f46d178e-9586-42fb-8927-044375731f6b
2696	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	2020-04-17 14:48:58.231451	2020-04-17 14:48:58.231451	25c6b442-1c36-483e-863e-4a38bd7cc5ef
2697	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	2020-04-17 14:48:58.242038	2020-04-17 14:48:58.242038	bcf915f3-878b-4a4c-9ee9-33a2f94699a9
2698	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	2020-04-17 14:48:58.251515	2020-04-17 14:48:58.251515	aa70e747-1eb6-4f95-a09f-f6ac027f0737
2699	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	2020-04-17 14:48:58.257886	2020-04-17 14:48:58.257886	786ad72c-b00f-4346-b6a3-feb88ceec93a
2700	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band of Potawatomi Nation	\N	\N	\N	2020-04-17 14:48:58.26443	2020-04-17 14:48:58.26443	10d3519a-5e82-4b1b-89e6-c2b44a0f2f9c
2701	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of MN	\N	\N	\N	2020-04-17 14:48:58.270765	2020-04-17 14:48:58.270765	b00652ce-b9a8-4beb-ac3e-b61ed13bacdb
2702	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma	\N	\N	\N	2020-04-17 14:48:58.277191	2020-04-17 14:48:58.277191	d343f4e7-486d-42cb-9a0a-b2922b3610d8
2703	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti	\N	\N	\N	2020-04-17 14:48:58.284599	2020-04-17 14:48:58.284599	c34ad259-2ad6-48f9-9db2-8cb1bac81842
2704	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta	\N	\N	\N	2020-04-17 14:48:58.290962	2020-04-17 14:48:58.290923	c4119e7d-01df-4da2-9b04-150f27761a59
2705	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez	\N	\N	\N	2020-04-17 14:48:58.297365	2020-04-17 14:48:58.297365	9e8e1bc7-8dea-493b-887e-7bd69c234cd3
2706	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna	\N	\N	\N	2020-04-17 14:48:58.303744	2020-04-17 14:48:58.303744	914cc62a-b4ef-43dd-9f4b-9f1f7273a3c9
2707	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe	\N	\N	\N	2020-04-17 14:48:58.310205	2020-04-17 14:48:58.310205	3e5385f5-a589-404c-866b-8943ce9b434a
2708	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris	\N	\N	\N	2020-04-17 14:48:58.318679	2020-04-17 14:48:58.318679	98b1e9a1-32c6-4987-bbbb-34a62e94c218
2709	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque	\N	\N	\N	2020-04-17 14:48:58.325081	2020-04-17 14:48:58.325081	ce5bd3d1-efd2-4ff4-8827-234140c7f687
2710	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe	\N	\N	\N	2020-04-17 14:48:58.33135	2020-04-17 14:48:58.33135	13c28eb1-5fb2-441f-bf7a-ff9fafec69c3
2711	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso	\N	\N	\N	2020-04-17 14:48:58.338794	2020-04-17 14:48:58.338794	81934ac0-bbf3-40f3-90eb-a116e08d78a7
2712	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia	\N	\N	\N	2020-04-17 14:48:58.346158	2020-04-17 14:48:58.346158	9b3df054-828b-467b-932b-7db5efeeb6ed
2713	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana	\N	\N	\N	2020-04-17 14:48:58.352607	2020-04-17 14:48:58.352607	d5f08bb5-bba9-4a02-97ff-7af42801848d
2714	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara	\N	\N	\N	2020-04-17 14:48:58.359071	2020-04-17 14:48:58.359071	ced2e21c-11ba-4169-9b5d-c2c6b0e321fa
2715	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos	\N	\N	\N	2020-04-17 14:48:58.365449	2020-04-17 14:48:58.365449	81c5baf9-5ec0-4130-94d0-c07410cab379
2716	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque	\N	\N	\N	2020-04-17 14:48:58.37179	2020-04-17 14:48:58.37179	7acbd516-3148-45b2-a0ab-e45c71727419
2717	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia	\N	\N	\N	2020-04-17 14:48:58.379143	2020-04-17 14:48:58.379143	36137dfd-4c51-41c1-8b5f-47340ae01a46
2718	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	2020-04-17 14:48:58.385427	2020-04-17 14:48:58.385427	85d562a4-1a08-4f3e-a796-41bb8ce94527
2719	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:58.39186	2020-04-17 14:48:58.39186	aef4cfc6-93c2-4633-b8ba-e13dd6193de2
2720	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point Village	\N	\N	\N	2020-04-17 14:48:58.398276	2020-04-17 14:48:58.398276	600a7924-93a5-4d44-a0a7-f7e13633f00f
2721	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	2020-04-17 14:48:58.404679	2020-04-17 14:48:58.404679	70fa662d-425c-4c7f-b3fc-545464a99017
2722	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	Quapaw	The Quapaw Tribe of Indians	\N	\N	\N	2020-04-17 14:48:58.411093	2020-04-17 14:48:58.411093	4e5c0d5e-5027-48c0-9993-af067995d813
2723	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	2020-04-17 14:48:58.417514	2020-04-17 14:48:58.417514	8d6bd2ea-f5cf-406f-833d-54c303a707d1
2724	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	2020-04-17 14:48:58.42393	2020-04-17 14:48:58.42393	9907c115-cbd0-4d13-9214-bffd59aa5038
2725	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	2020-04-17 14:48:58.432505	2020-04-17 14:48:58.432505	340dabbd-075c-40b2-a2b0-e2a64f368201
2726	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	2020-04-17 14:48:58.438918	2020-04-17 14:48:58.438918	91c4be78-ae81-4511-ab51-c145666a939a
2727	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	Ramah	Ramah Navajo Chapter	\N	\N	\N	2020-04-17 14:48:58.445341	2020-04-17 14:48:58.445341	c594b6c9-ab97-4e05-9ca0-dba9b964222e
2728	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	2020-04-17 14:48:58.451603	2020-04-17 14:48:58.451603	4600db98-d72b-4800-9345-6af01278269d
2729	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	2020-04-17 14:48:58.457995	2020-04-17 14:48:58.457995	ef36ee59-ef40-46df-b050-d2979a2247a8
2730	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2020-04-17 14:48:58.464382	2020-04-17 14:48:58.464382	59d26750-49d2-4537-a2be-c2209bbc77f3
2731	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	2020-04-17 14:48:58.471879	2020-04-17 14:48:58.471879	0de3d840-4c29-4961-b7f3-eb08262d705d
2732	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	2020-04-17 14:48:58.714158	2020-04-17 14:48:58.714158	4bd62208-d90d-4381-9029-9558c4db2e54
2733	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	2020-04-17 14:48:58.721561	2020-04-17 14:48:58.721561	259b6106-4dca-4d99-92e8-c8ecdea289c3
2734	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	2020-04-17 14:48:58.72796	2020-04-17 14:48:58.72796	736eba92-dbfa-464c-87ca-d67312c2c366
2735	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	2020-04-17 14:48:58.734397	2020-04-17 14:48:58.734397	e03d9822-2ee5-40ac-8801-e50f503f5a3c
2736	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	2020-04-17 14:48:58.740663	2020-04-17 14:48:58.740663	f0517788-1de6-4ce2-bd47-ed23b3f2a173
2737	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	2020-04-17 14:48:58.74707	2020-04-17 14:48:58.74707	ef3fa59a-fecc-4a40-81f3-ddcd6cfbf2ef
2738	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria Band of Pomo Indians, CA	\N	\N	\N	2020-04-17 14:48:58.754533	2020-04-17 14:48:58.754533	f0c49566-97f3-4b94-9362-0ea4c5e5a2b2
2739	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, SD	\N	\N	\N	2020-04-17 14:48:58.760826	2020-04-17 14:48:58.760826	4e8949d6-bbfc-428b-a423-615b6f7c6797
2740	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	2020-04-17 14:48:58.7692	2020-04-17 14:48:58.7692	f74af56f-b544-4824-b30a-b037be47e1c9
2741	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	2020-04-17 14:48:58.775599	2020-04-17 14:48:58.775599	f1940f0d-3d72-4125-8732-3bf4f7a0515f
2742	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	2020-04-17 14:48:58.783028	2020-04-17 14:48:58.783028	2dce6614-f379-4f72-942c-634a306c3b4a
2743	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	Sac and Fox Nation of Missouri in Kansas and Nebraska	Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	2020-04-17 14:48:58.790516	2020-04-17 14:48:58.790516	8e17e26c-38a8-420e-a52b-9f1f4cf70570
2744	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	Oklahoma	Sac and Fox Nation, Oklahoma	\N	\N	\N	2020-04-17 14:48:58.795863	2020-04-17 14:48:58.795863	53238dfd-1729-41c5-80cd-d37c6f31bdbb
2745	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	2020-04-17 14:48:58.802274	2020-04-17 14:48:58.802274	89f99b2b-a0b9-40e4-988b-2492d736807d
2746	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	2020-04-17 14:48:58.807665	2020-04-17 14:48:58.807665	cff1d2e4-632b-4f5e-b535-50d46fe47b3f
2747	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	2020-04-17 14:48:58.814135	2020-04-17 14:48:58.814135	a8a6561f-d2aa-4f02-8af3-8c7d81e3432b
2748	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	Salamatoff	Village of Salamatoff	\N	\N	\N	2020-04-17 14:48:58.81949	2020-04-17 14:48:58.81949	2486a24c-b102-4284-8de8-23472dad2e11
2749	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:58.825932	2020-04-17 14:48:58.825932	37b1594d-0913-475b-b737-9fb5850d1b2e
2750	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	2020-04-17 14:48:58.831291	2020-04-17 14:48:58.831291	90f4c7c2-c417-42c2-b8fd-cf7c8bf6cd16
2751	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:58.837757	2020-04-17 14:48:58.837757	792b76c2-824f-4a77-9275-b50c283acf07
2752	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	2020-04-17 14:48:58.843101	2020-04-17 14:48:58.843101	e08547eb-e392-4cf0-8143-7411a64fa57c
2753	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	San Manuel	San Manuel Band of Mission Indians, California	\N	\N	\N	2020-04-17 14:48:58.850203	2020-04-17 14:48:58.850203	6be7652f-1169-49f1-b2f6-0a03f379c139
2754	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	2020-04-17 14:48:58.857697	2020-04-17 14:48:58.857697	cd8f60d3-eb69-4b62-817a-a29f8a931003
2755	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	2020-04-17 14:48:58.864123	2020-04-17 14:48:58.864123	a4926c42-f567-4a65-9e32-c1b8a28030c9
2756	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	Santa Rosa of Chuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	2020-04-17 14:48:58.87156	2020-04-17 14:48:58.870522	f4a48021-da32-4537-adac-c9e13ed3e362
2757	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	2020-04-17 14:48:58.876945	2020-04-17 14:48:58.876945	5f4c8e2a-b1c4-4ea6-9952-486f41fdba68
2758	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	2020-04-17 14:48:58.883396	2020-04-17 14:48:58.883396	b80c1e57-574b-47b3-bf0d-d42f413bd4ab
2759	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	2020-04-17 14:48:58.888678	2020-04-17 14:48:58.888678	ceeb22c2-e2f9-4c4a-af7f-a4c8d266e21a
2760	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	2020-04-17 14:48:58.895161	2020-04-17 14:48:58.895161	990d4b68-3ea0-44ae-a57d-d97680f9f225
2761	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	2020-04-17 14:48:58.901536	2020-04-17 14:48:58.901536	b5698787-172a-4482-92b3-435b22a23af7
2762	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	2020-04-17 14:48:58.907916	2020-04-17 14:48:58.907916	93e3e835-4502-40ca-adef-3e82c76e982b
2763	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	2020-04-17 14:48:58.914313	2020-04-17 14:48:58.914313	e9d5b105-a223-4a52-b828-e5dfd5600dd5
2764	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	2020-04-17 14:48:58.919594	2020-04-17 14:48:58.919594	ade47d59-3076-4980-b5f2-678faf7eb3f3
2765	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	2020-04-17 14:48:58.92598	2020-04-17 14:48:58.92598	7cfa1ad9-6f1f-4eb2-a5b5-29fc714d1a7e
2766	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	2020-04-17 14:48:58.932345	2020-04-17 14:48:58.932345	9eb9c302-55b6-4b09-9752-c2f24cc42b45
2767	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	2020-04-17 14:48:58.937622	2020-04-17 14:48:58.937622	42e112e3-027c-41a1-b611-fcecf50a2fad
2768	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	Seminole of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	2020-04-17 14:48:58.945104	2020-04-17 14:48:58.945104	1341c13a-852b-4c7b-a20f-ba7b83dd98a6
2769	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	2020-04-17 14:48:58.951478	2020-04-17 14:48:58.950444	721184a6-b21d-4d79-97df-acf5a1bcc899
2770	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	Seneca-Cayuga	Seneca-Cayuga Nation	\N	\N	\N	2020-04-17 14:48:58.956814	2020-04-17 14:48:58.956814	08c45718-9ab6-4a36-8e12-860d8d0e4b28
2771	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	2020-04-17 14:48:58.963257	2020-04-17 14:48:58.963257	b4b3503f-929a-445f-b473-baa62aef07c3
2772	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	2020-04-17 14:48:58.969698	2020-04-17 14:48:58.969698	337bfdb8-217e-42cc-9a75-5aef652426c6
2773	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	2020-04-17 14:48:58.976181	2020-04-17 14:48:58.976181	ca11ae49-cedb-4e00-9d13-a0505417d40f
2774	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	Shawnee	Shawnee Tribe	\N	\N	\N	2020-04-17 14:48:58.98261	2020-04-17 14:48:58.98261	10953748-ab9c-41da-b604-c16e2ef6f785
2775	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	2020-04-17 14:48:58.988379	2020-04-17 14:48:58.988379	6b200972-db4a-4d20-9565-b71cd6521670
2776	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	2020-04-17 14:48:58.994822	2020-04-17 14:48:58.994822	fda18e71-73be-42c6-a8b7-fc1e998a59d9
2777	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	2020-04-17 14:48:59.000177	2020-04-17 14:48:59.000177	ff0a8535-f0da-48f8-bb99-a8a208b8bc65
2778	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	2020-04-17 14:48:59.005538	2020-04-17 14:48:59.005538	3fdd13a8-a46e-4bda-9ab8-d668ae301c17
2825	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	2020-04-17 14:48:59.283926	2020-04-17 14:48:59.283926	a0e12a75-e77f-479e-be99-ef00a3ebf56e
2779	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.011958	2020-04-17 14:48:59.011958	4a8e3a18-b5e7-435a-856f-d0ce0c498a66
2780	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	2020-04-17 14:48:59.017325	2020-04-17 14:48:59.017325	d7eeebf2-8024-4d85-af9d-0b4f2f6352ed
2781	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:59.023759	2020-04-17 14:48:59.023759	5a4a7b32-b9fc-4cee-9398-3b443ff7871c
2782	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	2020-04-17 14:48:59.028996	2020-04-17 14:48:59.028996	77aeac84-a498-4cd6-882e-ebcfeba20e61
2783	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	2020-04-17 14:48:59.039408	2020-04-17 14:48:59.039408	33b7e0a3-d62f-417a-bfda-b3b36f73204e
2784	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, SD	\N	\N	\N	2020-04-17 14:48:59.045821	2020-04-17 14:48:59.045821	3a466bfd-f84d-4808-b2a2-46fd53b56530
2785	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	2020-04-17 14:48:59.051197	2020-04-17 14:48:59.051197	a1c8ce12-b0a8-4de0-9688-0edc2d852ab6
2786	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	2020-04-17 14:48:59.05761	2020-04-17 14:48:59.05761	4a858015-81c3-4aed-81af-50e214584ec7
2787	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.062943	2020-04-17 14:48:59.062943	97399310-bac7-4030-acf9-7b0e369d9e2b
2788	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	2020-04-17 14:48:59.068164	2020-04-17 14:48:59.068164	3c552e31-d00a-4c13-b809-c63ac00d1bae
2789	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	2020-04-17 14:48:59.073489	2020-04-17 14:48:59.073489	b963f2b1-56da-4960-8675-f3615fd955f1
2790	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.078874	2020-04-17 14:48:59.078874	f6a8ba57-8e2c-4347-a11c-1babe4b0178b
2791	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	2020-04-17 14:48:59.085322	2020-04-17 14:48:59.085322	294f2b94-c490-423d-bd93-e75a9505ffa3
2792	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa  Community, Wisconsin	\N	\N	\N	2020-04-17 14:48:59.090513	2020-04-17 14:48:59.090513	02f58a0b-615d-4f70-afe0-9ef935ed5ee0
2793	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	2020-04-17 14:48:59.09695	2020-04-17 14:48:59.09695	69e6f3ef-b19b-4667-9d3e-29afe250cd9e
2794	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	2020-04-17 14:48:59.102278	2020-04-17 14:48:59.102278	f457fd56-bb30-478a-aeaf-7579d6ee61d5
2795	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.107579	2020-04-17 14:48:59.107579	1c098be6-baa1-4c34-84eb-86b903707e55
2796	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	2020-04-17 14:48:59.113968	2020-04-17 14:48:59.113968	5de7ccf3-4694-4daf-ac2a-2a758a910568
2797	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	2020-04-17 14:48:59.120368	2020-04-17 14:48:59.120368	de1efdc3-3583-4501-9d82-6c3df8a65cb4
2798	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	2020-04-17 14:48:59.125739	2020-04-17 14:48:59.125739	52edfe5b-a822-4a58-b508-36bbf00130f9
2799	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	2020-04-17 14:48:59.131087	2020-04-17 14:48:59.131087	9969def5-2e8e-4d91-94ec-e68d51ab36b7
2800	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	2020-04-17 14:48:59.137471	2020-04-17 14:48:59.136415	a5fdc8c8-03ee-4dd2-8027-4db55be7f8b4
2801	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	2020-04-17 14:48:59.142793	2020-04-17 14:48:59.142793	833cea2c-dd10-4f11-93d0-0ee9e5fa706c
2802	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	2020-04-17 14:48:59.148136	2020-04-17 14:48:59.148136	e04e71b5-5100-4f72-bf31-e8e868ba8899
2803	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	2020-04-17 14:48:59.154584	2020-04-17 14:48:59.154584	59d8599e-c3f2-47c5-afb5-614c745e4468
2804	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	2020-04-17 14:48:59.159982	2020-04-17 14:48:59.159982	baed8eb4-30b6-423d-b718-87f2a0899e1f
2805	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	2020-04-17 14:48:59.166405	2020-04-17 14:48:59.166405	a36e777c-f607-49d4-a140-d852dec64e3b
2806	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	2020-04-17 14:48:59.172832	2020-04-17 14:48:59.172832	969481ba-7570-45ae-b7ec-59e04c03dd5b
2807	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	2020-04-17 14:48:59.178176	2020-04-17 14:48:59.178176	aaae061d-ae1f-4f1d-b6cb-01457b8d0278
2808	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	2020-04-17 14:48:59.183487	2020-04-17 14:48:59.183487	8695b3ec-0e45-413f-a379-b244abadd9ca
2809	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	2020-04-17 14:48:59.188821	2020-04-17 14:48:59.188821	eb7fd667-7831-4b41-96c8-bdc88af285fd
2810	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	2020-04-17 14:48:59.195264	2020-04-17 14:48:59.195264	c51580ac-2ae5-4a84-acf8-ad157554efaa
2811	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	2020-04-17 14:48:59.201641	2020-04-17 14:48:59.201641	71926df9-6194-4f2d-8e4c-097b4e8c0080
2812	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	2020-04-17 14:48:59.20804	2020-04-17 14:48:59.20804	d64a709b-5bd2-42e3-a8d1-a39c597ea58f
2813	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	2020-04-17 14:48:59.213398	2020-04-17 14:48:59.213398	d5e3bfb7-9b89-49f1-ac88-48022cd1a7c6
2814	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria of California	\N	\N	\N	2020-04-17 14:48:59.21872	2020-04-17 14:48:59.21872	a03bd1ea-e7cf-4c1f-808f-a93ac1bce11e
2815	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	2020-04-17 14:48:59.225147	2020-04-17 14:48:59.225147	d0101265-9c04-4408-98ef-11079bd808dd
2816	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	2020-04-17 14:48:59.231564	2020-04-17 14:48:59.231564	3668fe54-7d42-4833-9ece-d912d2bf4b89
2817	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	2020-04-17 14:48:59.236925	2020-04-17 14:48:59.236925	d9d96dbd-47b4-4ff0-bbd8-901064530d89
2818	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village (aka Woody Island)	\N	\N	\N	2020-04-17 14:48:59.242292	2020-04-17 14:48:59.242292	5ab34864-892e-46ab-9e18-018932bfb43c
2819	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	2020-04-17 14:48:59.248701	2020-04-17 14:48:59.248701	3112567d-3480-4481-b390-239853527b9f
2820	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	2020-04-17 14:48:59.254065	2020-04-17 14:48:59.254065	4c04ad3d-e6ff-4d24-bc1a-4aa430179006
2821	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.260468	2020-04-17 14:48:59.260468	de54132d-337f-4901-bf09-b59cb112e2a7
2822	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	2020-04-17 14:48:59.265841	2020-04-17 14:48:59.265841	d0ccc049-7b4c-49a2-a3ae-e54cc25df5f4
2823	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	2020-04-17 14:48:59.271175	2020-04-17 14:48:59.271175	5641a06b-29b6-41e9-a3ba-631f9362b826
2824	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band; Elko Band; South Fork Band and Wells Band)	\N	\N	\N	2020-04-17 14:48:59.27754	2020-04-17 14:48:59.27754	0646e434-8390-49af-8c00-b1981440ddee
2826	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	Thlopthlocco	Thlopthlocco Tribal Town	\N	\N	\N	2020-04-17 14:48:59.290212	2020-04-17 14:48:59.290212	c2ea64ca-d176-4cf9-86de-073e24cb53de
2827	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, ND	\N	\N	\N	2020-04-17 14:48:59.295906	2020-04-17 14:48:59.295906	78c8f0a5-04c7-4bee-9767-5edf78809250
2828	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Death Valley Timbi-sha Shoshone Tribe	\N	\N	\N	2020-04-17 14:48:59.301283	2020-04-17 14:48:59.301283	9f18d6ee-e670-426f-a215-afaea6007aa4
2829	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes of Alaska	\N	\N	\N	2020-04-17 14:48:59.306599	2020-04-17 14:48:59.306599	f1d43d71-1f11-4d22-9b27-e81a3ac8f2db
2830	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	2020-04-17 14:48:59.311977	2020-04-17 14:48:59.311977	3911af95-686f-40a2-9848-495e087cafc7
2831	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	2020-04-17 14:48:59.317294	2020-04-17 14:48:59.317294	a6401c80-a4cb-4f05-a0b9-9c47ce0a2de2
2832	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-Ni'	Tolowa Dee-Ni'	Tolowa Dee-Ni' Nation	\N	\N	\N	2020-04-17 14:48:59.322645	2020-04-17 14:48:59.322645	078960ac-19f8-4788-8c2c-697dbf2b301d
2833	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	2020-04-17 14:48:59.328	2020-04-17 14:48:59.328	b2ca7716-fd46-4b14-b4eb-91ea3b263254
2834	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	2020-04-17 14:48:59.334425	2020-04-17 14:48:59.334425	da2b4998-c3e9-4ae3-9e33-84863bcf9711
2835	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	2020-04-17 14:48:59.339747	2020-04-17 14:48:59.339747	4b9b48b8-d91d-40ae-bbf7-bac398c825c2
2836	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	2020-04-17 14:48:59.346169	2020-04-17 14:48:59.346169	7bc73413-331d-4462-80f8-d7e0bf48c1e3
2837	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	2020-04-17 14:48:59.351499	2020-04-17 14:48:59.351499	16a40aba-2fe7-488f-9c5d-4faec668b10a
2838	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	2020-04-17 14:48:59.356836	2020-04-17 14:48:59.356836	047d1896-fd30-4ac8-9d4d-b067d5efb3b3
2839	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	2020-04-17 14:48:59.365221	2020-04-17 14:48:59.365221	4bde87c3-89c1-41c6-ae61-f818b69ff162
2840	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.370507	2020-04-17 14:48:59.370507	11891ae6-3c0c-47bd-bb00-29a0e34c110b
2841	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	2020-04-17 14:48:59.376904	2020-04-17 14:48:59.376904	a7a4388f-478d-4f78-913b-1137eba8f8f7
2842	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	2020-04-17 14:48:59.38423	2020-04-17 14:48:59.38423	27f9584e-de7e-436d-a685-6c96938f23d0
2843	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	2020-04-17 14:48:59.390641	2020-04-17 14:48:59.390641	70c94f04-c4e0-47a5-a350-6eeabc4daa24
2844	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	2020-04-17 14:48:59.397078	2020-04-17 14:48:59.397078	e977763e-446d-46b8-8724-187ed17de399
2845	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	2020-04-17 14:48:59.402312	2020-04-17 14:48:59.402312	9dcebd39-d84a-40db-b198-53dd4684b0a2
2846	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	2020-04-17 14:48:59.408687	2020-04-17 14:48:59.408687	087ae86b-e6a2-4b9b-9cce-e9de299fe78b
2847	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	2020-04-17 14:48:59.413994	2020-04-17 14:48:59.413994	2e26d0de-62df-4cdf-9ab3-0c4cbf884987
2848	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	2020-04-17 14:48:59.419342	2020-04-17 14:48:59.419342	afb7d8d8-be7a-4bb0-b5c2-93e1be7bed6f
2849	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	2020-04-17 14:48:59.42571	2020-04-17 14:48:59.42571	0a26ba39-078c-465e-afc4-eddc4dfe3aa5
2850	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	2020-04-17 14:48:59.432112	2020-04-17 14:48:59.432112	ca3aa09b-b202-415e-9660-678fd21cab4d
2851	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	2020-04-17 14:48:59.437496	2020-04-17 14:48:59.437496	4ee92ff9-7601-4183-b3dc-73bcd2e62ca8
2852	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	2020-04-17 14:48:59.44388	2020-04-17 14:48:59.44388	971ee993-a047-4812-8dca-dae6f3efd236
2853	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	2020-04-17 14:48:59.450278	2020-04-17 14:48:59.450278	3ba9ab78-d7b6-4164-957c-39727b156e2a
2854	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	2020-04-17 14:48:59.456741	2020-04-17 14:48:59.456741	577ea0dc-fc72-42a0-b19c-b31681e1c694
2855	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	United Keetoowah	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	2020-04-17 14:48:59.463122	2020-04-17 14:48:59.463087	7a00df42-41bf-4e78-9080-7780efa63d2a
2856	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	2020-04-17 14:48:59.46847	2020-04-17 14:48:59.46847	eb036b58-0df4-4156-b826-36fb11a15081
2857	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.473787	2020-04-17 14:48:59.473787	cfaea60c-ddd3-4f62-9b4e-e9c61c34cb11
2858	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	2020-04-17 14:48:59.480173	2020-04-17 14:48:59.479136	5ccc02d5-488f-4e6d-9726-2d5ac70c9eab
2859	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	Ute Mountain	Ute Mountain Ute Tribe	\N	\N	\N	2020-04-17 14:48:59.484484	2020-04-17 14:48:59.484484	0c640ab1-6b57-408e-b00c-fe54b22923de
2860	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	2020-04-17 14:48:59.490888	2020-04-17 14:48:59.490888	8b792a8b-8d62-4cc2-9b4c-1ceb29d427a8
2861	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government	\N	\N	\N	2020-04-17 14:48:59.496206	2020-04-17 14:48:59.496206	11bb6717-0558-4bf2-b781-65cc8ea0804a
2862	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Barona Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	2020-04-17 14:48:59.502603	2020-04-17 14:48:59.502603	b3932d09-c60b-41f0-9c32-7e5dd996fe87
2863	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	2020-04-17 14:48:59.507923	2020-04-17 14:48:59.507923	698e898e-dd10-422b-8766-995a01916194
2864	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	2020-04-17 14:48:59.513263	2020-04-17 14:48:59.513263	ce68e8be-5dce-42ac-a311-80b11fa07e8d
2865	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:59.518595	2020-04-17 14:48:59.518595	d7302ec8-3d0f-49c4-a3b3-aad5265a2f52
2866	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	2020-04-17 14:48:59.523932	2020-04-17 14:48:59.523932	1cfd733c-a641-4e53-bb3f-edc65c9a504d
2867	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	2020-04-17 14:48:59.531393	2020-04-17 14:48:59.531345	cfc4bc41-f405-4bcd-b674-5f46ab7b7831
2868	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	2020-04-17 14:48:59.538799	2020-04-17 14:48:59.538799	4343dd55-65a8-44ca-8cd3-230f3f99285e
2869	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	2020-04-17 14:48:59.546225	2020-04-17 14:48:59.546225	52e09efc-59ce-4d4a-a415-49bdd49673bc
2870	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:59.551548	2020-04-17 14:48:59.551548	6bcfa5b0-a004-47ee-b0c8-5ec90e40c037
2871	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	2020-04-17 14:48:59.557973	2020-04-17 14:48:59.557973	0fa43ea5-f0c0-4985-88e5-620261116bb8
2872	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes	\N	\N	\N	2020-04-17 14:48:59.563327	2020-04-17 14:48:59.563327	1e1bf195-8280-432d-82dd-3ca1dc53a64e
2873	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria	\N	\N	\N	2020-04-17 14:48:59.569705	2020-04-17 14:48:59.569705	bf81c2dd-aa34-4261-9e84-83d7e00c9345
2874	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	2020-04-17 14:48:59.576093	2020-04-17 14:48:59.576093	894c87ff-3886-4178-9335-063702c050f3
2875	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	2020-04-17 14:48:59.58145	2020-04-17 14:48:59.58145	91c1dfb0-a8bb-4aee-a2cd-74962b636de2
2876	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	2020-04-17 14:48:59.586775	2020-04-17 14:48:59.586775	c9e46df5-232f-4dd9-8f75-09439e2c9333
2877	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	2020-04-17 14:48:59.592108	2020-04-17 14:48:59.592108	8eb93111-3f9c-4e94-a7aa-5ff4b5a9f16d
2878	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	2020-04-17 14:48:59.598468	2020-04-17 14:48:59.598468	ad8bbbf6-49ba-436b-a62a-18b820fc9f44
2879	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	2020-04-17 14:48:59.603776	2020-04-17 14:48:59.603776	fb6e81db-ee91-491d-8412-3e323c3b10b9
2880	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	2020-04-17 14:48:59.609109	2020-04-17 14:48:59.609109	1d81d530-d94a-41c2-a2b7-98483ef72ccf
2881	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	2020-04-17 14:48:59.616576	2020-04-17 14:48:59.616576	54488e3a-0740-46a4-b544-a31fb3d4cc1e
2882	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	2020-04-17 14:48:59.621877	2020-04-17 14:48:59.621877	bcd1e429-cb44-4f5c-9631-2f6f15c34243
2883	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony & Campbell Ranch, Nevada	\N	\N	\N	2020-04-17 14:48:59.628292	2020-04-17 14:48:59.628292	8eb6900d-0260-4e89-acfd-97c40bf2698f
2884	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	2020-04-17 14:48:59.633611	2020-04-17 14:48:59.633611	90c2cf1e-eeb5-472a-a444-b1ca3976b6da
2885	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	2020-04-17 14:48:59.63999	2020-04-17 14:48:59.63999	ce56f985-d61b-442c-b3a2-15f825f1899d
2886	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	2020-04-17 14:48:59.645304	2020-04-17 14:48:59.645304	16521d6c-28c6-4027-86b1-bf08f9789641
2887	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	2020-04-17 14:48:59.650641	2020-04-17 14:48:59.650641	5f75033f-aceb-4917-94d7-c3693698d119
2888	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	Zuni	Zuni Tribe of the Zuni Reservation	\N	\N	\N	2020-04-17 14:48:59.657041	2020-04-17 14:48:59.657041	7603cf13-4efa-4481-a6d9-2825debc2c0a
2889	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	2020-04-17 14:48:59.690683	2020-04-17 14:48:59.690683	99f6e676-e8f6-4f68-9fd0-bde8ce2fdf28
2890	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	2020-04-17 14:48:59.69909	2020-04-17 14:48:59.699039	aa1ebda7-1024-4c6b-9b38-5d8c4eeb1031
2891	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	2020-04-17 14:48:59.704296	2020-04-17 14:48:59.704296	a74dbe17-aaa2-431c-8f02-58dc3b129fad
2892	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	2020-04-17 14:48:59.713757	2020-04-17 14:48:59.713737	c3e0c16d-8f65-47e0-b55f-51d300da4f6c
2893	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	2020-04-17 14:48:59.720107	2020-04-17 14:48:59.719097	d96d561d-c23f-47e1-a044-2ad230eac4ce
2894	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	2020-04-17 14:48:59.725458	2020-04-17 14:48:59.725458	62c530a7-b647-49cb-b851-7912e3aa0744
2895	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	2020-04-17 14:48:59.731868	2020-04-17 14:48:59.731868	fb58ee5a-635d-40ab-9448-a35a4dcbe3ab
2896	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	2020-04-17 14:48:59.765655	2020-04-17 14:48:59.764574	23ba8492-2ca0-437f-9c28-d8b607a041f6
2897	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	2020-04-17 14:48:59.773152	2020-04-17 14:48:59.773152	43491240-8321-4bec-a427-d26c8f62b619
2898	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	2020-04-17 14:48:59.778435	2020-04-17 14:48:59.778435	200173b8-f6ff-4c96-8bda-4472851db4c9
2899	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	2020-04-17 14:48:59.783788	2020-04-17 14:48:59.783788	9ca73a27-31fb-4b23-ac54-536cb690251a
2900	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	2020-04-17 14:48:59.790229	2020-04-17 14:48:59.790229	3c66f462-5203-41cd-8914-d6a5ca49f4d3
2901	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	2020-04-17 14:48:59.795449	2020-04-17 14:48:59.795449	2841637b-629d-48ce-977e-98fab44954e5
2902	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	2020-04-17 14:48:59.800775	2020-04-17 14:48:59.800775	51acbcfa-be3c-4a97-8f90-eeeb8ca39826
2903	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	2020-04-17 14:48:59.807188	2020-04-17 14:48:59.807188	791f24f6-62f9-4629-87ac-f1b879d18b69
2904	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	2020-04-17 14:48:59.815704	2020-04-17 14:48:59.815704	c3195789-7730-41fc-8ab6-b73cefb8fc5c
2905	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2020-04-17 14:48:59.822145	2020-04-17 14:48:59.822145	47a40f12-2ec6-4deb-bc7b-a9555b79b1b6
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
722
723
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
724
725
726
727
728
729
730
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
768
769
770
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
771
772
773
774
775
776
777
778
779
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, disciplineactionlength, actualdisciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, relatedtozerotolerancepolicy, responsibilityschoolid, assignmentschoolid, receivededucationservicesduringexpulsion, iepplacementmeetingindicator, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
780
781
782
783
784
785
786
787
788
789
790
791
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, staffusi, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentassociation (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
792
793
794
795
796
797
798
799
800
801
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, incidentdate, incidenttime, incidentlocationdescriptorid, incidentdescription, reporterdescriptiondescriptorid, reportername, reportedtolawenforcement, casenumber, incidentcost, staffusi, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (behaviordescriptorid, incidentidentifier, schoolid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
802
803
804
805
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
806
807
808
809
810
811
812
813
814
815
816
817
818
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, learningresourcemetadatauri, shortdescription, description, additionalauthorsindicator, publisher, timerequired, interactivitystyledescriptorid, contentclassdescriptorid, userightsurl, publicationdate, publicationyear, version, learningstandardid, cost, costratedescriptorid, namespace, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (author, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, shortnameofinstitution, website, operationalstatusdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationcategorydescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
819
820
821
822
823
824
825
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
826
827
828
829
830
831
832
833
834
835
836
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (addresstypedescriptorid, educationorganizationid, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
837
838
839
840
841
842
843
844
845
846
847
848
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
849
850
851
852
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
853
854
855
856
857
858
859
860
861
862
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
863
864
865
866
867
868
869
870
871
872
873
874
875
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
876
877
878
879
880
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, statusenddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradebookentrytypedescriptorid, description, gradingperioddescriptorid, periodsequence, duedate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningobjective (dateassigned, gradebookentrytitle, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (dateassigned, gradebookentrytitle, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
928
929
930
931
932
933
934
935
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
958
959
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
960
961
962
963
964
965
966
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcredits, totalrequiredcredittypedescriptorid, totalrequiredcreditconversion, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, performanceleveldescriptorid, assessmentreportingmethoddescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
987
988
989
990
991
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
992
993
994
995
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
996
997
998
999
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
1000
1001
1002
1003
1004
1005
1006
1007
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
1008
1009
1010
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
1036
1037
1038
1039
1040
1041
1042
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
1043
1044
1045
1046
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
1047
1048
1049
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, begindate, enddate, mindosage, maxdosage, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
1050
1051
1052
1053
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (contentidentifier, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
1054
1055
1056
1057
1058
1059
1060
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, endtime, interventionidentificationcode, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, mindosage, maxdosage, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, deliverymethoddescriptorid, interventionclassdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (contentidentifier, educationorganizationid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539
1540
1541
1542
1543
1544
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
1556
1557
1558
1559
1560
1561
1562
1563
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjective (learningobjectiveid, namespace, objective, description, nomenclature, successcriteria, parentlearningobjectiveid, parentnamespace, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: learningobjectiveacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectiveacademicsubject (academicsubjectdescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandard (learningobjectiveid, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandardauthor (author, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivegradelevel (gradeleveldescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivelearningstandard (learningobjectiveid, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, description, learningstandarditemcode, uri, coursetitle, successcriteria, parentlearningstandardid, namespace, learningstandardcategorydescriptorid, learningstandardscopedescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (academicsubjectdescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
1564
1565
1566
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (author, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescriptorid, learningstandardequivalencestrengthdescription, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
1567
1568
1569
1570
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (gradeleveldescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (contentstandardname, identificationcode, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardprerequisitelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardprerequisitelearningstandard (learningstandardid, prerequisitelearningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
1571
1572
1573
1574
1575
1576
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
1577
1578
1579
1580
1581
1582
1583
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
1584
1585
1586
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1599
1600
1601
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
1602
1603
1604
1605
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, localeducationagencycategorydescriptorid, charterstatusdescriptorid, parentlocaleducationagencyid, educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
1618
1619
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (fiscalyear, localeducationagencyid, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, stateassessmentadministrationfunding, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
1620
1621
1622
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
1636
1637
1638
1639
1640
1641
1642
1643
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1644
1645
1646
1647
1648
1649
1650
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
1651
1652
1653
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
1654
1655
1656
1657
1658
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
1659
1660
1661
1662
1663
1664
1665
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
1666
1667
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, maxrawscore, percentofassessment, nomenclature, description, parentidentificationcode, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningobjective (assessmentidentifier, identificationcode, learningobjectiveid, learningobjectivenamespace, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: oldethnicitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.oldethnicitydescriptor (oldethnicitydescriptorid) FROM stdin;
1668
1669
1670
1671
1672
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, employmentstatusdescriptorid, staffclassificationdescriptorid, positiontitle, programassignmentdescriptorid, dateposted, datepostingremoved, postingresultdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (academicsubjectdescriptorid, educationorganizationid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, gradeleveldescriptorid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
1673
1674
1675
1676
1677
1678
1679
1680
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
1681
1682
1683
1684
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parent (parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, loginid, parentuniqueid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: parentaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddress (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parentaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddressperiod (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, parentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: parentinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentinternationaladdress (addresstypedescriptorid, parentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguage (languagedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguageuse (languagedescriptorid, languageusedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentothername (othernametypedescriptorid, parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: parentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentpersonalidentificationdocument (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parenttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parenttelephone (parentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
1685
1686
1687
1688
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
1689
1690
1691
1692
1693
\.


--
-- Data for Name: payroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.payroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amounttodate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
1694
1695
1696
1697
1698
1699
1700
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
1701
1702
1703
1704
1705
1706
1707
1708
1709
1710
1711
1712
1713
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
1714
1715
1716
1717
1718
1719
1720
1721
1722
1723
1724
1725
1726
1727
1728
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
1729
1730
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
1731
1732
1733
1734
1735
1736
1737
1738
1739
1740
1741
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
1742
1743
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
1744
1745
1746
1747
1748
1749
1750
1751
1752
1753
1754
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, postsecondaryinstitutionleveldescriptorid, administrativefundingcontroldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
1755
1756
1757
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (mediumofinstructiondescriptorid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
1758
1759
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
1760
1761
1762
1763
1764
1765
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
1766
\.


--
-- Data for Name: programlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningobjective (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, learningstandardid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programservice (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
1767
1768
1769
1770
1771
1772
1773
1774
1775
1776
1777
1778
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
1779
1780
1781
1782
1783
1784
1785
1786
1787
1788
1789
1790
1791
1792
1793
1794
1795
1796
1797
1798
1799
1800
1801
1802
1803
1804
1805
1806
1807
1808
1809
1810
1811
1812
1813
1814
1815
1816
1817
1818
1819
1820
1821
1822
1823
1824
1825
1826
1827
1828
1829
1830
1831
1832
1833
1834
1835
1836
1837
1838
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
1839
1840
1841
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
1842
1843
1844
1845
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
1846
1847
1848
1849
1850
1851
1852
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
1853
1854
1855
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
1856
1857
1858
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
1859
1860
1861
1862
1863
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
1864
1865
1866
1867
1868
1869
1870
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
1871
1872
1873
1874
1875
1876
1877
1878
1879
1880
1881
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
1882
1883
1884
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
1896
1897
1898
1899
1900
1901
1902
1903
1904
1905
1906
1907
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1946
1947
1948
1949
1950
1951
1952
1953
1954
1955
1956
1957
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
1958
1959
1960
1961
1962
1963
1964
1965
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, gpagivengradingperiod, gpacumulative, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentlearningobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
1966
1967
1968
1969
1970
1971
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
1972
1973
1974
1975
1976
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
1977
1978
1979
1980
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
1981
1982
1983
1984
1985
1986
1987
1988
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, eventdate, educationalenvironmentdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
1989
1990
1991
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
1992
1993
1994
1995
1996
1997
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
1998
1999
2000
2001
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, schooltypedescriptorid, charterstatusdescriptorid, titleipartaschooldesignationdescriptorid, magnetspecialprogramemphasisschooldescriptorid, administrativefundingcontroldescriptorid, internetaccessdescriptorid, localeducationagencyid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolcategorydescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
2017
2018
2019
2020
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
2021
2022
2023
2024
2025
2026
2027
2028
2029
2030
2031
2032
2033
2034
2035
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
2036
2037
2038
2039
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id) FROM stdin;
2020	2019-2020	t	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	a27f5840-2763-41cc-87b6-ebf7eef08590
1991	1990-1991	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	8df273d1-0580-49fd-9cd9-aaeb1ef774ea
1992	1991-1992	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	635c4742-02b8-42b2-919d-5391c6694862
1993	1992-1993	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	c31c5d20-3116-42ed-b3a0-fe6add441580
1994	1993-1994	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	162215d1-c015-416b-99f7-b51b6d661d86
1995	1994-1995	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	c61cac79-9f7f-4a2e-b41d-80a40bf3d8ab
1996	1995-1996	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	767bb422-e3ef-4124-b864-a53684af8cee
1997	1996-1997	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	9f6ebbe9-e36a-47de-957b-41d859f174d0
1998	1997-1998	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	15bfe787-d910-449b-b313-24b29cffa31a
1999	1998-1999	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	f6fb2646-cf82-460b-a0b7-6edfb1198006
2000	1999-2000	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	b98e4b12-e726-4330-b80e-9b22746d1c95
2001	2000-2001	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	1ccdf8fe-80dd-4235-9cba-3094abd979cf
2002	2001-2002	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	ac5562d3-eb59-42af-a258-aa01cc36c921
2003	2002-2003	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	988e41b3-6e90-4655-9f5b-c1ccdf8df765
2004	2003-2004	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	7a33be31-29e5-4441-99ae-862db479b9b5
2005	2004-2005	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	46915880-b85e-47f3-bcca-495d807c5829
2006	2005-2006	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	78b7bcfc-88ea-4b4d-83a9-f020562ef587
2007	2006-2007	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	26d4a6e0-c4a5-452a-b3bd-1b7befbc82cc
2008	2007-2008	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	fc941305-860b-447f-8ffb-ee22da2dcb4e
2009	2008-2009	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	6c83fde2-1128-425f-9d79-8cc288ee97a9
2010	2009-2010	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	9a4a9ead-2cd7-4c2a-aa65-cef5aae3bc5c
2011	2010-2011	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	a78631bd-a416-4f07-b7c0-21dcea5a4837
2012	2011-2012	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	e9cd4197-9c59-40fe-83d9-4308a691c3cb
2013	2012-2013	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	39fbd085-1ae1-4068-921e-8031f5d804bd
2014	2013-2014	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	e2efc30c-e732-48f8-ac7e-da0c48a8b900
2015	2014-2015	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	c1246e56-7476-4840-89fb-9e5cf094d4aa
2016	2015-2016	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	476e1d94-35b7-4667-8e5a-cf6f38f72296
2017	2016-2017	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	a4513a24-4d60-4eb2-ab8b-1f1c434e970e
2018	2017-2018	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	80549d09-8759-44b2-9a17-fa2290580ab8
2019	2018-2019	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	c1304713-efd0-4e46-a106-969a1cf698b0
2021	2020-2021	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	7d78161d-2d56-4def-abaa-02b7c844d690
2022	2021-2022	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	f4091a84-e041-4841-9082-033a326f7e88
2023	2022-2023	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	aeac7538-c144-4493-a645-04661efa46b0
2024	2023-2024	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	6ec76ff8-2500-4b9b-b566-0283d07a5428
2025	2024-2025	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	e45fa5b2-a72c-48c5-ad0a-37e59fa7756b
2026	2025-2026	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	b8d9878b-91cd-47f4-b5fa-bdb8401b11ff
2027	2026-2027	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	85bfcb56-a4f3-4520-9098-b3c4e7875459
2028	2027-2028	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	a37399cc-8e4a-4f13-a532-d19051325d1f
2029	2028-2029	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	3c39ebd2-4e35-40ad-b0cc-2da9ae6478f2
2030	2029-2030	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	7c63bf1d-fabd-4549-baec-82aa7cbe70d4
2031	2030-2031	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	57babdac-ef2b-4a23-ad56-519308eb2d61
2032	2031-2032	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	71190818-66a0-4bb1-89a3-5b237983829b
2033	2032-2033	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	a3ff1b39-27e6-40b6-98d2-cffc4173355b
2034	2033-2034	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	e0a54352-b7b4-4bab-8564-8e0b29f537ed
2035	2034-2035	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	6014b83d-f86d-4a66-83f2-83d9124df80e
2036	2035-2036	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	6f666753-a5f8-4ab7-907a-663d417ddff6
2037	2036-2037	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	72c64c94-49e2-401e-86dd-3409e2fabd66
2038	2037-2038	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	5bf5249e-9d5b-4e9f-82a8-f154ca7837c7
2039	2038-2039	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	e5b17277-926c-4e14-b078-ef50c8f67fbe
2040	2039-2040	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	d97cf6bd-6936-4aae-9e66-476a8629ffd0
2041	2040-2041	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	b4c46c8f-fddc-4a19-adbb-1ddbd46c79c1
2042	2041-2042	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	cc7aed23-b104-48c7-a6af-dad8526eb42f
2043	2042-2043	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	b18de72e-347e-415f-a3dd-072672025683
2044	2043-2044	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	1bf81e87-ca81-4166-98f6-8086e9cc89b6
2045	2044-2045	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	ad4e0747-4e15-44be-bee2-54aac6bf5419
2046	2045-2046	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	611e2307-112d-4288-8ee1-14add3f83847
2047	2046-2047	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	7ba8ff73-0d90-4781-b1b8-c245e33038fd
2048	2047-2048	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	76f46092-e29c-48f9-a9c2-3a42817f7eb5
2049	2048-2049	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	79030812-1f18-49fa-b713-edebe90c1788
2050	2049-2050	f	2020-04-17 09:48:09.395888	2020-04-17 09:48:09.395888	04d0744f-8c0d-44c8-a611-2b7b7c9e15da
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sequenceofcourse, educationalenvironmentdescriptorid, mediumofinstructiondescriptorid, populationserveddescriptorid, availablecredits, availablecredittypedescriptorid, availablecreditconversion, instructionlanguagedescriptorid, locationschoolid, locationclassroomidentificationcode, officialattendanceperiod, sectionname, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
2040
2041
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
2042
2043
2044
2045
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2046
2047
2048
2049
2050
2051
2052
2053
2054
2055
2056
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
2057
2058
2059
2060
2061
2062
2063
2064
2065
2066
2067
2068
2069
2070
2071
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
2072
2073
2074
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
2075
2076
2077
2078
2079
2080
2081
2082
2083
2084
2085
2086
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
2087
2088
2089
2090
2091
2092
2093
2094
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, birthdate, hispaniclatinoethnicity, oldethnicitydescriptorid, citizenshipstatusdescriptorid, highestcompletedlevelofeducationdescriptorid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, loginid, highlyqualifiedteacher, staffuniqueid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
2095
2096
2097
2098
2099
2100
2101
2102
2103
2104
2105
2106
2107
2108
2109
2110
2111
2112
2113
2114
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, positiontitle, enddate, orderofassignment, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, credentialidentifier, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, city, stateabbreviationdescriptorid, postalcode, nameofcounty, countyfipscode, latitude, longitude, addresstypedescriptorid, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (begindate, contacttitle, educationorganizationid, staffusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, enddate, separationdescriptorid, separationreasondescriptorid, department, fulltimeequivalency, offerdate, hourlywage, credentialidentifier, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, staffusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffidentificationsystemdescriptorid, staffusi, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
2115
2116
2117
2118
2119
2120
2121
2122
2123
2124
2125
2126
2127
2128
2129
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (addresstypedescriptorid, staffusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (languagedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (languagedescriptorid, languageusedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
2130
2131
2132
2133
2134
2135
2136
2137
2138
2139
2140
2141
2142
2143
2144
2145
2146
2147
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (othernametypedescriptorid, staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (racedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (recognitiontypedescriptorid, staffusi, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, classroompositiondescriptorid, begindate, enddate, highlyqualifiedteacher, teacherstudentdatalinkexclusion, percentagecontribution, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
2148
2149
2150
2151
2152
2153
2154
2155
2156
2157
2158
2159
2160
2161
2162
2163
2164
2165
2166
2167
2168
2169
2170
2171
2172
2173
2174
2175
2176
2177
2178
2179
2180
2181
2182
2183
2184
2185
2186
2187
2188
2189
2190
2191
2192
2193
2194
2195
2196
2197
2198
2199
2200
2201
2202
2203
2204
2205
2206
2207
2208
2209
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (schoolyear, stateeducationagencyid, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (fiscalyear, stateeducationagencyid, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, birthdate, birthcity, birthstateabbreviationdescriptorid, birthinternationalprovince, birthcountrydescriptorid, dateenteredus, multiplebirthstatus, birthsexdescriptorid, citizenshipstatusdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeattemptedcreditconversion, cumulativegradepointsearned, cumulativegradepointaverage, gradevaluequalifier, projectedgraduationdate, sessionearnedcredits, sessionearnedcredittypedescriptorid, sessionearnedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionattemptedcreditconversion, sessiongradepointsearned, sessiongradepointaverage, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, honorawarddate, honorawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, totalnumberinclass, percentageranking, classrankingdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, diplomaleveldescriptorid, ctecompleter, diplomadescription, diplomaawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, serialnumber, administrationlanguagedescriptorid, administrationenvironmentdescriptorid, retestindicatordescriptorid, reasonnottesteddescriptorid, whenassessedgradeleveldescriptorid, eventcircumstancedescriptorid, eventdescription, schoolyear, platformtypedescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, assessmentresponse, descriptivefeedback, responseindicatordescriptorid, assessmentitemresultdescriptorid, rawscoreresult, timeassessed, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelmet, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelmet, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
2210
2211
2212
2213
2214
2215
2216
2217
2218
2219
2220
2221
2222
2223
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogram (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cipcode, primarycteprogramindicator, cteprogramcompletionindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, cipcode, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociation (incidentidentifier, schoolid, studentusi, studentparticipationcodedescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociationbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociationbehavior (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, sexdescriptorid, profilethumbnail, hispaniclatinoethnicity, oldethnicitydescriptorid, limitedenglishproficiencydescriptorid, loginid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (disabilitydescriptorid, educationorganizationid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (addresstypedescriptorid, educationorganizationid, studentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, languagedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipat_810575 (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipation (educationorganizationid, programtypedescriptorid, studentusi, begindate, enddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, racedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentcharacteristicdescriptorid, studentusi, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, indicatorname, studentusi, indicatorgroup, indicator, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (begindate, educationorganizationid, indicatorname, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (begindate, dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, datefulfilled, lettergradeearned, numericgradeearned, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprimarynighttimeresidencedescriptorid, awaitingfostercare, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
2224
2225
2226
2227
2228
2229
2230
2231
2232
2233
2234
2235
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, englishlearnerparticipation, dosage) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, monitoreddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, priorityforservices, lastqualifyingmove, continuationofservicesreasondescriptorid, usinitialentry, usmostrecententry, usinitialschoolentry, qualifyingarrivaldate, stateresidencydate, eligibilityexpirationdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramdescriptorid, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (othernametypedescriptorid, studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparentassociation (parentusi, studentusi, relationdescriptorid, primarycontactstatus, liveswith, emergencycontactstatus, contactpriority, contactrestrictions, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
2236
2237
2238
2239
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, primaryschool, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, repeatgradeindicator, classofschoolyear, schoolchoicetransfer, exitwithdrawdate, exitwithdrawtypedescriptorid, residencystatusdescriptorid, graduationplantypedescriptorid, educationorganizationid, graduationschoolyear, employedwhileenrolled, calendarcode, schoolyear, fulltimeequivalency, termcompletionindicator, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (educationplandescriptorid, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, attemptstatusdescriptorid, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, specialeducationsettingdescriptorid, specialeducationhoursperweek, schoolhoursperweek, multiplydisabled, medicallyfragile, lastevaluationdate, iepreviewdate, iepbegindate, iependdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
2240
2241
2242
2243
2244
2245
2246
2247
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
2248
2249
2250
2251
2252
2253
2254
2255
2256
2257
2258
2259
2260
2261
2262
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
2263
2264
2265
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
2266
2267
2268
2269
2270
2271
2272
2273
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
2274
2275
2276
2277
2278
2279
2280
2281
2282
2283
2284
2285
2286
2287
2288
2289
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
2290
2291
2292
2293
2294
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
2295
2296
2297
2298
2299
2300
2301
2302
2303
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
2304
2305
2306
2307
2308
2309
2310
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
2311
2312
2313
2314
2315
2316
2317
2318
2319
2320
2321
2322
2323
2324
2325
2326
2327
2328
2329
2330
2331
2332
2333
2334
2335
2336
2337
2338
2339
2340
2341
2342
2343
2344
2345
2346
2347
2348
2349
2350
2351
2352
2353
2354
2355
2356
2357
2358
2359
2360
2361
2362
2363
2364
2365
2366
2367
2368
2369
2370
2371
2372
2373
2374
2375
2376
2377
2378
2379
2380
2381
2382
2383
2384
2385
2386
2387
2388
2389
2390
2391
2392
2393
2394
2395
2396
2397
2398
2399
2400
2401
2402
2403
2404
2405
2406
2407
2408
2409
2410
2411
2412
2413
2414
2415
2416
2417
2418
2419
2420
2421
2422
2423
2424
2425
2426
2427
2428
2429
2430
2431
2432
2433
2434
2435
2436
2437
2438
2439
2440
2441
2442
2443
2444
2445
2446
2447
2448
2449
2450
2451
2452
2453
2454
2455
2456
2457
2458
2459
2460
2461
2462
2463
2464
2465
2466
2467
2468
2469
2470
2471
2472
2473
2474
2475
2476
2477
2478
2479
2480
2481
2482
2483
2484
2485
2486
2487
2488
2489
2490
2491
2492
2493
2494
2495
2496
2497
2498
2499
2500
2501
2502
2503
2504
2505
2506
2507
2508
2509
2510
2511
2512
2513
2514
2515
2516
2517
2518
2519
2520
2521
2522
2523
2524
2525
2526
2527
2528
2529
2530
2531
2532
2533
2534
2535
2536
2537
2538
2539
2540
2541
2542
2543
2544
2545
2546
2547
2548
2549
2550
2551
2552
2553
2554
2555
2556
2557
2558
2559
2560
2561
2562
2563
2564
2565
2566
2567
2568
2569
2570
2571
2572
2573
2574
2575
2576
2577
2578
2579
2580
2581
2582
2583
2584
2585
2586
2587
2588
2589
2590
2591
2592
2593
2594
2595
2596
2597
2598
2599
2600
2601
2602
2603
2604
2605
2606
2607
2608
2609
2610
2611
2612
2613
2614
2615
2616
2617
2618
2619
2620
2621
2622
2623
2624
2625
2626
2627
2628
2629
2630
2631
2632
2633
2634
2635
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2651
2652
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2667
2668
2669
2670
2671
2672
2673
2674
2675
2676
2677
2678
2679
2680
2681
2682
2683
2684
2685
2686
2687
2688
2689
2690
2691
2692
2693
2694
2695
2696
2697
2698
2699
2700
2701
2702
2703
2704
2705
2706
2707
2708
2709
2710
2711
2712
2713
2714
2715
2716
2717
2718
2719
2720
2721
2722
2723
2724
2725
2726
2727
2728
2729
2730
2731
2732
2733
2734
2735
2736
2737
2738
2739
2740
2741
2742
2743
2744
2745
2746
2747
2748
2749
2750
2751
2752
2753
2754
2755
2756
2757
2758
2759
2760
2761
2762
2763
2764
2765
2766
2767
2768
2769
2770
2771
2772
2773
2774
2775
2776
2777
2778
2779
2780
2781
2782
2783
2784
2785
2786
2787
2788
2789
2790
2791
2792
2793
2794
2795
2796
2797
2798
2799
2800
2801
2802
2803
2804
2805
2806
2807
2808
2809
2810
2811
2812
2813
2814
2815
2816
2817
2818
2819
2820
2821
2822
2823
2824
2825
2826
2827
2828
2829
2830
2831
2832
2833
2834
2835
2836
2837
2838
2839
2840
2841
2842
2843
2844
2845
2846
2847
2848
2849
2850
2851
2852
2853
2854
2855
2856
2857
2858
2859
2860
2861
2862
2863
2864
2865
2866
2867
2868
2869
2870
2871
2872
2873
2874
2875
2876
2877
2878
2879
2880
2881
2882
2883
2884
2885
2886
2887
2888
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
2889
2890
2891
2892
2893
2894
2895
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
2896
2897
2898
2899
2900
2901
2902
2903
2904
2905
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2020-04-17 09:48:09.401579	2020-04-17 09:48:09.401579	a814f5c1-b91a-41d6-89b2-a9c08f225aa8
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2020-04-17 09:47:56.732945
2	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2020-04-17 09:47:56.757804
3	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2020-04-17 09:48:00.314039
4	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2020-04-17 09:48:08.908715
5	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2020-04-17 09:48:09.150008
6	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2020-04-17 09:48:09.244808
7	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2020-04-17 09:48:09.27029
8	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2020-04-17 09:48:09.283714
9	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2020-04-17 09:48:09.31804
10	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2020-04-17 09:48:09.324334
11	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2020-04-17 09:48:09.331679
12	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2020-04-17 09:48:09.344556
13	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2020-04-17 09:48:09.347379
14	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2020-04-17 09:48:09.400576
15	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2020-04-17 09:48:09.402814
16	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2020-04-17 09:48:09.406561
\.


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 2905, true);


--
-- Name: parent_parentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.parent_parentusi_seq', 1, false);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 16, true);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: account account_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.account
    ADD CONSTRAINT account_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accountaccountcode accountaccountcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT accountaccountcode_pk PRIMARY KEY (accountclassificationdescriptorid, accountcodenumber, accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: accountclassificationdescriptor accountclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountclassificationdescriptor
    ADD CONSTRAINT accountclassificationdescriptor_pk PRIMARY KEY (accountclassificationdescriptorid);


--
-- Name: accountcode accountcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT accountcode_pk PRIMARY KEY (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: actual actual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.actual
    ADD CONSTRAINT actual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, gradeleveldescriptorid, namespace);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, author, namespace);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, languagedescriptorid, namespace);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, classperiodname, schoolid);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, date, schoolid);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, gradeleveldescriptorid, schoolid);


--
-- Name: budget budget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.budget
    ADD CONSTRAINT budget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, gradeleveldescriptorid, schoolid, schoolyear);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, endtime, schoolid, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: contractedstaff contractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT contractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (competencyleveldescriptorid, coursecode, educationorganizationid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, courseidentificationsystemdescriptorid, educationorganizationid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningobjective courselearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT courselearningobjective_pk PRIMARY KEY (coursecode, educationorganizationid, learningobjectiveid, namespace);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (codevalue, namespace);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, staffusi, studentusi);


--
-- Name: disciplineactionstudentdisciplineincidentassociation disciplineactionstudentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (author, contentidentifier);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationcategorydescriptorid, educationorganizationid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationparticipationstatus generalstudentprogramassociationparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrylearningobjective gradebookentrylearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT gradebookentrylearningobjective_pk PRIMARY KEY (dateassigned, gradebookentrytitle, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (dateassigned, gradebookentrytitle, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, endtime, interventionidentificationcode, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectiveacademicsubject learningobjectiveacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT learningobjectiveacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandard learningobjectivecontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT learningobjectivecontentstandard_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandardauthor learningobjectivecontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT learningobjectivecontentstandardauthor_pk PRIMARY KEY (author, learningobjectiveid, namespace);


--
-- Name: learningobjectivegradelevel learningobjectivegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT learningobjectivegradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivelearningstandard learningobjectivelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT learningobjectivelearningstandard_pk PRIMARY KEY (learningobjectiveid, learningstandardid, namespace);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningstandardid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (author, learningstandardid);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningstandardid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (contentstandardname, identificationcode, learningstandardid);


--
-- Name: learningstandardprerequisitelearningstandard learningstandardprerequisitelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT learningstandardprerequisitelearningstandard_pk PRIMARY KEY (learningstandardid, prerequisitelearningstandardid);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, localeducationagencyid);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace);


--
-- Name: objectiveassessmentlearningobjective objectiveassessmentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT objectiveassessmentlearningobjective_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningobjectiveid, learningobjectivenamespace, namespace);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace);


--
-- Name: oldethnicitydescriptor oldethnicitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT oldethnicitydescriptor_pk PRIMARY KEY (oldethnicitydescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, requisitionnumber);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (parentusi);


--
-- Name: parentaddress parentaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT parentaddress_pk PRIMARY KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentaddressperiod parentaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT parentaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentelectronicmail parentelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT parentelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, parentusi);


--
-- Name: parentinternationaladdress parentinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT parentinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, parentusi);


--
-- Name: parentlanguage parentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT parentlanguage_pk PRIMARY KEY (languagedescriptorid, parentusi);


--
-- Name: parentlanguageuse parentlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT parentlanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, parentusi);


--
-- Name: parentothername parentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT parentothername_pk PRIMARY KEY (othernametypedescriptorid, parentusi);


--
-- Name: parentpersonalidentificationdocument parentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT parentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid);


--
-- Name: parenttelephone parenttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT parenttelephone_pk PRIMARY KEY (parentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: payroll payroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT payroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (mediumofinstructiondescriptorid, postsecondaryinstitutionid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programlearningobjective programlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT programlearningobjective_pk PRIMARY KEY (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, learningstandardid, programname, programtypedescriptorid);


--
-- Name: programservice programservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT programservice_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: reportcardstudentlearningobjective reportcardstudentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT reportcardstudentlearningobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolcategorydescriptorid, schoolid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, schoolid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (begindate, contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, staffusi);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffidentificationsystemdescriptorid, staffusi);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, staffusi);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (languagedescriptorid, staffusi);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, staffusi);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (othernametypedescriptorid, staffusi);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (racedescriptorid, staffusi);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (recognitiontypedescriptorid, staffusi);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (schoolyear, stateeducationagencyid);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, stateeducationagencyid);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogram studentcteprogramassociationcteprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT studentcteprogramassociationcteprogram_pk PRIMARY KEY (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationservice studentcteprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT studentcteprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentassociationbehavior studentdisciplineincidentassociationbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT studentdisciplineincidentassociationbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 studenteducationorganizationassociationprogrampart_810575_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT studenteducationorganizationassociationprogrampart_810575_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipation studenteducationorganizationassociationprogramparticipation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT studenteducationorganizationassociationprogramparticipation_pk PRIMARY KEY (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, racedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (begindate, educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (begindate, dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation studentlearningobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentlearningobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivestudentsectionassociation studentlearningobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT studentlearningobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (othernametypedescriptorid, studentusi);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (parentusi, studentusi);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (educationplandescriptorid, entrydate, schoolid, studentusi);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationservice studenttitleipartaprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT studenttitleipartaprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_005337_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_studentcompetencyobjective ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_014e05_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_interventionstudy ON edfi.interventionstudyeducationcontent USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_01fe80_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_01fe80_school ON edfi.classperiod USING btree (schoolid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_school ON edfi.courseoffering USING btree (schoolid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_047c7a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_047c7a_educationcontent ON edfi.educationcontentderivativesourceuri USING btree (contentidentifier);


--
-- Name: fk_0516f9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_educationorganization ON edfi.generalstudentprogramassociation USING btree (educationorganizationid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_calendar ON edfi.calendargradelevel USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendardate ON edfi.calendardatecalendarevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_09668f_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_stateeducationagency ON edfi.stateeducationagencyaccountability USING btree (stateeducationagencyid);


--
-- Name: fk_0a2145_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_educationcontent ON edfi.educationcontentappropriategradelevel USING btree (contentidentifier);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0c9651_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0d16f7_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincident ON edfi.disciplineincidentexternalparticipant USING btree (incidentidentifier, schoolid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0e0a11_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_othernametypedescriptor ON edfi.parentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_0e0a11_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_parent ON edfi.parentothername USING btree (parentusi);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0ee746_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_educationorganization ON edfi.educationorganizationinternationaladdress USING btree (educationorganizationid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_educationorganization ON edfi.intervention USING btree (educationorganizationid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0fceba_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_studentassessment ON edfi.studentassessmentscoreresult USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_educationorganization ON edfi.studentacademicrecord USING btree (educationorganizationid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_1141c9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_credential ON edfi.credentialacademicsubject USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_11bd42_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessment ON edfi.assessmentperformancelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_11f7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school1 ON edfi.feederschoolassociation USING btree (schoolid);


--
-- Name: fk_123e27_parentaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_123e27_parentaddress ON edfi.parentaddressperiod USING btree (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_151580_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_assessmentitem ON edfi.assessmentitemlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_section ON edfi.sectioncharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_15b619_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_15b619_school ON edfi.location USING btree (schoolid);


--
-- Name: fk_16896e_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_program ON edfi.programcharacteristic USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_course ON edfi.courseofferedgradelevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_course ON edfi.courseidentificationcode USING btree (coursecode, educationorganizationid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_19c6d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_educationorganization ON edfi.cohort USING btree (educationorganizationid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1a4369_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_graduationplan ON edfi.graduationplanrequiredassessment USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1ac620_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_objectiveassessment ON edfi.objectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_localeducationagency ON edfi.localeducationagencyaccountability USING btree (localeducationagencyid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bab8a_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1c30e0_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_generalstudentprogramassociation ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1c30e0_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_studentlearningobjective ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_1c6225_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c6225_account ON edfi.budget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1c8d3f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_staff ON edfi.stafflanguage USING btree (staffusi);


--
-- Name: fk_1dcb14_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1dcb14_interventionstudy ON edfi.interventionstudylearningresourcemetadatauri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1ee70e_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_objectiveassessment ON edfi.objectiveassessmentlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2096ce_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_academicsubjectdescriptor ON edfi.course USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_educationorganization ON edfi.course USING btree (educationorganizationid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_210b6b_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courseoffering ON edfi.courseofferingcourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_21acd5_assessmentcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_21acd5_assessmentcontentstandard ON edfi.assessmentcontentstandardauthor USING btree (assessmentidentifier, namespace);


--
-- Name: fk_226b3d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_bellschedule ON edfi.bellschedulegradelevel USING btree (bellschedulename, schoolid);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_assessment ON edfi.assessmentsection USING btree (assessmentidentifier, namespace);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_23fa0f_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_academicsubjectdescriptor ON edfi.learningobjectiveacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_23fa0f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_learningobjective ON edfi.learningobjectiveacademicsubject USING btree (learningobjectiveid, namespace);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_252151_educationorganizationnetwork; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganizationnetwork ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_268e07_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_285d36_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_openstaffposition ON edfi.openstaffpositionacademicsubject USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_29e870_studentinterventionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_studentinterventionassociation ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2a4725_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationlanguage USING btree (educationorganizationid, studentusi);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2b286a_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_studentacademicrecord ON edfi.studentacademicrecordacademichonor USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_objectiveassessment ON edfi.objectiveassessmentscore USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_educationorganization ON edfi.accountabilityrating USING btree (educationorganizationid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2d57be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_student ON edfi.studentidentificationdocument USING btree (studentusi);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_2e333a_studenteducationorganizationassociationlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_studenteducationorganizationassociationlanguage ON edfi.studenteducationorganizationassociationlanguageuse USING btree (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_309217_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_section ON edfi.sectionprogram USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_30e866_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_disciplineaction ON edfi.disciplineactionstaff USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_31779a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_staff ON edfi.staffidentificationdocument USING btree (staffusi);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationorganization ON edfi.studentprogramattendanceevent USING btree (educationorganizationid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_courseoffering ON edfi.courseofferingcurriculumused USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32920f_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationdisability USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_34f9df_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_languagedescriptor ON edfi.parentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_34f9df_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_parent ON edfi.parentlanguage USING btree (parentusi);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_354642_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_coursetranscript ON edfi.coursetranscriptacademicsubject USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_35afab_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_35afab_intervention ON edfi.interventionuri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_school ON edfi.restraintevent USING btree (schoolid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_38677c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_learningstandard ON edfi.learningstandardgradelevel USING btree (learningstandardid);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3ab5d4_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_interventionprescription ON edfi.interventionprescriptioneducationcontent USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_3af731_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessment ON edfi.assessmentidentificationcode USING btree (assessmentidentifier, namespace);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3b5b30_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_graduationplan ON edfi.graduationplancreditsbysubject USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_3c7e00_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c7e00_stateeducationagency ON edfi.stateeducationagencyfederalfunds USING btree (stateeducationagencyid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3c823d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_intervention ON edfi.interventioneducationcontent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3cc1d4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_educationorganization ON edfi.openstaffposition USING btree (educationorganizationid);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3d5433_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_intervention ON edfi.interventionappropriategradelevel USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_staffschoolassociation ON edfi.staffschoolassociationgradelevel USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_3e8699_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e8699_learningobjective ON edfi.objectiveassessmentlearningobjective USING btree (learningobjectiveid, learningobjectivenamespace);


--
-- Name: fk_3e8699_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e8699_objectiveassessment ON edfi.objectiveassessmentlearningobjective USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_400d06_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_assessment ON edfi.assessmentacademicsubject USING btree (assessmentidentifier, namespace);


--
-- Name: fk_421bfa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_421bfa_educationcontent ON edfi.educationcontentderivativesourcelearningresourcemetadatauri USING btree (contentidentifier);


--
-- Name: fk_427110_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganization ON edfi.educationorganizationcategory USING btree (educationorganizationid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_educationorganization ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_435263_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_435263_classperiod ON edfi.classperiodmeetingtime USING btree (classperiodname, schoolid);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44e78d_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_graduationplan ON edfi.graduationplancreditsbycourse USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_44f909_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_program ON edfi.programlearningstandard USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_453ba8_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_parent ON edfi.parenttelephone USING btree (parentusi);


--
-- Name: fk_453ba8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_telephonenumbertypedescriptor ON edfi.parenttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_465c76_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_section ON edfi.sectionclassperiod USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4736c7_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_interventionprescription ON edfi.interventionprescriptionappropriategradelevel USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_educationorganization ON edfi.educationorganizationaddress USING btree (educationorganizationid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_interventionprescription ON edfi.interventionprescriptionappropriatesex USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganization ON edfi.educationorganizationidentificationcode USING btree (educationorganizationid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4acf8e_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4acf8e_interventionprescription ON edfi.interventionprescriptionuri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4c38bb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_program ON edfi.programsponsor USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c9e40_learningstandardcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c9e40_learningstandardcontentstandard ON edfi.learningstandardcontentstandardauthor USING btree (learningstandardid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4ca65b_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationdisability USING btree (educationorganizationid, studentusi);


--
-- Name: fk_4de15a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_staff ON edfi.stafftelephone USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e3afe_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_staff ON edfi.staffpersonalidentificationdocument USING btree (staffusi);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_educationorganization ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_520251_studentneglectedordelinquentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_studentneglectedordelinquentprogramassociation ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_53fe8d_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_53fe8d_account ON edfi.payroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_53fe8d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_53fe8d_staff ON edfi.payroll USING btree (staffusi);


--
-- Name: fk_57ca0f_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57ca0f_account ON edfi.contractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_57ca0f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57ca0f_staff ON edfi.contractedstaff USING btree (staffusi);


--
-- Name: fk_57f7d2_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57f7d2_credential ON edfi.credentialendorsement USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_58013b_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_assessment ON edfi.assessmentprogram USING btree (assessmentidentifier, namespace);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_581f0f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_course ON edfi.coursecompetencylevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_582e49_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationelectronicmail USING btree (educationorganizationid, studentusi);


--
-- Name: fk_588d15_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_588d15_learningobjective ON edfi.learningobjective USING btree (parentlearningobjectiveid, parentnamespace);


--
-- Name: fk_59fcb5_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_cohort ON edfi.cohortprogram USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_school ON edfi.gradingperiod USING btree (schoolid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5a8c0e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a8c0e_localeducationagency ON edfi.localeducationagencyfederalfunds USING btree (localeducationagencyid);


--
-- Name: fk_5c2c98_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_programtypedescriptor ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (programtypedescriptorid);


--
-- Name: fk_5c2c98_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e049e_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_studentacademicrecord ON edfi.studentacademicrecordrecognition USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_5e9932_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_educationorganization ON edfi.competencyobjective USING btree (educationorganizationid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_5ee8fd_studenteducationorganizationassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_studenteducationorganizationassociationdisability ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: fk_5f7953_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_sexdescriptor ON edfi.parent USING btree (sexdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_course ON edfi.courselearningstandard USING btree (coursecode, educationorganizationid);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_64d8a6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_school ON edfi.schoolgradelevel USING btree (schoolid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_6621ee_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_coursetranscript ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_679174_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_disciplineincident ON edfi.studentdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_679174_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_student ON edfi.studentdisciplineincidentassociation USING btree (studentusi);


--
-- Name: fk_679174_studentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_studentparticipationcodedescriptor ON edfi.studentdisciplineincidentassociation USING btree (studentparticipationcodedescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_oldethnicitydescriptor ON edfi.staff USING btree (oldethnicitydescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_68857c_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_68857c_gradebookentry ON edfi.gradebookentrylearningobjective USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_68857c_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_68857c_learningobjective ON edfi.gradebookentrylearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_6959b4_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_school ON edfi.session USING btree (schoolid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_696d9a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_staff ON edfi.staffrace USING btree (staffusi);


--
-- Name: fk_699b02_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_699b02_assessmentitem ON edfi.assessmentitempossibleresponse USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69cd6f_studentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_studentprogramassociation ON edfi.studentprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationcohortyear USING btree (educationorganizationid, studentusi);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd27e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_staff ON edfi.staffinternationaladdress USING btree (staffusi);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6e1291_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6e1291_bellschedule ON edfi.bellscheduledate USING btree (bellschedulename, schoolid);


--
-- Name: fk_6fa51c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_intervention ON edfi.interventionstaff USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70e978_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_studentschoolassociation ON edfi.studentschoolassociationalternativegraduationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_72eb60_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_session ON edfi.sessionacademicweek USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_educationorganization ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplineaction ON edfi.disciplineactiondiscipline USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_staffeducationorganizationcontactassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_staffeducationorganizationcontactassociation ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7483c6_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staff ON edfi.staffidentificationcode USING btree (staffusi);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_7808ee_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_educationorganization ON edfi.assessment USING btree (educationorganizationid);


--
-- Name: fk_789691_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_school ON edfi.schoolcategory USING btree (schoolid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_school ON edfi.studentschoolattendanceevent USING btree (schoolid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_educationorganization ON edfi.educationorganizationinstitutiontelephone USING btree (educationorganizationid);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7d2fb4_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_servicedescriptor ON edfi.studenttitleipartaprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_7d2fb4_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_7e1b0d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7e1b0d_educationorganization ON edfi.account USING btree (educationorganizationid);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7f600a_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_studentassessment ON edfi.studentassessmentitem USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_7fa4be_staffdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_staffdisciplineincidentassociation ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (incidentidentifier, schoolid, staffusi);


--
-- Name: fk_810575_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_programcharacteristicdescriptor ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_810575_studenteducationorganizationassociationprogrampartici; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_studenteducationorganizationassociationprogrampartici ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: fk_81b800_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard ON edfi.learningstandardprerequisitelearningstandard USING btree (learningstandardid);


--
-- Name: fk_81b800_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard1 ON edfi.learningstandardprerequisitelearningstandard USING btree (prerequisitelearningstandardid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_84e5e0_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_studentacademicrecord ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_8574ad_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_reportcard ON edfi.reportcardgradepointaverage USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_85798e_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_electronicmailtypedescriptor ON edfi.parentelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_85798e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_parent ON edfi.parentelectronicmail USING btree (parentusi);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school ON edfi.studentschoolassociation USING btree (schoolid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_studentschoolfoodserviceprogramassociation ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_87d32b_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_interventionstudy ON edfi.interventionstudyappropriategradelevel USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d3fd8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_section ON edfi.sectionofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_8d650e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_addresstypedescriptor ON edfi.parentinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_8d650e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_countrydescriptor ON edfi.parentinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_8d650e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_parent ON edfi.parentinternationaladdress USING btree (parentusi);


--
-- Name: fk_8e1257_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_educationorganization ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_oldethnicitydescriptor ON edfi.studenteducationorganizationassociation USING btree (oldethnicitydescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e9d64_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_interventionstudy ON edfi.interventionstudystateabbreviation USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_9046e7_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9046e7_interventionstudy ON edfi.interventionstudyuri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_90920d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_educationorganization ON edfi.program USING btree (educationorganizationid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_92327a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92327a_learningstandard ON edfi.learningstandardidentificationcode USING btree (learningstandardid);


--
-- Name: fk_92f7f8_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_grade ON edfi.gradelearningstandardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_9739a2_studenteducationorganizationassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9739a2_studenteducationorganizationassociationaddress ON edfi.studenteducationorganizationassociationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: fk_98cd8a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent ON edfi.educationcontentderivativesourceeducationcontent USING btree (contentidentifier);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_educationcontent ON edfi.educationcontentappropriatesex USING btree (contentidentifier);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bbaf5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bbaf5_school ON edfi.bellschedule USING btree (schoolid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9bd9d6_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_postsecondaryinstitution ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (postsecondaryinstitutionid);


--
-- Name: fk_9e377d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_bellschedule ON edfi.bellscheduleclassperiod USING btree (bellschedulename, schoolid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9e6edd_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_interventionprescription ON edfi.interventionprescriptiondiagnosis USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_a165fa_learningobjectivecontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a165fa_learningobjectivecontentstandard ON edfi.learningobjectivecontentstandardauthor USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a18fcf_studenteducationorganizationassociationstudentcharact ON edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf USING btree (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: fk_a2d4a8_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtelephone USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_studentspecialeducationprogramassociationdisability ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a3387e_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_assessment ON edfi.assessmentplatformtype USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a3f725_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_studentacademicrecord ON edfi.studentacademicrecorddiploma USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a51ff9_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a545e5_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_disciplineincident ON edfi.disciplineincidentweapon USING btree (incidentidentifier, schoolid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a61b72_studenteducationorganizationassociationstudentindicat ON edfi.studenteducationorganizationassociationstudentindicatorperiod USING btree (educationorganizationid, indicatorname, studentusi);


--
-- Name: fk_a64540_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a64540_intervention ON edfi.interventionmeetingtime USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a6a1f0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationrace USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a741a8_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_student ON edfi.studentpersonalidentificationdocument USING btree (studentusi);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a82b93_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a8bc47_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_intervention ON edfi.interventionappropriatesex USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a92ef0_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_gradeleveldescriptor ON edfi.learningobjectivegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_a92ef0_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_learningobjective ON edfi.learningobjectivegradelevel USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a97956_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a97956_school ON edfi.academicweek USING btree (schoolid);


--
-- Name: fk_a984df_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_interventionprescription ON edfi.interventionprescriptionpopulationserved USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_student ON edfi.studentvisa USING btree (studentusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_courseoffering ON edfi.courseofferingofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_aaade9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_learningstandard ON edfi.learningstandardacademicsubject USING btree (learningstandardid);


--
-- Name: fk_ab7096_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_coursetranscript ON edfi.coursetranscriptcreditcategory USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae53d1_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_student ON edfi.studentothername USING btree (studentusi);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af7be7_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_studentacademicrecord ON edfi.studentacademicrecordgradepointaverage USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afd39a_staffeducationorganizationcontactassociationaddress ON edfi.staffeducationorganizationcontactassociationaddressperiod USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b0cb9e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_staff ON edfi.staffothername USING btree (staffusi);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b1c52f_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_studentassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b2e25d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_intervention ON edfi.interventiondiagnosis USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b31a96_studenthomelessprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_studenthomelessprogramassociation ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_b3fd05_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b3fd05_participationstatusdescriptor ON edfi.generalstudentprogramassociationparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_b43eed_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_behaviordescriptor ON edfi.studentdisciplineincidentassociationbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_b43eed_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_studentdisciplineincidentassociation ON edfi.studentdisciplineincidentassociationbehavior USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b50e36_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_coursetranscript ON edfi.coursetranscriptearnedadditionalcredits USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b527e7_stafflanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_stafflanguage ON edfi.stafflanguageuse USING btree (languagedescriptorid, staffusi);


--
-- Name: fk_b772b6_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_countrydescriptor ON edfi.parentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_b772b6_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_identificationdocumentusedescriptor ON edfi.parentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_b772b6_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_parent ON edfi.parentpersonalidentificationdocument USING btree (parentusi);


--
-- Name: fk_b772b6_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_personalinformationverificationdescriptor ON edfi.parentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_b7f969_staffaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b7f969_staffaddress ON edfi.staffaddressperiod USING btree (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b865d7_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (educationorganizationid, studentusi);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryinstitution ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_educationorganization ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_baaa9d_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_competencyleveldescriptor ON edfi.studentlearningobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_baaa9d_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_gradingperiod ON edfi.studentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_baaa9d_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_learningobjective ON edfi.studentlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_baaa9d_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_student ON edfi.studentlearningobjective USING btree (studentusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_studentspecialeducationprogramassociationspecialeduca ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_educationorganization ON edfi.graduationplan USING btree (educationorganizationid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_bf9d92_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_parent ON edfi.studentparentassociation USING btree (parentusi);


--
-- Name: fk_bf9d92_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_relationdescriptor ON edfi.studentparentassociation USING btree (relationdescriptorid);


--
-- Name: fk_bf9d92_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_student ON edfi.studentparentassociation USING btree (studentusi);


--
-- Name: fk_c098ce_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_reportcard ON edfi.reportcardstudentlearningobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c098ce_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_studentlearningobjective ON edfi.reportcardstudentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_c0da6b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_course ON edfi.courselearningobjective USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c0da6b_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_learningobjective ON edfi.courselearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_staff ON edfi.staffaddress USING btree (staffusi);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (educationorganizationid, studentusi);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16d6c_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_reportcard ON edfi.reportcardstudentcompetencyobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2bd3c_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_studentassessment ON edfi.studentassessmentperformancelevel USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c2efaa_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_studentsectionassociation ON edfi.studentgradebookentry USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_c40642_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c40642_account ON edfi.actual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_c45364_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_interventionstudy ON edfi.interventionstudypopulationserved USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_c4b3e0_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_session ON edfi.sessiongradingperiod USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c60190_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_staff ON edfi.staffrecognition USING btree (staffusi);


--
-- Name: fk_c7b5a8_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_gradebookentry ON edfi.gradebookentrylearningstandard USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7db20_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7db20_intervention ON edfi.interventionlearningresourcemetadatauri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_c7e725_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_course ON edfi.courselevelcharacteristic USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_c99b99_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningobjective ON edfi.learningobjectivelearningstandard USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c99b99_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningstandard ON edfi.learningobjectivelearningstandard USING btree (learningstandardid);


--
-- Name: fk_ca697a_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ca697a_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentindicator USING btree (educationorganizationid, studentusi);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cabdcb_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_disciplineincident ON edfi.disciplineincidentbehavior USING btree (incidentidentifier, schoolid);


--
-- Name: fk_cbeb99_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_intervention ON edfi.interventionpopulationserved USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cc3333_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_addresstypedescriptor ON edfi.parentaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_cc3333_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_localedescriptor ON edfi.parentaddress USING btree (localedescriptorid);


--
-- Name: fk_cc3333_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_parent ON edfi.parentaddress USING btree (parentusi);


--
-- Name: fk_cc3333_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_stateabbreviationdescriptor ON edfi.parentaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_school ON edfi.staffschoolassociation USING btree (schoolid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d2362d_studentcohortassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_studentcohortassociation ON edfi.studentcohortassociationsection USING btree (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: fk_d24efe_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d24efe_account ON edfi.accountaccountcode USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_d24efe_accountcode; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d24efe_accountcode ON edfi.accountaccountcode USING btree (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: fk_d2c8a9_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentlearningobjective ON edfi.studentlearningobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_d2c8a9_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentsectionassociation ON edfi.studentlearningobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d3d793_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_restraintevent ON edfi.restrainteventprogram USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_d44be7_educationorganizationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d44be7_educationorganizationaddress ON edfi.educationorganizationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_d53ee9_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_interventionstudy ON edfi.interventionstudyappropriatesex USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_school ON edfi.calendar USING btree (schoolid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_educationcontent ON edfi.educationcontentlanguage USING btree (contentidentifier);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d891fb_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_staffschoolassociation ON edfi.staffschoolassociationacademicsubject USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_d90abb_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_assessment ON edfi.assessmentlanguage USING btree (assessmentidentifier, namespace);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_educationorganization ON edfi.interventionstudy USING btree (educationorganizationid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d93663_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_staff ON edfi.staffelectronicmail USING btree (staffusi);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d98560_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_objectiveassessment ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_d9dcd7_studentmigranteducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_studentmigranteducationprogramassociation ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_dafcc7_graduationplancreditsbycourse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_graduationplancreditsbycourse ON edfi.graduationplancreditsbycoursecourse USING btree (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_graduationplanrequiredassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_graduationplanrequiredassessment ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_ddfc9b_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_graduationplan ON edfi.graduationplancreditsbycreditcategory USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_de959d_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_studentassessment ON edfi.studentassessmentaccommodation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessment ON edfi.assessmentscore USING btree (assessmentidentifier, namespace);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_e12298_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e12298_interventionprescription ON edfi.interventionprescriptionlearningresourcemetadatauri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e19c72_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_openstaffposition ON edfi.openstaffpositioninstructionalgradelevel USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_e232ae_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restraintevent ON edfi.restrainteventreason USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_staff ON edfi.staffvisa USING btree (staffusi);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e45c0b_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_school ON edfi.disciplineincident USING btree (schoolid);


--
-- Name: fk_e45c0b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_staff ON edfi.disciplineincident USING btree (staffusi);


--
-- Name: fk_e670ae_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_educationorganization ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e77b10_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_staff ON edfi.stafftribalaffiliation USING btree (staffusi);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e79fe2_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_intervention ON edfi.interventioninterventionprescription USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e83625_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_assessment ON edfi.assessmentassessedgradelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_educationorganization ON edfi.interventionprescription USING btree (educationorganizationid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_e943d3_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_program ON edfi.programservice USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e943d3_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_servicedescriptor ON edfi.programservice USING btree (servicedescriptorid);


--
-- Name: fk_eb5c90_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_servicedescriptor ON edfi.studentcteprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_eb5c90_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_studentcteprogramassociation ON edfi.studentcteprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ec1992_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_educationorganization ON edfi.reportcard USING btree (educationorganizationid);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee50f2_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_careerpathwaydescriptor ON edfi.studentcteprogramassociationcteprogram USING btree (careerpathwaydescriptorid);


--
-- Name: fk_ee50f2_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogram USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentcompetencyobjective ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef0ece_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_disciplineaction ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_ef0ece_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_studentdisciplineincidentassociation ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventionstudy ON edfi.interventionstudyinterventioneffectiveness USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_credential ON edfi.credentialgradelevel USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_communityprovider; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_communityprovider ON edfi.communityproviderlicense USING btree (communityproviderid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f203d3_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_reportcard ON edfi.reportcardgrade USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f221cc_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_section ON edfi.sectioncourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f32347_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f3917b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_staff ON edfi.staffcredential USING btree (staffusi);


--
-- Name: fk_f5911f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_learningobjective ON edfi.programlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_f5911f_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_program ON edfi.programlearningobjective USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f5b9f6_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_studentschoolassociation ON edfi.studentschoolassociationeducationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_f605af_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f605af_educationcontent ON edfi.educationcontentauthor USING btree (contentidentifier);


--
-- Name: fk_f67c61_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_languageusedescriptor ON edfi.parentlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_f67c61_parentlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_parentlanguage ON edfi.parentlanguageuse USING btree (languagedescriptorid, parentusi);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f99184_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_educationorganization ON edfi.learningobjectivecontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_f99184_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_publicationstatusdescriptor ON edfi.learningobjectivecontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_f9e163_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationaddress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_fb1ef3_accountclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fb1ef3_accountclassificationdescriptor ON edfi.accountcode USING btree (accountclassificationdescriptorid);


--
-- Name: fk_fb1ef3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fb1ef3_educationorganization ON edfi.accountcode USING btree (educationorganizationid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: fk_fece89_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: parent_ui_parentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX parent_ui_parentuniqueid ON edfi.parent USING btree (parentuniqueid);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1c6225_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1c6225_id ON edfi.budget USING btree (id);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_53fe8d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_53fe8d_id ON edfi.payroll USING btree (id);


--
-- Name: ux_57ca0f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_57ca0f_id ON edfi.contractedstaff USING btree (id);


--
-- Name: ux_588d15_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_588d15_id ON edfi.learningobjective USING btree (id);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_5f7953_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5f7953_id ON edfi.parent USING btree (id);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_679174_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_679174_id ON edfi.studentdisciplineincidentassociation USING btree (id);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_7e1b0d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7e1b0d_id ON edfi.account USING btree (id);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_baaa9d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_baaa9d_id ON edfi.studentlearningobjective USING btree (id);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_bf9d92_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_bf9d92_id ON edfi.studentparentassociation USING btree (id);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c40642_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c40642_id ON edfi.actual USING btree (id);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_fb1ef3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_fb1ef3_id ON edfi.accountcode USING btree (id);


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: parentothername fk_0e0a11_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: parentothername fk_0e0a11_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: parentaddressperiod fk_123e27_parentaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT fk_123e27_parentaddress FOREIGN KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.parentaddress(addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: budget fk_1c6225_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.budget
    ADD CONSTRAINT fk_1c6225_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, languagedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, languagedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: parentlanguage fk_34f9df_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: parentlanguage fk_34f9df_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningobjective fk_3e8699_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT fk_3e8699_learningobjective FOREIGN KEY (learningobjectiveid, learningobjectivenamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: objectiveassessmentlearningobjective fk_3e8699_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT fk_3e8699_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: parenttelephone fk_453ba8_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parenttelephone fk_453ba8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: payroll fk_53fe8d_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT fk_53fe8d_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: payroll fk_53fe8d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT fk_53fe8d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: contractedstaff fk_57ca0f_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT fk_57ca0f_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: contractedstaff fk_57ca0f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT fk_57ca0f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: learningobjective fk_588d15_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT fk_588d15_learningobjective FOREIGN KEY (parentlearningobjectiveid, parentnamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (disabilitydescriptorid, educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociationdisability(disabilitydescriptorid, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parent fk_5f7953_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentdisciplineincidentassociation fk_679174_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentassociation fk_679174_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentassociation fk_679174_studentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_studentparticipationcodedescriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.studentparticipationcodedescriptor(studentparticipationcodedescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningobjective fk_68857c_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT fk_68857c_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningobjective fk_68857c_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT fk_68857c_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: account fk_7e1b0d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.account
    ADD CONSTRAINT fk_7e1b0d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountclassificationdescriptor fk_7efddd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountclassificationdescriptor
    ADD CONSTRAINT fk_7efddd_descriptor FOREIGN KEY (accountclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_studenteducationorganizationassociationprogrampartici; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_studenteducationorganizationassociationprogrampartici FOREIGN KEY (educationorganizationid, programtypedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationprogramparticipation(educationorganizationid, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard1 FOREIGN KEY (prerequisitelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: oldethnicitydescriptor fk_821652_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT fk_821652_descriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: parentelectronicmail fk_85798e_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: parentelectronicmail fk_85798e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: parentinternationaladdress fk_8d650e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) REFERENCES edfi.studenteducationorganizationassociationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandardauthor fk_a165fa_learningobjectivecontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT fk_a165fa_learningobjectivecontentstandard FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjectivecontentstandard(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentcharacteristicdescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, indicatorname, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, indicatorname, studentusi) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivegradelevel fk_a92ef0_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningobjectivegradelevel fk_a92ef0_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (languagedescriptorid, staffusi) REFERENCES edfi.stafflanguage(languagedescriptorid, staffusi) ON DELETE CASCADE;


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjective fk_baaa9d_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentlearningobjective fk_baaa9d_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentlearningobjective fk_baaa9d_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: studentlearningobjective fk_baaa9d_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentparentassociation fk_bf9d92_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: studentparentassociation fk_bf9d92_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentparentassociation fk_bf9d92_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: actual fk_c40642_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.actual
    ADD CONSTRAINT fk_c40642_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentaddress fk_cc3333_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: parentaddress fk_cc3333_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: accountaccountcode fk_d24efe_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT fk_d24efe_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: accountaccountcode fk_d24efe_accountcode; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT fk_d24efe_accountcode FOREIGN KEY (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear) REFERENCES edfi.accountcode(accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplancreditsbycourse(coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineincident fk_e45c0b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: programservice fk_e943d3_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programservice fk_e943d3_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociationservice fk_eb5c90_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: programlearningobjective fk_f5911f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: programlearningobjective fk_f5911f_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: parentlanguageuse fk_f67c61_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: parentlanguageuse fk_f67c61_parentlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_parentlanguage FOREIGN KEY (languagedescriptorid, parentusi) REFERENCES edfi.parentlanguage(languagedescriptorid, parentusi) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: learningobjectivecontentstandard fk_f99184_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningobjectivecontentstandard fk_f99184_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandard fk_f99184_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: accountcode fk_fb1ef3_accountclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT fk_fb1ef3_accountclassificationdescriptor FOREIGN KEY (accountclassificationdescriptorid) REFERENCES edfi.accountclassificationdescriptor(accountclassificationdescriptorid);


--
-- Name: accountcode fk_fb1ef3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT fk_fb1ef3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- PostgreSQL database dump complete
--

