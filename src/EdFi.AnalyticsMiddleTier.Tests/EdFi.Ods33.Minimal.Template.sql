--
-- PostgreSQL database dump
--

-- Dumped from database version 11.6
-- Dumped by pg_dump version 12.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: changes; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA changes;


ALTER SCHEMA changes OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tpdm;


ALTER SCHEMA tpdm OWNER TO postgres;

--
-- Name: tracked_deletes_edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_deletes_edfi;


ALTER SCHEMA tracked_deletes_edfi OWNER TO postgres;

--
-- Name: tracked_deletes_tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_deletes_tpdm;


ALTER SCHEMA tracked_deletes_tpdm OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: getmaxchangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.getmaxchangeversion() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
DECLARE
	result bigint;
BEGIN
    SELECT last_value FROM changes.ChangeVersionSequence INTO result;
    RETURN result;
END
$$;


ALTER FUNCTION changes.getmaxchangeversion() OWNER TO postgres;

--
-- Name: updatechangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.updatechangeversion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    new.ChangeVersion := nextval('changes.ChangeVersionSequence');
    RETURN new;
END;
$$;


ALTER FUNCTION changes.updatechangeversion() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityorganizationid
            AND targeteducationorganizationid = OLD.communityorganizationid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityorganizationid AS SourceEducationOrganizationId, 
            NEW.communityorganizationid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid 
                    AND OLD.communityorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.communityproviderid
            ) as targets
        WHERE sources.communityproviderid = targets.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityproviderid
            AND targeteducationorganizationid = OLD.communityproviderid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityproviderid AS SourceEducationOrganizationId, 
            NEW.communityproviderid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the communityorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.communityproviderid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid  
                AND NEW.communityorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.communityproviderid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.communityproviderid
        ) as targets
    WHERE sources.communityproviderid = targets.communityproviderid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid  
                    AND OLD.communityorganizationid IS NOT NULL 
                    AND (NEW.communityorganizationid IS NULL OR OLD.communityorganizationid <> NEW.communityorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the communityorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.communityproviderid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.communityproviderid = d2.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid
                AND ((OLD.communityorganizationid IS NULL AND NEW.communityorganizationid IS NOT NULL)
                OR OLD.communityorganizationid <> NEW.communityorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.communityproviderid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_update() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationorganizationnetworkid
            AND targeteducationorganizationid = OLD.educationorganizationnetworkid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationorganizationnetworkid AS SourceEducationOrganizationId, 
            NEW.educationorganizationnetworkid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.educationservicecenterid
            ) as targets
        WHERE sources.educationservicecenterid = targets.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationservicecenterid
            AND targeteducationorganizationid = OLD.educationservicecenterid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationservicecenterid AS SourceEducationOrganizationId, 
            NEW.educationservicecenterid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.educationservicecenterid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.educationservicecenterid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.educationservicecenterid
        ) as targets
    WHERE sources.educationservicecenterid = targets.educationservicecenterid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.educationservicecenterid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.educationservicecenterid = d2.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.educationservicecenterid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_update() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid 
                    AND OLD.parentlocaleducationagencyid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid 
                    AND OLD.educationservicecenterid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.localeducationagencyid
            ) as targets
        WHERE sources.localeducationagencyid = targets.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.localeducationagencyid
            AND targeteducationorganizationid = OLD.localeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.localeducationagencyid AS SourceEducationOrganizationId, 
            NEW.localeducationagencyid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parentlocaleducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid  
                AND NEW.parentlocaleducationagencyid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the educationservicecenterid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid  
                AND NEW.educationservicecenterid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.localeducationagencyid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.localeducationagencyid
        ) as targets
    WHERE sources.localeducationagencyid = targets.localeducationagencyid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid  
                    AND OLD.parentlocaleducationagencyid IS NOT NULL 
                    AND (NEW.parentlocaleducationagencyid IS NULL OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid  
                    AND OLD.educationservicecenterid IS NOT NULL 
                    AND (NEW.educationservicecenterid IS NULL OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parentlocaleducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the educationservicecenterid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.localeducationagencyid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.localeducationagencyid = d2.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid
                AND ((OLD.parentlocaleducationagencyid IS NULL AND NEW.parentlocaleducationagencyid IS NOT NULL)
                OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid
                AND ((OLD.educationservicecenterid IS NULL AND NEW.educationservicecenterid IS NOT NULL)
                OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.localeducationagencyid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_update() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid 
                    AND OLD.parenteducationorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.organizationdepartmentid
            ) as targets
        WHERE sources.organizationdepartmentid = targets.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.organizationdepartmentid
            AND targeteducationorganizationid = OLD.organizationdepartmentid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_delete() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.organizationdepartmentid AS SourceEducationOrganizationId, 
            NEW.organizationdepartmentid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parenteducationorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.organizationdepartmentid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid  
                AND NEW.parenteducationorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.organizationdepartmentid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.organizationdepartmentid
        ) as targets
    WHERE sources.organizationdepartmentid = targets.organizationdepartmentid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_insert() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid  
                    AND OLD.parenteducationorganizationid IS NOT NULL 
                    AND (NEW.parenteducationorganizationid IS NULL OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parenteducationorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.organizationdepartmentid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.organizationdepartmentid = d2.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid
                AND ((OLD.parenteducationorganizationid IS NULL AND NEW.parenteducationorganizationid IS NOT NULL)
                OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.organizationdepartmentid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_update() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.postsecondaryinstitutionid
            AND targeteducationorganizationid = OLD.postsecondaryinstitutionid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.postsecondaryinstitutionid AS SourceEducationOrganizationId, 
            NEW.postsecondaryinstitutionid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid 
                    AND OLD.localeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.schoolid
            ) as targets
        WHERE sources.schoolid = targets.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.schoolid
            AND targeteducationorganizationid = OLD.schoolid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_delete() OWNER TO postgres;

--
-- Name: edfi_school_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.schoolid AS SourceEducationOrganizationId, 
            NEW.schoolid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the localeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.schoolid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid  
                AND NEW.localeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.schoolid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.schoolid
        ) as targets
    WHERE sources.schoolid = targets.schoolid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid  
                    AND OLD.localeducationagencyid IS NOT NULL 
                    AND (NEW.localeducationagencyid IS NULL OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the localeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.schoolid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.schoolid = d2.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid
                AND ((OLD.localeducationagencyid IS NULL AND NEW.localeducationagencyid IS NOT NULL)
                OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.schoolid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_update() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.stateeducationagencyid
            AND targeteducationorganizationid = OLD.stateeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.stateeducationagencyid AS SourceEducationOrganizationId, 
            NEW.stateeducationagencyid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.absenceeventcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AbsenceEventCategoryDescriptor(AbsenceEventCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AbsenceEventCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AbsenceEventCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.absenceeventcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.academichonorcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AcademicHonorCategoryDescriptor(AcademicHonorCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AcademicHonorCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AcademicHonorCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.academichonorcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: academicsubjectdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.academicsubjectdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AcademicSubjectDescriptor(AcademicSubjectDescriptorId, Id, ChangeVersion)
    SELECT OLD.AcademicSubjectDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AcademicSubjectDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.academicsubjectdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: academicweek_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.academicweek_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AcademicWeek(SchoolId, WeekIdentifier, Id, ChangeVersion)
    VALUES (OLD.SchoolId, OLD.WeekIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.academicweek_tr_deltrkg() OWNER TO postgres;

--
-- Name: accommodationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.accommodationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AccommodationDescriptor(AccommodationDescriptorId, Id, ChangeVersion)
    SELECT OLD.AccommodationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AccommodationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.accommodationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: account_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.account_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Account(AccountIdentifier, EducationOrganizationId, FiscalYear, Id, ChangeVersion)
    VALUES (OLD.AccountIdentifier, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.account_tr_deltrkg() OWNER TO postgres;

--
-- Name: accountabilityrating_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.accountabilityrating_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AccountabilityRating(EducationOrganizationId, RatingTitle, SchoolYear, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.RatingTitle, OLD.SchoolYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.accountabilityrating_tr_deltrkg() OWNER TO postgres;

--
-- Name: accountclassificationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.accountclassificationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AccountClassificationDescriptor(AccountClassificationDescriptorId, Id, ChangeVersion)
    SELECT OLD.AccountClassificationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AccountClassificationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.accountclassificationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: accountcode_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.accountcode_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AccountCode(AccountClassificationDescriptorId, AccountCodeNumber, EducationOrganizationId, FiscalYear, Id, ChangeVersion)
    VALUES (OLD.AccountClassificationDescriptorId, OLD.AccountCodeNumber, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.accountcode_tr_deltrkg() OWNER TO postgres;

--
-- Name: achievementcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.achievementcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AchievementCategoryDescriptor(AchievementCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AchievementCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AchievementCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.achievementcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: actual_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.actual_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Actual(AccountIdentifier, AsOfDate, EducationOrganizationId, FiscalYear, Id, ChangeVersion)
    VALUES (OLD.AccountIdentifier, OLD.AsOfDate, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.actual_tr_deltrkg() OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.additionalcredittypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AdditionalCreditTypeDescriptor(AdditionalCreditTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.AdditionalCreditTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AdditionalCreditTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.additionalcredittypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: addresstypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.addresstypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AddressTypeDescriptor(AddressTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.AddressTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AddressTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.addresstypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.administrationenvironmentdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AdministrationEnvironmentDescriptor(AdministrationEnvironmentDescriptorId, Id, ChangeVersion)
    SELECT OLD.AdministrationEnvironmentDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AdministrationEnvironmentDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.administrationenvironmentdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.administrativefundingcontroldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AdministrativeFundingControlDescriptor(AdministrativeFundingControlDescriptorId, Id, ChangeVersion)
    SELECT OLD.AdministrativeFundingControlDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AdministrativeFundingControlDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.administrativefundingcontroldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.ancestryethnicorigindescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AncestryEthnicOriginDescriptor(AncestryEthnicOriginDescriptorId, Id, ChangeVersion)
    SELECT OLD.AncestryEthnicOriginDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AncestryEthnicOriginDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.ancestryethnicorigindescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessment_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessment_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Assessment(AssessmentIdentifier, Namespace, Id, ChangeVersion)
    VALUES (OLD.AssessmentIdentifier, OLD.Namespace, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessment_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentCategoryDescriptor(AssessmentCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentidentificationsystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentIdentificationSystemDescriptor(AssessmentIdentificationSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentIdentificationSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentIdentificationSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentidentificationsystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentitem_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentitem_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentItem(AssessmentIdentifier, IdentificationCode, Namespace, Id, ChangeVersion)
    VALUES (OLD.AssessmentIdentifier, OLD.IdentificationCode, OLD.Namespace, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentitem_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentitemcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentItemCategoryDescriptor(AssessmentItemCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentItemCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentItemCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentitemcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentitemresultdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentItemResultDescriptor(AssessmentItemResultDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentItemResultDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentItemResultDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentitemresultdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentperioddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentperioddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentPeriodDescriptor(AssessmentPeriodDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentPeriodDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentPeriodDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentperioddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentreportingmethoddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentReportingMethodDescriptor(AssessmentReportingMethodDescriptorId, Id, ChangeVersion)
    SELECT OLD.AssessmentReportingMethodDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AssessmentReportingMethodDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentreportingmethoddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.assessmentscorerangelearningstandard_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AssessmentScoreRangeLearningStandard(AssessmentIdentifier, Namespace, ScoreRangeId, Id, ChangeVersion)
    VALUES (OLD.AssessmentIdentifier, OLD.Namespace, OLD.ScoreRangeId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.assessmentscorerangelearningstandard_tr_deltrkg() OWNER TO postgres;

--
-- Name: attemptstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.attemptstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AttemptStatusDescriptor(AttemptStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.AttemptStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AttemptStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.attemptstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.attendanceeventcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.AttendanceEventCategoryDescriptor(AttendanceEventCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.AttendanceEventCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AttendanceEventCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.attendanceeventcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.BarrierToInternetAccessInResidenceDescriptor(BarrierToInternetAccessInResidenceDescriptorId, Id, ChangeVersion)
    SELECT OLD.BarrierToInternetAccessInResidenceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.BarrierToInternetAccessInResidenceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: behaviordescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.behaviordescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.BehaviorDescriptor(BehaviorDescriptorId, Id, ChangeVersion)
    SELECT OLD.BehaviorDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.BehaviorDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.behaviordescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: bellschedule_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.bellschedule_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.BellSchedule(BellScheduleName, SchoolId, Id, ChangeVersion)
    VALUES (OLD.BellScheduleName, OLD.SchoolId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.bellschedule_tr_deltrkg() OWNER TO postgres;

--
-- Name: budget_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.budget_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Budget(AccountIdentifier, AsOfDate, EducationOrganizationId, FiscalYear, Id, ChangeVersion)
    VALUES (OLD.AccountIdentifier, OLD.AsOfDate, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.budget_tr_deltrkg() OWNER TO postgres;

--
-- Name: calendar_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.calendar_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Calendar(CalendarCode, SchoolId, SchoolYear, Id, ChangeVersion)
    VALUES (OLD.CalendarCode, OLD.SchoolId, OLD.SchoolYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.calendar_tr_deltrkg() OWNER TO postgres;

--
-- Name: calendardate_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.calendardate_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CalendarDate(CalendarCode, Date, SchoolId, SchoolYear, Id, ChangeVersion)
    VALUES (OLD.CalendarCode, OLD.Date, OLD.SchoolId, OLD.SchoolYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.calendardate_tr_deltrkg() OWNER TO postgres;

--
-- Name: calendareventdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.calendareventdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CalendarEventDescriptor(CalendarEventDescriptorId, Id, ChangeVersion)
    SELECT OLD.CalendarEventDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CalendarEventDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.calendareventdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: calendartypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.calendartypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CalendarTypeDescriptor(CalendarTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CalendarTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CalendarTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.calendartypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: careerpathwaydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.careerpathwaydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CareerPathwayDescriptor(CareerPathwayDescriptorId, Id, ChangeVersion)
    SELECT OLD.CareerPathwayDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CareerPathwayDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.careerpathwaydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.charterapprovalagencytypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CharterApprovalAgencyTypeDescriptor(CharterApprovalAgencyTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CharterApprovalAgencyTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CharterApprovalAgencyTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.charterapprovalagencytypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: charterstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.charterstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CharterStatusDescriptor(CharterStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.CharterStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CharterStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.charterstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.citizenshipstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CitizenshipStatusDescriptor(CitizenshipStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.CitizenshipStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CitizenshipStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.citizenshipstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: classperiod_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.classperiod_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ClassPeriod(ClassPeriodName, SchoolId, Id, ChangeVersion)
    VALUES (OLD.ClassPeriodName, OLD.SchoolId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.classperiod_tr_deltrkg() OWNER TO postgres;

--
-- Name: classroompositiondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.classroompositiondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ClassroomPositionDescriptor(ClassroomPositionDescriptorId, Id, ChangeVersion)
    SELECT OLD.ClassroomPositionDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ClassroomPositionDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.classroompositiondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: cohort_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.cohort_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Cohort(CohortIdentifier, EducationOrganizationId, Id, ChangeVersion)
    VALUES (OLD.CohortIdentifier, OLD.EducationOrganizationId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.cohort_tr_deltrkg() OWNER TO postgres;

--
-- Name: cohortscopedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.cohortscopedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CohortScopeDescriptor(CohortScopeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CohortScopeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CohortScopeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.cohortscopedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: cohorttypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.cohorttypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CohortTypeDescriptor(CohortTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CohortTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CohortTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.cohorttypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.cohortyeartypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CohortYearTypeDescriptor(CohortYearTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CohortYearTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CohortYearTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.cohortyeartypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: communityorganization_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.communityorganization_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CommunityOrganization(CommunityOrganizationId, Id, ChangeVersion)
    SELECT OLD.CommunityOrganizationId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.CommunityOrganizationId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.communityorganization_tr_deltrkg() OWNER TO postgres;

--
-- Name: communityprovider_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.communityprovider_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CommunityProvider(CommunityProviderId, Id, ChangeVersion)
    SELECT OLD.CommunityProviderId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.CommunityProviderId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.communityprovider_tr_deltrkg() OWNER TO postgres;

--
-- Name: communityproviderlicense_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.communityproviderlicense_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CommunityProviderLicense(CommunityProviderId, LicenseIdentifier, LicensingOrganization, Id, ChangeVersion)
    VALUES (OLD.CommunityProviderId, OLD.LicenseIdentifier, OLD.LicensingOrganization, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.communityproviderlicense_tr_deltrkg() OWNER TO postgres;

--
-- Name: competencyleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.competencyleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CompetencyLevelDescriptor(CompetencyLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.CompetencyLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CompetencyLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.competencyleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: competencyobjective_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.competencyobjective_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CompetencyObjective(EducationOrganizationId, Objective, ObjectiveGradeLevelDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.Objective, OLD.ObjectiveGradeLevelDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.competencyobjective_tr_deltrkg() OWNER TO postgres;

--
-- Name: contacttypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.contacttypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ContactTypeDescriptor(ContactTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.ContactTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ContactTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.contacttypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: contentclassdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.contentclassdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ContentClassDescriptor(ContentClassDescriptorId, Id, ChangeVersion)
    SELECT OLD.ContentClassDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ContentClassDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.contentclassdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.continuationofservicesreasondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ContinuationOfServicesReasonDescriptor(ContinuationOfServicesReasonDescriptorId, Id, ChangeVersion)
    SELECT OLD.ContinuationOfServicesReasonDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ContinuationOfServicesReasonDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.continuationofservicesreasondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: contractedstaff_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.contractedstaff_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ContractedStaff(AccountIdentifier, AsOfDate, EducationOrganizationId, FiscalYear, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.AccountIdentifier, OLD.AsOfDate, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.contractedstaff_tr_deltrkg() OWNER TO postgres;

--
-- Name: costratedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.costratedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CostRateDescriptor(CostRateDescriptorId, Id, ChangeVersion)
    SELECT OLD.CostRateDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CostRateDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.costratedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: countrydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.countrydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CountryDescriptor(CountryDescriptorId, Id, ChangeVersion)
    SELECT OLD.CountryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CountryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.countrydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: course_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.course_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Course(CourseCode, EducationOrganizationId, Id, ChangeVersion)
    VALUES (OLD.CourseCode, OLD.EducationOrganizationId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.course_tr_deltrkg() OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.courseattemptresultdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseAttemptResultDescriptor(CourseAttemptResultDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseAttemptResultDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseAttemptResultDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.courseattemptresultdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.coursedefinedbydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseDefinedByDescriptor(CourseDefinedByDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseDefinedByDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseDefinedByDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.coursedefinedbydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.coursegpaapplicabilitydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseGPAApplicabilityDescriptor(CourseGPAApplicabilityDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseGPAApplicabilityDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseGPAApplicabilityDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.coursegpaapplicabilitydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.courseidentificationsystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseIdentificationSystemDescriptor(CourseIdentificationSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseIdentificationSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseIdentificationSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.courseidentificationsystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.courselevelcharacteristicdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseLevelCharacteristicDescriptor(CourseLevelCharacteristicDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseLevelCharacteristicDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseLevelCharacteristicDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.courselevelcharacteristicdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: courseoffering_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.courseoffering_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseOffering(LocalCourseCode, SchoolId, SchoolYear, SessionName, Id, ChangeVersion)
    VALUES (OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SessionName, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.courseoffering_tr_deltrkg() OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.courserepeatcodedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseRepeatCodeDescriptor(CourseRepeatCodeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CourseRepeatCodeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CourseRepeatCodeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.courserepeatcodedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: coursetranscript_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.coursetranscript_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CourseTranscript(CourseAttemptResultDescriptorId, CourseCode, CourseEducationOrganizationId, EducationOrganizationId, SchoolYear, StudentUSI, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.CourseAttemptResultDescriptorId, OLD.CourseCode, OLD.CourseEducationOrganizationId, OLD.EducationOrganizationId, OLD.SchoolYear, OLD.StudentUSI, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.coursetranscript_tr_deltrkg() OWNER TO postgres;

--
-- Name: credential_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.credential_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Credential(CredentialIdentifier, StateOfIssueStateAbbreviationDescriptorId, Id, ChangeVersion)
    VALUES (OLD.CredentialIdentifier, OLD.StateOfIssueStateAbbreviationDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.credential_tr_deltrkg() OWNER TO postgres;

--
-- Name: credentialfielddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.credentialfielddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CredentialFieldDescriptor(CredentialFieldDescriptorId, Id, ChangeVersion)
    SELECT OLD.CredentialFieldDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CredentialFieldDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.credentialfielddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: credentialtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.credentialtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CredentialTypeDescriptor(CredentialTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CredentialTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CredentialTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.credentialtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: creditcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.creditcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CreditCategoryDescriptor(CreditCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.CreditCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CreditCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.creditcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: credittypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.credittypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CreditTypeDescriptor(CreditTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.CreditTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CreditTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.credittypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.cteprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CTEProgramServiceDescriptor(CTEProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.CTEProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CTEProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.cteprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: curriculumuseddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.curriculumuseddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.CurriculumUsedDescriptor(CurriculumUsedDescriptorId, Id, ChangeVersion)
    SELECT OLD.CurriculumUsedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CurriculumUsedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.curriculumuseddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: deliverymethoddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.deliverymethoddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DeliveryMethodDescriptor(DeliveryMethodDescriptorId, Id, ChangeVersion)
    SELECT OLD.DeliveryMethodDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DeliveryMethodDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.deliverymethoddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: descriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.descriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Descriptor(DescriptorId, Id, ChangeVersion)
    VALUES (OLD.DescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.descriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: diagnosisdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.diagnosisdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DiagnosisDescriptor(DiagnosisDescriptorId, Id, ChangeVersion)
    SELECT OLD.DiagnosisDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DiagnosisDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.diagnosisdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: diplomaleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.diplomaleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DiplomaLevelDescriptor(DiplomaLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.DiplomaLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DiplomaLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.diplomaleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: diplomatypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.diplomatypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DiplomaTypeDescriptor(DiplomaTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.DiplomaTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DiplomaTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.diplomatypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disabilitydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disabilitydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisabilityDescriptor(DisabilityDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisabilityDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisabilityDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disabilitydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disabilitydesignationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisabilityDesignationDescriptor(DisabilityDesignationDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisabilityDesignationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisabilityDesignationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disabilitydesignationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisabilityDeterminationSourceTypeDescriptor(DisabilityDeterminationSourceTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisabilityDeterminationSourceTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisabilityDeterminationSourceTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disciplineaction_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disciplineaction_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisciplineAction(DisciplineActionIdentifier, DisciplineDate, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.DisciplineActionIdentifier, OLD.DisciplineDate, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disciplineaction_tr_deltrkg() OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisciplineActionLengthDifferenceReasonDescriptor(DisciplineActionLengthDifferenceReasonDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisciplineActionLengthDifferenceReasonDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisciplineActionLengthDifferenceReasonDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disciplinedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disciplinedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisciplineDescriptor(DisciplineDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisciplineDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisciplineDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disciplinedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: disciplineincident_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disciplineincident_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisciplineIncident(IncidentIdentifier, SchoolId, Id, ChangeVersion)
    VALUES (OLD.IncidentIdentifier, OLD.SchoolId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disciplineincident_tr_deltrkg() OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.DisciplineIncidentParticipationCodeDescriptor(DisciplineIncidentParticipationCodeDescriptorId, Id, ChangeVersion)
    SELECT OLD.DisciplineIncidentParticipationCodeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.DisciplineIncidentParticipationCodeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationalenvironmentdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationalEnvironmentDescriptor(EducationalEnvironmentDescriptorId, Id, ChangeVersion)
    SELECT OLD.EducationalEnvironmentDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EducationalEnvironmentDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationalenvironmentdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationcontent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationcontent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationContent(ContentIdentifier, Id, ChangeVersion)
    VALUES (OLD.ContentIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationcontent_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganization_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganization_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganization(EducationOrganizationId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganization_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationCategoryDescriptor(EducationOrganizationCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.EducationOrganizationCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EducationOrganizationCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationIdentificationSystemDescriptor(EducationOrganizationIdentificationSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.EducationOrganizationIdentificationSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EducationOrganizationIdentificationSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescription_e670ae_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationinterventionprescription_e670ae_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationInterventionPrescriptionAssociation(EducationOrganizationId, InterventionPrescriptionEducationOrganizationId, InterventionPrescriptionIdentificationCode, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.InterventionPrescriptionEducationOrganizationId, OLD.InterventionPrescriptionIdentificationCode, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationinterventionprescription_e670ae_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationnetwork_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationnetwork_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationNetwork(EducationOrganizationNetworkId, Id, ChangeVersion)
    SELECT OLD.EducationOrganizationNetworkId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.EducationOrganizationNetworkId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationnetwork_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationnetworkassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationNetworkAssociation(EducationOrganizationNetworkId, MemberEducationOrganizationId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationNetworkId, OLD.MemberEducationOrganizationId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationnetworkassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationorganizationpeerassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationOrganizationPeerAssociation(EducationOrganizationId, PeerEducationOrganizationId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.PeerEducationOrganizationId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationorganizationpeerassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationplandescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationplandescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationPlanDescriptor(EducationPlanDescriptorId, Id, ChangeVersion)
    SELECT OLD.EducationPlanDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EducationPlanDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationplandescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educationservicecenter_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.educationservicecenter_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EducationServiceCenter(EducationServiceCenterId, Id, ChangeVersion)
    SELECT OLD.EducationServiceCenterId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.EducationServiceCenterId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.educationservicecenter_tr_deltrkg() OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.electronicmailtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ElectronicMailTypeDescriptor(ElectronicMailTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.ElectronicMailTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ElectronicMailTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.electronicmailtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: employmentstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.employmentstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EmploymentStatusDescriptor(EmploymentStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.EmploymentStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EmploymentStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.employmentstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.entrygradelevelreasondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EntryGradeLevelReasonDescriptor(EntryGradeLevelReasonDescriptorId, Id, ChangeVersion)
    SELECT OLD.EntryGradeLevelReasonDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EntryGradeLevelReasonDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.entrygradelevelreasondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: entrytypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.entrytypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EntryTypeDescriptor(EntryTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.EntryTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EntryTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.entrytypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.eventcircumstancedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.EventCircumstanceDescriptor(EventCircumstanceDescriptorId, Id, ChangeVersion)
    SELECT OLD.EventCircumstanceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EventCircumstanceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.eventcircumstancedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.exitwithdrawtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ExitWithdrawTypeDescriptor(ExitWithdrawTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.ExitWithdrawTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ExitWithdrawTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.exitwithdrawtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: feederschoolassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.feederschoolassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.FeederSchoolAssociation(BeginDate, FeederSchoolId, SchoolId, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.FeederSchoolId, OLD.SchoolId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.feederschoolassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: generalstudentprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.generalstudentprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GeneralStudentProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.generalstudentprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: grade_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.grade_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Grade(BeginDate, GradeTypeDescriptorId, GradingPeriodDescriptorId, GradingPeriodSchoolYear, GradingPeriodSequence, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.GradeTypeDescriptorId, OLD.GradingPeriodDescriptorId, OLD.GradingPeriodSchoolYear, OLD.GradingPeriodSequence, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.grade_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradebookentry_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradebookentry_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradebookEntry(DateAssigned, GradebookEntryTitle, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, Id, ChangeVersion)
    VALUES (OLD.DateAssigned, OLD.GradebookEntryTitle, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradebookentry_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradebookentrytypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradebookEntryTypeDescriptor(GradebookEntryTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.GradebookEntryTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GradebookEntryTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradebookentrytypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradeleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradeleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradeLevelDescriptor(GradeLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.GradeLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GradeLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradeleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradepointaveragetypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradePointAverageTypeDescriptor(GradePointAverageTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.GradePointAverageTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GradePointAverageTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradepointaveragetypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradetypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradetypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradeTypeDescriptor(GradeTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.GradeTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GradeTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradetypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradingperiod_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradingperiod_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradingPeriod(GradingPeriodDescriptorId, PeriodSequence, SchoolId, SchoolYear, Id, ChangeVersion)
    VALUES (OLD.GradingPeriodDescriptorId, OLD.PeriodSequence, OLD.SchoolId, OLD.SchoolYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradingperiod_tr_deltrkg() OWNER TO postgres;

--
-- Name: gradingperioddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gradingperioddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GradingPeriodDescriptor(GradingPeriodDescriptorId, Id, ChangeVersion)
    SELECT OLD.GradingPeriodDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GradingPeriodDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gradingperioddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: graduationplan_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.graduationplan_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GraduationPlan(EducationOrganizationId, GraduationPlanTypeDescriptorId, GraduationSchoolYear, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.GraduationPlanTypeDescriptorId, OLD.GraduationSchoolYear, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.graduationplan_tr_deltrkg() OWNER TO postgres;

--
-- Name: graduationplantypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.graduationplantypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GraduationPlanTypeDescriptor(GraduationPlanTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.GraduationPlanTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GraduationPlanTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.graduationplantypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.GunFreeSchoolsActReportingStatusDescriptor(GunFreeSchoolsActReportingStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.GunFreeSchoolsActReportingStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GunFreeSchoolsActReportingStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.HomelessPrimaryNighttimeResidenceDescriptor(HomelessPrimaryNighttimeResidenceDescriptorId, Id, ChangeVersion)
    SELECT OLD.HomelessPrimaryNighttimeResidenceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.HomelessPrimaryNighttimeResidenceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.homelessprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.HomelessProgramServiceDescriptor(HomelessProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.HomelessProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.HomelessProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.homelessprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.identificationdocumentusedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.IdentificationDocumentUseDescriptor(IdentificationDocumentUseDescriptorId, Id, ChangeVersion)
    SELECT OLD.IdentificationDocumentUseDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.IdentificationDocumentUseDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.identificationdocumentusedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: incidentlocationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.incidentlocationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.IncidentLocationDescriptor(IncidentLocationDescriptorId, Id, ChangeVersion)
    SELECT OLD.IncidentLocationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.IncidentLocationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.incidentlocationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: indicatordescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.indicatordescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.IndicatorDescriptor(IndicatorDescriptorId, Id, ChangeVersion)
    SELECT OLD.IndicatorDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.IndicatorDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.indicatordescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.indicatorgroupdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.IndicatorGroupDescriptor(IndicatorGroupDescriptorId, Id, ChangeVersion)
    SELECT OLD.IndicatorGroupDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.IndicatorGroupDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.indicatorgroupdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: indicatorleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.indicatorleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.IndicatorLevelDescriptor(IndicatorLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.IndicatorLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.IndicatorLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.indicatorleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.institutiontelephonenumbertypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InstitutionTelephoneNumberTypeDescriptor(InstitutionTelephoneNumberTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.InstitutionTelephoneNumberTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InstitutionTelephoneNumberTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.institutiontelephonenumbertypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: interactivitystyledescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.interactivitystyledescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InteractivityStyleDescriptor(InteractivityStyleDescriptorId, Id, ChangeVersion)
    SELECT OLD.InteractivityStyleDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InteractivityStyleDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.interactivitystyledescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: internetaccessdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.internetaccessdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InternetAccessDescriptor(InternetAccessDescriptorId, Id, ChangeVersion)
    SELECT OLD.InternetAccessDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InternetAccessDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.internetaccessdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.internetaccesstypeinresidencedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InternetAccessTypeInResidenceDescriptor(InternetAccessTypeInResidenceDescriptorId, Id, ChangeVersion)
    SELECT OLD.InternetAccessTypeInResidenceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InternetAccessTypeInResidenceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.internetaccesstypeinresidencedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.internetperformanceinresidencedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InternetPerformanceInResidenceDescriptor(InternetPerformanceInResidenceDescriptorId, Id, ChangeVersion)
    SELECT OLD.InternetPerformanceInResidenceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InternetPerformanceInResidenceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.internetperformanceinresidencedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: intervention_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.intervention_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Intervention(EducationOrganizationId, InterventionIdentificationCode, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.InterventionIdentificationCode, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.intervention_tr_deltrkg() OWNER TO postgres;

--
-- Name: interventionclassdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.interventionclassdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InterventionClassDescriptor(InterventionClassDescriptorId, Id, ChangeVersion)
    SELECT OLD.InterventionClassDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InterventionClassDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.interventionclassdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.interventioneffectivenessratingdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InterventionEffectivenessRatingDescriptor(InterventionEffectivenessRatingDescriptorId, Id, ChangeVersion)
    SELECT OLD.InterventionEffectivenessRatingDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.InterventionEffectivenessRatingDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.interventioneffectivenessratingdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: interventionprescription_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.interventionprescription_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InterventionPrescription(EducationOrganizationId, InterventionPrescriptionIdentificationCode, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.InterventionPrescriptionIdentificationCode, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.interventionprescription_tr_deltrkg() OWNER TO postgres;

--
-- Name: interventionstudy_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.interventionstudy_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.InterventionStudy(EducationOrganizationId, InterventionStudyIdentificationCode, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.InterventionStudyIdentificationCode, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.interventionstudy_tr_deltrkg() OWNER TO postgres;

--
-- Name: languagedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.languagedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LanguageDescriptor(LanguageDescriptorId, Id, ChangeVersion)
    SELECT OLD.LanguageDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LanguageDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.languagedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.languageinstructionprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LanguageInstructionProgramServiceDescriptor(LanguageInstructionProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.LanguageInstructionProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LanguageInstructionProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.languageinstructionprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: languageusedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.languageusedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LanguageUseDescriptor(LanguageUseDescriptorId, Id, ChangeVersion)
    SELECT OLD.LanguageUseDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LanguageUseDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.languageusedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningobjective_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningobjective_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningObjective(LearningObjectiveId, Namespace, Id, ChangeVersion)
    VALUES (OLD.LearningObjectiveId, OLD.Namespace, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningobjective_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningstandard_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningstandard_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningStandard(LearningStandardId, Id, ChangeVersion)
    VALUES (OLD.LearningStandardId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningstandard_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningstandardcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningStandardCategoryDescriptor(LearningStandardCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.LearningStandardCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LearningStandardCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningstandardcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningstandardequivalenceassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningStandardEquivalenceAssociation(Namespace, SourceLearningStandardId, TargetLearningStandardId, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.SourceLearningStandardId, OLD.TargetLearningStandardId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningstandardequivalenceassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningStandardEquivalenceStrengthDescriptor(LearningStandardEquivalenceStrengthDescriptorId, Id, ChangeVersion)
    SELECT OLD.LearningStandardEquivalenceStrengthDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LearningStandardEquivalenceStrengthDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.learningstandardscopedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LearningStandardScopeDescriptor(LearningStandardScopeDescriptorId, Id, ChangeVersion)
    SELECT OLD.LearningStandardScopeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LearningStandardScopeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.learningstandardscopedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: levelofeducationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.levelofeducationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LevelOfEducationDescriptor(LevelOfEducationDescriptorId, Id, ChangeVersion)
    SELECT OLD.LevelOfEducationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LevelOfEducationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.levelofeducationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: licensestatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.licensestatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LicenseStatusDescriptor(LicenseStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.LicenseStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LicenseStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.licensestatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: licensetypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.licensetypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LicenseTypeDescriptor(LicenseTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.LicenseTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LicenseTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.licensetypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.limitedenglishproficiencydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LimitedEnglishProficiencyDescriptor(LimitedEnglishProficiencyDescriptorId, Id, ChangeVersion)
    SELECT OLD.LimitedEnglishProficiencyDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LimitedEnglishProficiencyDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.limitedenglishproficiencydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: localedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.localedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LocaleDescriptor(LocaleDescriptorId, Id, ChangeVersion)
    SELECT OLD.LocaleDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LocaleDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.localedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: localeducationagency_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.localeducationagency_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LocalEducationAgency(LocalEducationAgencyId, Id, ChangeVersion)
    SELECT OLD.LocalEducationAgencyId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.LocalEducationAgencyId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.localeducationagency_tr_deltrkg() OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.localeducationagencycategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.LocalEducationAgencyCategoryDescriptor(LocalEducationAgencyCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.LocalEducationAgencyCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.LocalEducationAgencyCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.localeducationagencycategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: location_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.location_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Location(ClassroomIdentificationCode, SchoolId, Id, ChangeVersion)
    VALUES (OLD.ClassroomIdentificationCode, OLD.SchoolId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.location_tr_deltrkg() OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.MagnetSpecialProgramEmphasisSchoolDescriptor(MagnetSpecialProgramEmphasisSchoolDescriptorId, Id, ChangeVersion)
    SELECT OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.mediumofinstructiondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.MediumOfInstructionDescriptor(MediumOfInstructionDescriptorId, Id, ChangeVersion)
    SELECT OLD.MediumOfInstructionDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.MediumOfInstructionDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.mediumofinstructiondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.methodcreditearneddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.MethodCreditEarnedDescriptor(MethodCreditEarnedDescriptorId, Id, ChangeVersion)
    SELECT OLD.MethodCreditEarnedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.MethodCreditEarnedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.methodcreditearneddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.migranteducationprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.MigrantEducationProgramServiceDescriptor(MigrantEducationProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.MigrantEducationProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.MigrantEducationProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.migranteducationprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: monitoreddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.monitoreddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.MonitoredDescriptor(MonitoredDescriptorId, Id, ChangeVersion)
    SELECT OLD.MonitoredDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.MonitoredDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.monitoreddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.neglectedordelinquentprogramdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.NeglectedOrDelinquentProgramDescriptor(NeglectedOrDelinquentProgramDescriptorId, Id, ChangeVersion)
    SELECT OLD.NeglectedOrDelinquentProgramDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.NeglectedOrDelinquentProgramDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.neglectedordelinquentprogramdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.NeglectedOrDelinquentProgramServiceDescriptor(NeglectedOrDelinquentProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.NeglectedOrDelinquentProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.NeglectedOrDelinquentProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: networkpurposedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.networkpurposedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.NetworkPurposeDescriptor(NetworkPurposeDescriptorId, Id, ChangeVersion)
    SELECT OLD.NetworkPurposeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.NetworkPurposeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.networkpurposedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: objectiveassessment_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.objectiveassessment_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ObjectiveAssessment(AssessmentIdentifier, IdentificationCode, Namespace, Id, ChangeVersion)
    VALUES (OLD.AssessmentIdentifier, OLD.IdentificationCode, OLD.Namespace, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.objectiveassessment_tr_deltrkg() OWNER TO postgres;

--
-- Name: oldethnicitydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.oldethnicitydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.OldEthnicityDescriptor(OldEthnicityDescriptorId, Id, ChangeVersion)
    SELECT OLD.OldEthnicityDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.OldEthnicityDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.oldethnicitydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: openstaffposition_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.openstaffposition_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.OpenStaffPosition(EducationOrganizationId, RequisitionNumber, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.RequisitionNumber, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.openstaffposition_tr_deltrkg() OWNER TO postgres;

--
-- Name: operationalstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.operationalstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.OperationalStatusDescriptor(OperationalStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.OperationalStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.OperationalStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.operationalstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: organizationdepartment_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.organizationdepartment_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.OrganizationDepartment(OrganizationDepartmentId, Id, ChangeVersion)
    SELECT OLD.OrganizationDepartmentId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.OrganizationDepartmentId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.organizationdepartment_tr_deltrkg() OWNER TO postgres;

--
-- Name: othernametypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.othernametypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.OtherNameTypeDescriptor(OtherNameTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.OtherNameTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.OtherNameTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.othernametypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: parent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.parent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Parent(ParentUSI, Id, ChangeVersion)
    VALUES (OLD.ParentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.parent_tr_deltrkg() OWNER TO postgres;

--
-- Name: participationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.participationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ParticipationDescriptor(ParticipationDescriptorId, Id, ChangeVersion)
    SELECT OLD.ParticipationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ParticipationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.participationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: participationstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.participationstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ParticipationStatusDescriptor(ParticipationStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.ParticipationStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ParticipationStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.participationstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: payroll_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.payroll_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Payroll(AccountIdentifier, AsOfDate, EducationOrganizationId, FiscalYear, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.AccountIdentifier, OLD.AsOfDate, OLD.EducationOrganizationId, OLD.FiscalYear, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.payroll_tr_deltrkg() OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.performancebaseconversiondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PerformanceBaseConversionDescriptor(PerformanceBaseConversionDescriptorId, Id, ChangeVersion)
    SELECT OLD.PerformanceBaseConversionDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PerformanceBaseConversionDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.performancebaseconversiondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: performanceleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.performanceleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PerformanceLevelDescriptor(PerformanceLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.PerformanceLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PerformanceLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.performanceleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: person_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.person_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Person(PersonId, SourceSystemDescriptorId, Id, ChangeVersion)
    VALUES (OLD.PersonId, OLD.SourceSystemDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.person_tr_deltrkg() OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.personalinformationverificationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PersonalInformationVerificationDescriptor(PersonalInformationVerificationDescriptorId, Id, ChangeVersion)
    SELECT OLD.PersonalInformationVerificationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PersonalInformationVerificationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.personalinformationverificationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: platformtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.platformtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PlatformTypeDescriptor(PlatformTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.PlatformTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PlatformTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.platformtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: populationserveddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.populationserveddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PopulationServedDescriptor(PopulationServedDescriptorId, Id, ChangeVersion)
    SELECT OLD.PopulationServedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PopulationServedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.populationserveddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: postingresultdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.postingresultdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PostingResultDescriptor(PostingResultDescriptorId, Id, ChangeVersion)
    SELECT OLD.PostingResultDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PostingResultDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.postingresultdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: postsecondaryevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.postsecondaryevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PostSecondaryEvent(EventDate, PostSecondaryEventCategoryDescriptorId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.EventDate, OLD.PostSecondaryEventCategoryDescriptorId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.postsecondaryevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.postsecondaryeventcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PostSecondaryEventCategoryDescriptor(PostSecondaryEventCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.PostSecondaryEventCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PostSecondaryEventCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.postsecondaryeventcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: postsecondaryinstitution_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.postsecondaryinstitution_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PostSecondaryInstitution(PostSecondaryInstitutionId, Id, ChangeVersion)
    SELECT OLD.PostSecondaryInstitutionId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.PostSecondaryInstitutionId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.postsecondaryinstitution_tr_deltrkg() OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PostSecondaryInstitutionLevelDescriptor(PostSecondaryInstitutionLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.PostSecondaryInstitutionLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PostSecondaryInstitutionLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.primarylearningdeviceaccessdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PrimaryLearningDeviceAccessDescriptor(PrimaryLearningDeviceAccessDescriptorId, Id, ChangeVersion)
    SELECT OLD.PrimaryLearningDeviceAccessDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PrimaryLearningDeviceAccessDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.primarylearningdeviceaccessdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor(PrimaryLearningDeviceAwayFromSchoolDescriptorId, Id, ChangeVersion)
    SELECT OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.primarylearningdeviceproviderdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PrimaryLearningDeviceProviderDescriptor(PrimaryLearningDeviceProviderDescriptorId, Id, ChangeVersion)
    SELECT OLD.PrimaryLearningDeviceProviderDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PrimaryLearningDeviceProviderDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.primarylearningdeviceproviderdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: proficiencydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.proficiencydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProficiencyDescriptor(ProficiencyDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProficiencyDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProficiencyDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.proficiencydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: program_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.program_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Program(EducationOrganizationId, ProgramName, ProgramTypeDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.program_tr_deltrkg() OWNER TO postgres;

--
-- Name: programassignmentdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.programassignmentdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgramAssignmentDescriptor(ProgramAssignmentDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgramAssignmentDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgramAssignmentDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.programassignmentdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.programcharacteristicdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgramCharacteristicDescriptor(ProgramCharacteristicDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgramCharacteristicDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgramCharacteristicDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.programcharacteristicdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: programsponsordescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.programsponsordescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgramSponsorDescriptor(ProgramSponsorDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgramSponsorDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgramSponsorDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.programsponsordescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: programtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.programtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgramTypeDescriptor(ProgramTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgramTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgramTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.programtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: progressdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.progressdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgressDescriptor(ProgressDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgressDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgressDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.progressdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: progressleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.progressleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProgressLevelDescriptor(ProgressLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProgressLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProgressLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.progressleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: providercategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.providercategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProviderCategoryDescriptor(ProviderCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProviderCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProviderCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.providercategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.providerprofitabilitydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProviderProfitabilityDescriptor(ProviderProfitabilityDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProviderProfitabilityDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProviderProfitabilityDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.providerprofitabilitydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: providerstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.providerstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ProviderStatusDescriptor(ProviderStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.ProviderStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ProviderStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.providerstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: publicationstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.publicationstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.PublicationStatusDescriptor(PublicationStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.PublicationStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PublicationStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.publicationstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: questionformdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.questionformdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.QuestionFormDescriptor(QuestionFormDescriptorId, Id, ChangeVersion)
    SELECT OLD.QuestionFormDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.QuestionFormDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.questionformdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: racedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.racedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RaceDescriptor(RaceDescriptorId, Id, ChangeVersion)
    SELECT OLD.RaceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RaceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.racedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: reasonexiteddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.reasonexiteddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ReasonExitedDescriptor(ReasonExitedDescriptorId, Id, ChangeVersion)
    SELECT OLD.ReasonExitedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ReasonExitedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.reasonexiteddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.reasonnottesteddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ReasonNotTestedDescriptor(ReasonNotTestedDescriptorId, Id, ChangeVersion)
    SELECT OLD.ReasonNotTestedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ReasonNotTestedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.reasonnottesteddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: recognitiontypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.recognitiontypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RecognitionTypeDescriptor(RecognitionTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.RecognitionTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RecognitionTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.recognitiontypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: relationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.relationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RelationDescriptor(RelationDescriptorId, Id, ChangeVersion)
    SELECT OLD.RelationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RelationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.relationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.repeatidentifierdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RepeatIdentifierDescriptor(RepeatIdentifierDescriptorId, Id, ChangeVersion)
    SELECT OLD.RepeatIdentifierDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RepeatIdentifierDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.repeatidentifierdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: reportcard_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.reportcard_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ReportCard(EducationOrganizationId, GradingPeriodDescriptorId, GradingPeriodSchoolId, GradingPeriodSchoolYear, GradingPeriodSequence, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.GradingPeriodDescriptorId, OLD.GradingPeriodSchoolId, OLD.GradingPeriodSchoolYear, OLD.GradingPeriodSequence, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.reportcard_tr_deltrkg() OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.reporterdescriptiondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ReporterDescriptionDescriptor(ReporterDescriptionDescriptorId, Id, ChangeVersion)
    SELECT OLD.ReporterDescriptionDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ReporterDescriptionDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.reporterdescriptiondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: residencystatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.residencystatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ResidencyStatusDescriptor(ResidencyStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.ResidencyStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ResidencyStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.residencystatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: responseindicatordescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.responseindicatordescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ResponseIndicatorDescriptor(ResponseIndicatorDescriptorId, Id, ChangeVersion)
    SELECT OLD.ResponseIndicatorDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ResponseIndicatorDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.responseindicatordescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: responsibilitydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.responsibilitydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ResponsibilityDescriptor(ResponsibilityDescriptorId, Id, ChangeVersion)
    SELECT OLD.ResponsibilityDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ResponsibilityDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.responsibilitydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: restraintevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.restraintevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RestraintEvent(RestraintEventIdentifier, SchoolId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.RestraintEventIdentifier, OLD.SchoolId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.restraintevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.restrainteventreasondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RestraintEventReasonDescriptor(RestraintEventReasonDescriptorId, Id, ChangeVersion)
    SELECT OLD.RestraintEventReasonDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RestraintEventReasonDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.restrainteventreasondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.resultdatatypetypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ResultDatatypeTypeDescriptor(ResultDatatypeTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.ResultDatatypeTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ResultDatatypeTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.resultdatatypetypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: retestindicatordescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.retestindicatordescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.RetestIndicatorDescriptor(RetestIndicatorDescriptorId, Id, ChangeVersion)
    SELECT OLD.RetestIndicatorDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RetestIndicatorDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.retestindicatordescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: school_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.school_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.School(SchoolId, Id, ChangeVersion)
    SELECT OLD.SchoolId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.SchoolId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.school_tr_deltrkg() OWNER TO postgres;

--
-- Name: schoolcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.schoolcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SchoolCategoryDescriptor(SchoolCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.SchoolCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SchoolCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.schoolcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SchoolChoiceImplementStatusDescriptor(SchoolChoiceImplementStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.SchoolChoiceImplementStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SchoolChoiceImplementStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SchoolFoodServiceProgramServiceDescriptor(SchoolFoodServiceProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.SchoolFoodServiceProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SchoolFoodServiceProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: schooltypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.schooltypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SchoolTypeDescriptor(SchoolTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.SchoolTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SchoolTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.schooltypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: section_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.section_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Section(LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, Id, ChangeVersion)
    VALUES (OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.section_tr_deltrkg() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.sectionattendancetakenevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SectionAttendanceTakenEvent(CalendarCode, Date, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, Id, ChangeVersion)
    VALUES (OLD.CalendarCode, OLD.Date, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.sectionattendancetakenevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.sectioncharacteristicdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SectionCharacteristicDescriptor(SectionCharacteristicDescriptorId, Id, ChangeVersion)
    SELECT OLD.SectionCharacteristicDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SectionCharacteristicDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.sectioncharacteristicdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: separationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.separationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SeparationDescriptor(SeparationDescriptorId, Id, ChangeVersion)
    SELECT OLD.SeparationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SeparationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.separationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: separationreasondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.separationreasondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SeparationReasonDescriptor(SeparationReasonDescriptorId, Id, ChangeVersion)
    SELECT OLD.SeparationReasonDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SeparationReasonDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.separationreasondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: servicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.servicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.ServiceDescriptor(ServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.ServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.servicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: session_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.session_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Session(SchoolId, SchoolYear, SessionName, Id, ChangeVersion)
    VALUES (OLD.SchoolId, OLD.SchoolYear, OLD.SessionName, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.session_tr_deltrkg() OWNER TO postgres;

--
-- Name: sexdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.sexdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SexDescriptor(SexDescriptorId, Id, ChangeVersion)
    SELECT OLD.SexDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SexDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.sexdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: sourcesystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.sourcesystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SourceSystemDescriptor(SourceSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.SourceSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SourceSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.sourcesystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.specialeducationprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SpecialEducationProgramServiceDescriptor(SpecialEducationProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.SpecialEducationProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SpecialEducationProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.specialeducationprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.specialeducationsettingdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SpecialEducationSettingDescriptor(SpecialEducationSettingDescriptorId, Id, ChangeVersion)
    SELECT OLD.SpecialEducationSettingDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SpecialEducationSettingDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.specialeducationsettingdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: staff_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staff_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Staff(StaffUSI, Id, ChangeVersion)
    VALUES (OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staff_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffabsenceevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffabsenceevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffAbsenceEvent(AbsenceEventCategoryDescriptorId, EventDate, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.AbsenceEventCategoryDescriptorId, OLD.EventDate, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffabsenceevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffclassificationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffclassificationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffClassificationDescriptor(StaffClassificationDescriptorId, Id, ChangeVersion)
    SELECT OLD.StaffClassificationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StaffClassificationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffclassificationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffcohortassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffcohortassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffCohortAssociation(BeginDate, CohortIdentifier, EducationOrganizationId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.CohortIdentifier, OLD.EducationOrganizationId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffcohortassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffdisciplineincidentassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffDisciplineIncidentAssociation(IncidentIdentifier, SchoolId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.IncidentIdentifier, OLD.SchoolId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffdisciplineincidentassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffeducationorganizationassignmentassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffEducationOrganizationAssignmentAssociation(BeginDate, EducationOrganizationId, StaffClassificationDescriptorId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.EducationOrganizationId, OLD.StaffClassificationDescriptorId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffeducationorganizationassignmentassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffeducationorganizationcontactassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffEducationOrganizationContactAssociation(ContactTitle, EducationOrganizationId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.ContactTitle, OLD.EducationOrganizationId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffeducationorganizationcontactassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffeducationorganizationemploymentassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffEducationOrganizationEmploymentAssociation(EducationOrganizationId, EmploymentStatusDescriptorId, HireDate, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EmploymentStatusDescriptorId, OLD.HireDate, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffeducationorganizationemploymentassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffidentificationsystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffIdentificationSystemDescriptor(StaffIdentificationSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.StaffIdentificationSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StaffIdentificationSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffidentificationsystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffleave_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffleave_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffLeave(BeginDate, StaffLeaveEventCategoryDescriptorId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.StaffLeaveEventCategoryDescriptorId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffleave_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffleaveeventcategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffLeaveEventCategoryDescriptor(StaffLeaveEventCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.StaffLeaveEventCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StaffLeaveEventCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffleaveeventcategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffProgramAssociation(BeginDate, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffschoolassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffschoolassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffSchoolAssociation(ProgramAssignmentDescriptorId, SchoolId, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.ProgramAssignmentDescriptorId, OLD.SchoolId, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffschoolassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: staffsectionassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.staffsectionassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StaffSectionAssociation(LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, StaffUSI, Id, ChangeVersion)
    VALUES (OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.StaffUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.staffsectionassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.stateabbreviationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StateAbbreviationDescriptor(StateAbbreviationDescriptorId, Id, ChangeVersion)
    SELECT OLD.StateAbbreviationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StateAbbreviationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.stateabbreviationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: stateeducationagency_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.stateeducationagency_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StateEducationAgency(StateEducationAgencyId, Id, ChangeVersion)
    SELECT OLD.StateEducationAgencyId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.EducationOrganization WHERE EducationOrganizationId = OLD.StateEducationAgencyId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.stateeducationagency_tr_deltrkg() OWNER TO postgres;

--
-- Name: student_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.student_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Student(StudentUSI, Id, ChangeVersion)
    VALUES (OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.student_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentacademicrecord_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentacademicrecord_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentAcademicRecord(EducationOrganizationId, SchoolYear, StudentUSI, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.SchoolYear, OLD.StudentUSI, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentacademicrecord_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentassessment_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentassessment_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentAssessment(AssessmentIdentifier, Namespace, StudentAssessmentIdentifier, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AssessmentIdentifier, OLD.Namespace, OLD.StudentAssessmentIdentifier, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentassessment_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentcharacteristicdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentCharacteristicDescriptor(StudentCharacteristicDescriptorId, Id, ChangeVersion)
    SELECT OLD.StudentCharacteristicDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StudentCharacteristicDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentcharacteristicdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentcohortassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentcohortassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentCohortAssociation(BeginDate, CohortIdentifier, EducationOrganizationId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.CohortIdentifier, OLD.EducationOrganizationId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentcohortassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentcompetencyobjective_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentcompetencyobjective_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentCompetencyObjective(GradingPeriodDescriptorId, GradingPeriodSchoolId, GradingPeriodSchoolYear, GradingPeriodSequence, Objective, ObjectiveEducationOrganizationId, ObjectiveGradeLevelDescriptorId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.GradingPeriodDescriptorId, OLD.GradingPeriodSchoolId, OLD.GradingPeriodSchoolYear, OLD.GradingPeriodSequence, OLD.Objective, OLD.ObjectiveEducationOrganizationId, OLD.ObjectiveGradeLevelDescriptorId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentcompetencyobjective_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentcteprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentcteprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentCTEProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentcteprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentdisciplineincidentassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentDisciplineIncidentAssociation(IncidentIdentifier, SchoolId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.IncidentIdentifier, OLD.SchoolId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentdisciplineincidentassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentDisciplineIncidentBehaviorAssociation(BehaviorDescriptorId, IncidentIdentifier, SchoolId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BehaviorDescriptorId, OLD.IncidentIdentifier, OLD.SchoolId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentDisciplineIncidentNonOffenderAssociation(IncidentIdentifier, SchoolId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.IncidentIdentifier, OLD.SchoolId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studenteducationorganizationassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentEducationOrganizationAssociation(EducationOrganizationId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studenteducationorganizationassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityass_42aa64_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studenteducationorganizationresponsibilityass_42aa64_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentEducationOrganizationResponsibilityAssociation(BeginDate, EducationOrganizationId, ResponsibilityDescriptorId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.EducationOrganizationId, OLD.ResponsibilityDescriptorId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studenteducationorganizationresponsibilityass_42aa64_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentgradebookentry_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentgradebookentry_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentGradebookEntry(BeginDate, DateAssigned, GradebookEntryTitle, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.DateAssigned, OLD.GradebookEntryTitle, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentgradebookentry_tr_deltrkg() OWNER TO postgres;

--
-- Name: studenthomelessprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studenthomelessprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentHomelessProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studenthomelessprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentidentificationsystemdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentIdentificationSystemDescriptor(StudentIdentificationSystemDescriptorId, Id, ChangeVersion)
    SELECT OLD.StudentIdentificationSystemDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StudentIdentificationSystemDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentidentificationsystemdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentinterventionassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentinterventionassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentInterventionAssociation(EducationOrganizationId, InterventionIdentificationCode, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.InterventionIdentificationCode, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentinterventionassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentinterventionattendanceevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentInterventionAttendanceEvent(AttendanceEventCategoryDescriptorId, EducationOrganizationId, EventDate, InterventionIdentificationCode, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AttendanceEventCategoryDescriptorId, OLD.EducationOrganizationId, OLD.EventDate, OLD.InterventionIdentificationCode, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentinterventionattendanceevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentlanguageinstructionprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentlanguageinstructionprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentLanguageInstructionProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentlanguageinstructionprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentlearningobjective_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentlearningobjective_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentLearningObjective(GradingPeriodDescriptorId, GradingPeriodSchoolId, GradingPeriodSchoolYear, GradingPeriodSequence, LearningObjectiveId, Namespace, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.GradingPeriodDescriptorId, OLD.GradingPeriodSchoolId, OLD.GradingPeriodSchoolYear, OLD.GradingPeriodSequence, OLD.LearningObjectiveId, OLD.Namespace, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentlearningobjective_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentmigranteducationprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentmigranteducationprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentMigrantEducationProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentmigranteducationprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentneglectedordelinquentprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentneglectedordelinquentprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentNeglectedOrDelinquentProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentneglectedordelinquentprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentparentassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentparentassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentParentAssociation(ParentUSI, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.ParentUSI, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentparentassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentparticipationcodedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentParticipationCodeDescriptor(StudentParticipationCodeDescriptorId, Id, ChangeVersion)
    SELECT OLD.StudentParticipationCodeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.StudentParticipationCodeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentparticipationcodedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentprogramattendanceevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentprogramattendanceevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentProgramAttendanceEvent(AttendanceEventCategoryDescriptorId, EducationOrganizationId, EventDate, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AttendanceEventCategoryDescriptorId, OLD.EducationOrganizationId, OLD.EventDate, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentprogramattendanceevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentschoolassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentschoolassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSchoolAssociation(EntryDate, SchoolId, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.EntryDate, OLD.SchoolId, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentschoolassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentschoolattendanceevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSchoolAttendanceEvent(AttendanceEventCategoryDescriptorId, EventDate, SchoolId, SchoolYear, SessionName, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AttendanceEventCategoryDescriptorId, OLD.EventDate, OLD.SchoolId, OLD.SchoolYear, OLD.SessionName, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentschoolattendanceevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentschoolfoodserviceprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentschoolfoodserviceprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSchoolFoodServiceProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentschoolfoodserviceprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentsectionassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentsectionassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSectionAssociation(BeginDate, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentsectionassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentsectionattendanceevent_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSectionAttendanceEvent(AttendanceEventCategoryDescriptorId, EventDate, LocalCourseCode, SchoolId, SchoolYear, SectionIdentifier, SessionName, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AttendanceEventCategoryDescriptorId, OLD.EventDate, OLD.LocalCourseCode, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentsectionattendanceevent_tr_deltrkg() OWNER TO postgres;

--
-- Name: studentspecialeducationprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studentspecialeducationprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentSpecialEducationProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studentspecialeducationprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: studenttitleipartaprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.studenttitleipartaprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.StudentTitleIPartAProgramAssociation(BeginDate, EducationOrganizationId, ProgramEducationOrganizationId, ProgramName, ProgramTypeDescriptorId, StudentUSI, Id, ChangeVersion)
    SELECT OLD.BeginDate, OLD.EducationOrganizationId, OLD.ProgramEducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.StudentUSI, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.GeneralStudentProgramAssociation WHERE BeginDate = OLD.BeginDate AND EducationOrganizationId = OLD.EducationOrganizationId AND ProgramEducationOrganizationId = OLD.ProgramEducationOrganizationId AND ProgramName = OLD.ProgramName AND ProgramTypeDescriptorId = OLD.ProgramTypeDescriptorId AND StudentUSI = OLD.StudentUSI;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.studenttitleipartaprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: survey_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.survey_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.Survey(Namespace, SurveyIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.SurveyIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.survey_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveycategorydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveycategorydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyCategoryDescriptor(SurveyCategoryDescriptorId, Id, ChangeVersion)
    SELECT OLD.SurveyCategoryDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SurveyCategoryDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveycategorydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveycourseassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveycourseassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyCourseAssociation(CourseCode, EducationOrganizationId, Namespace, SurveyIdentifier, Id, ChangeVersion)
    VALUES (OLD.CourseCode, OLD.EducationOrganizationId, OLD.Namespace, OLD.SurveyIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveycourseassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyLevelDescriptor(SurveyLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.SurveyLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.SurveyLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyProgramAssociation(EducationOrganizationId, Namespace, ProgramName, ProgramTypeDescriptorId, SurveyIdentifier, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.Namespace, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.SurveyIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyquestion_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyquestion_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyQuestion(Namespace, QuestionCode, SurveyIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.QuestionCode, OLD.SurveyIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyquestion_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyquestionresponse_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyquestionresponse_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyQuestionResponse(Namespace, QuestionCode, SurveyIdentifier, SurveyResponseIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.QuestionCode, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyquestionresponse_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyresponse_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyresponse_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyResponse(Namespace, SurveyIdentifier, SurveyResponseIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyresponse_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyResponseEducationOrganizationTargetAssociation(EducationOrganizationId, Namespace, SurveyIdentifier, SurveyResponseIdentifier, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.Namespace, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveyresponsestafftargetassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveyResponseStaffTargetAssociation(Namespace, StaffUSI, SurveyIdentifier, SurveyResponseIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.StaffUSI, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveyresponsestafftargetassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysection_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveysection_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveySection(Namespace, SurveyIdentifier, SurveySectionTitle, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.SurveyIdentifier, OLD.SurveySectionTitle, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveysection_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysectionassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveysectionassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveySectionAssociation(LocalCourseCode, Namespace, SchoolId, SchoolYear, SectionIdentifier, SessionName, SurveyIdentifier, Id, ChangeVersion)
    VALUES (OLD.LocalCourseCode, OLD.Namespace, OLD.SchoolId, OLD.SchoolYear, OLD.SectionIdentifier, OLD.SessionName, OLD.SurveyIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveysectionassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysectionresponse_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveysectionresponse_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveySectionResponse(Namespace, SurveyIdentifier, SurveyResponseIdentifier, SurveySectionTitle, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.SurveySectionTitle, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveysectionresponse_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtar_730be1_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveysectionresponseeducationorganizationtar_730be1_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveySectionResponseEducationOrganizationTargetAssociation(EducationOrganizationId, Namespace, SurveyIdentifier, SurveyResponseIdentifier, SurveySectionTitle, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.Namespace, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.SurveySectionTitle, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveysectionresponseeducationorganizationtar_730be1_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.surveysectionresponsestafftargetassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.SurveySectionResponseStaffTargetAssociation(Namespace, StaffUSI, SurveyIdentifier, SurveyResponseIdentifier, SurveySectionTitle, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.StaffUSI, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.SurveySectionTitle, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.surveysectionresponsestafftargetassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.teachingcredentialbasisdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TeachingCredentialBasisDescriptor(TeachingCredentialBasisDescriptorId, Id, ChangeVersion)
    SELECT OLD.TeachingCredentialBasisDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TeachingCredentialBasisDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.teachingcredentialbasisdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.teachingcredentialdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TeachingCredentialDescriptor(TeachingCredentialDescriptorId, Id, ChangeVersion)
    SELECT OLD.TeachingCredentialDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TeachingCredentialDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.teachingcredentialdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.technicalskillsassessmentdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TechnicalSkillsAssessmentDescriptor(TechnicalSkillsAssessmentDescriptorId, Id, ChangeVersion)
    SELECT OLD.TechnicalSkillsAssessmentDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TechnicalSkillsAssessmentDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.technicalskillsassessmentdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.telephonenumbertypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TelephoneNumberTypeDescriptor(TelephoneNumberTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.TelephoneNumberTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TelephoneNumberTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.telephonenumbertypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: termdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.termdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TermDescriptor(TermDescriptorId, Id, ChangeVersion)
    SELECT OLD.TermDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TermDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.termdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.titleipartaparticipantdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TitleIPartAParticipantDescriptor(TitleIPartAParticipantDescriptorId, Id, ChangeVersion)
    SELECT OLD.TitleIPartAParticipantDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TitleIPartAParticipantDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.titleipartaparticipantdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.titleipartaprogramservicedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TitleIPartAProgramServiceDescriptor(TitleIPartAProgramServiceDescriptorId, Id, ChangeVersion)
    SELECT OLD.TitleIPartAProgramServiceDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TitleIPartAProgramServiceDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.titleipartaprogramservicedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.titleipartaschooldesignationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TitleIPartASchoolDesignationDescriptor(TitleIPartASchoolDesignationDescriptorId, Id, ChangeVersion)
    SELECT OLD.TitleIPartASchoolDesignationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TitleIPartASchoolDesignationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.titleipartaschooldesignationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.tribalaffiliationdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.TribalAffiliationDescriptor(TribalAffiliationDescriptorId, Id, ChangeVersion)
    SELECT OLD.TribalAffiliationDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.TribalAffiliationDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.tribalaffiliationdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: visadescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.visadescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.VisaDescriptor(VisaDescriptorId, Id, ChangeVersion)
    SELECT OLD.VisaDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.VisaDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.visadescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: weapondescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_deletes_edfi.weapondescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_edfi.WeaponDescriptor(WeaponDescriptorId, Id, ChangeVersion)
    SELECT OLD.WeaponDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.WeaponDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_edfi.weapondescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: accreditationstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.accreditationstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.AccreditationStatusDescriptor(AccreditationStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.AccreditationStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AccreditationStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.accreditationstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: aidtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.aidtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.AidTypeDescriptor(AidTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.AidTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.AidTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.aidtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: candidate_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.candidate_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.Candidate(CandidateIdentifier, Id, ChangeVersion)
    VALUES (OLD.CandidateIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.candidate_tr_deltrkg() OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.CandidateEducatorPreparationProgramAssociation(BeginDate, CandidateIdentifier, EducationOrganizationId, ProgramName, ProgramTypeDescriptorId, Id, ChangeVersion)
    VALUES (OLD.BeginDate, OLD.CandidateIdentifier, OLD.EducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: certificationroutedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.certificationroutedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.CertificationRouteDescriptor(CertificationRouteDescriptorId, Id, ChangeVersion)
    SELECT OLD.CertificationRouteDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CertificationRouteDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.certificationroutedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: coteachingstyleobserveddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.coteachingstyleobserveddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.CoteachingStyleObservedDescriptor(CoteachingStyleObservedDescriptorId, Id, ChangeVersion)
    SELECT OLD.CoteachingStyleObservedDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CoteachingStyleObservedDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.coteachingstyleobserveddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: credentialstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.credentialstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.CredentialStatusDescriptor(CredentialStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.CredentialStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.CredentialStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.credentialstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: educatorpreparationprogram_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.educatorpreparationprogram_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EducatorPreparationProgram(EducationOrganizationId, ProgramName, ProgramTypeDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.ProgramName, OLD.ProgramTypeDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.educatorpreparationprogram_tr_deltrkg() OWNER TO postgres;

--
-- Name: educatorroledescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.educatorroledescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EducatorRoleDescriptor(EducatorRoleDescriptorId, Id, ChangeVersion)
    SELECT OLD.EducatorRoleDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EducatorRoleDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.educatorroledescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: englishlanguageexamdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.englishlanguageexamdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EnglishLanguageExamDescriptor(EnglishLanguageExamDescriptorId, Id, ChangeVersion)
    SELECT OLD.EnglishLanguageExamDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EnglishLanguageExamDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.englishlanguageexamdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: eppprogrampathwaydescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.eppprogrampathwaydescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EPPProgramPathwayDescriptor(EPPProgramPathwayDescriptorId, Id, ChangeVersion)
    SELECT OLD.EPPProgramPathwayDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EPPProgramPathwayDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.eppprogrampathwaydescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.Evaluation(EducationOrganizationId, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, SchoolYear, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.SchoolYear, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluation_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationelement_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationelement_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationElement(EducationOrganizationId, EvaluationElementTitle, EvaluationObjectiveTitle, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, SchoolYear, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationElementTitle, OLD.EvaluationObjectiveTitle, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.SchoolYear, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationelement_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationelementrating_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationelementrating_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationElementRating(EducationOrganizationId, EvaluationDate, EvaluationElementTitle, EvaluationObjectiveTitle, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, PersonId, SchoolYear, SourceSystemDescriptorId, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationDate, OLD.EvaluationElementTitle, OLD.EvaluationObjectiveTitle, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.PersonId, OLD.SchoolYear, OLD.SourceSystemDescriptorId, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationelementrating_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationelementratingleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationelementratingleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationElementRatingLevelDescriptor(EvaluationElementRatingLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.EvaluationElementRatingLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EvaluationElementRatingLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationelementratingleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationobjective_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationobjective_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationObjective(EducationOrganizationId, EvaluationObjectiveTitle, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, SchoolYear, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationObjectiveTitle, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.SchoolYear, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationobjective_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationobjectiverating_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationobjectiverating_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationObjectiveRating(EducationOrganizationId, EvaluationDate, EvaluationObjectiveTitle, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, PersonId, SchoolYear, SourceSystemDescriptorId, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationDate, OLD.EvaluationObjectiveTitle, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.PersonId, OLD.SchoolYear, OLD.SourceSystemDescriptorId, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationobjectiverating_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationperioddescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationperioddescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationPeriodDescriptor(EvaluationPeriodDescriptorId, Id, ChangeVersion)
    SELECT OLD.EvaluationPeriodDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EvaluationPeriodDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationperioddescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationrating_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationrating_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationRating(EducationOrganizationId, EvaluationDate, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, PersonId, SchoolYear, SourceSystemDescriptorId, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationDate, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.PersonId, OLD.SchoolYear, OLD.SourceSystemDescriptorId, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationrating_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationratingleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationratingleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationRatingLevelDescriptor(EvaluationRatingLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.EvaluationRatingLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EvaluationRatingLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationratingleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationratingstatusdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationratingstatusdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationRatingStatusDescriptor(EvaluationRatingStatusDescriptorId, Id, ChangeVersion)
    SELECT OLD.EvaluationRatingStatusDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EvaluationRatingStatusDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationratingstatusdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: evaluationtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.evaluationtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.EvaluationTypeDescriptor(EvaluationTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.EvaluationTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.EvaluationTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.evaluationtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: financialaid_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.financialaid_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.FinancialAid(AidTypeDescriptorId, BeginDate, StudentUSI, Id, ChangeVersion)
    VALUES (OLD.AidTypeDescriptorId, OLD.BeginDate, OLD.StudentUSI, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.financialaid_tr_deltrkg() OWNER TO postgres;

--
-- Name: genderdescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.genderdescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.GenderDescriptor(GenderDescriptorId, Id, ChangeVersion)
    SELECT OLD.GenderDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.GenderDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.genderdescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: objectiveratingleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.objectiveratingleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.ObjectiveRatingLevelDescriptor(ObjectiveRatingLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.ObjectiveRatingLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.ObjectiveRatingLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.objectiveratingleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: performanceevaluation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.performanceevaluation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.PerformanceEvaluation(EducationOrganizationId, EvaluationPeriodDescriptorId, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, SchoolYear, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationPeriodDescriptorId, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.SchoolYear, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.performanceevaluation_tr_deltrkg() OWNER TO postgres;

--
-- Name: performanceevaluationrating_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.performanceevaluationrating_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.PerformanceEvaluationRating(EducationOrganizationId, EvaluationPeriodDescriptorId, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, PersonId, SchoolYear, SourceSystemDescriptorId, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationPeriodDescriptorId, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.PersonId, OLD.SchoolYear, OLD.SourceSystemDescriptorId, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.performanceevaluationrating_tr_deltrkg() OWNER TO postgres;

--
-- Name: performanceevaluationratingleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.performanceevaluationratingleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.PerformanceEvaluationRatingLevelDescriptor(PerformanceEvaluationRatingLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.PerformanceEvaluationRatingLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PerformanceEvaluationRatingLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.performanceevaluationratingleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: performanceevaluationtypedescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.performanceevaluationtypedescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.PerformanceEvaluationTypeDescriptor(PerformanceEvaluationTypeDescriptorId, Id, ChangeVersion)
    SELECT OLD.PerformanceEvaluationTypeDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.PerformanceEvaluationTypeDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.performanceevaluationtypedescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: rubricdimension_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.rubricdimension_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.RubricDimension(EducationOrganizationId, EvaluationElementTitle, EvaluationObjectiveTitle, EvaluationPeriodDescriptorId, EvaluationTitle, PerformanceEvaluationTitle, PerformanceEvaluationTypeDescriptorId, RubricRating, SchoolYear, TermDescriptorId, Id, ChangeVersion)
    VALUES (OLD.EducationOrganizationId, OLD.EvaluationElementTitle, OLD.EvaluationObjectiveTitle, OLD.EvaluationPeriodDescriptorId, OLD.EvaluationTitle, OLD.PerformanceEvaluationTitle, OLD.PerformanceEvaluationTypeDescriptorId, OLD.RubricRating, OLD.SchoolYear, OLD.TermDescriptorId, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.rubricdimension_tr_deltrkg() OWNER TO postgres;

--
-- Name: rubricratingleveldescriptor_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.rubricratingleveldescriptor_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.RubricRatingLevelDescriptor(RubricRatingLevelDescriptorId, Id, ChangeVersion)
    SELECT OLD.RubricRatingLevelDescriptorId, Id, nextval('changes.ChangeVersionSequence')
    FROM edfi.Descriptor WHERE DescriptorId = OLD.RubricRatingLevelDescriptorId;
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.rubricratingleveldescriptor_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.surveyresponsepersontargetassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.SurveyResponsePersonTargetAssociation(Namespace, PersonId, SourceSystemDescriptorId, SurveyIdentifier, SurveyResponseIdentifier, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.PersonId, OLD.SourceSystemDescriptorId, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.surveyresponsepersontargetassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation_tr_deltrkg(); Type: FUNCTION; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_deletes_tpdm.surveysectionresponsepersontargetassociation_tr_deltrkg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_deletes_tpdm.SurveySectionResponsePersonTargetAssociation(Namespace, PersonId, SourceSystemDescriptorId, SurveyIdentifier, SurveyResponseIdentifier, SurveySectionTitle, Id, ChangeVersion)
    VALUES (OLD.Namespace, OLD.PersonId, OLD.SourceSystemDescriptorId, OLD.SurveyIdentifier, OLD.SurveyResponseIdentifier, OLD.SurveySectionTitle, OLD.Id, nextval('changes.ChangeVersionSequence'));
    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_deletes_tpdm.surveysectionresponsepersontargetassociation_tr_deltrkg() OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '5.4';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

SET default_tablespace = '';

--
-- Name: educationorganizationidtoeducationorganizationid; Type: TABLE; Schema: auth; Owner: postgres
--

CREATE TABLE auth.educationorganizationidtoeducationorganizationid (
    sourceeducationorganizationid integer NOT NULL,
    targeteducationorganizationid integer NOT NULL
);


ALTER TABLE auth.educationorganizationidtoeducationorganizationid OWNER TO postgres;

--
-- Name: changeversionsequence; Type: SEQUENCE; Schema: changes; Owner: postgres
--

CREATE SEQUENCE changes.changeversionsequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE changes.changeversionsequence OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparentassociation (
    parentusi integer NOT NULL,
    studentusi integer NOT NULL,
    relationdescriptorid integer,
    primarycontactstatus boolean,
    liveswith boolean,
    emergencycontactstatus boolean,
    contactpriority integer,
    contactrestrictions character varying(250),
    legalguardian boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentparentassociation OWNER TO postgres;

--
-- Name: TABLE studentparentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparentassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentparentassociation.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN studentparentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentparentassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student, primarily used to capture family relationships.';


--
-- Name: COLUMN studentparentassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.primarycontactstatus IS 'Indicator of whether the person is a primary parental contact for the Student.';


--
-- Name: COLUMN studentparentassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.liveswith IS 'Indicator of whether the Student lives with the associated parent.';


--
-- Name: COLUMN studentparentassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the Student.';


--
-- Name: COLUMN studentparentassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentparentassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: COLUMN studentparentassociation.legalguardian; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.legalguardian IS 'Indicator of whether the person is a legal guardian for the Student.';


--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryschool boolean,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    repeatgradeindicator boolean,
    classofschoolyear smallint,
    schoolchoicetransfer boolean,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    residencystatusdescriptorid integer,
    graduationplantypedescriptorid integer,
    educationorganizationid integer,
    graduationschoolyear smallint,
    employedwhileenrolled boolean,
    calendarcode character varying(60),
    schoolyear smallint,
    fulltimeequivalency numeric(5,4),
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the School in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected High School graduation year.';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: educationorganizationidtoparentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoparentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    spa.parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN edfi.studentparentassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY edorgs.sourceeducationorganizationid, spa.parentusi;


ALTER TABLE auth.educationorganizationidtoparentusi OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    positiontitle character varying(100),
    enddate date,
    orderofassignment integer,
    employmenteducationorganizationid integer,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    fulltimeequivalency numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid integer NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    department character varying(60),
    fulltimeequivalency numeric(5,4),
    offerdate date,
    hourlywage money,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the EducationOrganization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation; for example: Voluntary separation, Involuntary separation,
        Mutual agreement
        Other, etc.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment; for example:
        Employment in education
        Employment outside of education
        Retirement
        Family/personal relocation
        Change of assignment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT edorgs.sourceeducationorganizationid,
    seo_assign.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assign ON ((edorgs.targeteducationorganizationid = seo_assign.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seo_empl.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((edorgs.targeteducationorganizationid = seo_empl.educationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    ssa.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
  GROUP BY edorgs.sourceeducationorganizationid, ssa.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: educationorganizationidtostudentusithroughresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
  GROUP BY edorgs.sourceeducationorganizationid, seora.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusithroughresponsibility OWNER TO postgres;

--
-- Name: snapshot; Type: TABLE; Schema: changes; Owner: postgres
--

CREATE TABLE changes.snapshot (
    snapshotidentifier character varying(32) NOT NULL,
    snapshotdatetime timestamp without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE changes.snapshot OWNER TO postgres;

--
-- Name: TABLE snapshot; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON TABLE changes.snapshot IS 'Contains information about a snapshot used to create isolation from ongoing changes for API client synchronization.';


--
-- Name: COLUMN snapshot.snapshotidentifier; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON COLUMN changes.snapshot.snapshotidentifier IS 'The unique identifier of the snapshot.';


--
-- Name: COLUMN snapshot.snapshotdatetime; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON COLUMN changes.snapshot.snapshotdatetime IS 'The date and time that the snapshot was initiated.';


--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid integer NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: account; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.account (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.account OWNER TO postgres;

--
-- Name: TABLE account; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.account IS 'This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN account.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN account.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN account.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN account.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.account.accountname IS 'A descriptive name for the account.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid integer NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating (e.g., School Rating, Safety Score).';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the AccountabilityRating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the AccountabilityRating (e.g., NCLB, AEIS).';


--
-- Name: accountaccountcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountaccountcode (
    accountclassificationdescriptorid integer NOT NULL,
    accountcodenumber character varying(50) NOT NULL,
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.accountaccountcode OWNER TO postgres;

--
-- Name: TABLE accountaccountcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountaccountcode IS 'The set of account codes defined for the education accounting system organized by account code type (e.g., fund, function, object) that map to the account.';


--
-- Name: COLUMN accountaccountcode.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountclassificationdescriptorid IS 'The type of account code associated with the account.';


--
-- Name: COLUMN accountaccountcode.accountcodenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountcodenumber IS 'An account code defined for the education accounting system by the education organization.';


--
-- Name: COLUMN accountaccountcode.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN accountaccountcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountaccountcode.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountaccountcode.fiscalyear IS 'The financial accounting year.';


--
-- Name: accountclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountclassificationdescriptor (
    accountclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accountclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE accountclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountclassificationdescriptor IS 'This descriptor holds the set of account code categories defined for the education accounting system organized by account code type (e.g., fund, function, object).';


--
-- Name: COLUMN accountclassificationdescriptor.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountclassificationdescriptor.accountclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountcode (
    accountclassificationdescriptorid integer NOT NULL,
    accountcodenumber character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountcodedescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountcode OWNER TO postgres;

--
-- Name: TABLE accountcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountcode IS 'The set of account codes defined by an education organization for a fiscal year.';


--
-- Name: COLUMN accountcode.accountclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountclassificationdescriptorid IS 'The type of account code associated with the account.';


--
-- Name: COLUMN accountcode.accountcodenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountcodenumber IS 'An account code defined for the education accounting system by the education organization.';


--
-- Name: COLUMN accountcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountcode.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN accountcode.accountcodedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountcode.accountcodedescription IS 'A description of the account code.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: actual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.actual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.actual OWNER TO postgres;

--
-- Name: TABLE actual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.actual IS 'This financial entity represents the sum of the financial transactions to date relating to a specific account.';


--
-- Name: COLUMN actual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN actual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.asofdate IS 'The date of the reported actual element.';


--
-- Name: COLUMN actual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN actual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN actual.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.actual.amounttodate IS 'Current balance for the account.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL
);


ALTER TABLE edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: TABLE ancestryethnicorigindescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ancestryethnicorigindescriptor IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmenttitle character varying(100) NOT NULL,
    assessmentcategorydescriptorid integer,
    assessmentform character varying(60),
    assessmentversion integer,
    revisiondate date,
    maxrawscore numeric(15,5),
    nomenclature character varying(35),
    assessmentfamily character varying(60),
    educationorganizationid integer,
    adaptiveassessment boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the Assessment.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content. For example:
        Achievement test
        Advanced placement test
        Alternate assessment/grade-level standards
        Attitudinal test
        Cognitive and perceptual skills test
        ...';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for Assessment.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The AssessmentFamily this Assessment is a member of.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    maxrawscore numeric(15,5),
    itemtext character varying(1024),
    correctresponse character varying(20),
    expectedtimeassessed character varying(30),
    nomenclature character varying(35),
    assessmentitemuri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the AssessmentItem. For example:
        Multiple choice
        Analytic
        Prose
        ...';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.correctresponse IS 'The correct response for the AssessmentItem.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the AssessmentItem.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for AssessmentItem.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item (e.g., Multiple Choice, Analytic, Prose).';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'LearningStandard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    responsedescription character varying(1024),
    correctresponse boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    languagedescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the Assessment.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported:
        1. Specification of performance level by minimum and maximum score
        2. Specification of performance level by cut score, using only minimum score
        3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the Assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer,
    minimumscore character varying(35) NOT NULL,
    maximumscore character varying(35) NOT NULL,
    identificationcode character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandard IS 'Score ranges of an assessment associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid IS 'The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).';


--
-- Name: COLUMN assessmentscorerangelearningstandard.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.minimumscore IS 'The minimum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.maximumscore IS 'The maximum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandardlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandardlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandardlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandardlearningstandard IS 'LearningStandard associated with the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the Assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE barriertointernetaccessinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.barriertointernetaccessinresidencedescriptor IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    alternatedayname character varying(20),
    starttime time without time zone,
    endtime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this BellSchedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the BellSchedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the BellSchedule applies.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular BellSchedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the BellSchedule.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular BellSchedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: budget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.budget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.budget OWNER TO postgres;

--
-- Name: TABLE budget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.budget IS 'This financial entity represents the amount of monies allocated to be spent or received by an education organization as related to a specific account.';


--
-- Name: COLUMN budget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN budget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.asofdate IS 'The date of the reported budget element.';


--
-- Name: COLUMN budget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN budget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN budget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.budget.amount IS 'Amount budgeted for the account for this fiscal year.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of Calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the GradeLevel associated with the Calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the GradeLevel associated with the Calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the Calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a Section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    schoolid integer NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    cohortdescription character varying(1024),
    cohorttypedescriptorid integer NOT NULL,
    cohortscopedescriptorid integer,
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the Cohort and its purpose.';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this Cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid integer NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a CommunityOrganization.';


--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid integer NOT NULL,
    communityorganizationid integer,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    providercategorydescriptorid integer NOT NULL,
    schoolindicator boolean,
    licenseexemptindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a CommunityProvider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a CommunityOrganization.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid integer NOT NULL,
    licenseidentifier character varying(20) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    authorizedfacilitycapacity integer,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the CommunityProvider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a CommunityProvider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the CompetencyObjective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the CompetencyObjective.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.contractedstaff OWNER TO postgres;

--
-- Name: TABLE contractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contractedstaff IS 'This financial entity represents the sum of the financial transactions to date for contracted staff. ContractedStaff includes "contractors" or "consultants" who perform services for an agreed upon fee, or an employee of a management service contracted to work on site.';


--
-- Name: COLUMN contractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN contractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.asofdate IS 'The date of the reported contracted staff element.';


--
-- Name: COLUMN contractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN contractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN contractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN contractedstaff.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contractedstaff.amounttodate IS 'Current balance (amount paid to contractor) for account for the fiscal year.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    coursetitle character varying(60) NOT NULL,
    numberofparts integer NOT NULL,
    academicsubjectdescriptorid integer,
    coursedescription character varying(1024),
    timerequiredforcompletion integer,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    coursegpaapplicabilitydescriptorid integer,
    coursedefinedbydescriptorid integer,
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    maximumavailablecreditconversion numeric(9,2),
    careerpathwaydescriptorid integer,
    maxcompletionsforcredit integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.academicsubjectdescriptorid IS 'The intended major subject area of the course.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion.  This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course, for example:
    Pass
    Fail
    Incomplete
    Withdrawn';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    competencyleveldescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningobjective (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningobjective OWNER TO postgres;

--
-- Name: TABLE courselearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningobjective IS 'Learning Objectives to be mastered in the course.';


--
-- Name: COLUMN courselearningobjective.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN courselearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning Standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    localcoursetitle character varying(60),
    instructionaltimeplanned integer,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    curriculumuseddescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    attemptedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3) NOT NULL,
    earnedcredittypedescriptorid integer,
    earnedcreditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    methodcreditearneddescriptorid integer,
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    alternativecoursetitle character varying(60),
    alternativecoursecode character varying(60),
    externaleducationorganizationid integer,
    externaleducationorganizationnameofinstitution character varying(75),
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned (e.g., Classroom, Examination, Transfer).';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.alternativecoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursecode IS 'The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationnameofinstitution IS 'Name of the external institution where the student completed the course; to be used only when the reference ExternalEducationOrganization is not available.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    additionalcredittypedescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course (e.g., dual credit, AP, IB).';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptpartialcoursetranscriptawards (
    awarddate date NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    earnedcredits numeric(9,3) NOT NULL,
    methodcreditearneddescriptorid integer,
    lettergradeearned character varying(20),
    numericgradeearned character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptpartialcoursetranscriptawards OWNER TO postgres;

--
-- Name: TABLE coursetranscriptpartialcoursetranscriptawards; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptpartialcoursetranscriptawards IS 'A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.awarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.awarddate IS 'The date the partial credits and/or grades were awarded or earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course, for example:
        Pass
        Fail
        Incomplete
        Withdrawn.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.earnedcredits IS 'The number of credits a student earned for completing a given course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.lettergradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.numericgradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    credentialfielddescriptorid integer,
    issuancedate date NOT NULL,
    credentialtypedescriptorid integer NOT NULL,
    teachingcredentialdescriptorid integer,
    teachingcredentialbasisdescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the Credential.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialendorsement character varying(255) NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplineactionlength numeric(5,2),
    actualdisciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid integer NOT NULL,
    assignmentschoolid integer,
    receivededucationservicesduringexpulsion boolean,
    iepplacementmeetingindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the DisciplineAction (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.receivededucationservicesduringexpulsion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.receivededucationservicesduringexpulsion IS 'An indication of whether the student received educational services when removed from the regular school program for disciplinary reasons.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentassociation (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentassociation IS 'Reference to the DisciplineIncident associated with the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation IS 'A reference to the behavior(s) by the student that led or contributed to this specific action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate IS 'The date of the DisciplineAction.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    incidentdate date NOT NULL,
    incidenttime time without time zone,
    incidentlocationdescriptorid integer,
    incidentdescription character varying(1024),
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    reportedtolawenforcement boolean,
    casenumber character varying(20),
    incidentcost money,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the DisciplineIncident occurred.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the DisciplineIncident occurred and whether or not it occurred on school, for example:
        On school
        Administrative offices area
        Cafeteria area
        Classroom
        Hallway or stairs
        ...';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the DisciplineIncident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff"); for example:
        Student
        Parent/guardian
        Law enforcement officer
        Nonschool personnel
        Representative of visiting school
        ...';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the DisciplineIncident by name.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the DisciplineIncident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the Discipline Incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    learningresourcemetadatauri character varying(255),
    shortdescription character varying(75),
    description character varying(1024),
    additionalauthorsindicator boolean,
    publisher character varying(50),
    timerequired character varying(30),
    interactivitystyledescriptorid integer,
    contentclassdescriptorid integer,
    userightsurl character varying(255),
    publicationdate date,
    publicationyear smallint,
    version character varying(10),
    learningstandardid character varying(60),
    cost money,
    costratedescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the EducationContent.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the EducationContent.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable-if omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable-if omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    author character varying(100) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid integer NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    shortnameofinstitution character varying(75),
    website character varying(255),
    operationalstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the EducationOrganization.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the EducationOrganization (e.g., active, inactive).';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid integer NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicator (
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    designatedby character varying(60),
    indicatorvalue character varying(60),
    indicatorleveldescriptorid integer,
    indicatorgroupdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicator OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicator IS 'An indicator or metric of an Education Organization.';


--
-- Name: COLUMN educationorganizationindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicator.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.designatedby IS 'The person, organization, or department that defined the metric.';


--
-- Name: COLUMN educationorganizationindicator.indicatorvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorvalue IS 'The value of the indicator or metric. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorleveldescriptorid IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorgroupdescriptorid IS 'The name for a group of indicators.';


--
-- Name: educationorganizationindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicatorperiod (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicatorperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicatorperiod IS 'The time period or as-of date for the indicator.';


--
-- Name: COLUMN educationorganizationindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicatorperiod.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid integer NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the InterventionPrescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the InterventionPrescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid integer NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid integer NOT NULL,
    membereducationorganizationid integer NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the EducationOrganization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the EducationOrganization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the EducationOrganization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid integer NOT NULL,
    peereducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid integer NOT NULL,
    stateeducationagencyid integer
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid integer NOT NULL,
    schoolid integer NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the Student exited the Program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the child left the Program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the Student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date,
    statusenddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationprogramparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    statusbegindate date NOT NULL,
    studentusi integer NOT NULL,
    statusenddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationprogramparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationprogramparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationprogramparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradebookentrytypedescriptorid integer,
    description character varying(1024),
    gradingperioddescriptorid integer,
    periodsequence integer,
    duedate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the GradebookEntry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: gradebookentrylearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningobjective (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningobjective OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningobjective IS 'LearningObjectives associated with the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningobjective.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentrylearningobjective.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradebookentrylearningobjective.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentrylearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN gradebookentrylearningobjective.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentrylearningobjective.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentrylearningobjective.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentrylearningobjective.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningobjective.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningstandard.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradebookentrylearningstandard.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentrylearningstandard.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentrylearningstandard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentrylearningstandard.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentrylearningstandard.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the GradingPeriod.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the GradingPeriod.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the GradingPeriod.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    totalrequiredcreditconversion numeric(9,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the GraduationPlan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: TABLE indicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatordescriptor IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN indicatordescriptor.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatordescriptor.indicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorgroupdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorgroupdescriptor IS 'The name for a group of indicators.';


--
-- Name: COLUMN indicatorgroupdescriptor.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorgroupdescriptor.indicatorgroupdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorleveldescriptor IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN indicatorleveldescriptor.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorleveldescriptor.indicatorleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccesstypeinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccesstypeinresidencedescriptor IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetperformanceinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetperformanceinresidencedescriptor IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    mindosage integer,
    maxdosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the Intervention-if omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the Intervention-if omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the Intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the Intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the Intervention (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the Intervention (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid integer NOT NULL,
    endtime time without time zone NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the Intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the Intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    mindosage integer,
    maxdosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the InterventionPrescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the InterventionPrescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the InterventionPrescription (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the InterventionPrescription (e.g., attendance issue, dropout risk).';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the InterventionPrescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the InterventionPrescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the EducationContent.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the InterventionStudy per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the InterventionStudy.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the InterventionStudy.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjective (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    objective character varying(60) NOT NULL,
    description character varying(1024),
    nomenclature character varying(35),
    successcriteria character varying(150),
    parentlearningobjectiveid character varying(60),
    parentnamespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningobjective OWNER TO postgres;

--
-- Name: TABLE learningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjective IS 'This entity represents identified learning objectives for courses in specific grades.';


--
-- Name: COLUMN learningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN learningobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.objective IS 'The designated title of the LearningObjective.';


--
-- Name: COLUMN learningobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.description IS 'The description of the LearningObjective.';


--
-- Name: COLUMN learningobjective.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.nomenclature IS 'Reflects the specific nomenclature used for the LearningObjective.';


--
-- Name: COLUMN learningobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningObjective.';


--
-- Name: COLUMN learningobjective.parentlearningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentlearningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.parentnamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentnamespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectiveacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectiveacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectiveacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningobjectiveacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectiveacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectiveacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectivecontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandard (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandard IS 'A reference to the type of content standard (e.g., state, national)';


--
-- Name: COLUMN learningobjectivecontentstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN learningobjectivecontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningobjectivecontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningobjectivecontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningobjectivecontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningobjectivecontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningobjectivecontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningobjectivecontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandardauthor (
    author character varying(100) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectivegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivegradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivegradelevel OWNER TO postgres;

--
-- Name: TABLE learningobjectivegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivegradelevel IS 'The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.gradeleveldescriptorid IS 'The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivegradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningobjectivelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivelearningstandard (
    learningobjectiveid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivelearningstandard IS 'LearningStandard(s) included in this objective.';


--
-- Name: COLUMN learningobjectivelearningstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    description character varying(1024) NOT NULL,
    learningstandarditemcode character varying(60),
    uri character varying(255),
    coursetitle character varying(60),
    successcriteria character varying(150),
    parentlearningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandardscopedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official Course Title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningStandard.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the LearningStandard.';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the LearningStandard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the LearningStandard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    author character varying(100) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescriptorid integer,
    learningstandardequivalencestrengthdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is  partial.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardprerequisitelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardprerequisitelearningstandard (
    learningstandardid character varying(60) NOT NULL,
    prerequisitelearningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardprerequisitelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardprerequisitelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardprerequisitelearningstandard IS 'The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.prerequisitelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.prerequisitelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid integer NOT NULL,
    localeducationagencycategorydescriptorid integer NOT NULL,
    charterstatusdescriptorid integer,
    parentlocaleducationagencyid integer,
    educationservicecenterid integer,
    stateeducationagencyid integer
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid integer NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    localeducationagencyid integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    stateassessmentadministrationfunding numeric(5,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The Location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    maxrawscore numeric(15,5),
    percentofassessment numeric(5,4),
    nomenclature character varying(35),
    description character varying(1024),
    parentidentificationcode character varying(60),
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the Assessment that tests this objective.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of ObjectiveAssessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the ObjectiveAssessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningobjective (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    learningobjectivenamespace character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningobjective OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningobjective IS 'References the LearningObjective(s) the ObjectiveAssessment tests.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN objectiveassessmentlearningobjective.learningobjectivenamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.learningobjectivenamespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN objectiveassessmentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningobjective.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'LearningStandard tested by this ObjectiveAssessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the Assessment.';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported:
        1. Specification of performance level by minimum and maximum score
        2. Specification of performance level by cut score, using only minimum score
        3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: oldethnicitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.oldethnicitydescriptor (
    oldethnicitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.oldethnicitydescriptor OWNER TO postgres;

--
-- Name: TABLE oldethnicitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.oldethnicitydescriptor IS 'Previous definition of Ethnicity combining Hispanic/Latino and Race.';


--
-- Name: COLUMN oldethnicitydescriptor.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.oldethnicitydescriptor.oldethnicitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    programassignmentdescriptorid integer,
    dateposted date NOT NULL,
    datepostingremoved date,
    postingresultdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position; for example:
        Probationary
        Contractual
        Substitute/temporary
        Tenured or permanent
        Volunteer/no contract
        ...';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the OpenStaffPosition will be assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education''
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the OpenStaffPosition was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the OpenStaffPosition, for example English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the OpenStaffPosition, for example English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: organizationdepartment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.organizationdepartment (
    organizationdepartmentid integer NOT NULL,
    academicsubjectdescriptorid integer,
    parenteducationorganizationid integer
);


ALTER TABLE edfi.organizationdepartment OWNER TO postgres;

--
-- Name: TABLE organizationdepartment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.organizationdepartment IS 'An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.';


--
-- Name: COLUMN organizationdepartment.organizationdepartmentid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.organizationdepartmentid IS 'The unique identification code for the OrganizationDepartment.';


--
-- Name: COLUMN organizationdepartment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.academicsubjectdescriptorid IS 'The intended major subject area of the department.';


--
-- Name: COLUMN organizationdepartment.parenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.parenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: parent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parent (
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    loginid character varying(60),
    personid character varying(32),
    sourcesystemdescriptorid integer,
    highestcompletedlevelofeducationdescriptorid integer,
    parentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.parent OWNER TO postgres;

--
-- Name: TABLE parent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parent IS 'This entity represents a parent or guardian of a student, such as mother, father, or caretaker.';


--
-- Name: COLUMN parent.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parent.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN parent.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parent.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parent.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parent.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN parent.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN parent.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN parent.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN parent.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN parent.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN parent.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN parent.parentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentuniqueid IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parent_parentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.parent_parentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.parent_parentusi_seq OWNER TO postgres;

--
-- Name: parent_parentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.parent_parentusi_seq OWNED BY edfi.parent.parentusi;


--
-- Name: parentaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddress OWNER TO postgres;

--
-- Name: TABLE parentaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddress IS 'Parent''s address, if different from the student address.';


--
-- Name: COLUMN parentaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN parentaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN parentaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN parentaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN parentaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN parentaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN parentaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: parentaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddressperiod OWNER TO postgres;

--
-- Name: TABLE parentaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN parentaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN parentaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: parentelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentelectronicmail OWNER TO postgres;

--
-- Name: TABLE parentelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN parentelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN parentelectronicmail.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: parentinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentinternationaladdress OWNER TO postgres;

--
-- Name: TABLE parentinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN parentinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentinternationaladdress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN parentinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN parentinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN parentinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: parentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguage (
    languagedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguage OWNER TO postgres;

--
-- Name: TABLE parentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN parentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguage.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguageuse OWNER TO postgres;

--
-- Name: TABLE parentlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentothername (
    othernametypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentothername OWNER TO postgres;

--
-- Name: TABLE parentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN parentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN parentothername.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN parentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: parentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE parentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN parentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN parentpersonalidentificationdocument.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: parenttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parenttelephone (
    parentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parenttelephone OWNER TO postgres;

--
-- Name: TABLE parenttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parenttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN parenttelephone.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parenttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN parenttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN parenttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN parenttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN parenttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: payroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.payroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amounttodate money NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.payroll OWNER TO postgres;

--
-- Name: TABLE payroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.payroll IS 'This financial entity represents the sum of the financial transactions to date for employee compensation. An "employee" who performs services under the direction of the employing institution or agency, is compensated for such services by the employer and is eligible for employee benefits and wage or salary tax withholdings.';


--
-- Name: COLUMN payroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.accountidentifier IS 'The alphanumeric string that identifies the account.';


--
-- Name: COLUMN payroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.asofdate IS 'The date of the reported payroll element.';


--
-- Name: COLUMN payroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN payroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.fiscalyear IS 'The financial accounting year.';


--
-- Name: COLUMN payroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN payroll.amounttodate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.payroll.amounttodate IS 'Current balance (amount paid to employee) for account for the fiscal year.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: person; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.person OWNER TO postgres;

--
-- Name: TABLE person; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.person IS 'This entity represents a human being.';


--
-- Name: COLUMN person.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN person.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The PostSecondaryEvent that is logged (e.g., FAFSA application, college application, college acceptance).';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid integer NOT NULL,
    postsecondaryinstitutionleveldescriptorid integer,
    administrativefundingcontroldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of whether a post-secondary institution''s highest level of offering is a program of 4 years or higher (4 year), 2 but less than 4 years (2 year) or less than 2 years.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    mediumofinstructiondescriptorid integer NOT NULL,
    postsecondaryinstitutionid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceaccessdescriptor IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceawayfromschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceawayfromschooldescriptor IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceproviderdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceproviderdescriptor IS 'The provider of the primary learning device.';


--
-- Name: COLUMN primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningobjective (
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningobjective OWNER TO postgres;

--
-- Name: TABLE programlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningobjective IS 'References the LearningObjective(s) with which the Program is associated.';


--
-- Name: COLUMN programlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN programlearningobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'LearningStandard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: programservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programservice (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programservice OWNER TO postgres;

--
-- Name: TABLE programservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programservice IS 'Defines the services this program provides to students.';


--
-- Name: COLUMN programservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.servicedescriptorid IS 'Defines the services this program provides to students.';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: questionformdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL
);


ALTER TABLE edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: TABLE questionformdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.questionformdescriptor IS 'The form or type of question.';


--
-- Name: COLUMN questionformdescriptor.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.questionformdescriptor.questionformdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested. For example:
    Absent
    Refusal by parent
    Refusal by student
    Medical waiver
    Illness
    Disruptive behavior
    LEP Exempt
    ''...';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    gpagivengradingperiod numeric(18,4),
    gpacumulative numeric(18,4),
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.gpagivengradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpagivengradingperiod IS 'A measure of average performance in all courses taken by an individual for the current grading period.';


--
-- Name: COLUMN reportcard.gpacumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpacumulative IS 'A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the Student for this grading period.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., Exam, Final, Grading Period).';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The Student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardstudentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentlearningobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentlearningobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentlearningobjective IS 'The StudentLearningObjective evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN reportcardstudentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN reportcardstudentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.  For example:
    Nonscorable response
    Ineffective response
    Effective response
    Partial response
    ...';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    eventdate date NOT NULL,
    educationalenvironmentdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the RestraintEvent.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the RestraintEvent.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(20) NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.  For example:
    Primary administration
    First retest
    Second retest
    ...';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid integer NOT NULL,
    schooltypedescriptorid integer,
    charterstatusdescriptorid integer,
    titleipartaschooldesignationdescriptorid integer,
    magnetspecialprogramemphasisschooldescriptorid integer,
    administrativefundingcontroldescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolcategorydescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school. For example: High School, Middle School, and/or Elementary School.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school. For example: High School, Middle School, and/or Elementary School.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sequenceofcourse integer,
    educationalenvironmentdescriptorid integer,
    mediumofinstructiondescriptorid integer,
    populationserveddescriptorid integer,
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    availablecreditconversion numeric(9,2),
    instructionlanguagedescriptorid integer,
    locationschoolid integer,
    locationclassroomidentificationcode character varying(60),
    officialattendanceperiod boolean,
    sectionname character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services; for example:
        Center-based instruction
        Home-based instruction
        Hospital class
        Mainstream
        Residential care and treatment facility
        ...';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters; for example:
        Technology-based instruction in classroom
        Correspondence instruction
        Face-to-face instruction
        Virtual/On-line Distance learning
        Center-based instruction
        ...';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the Section is offered and tailored to; for example:
        Bilingual students
        Remedial education students
        Gifted and talented students
        Career and Technical Education students
        Special education students
        ...';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction, if omitted English is assumed.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a Class Period.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the SectionIdentifier.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the CalendarEvent.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the SectionAttendanceTakenEvent was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    classperiodname character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the Section meets.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course Offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course Offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course Offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course Offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program (e.g., CTE) to which the Section is associated.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A term in the school year, generally a unit of time into which courses are scheduled, instruction occurs and by which credits are awarded. Sessions may be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the Session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the Session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'An descriptor value indicating the term (e.g. ''Semester'', ''Quarter'', etc.).';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: TABLE sourcesystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcesystemdescriptor IS 'This descriptor defines the originating record source system.';


--
-- Name: COLUMN sourcesystemdescriptor.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcesystemdescriptor.sourcesystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    birthdate date,
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    citizenshipstatusdescriptorid integer,
    highestcompletedlevelofeducationdescriptorid integer,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    loginid character varying(60),
    highlyqualifiedteacher boolean,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    staffuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion. For example, this includes:
    1. An "employee" who performs services under the direction of the employing institution or agency is compensated for such services by the employer and is eligible for employee benefits and wage or salary tax withholdings
    2. A "contractor" or "consultant" who performs services for an agreed upon fee or an employee of a management service contracted to work on site
    3. A "volunteer" who performs services on a voluntary and uncompensated basis
    4. An in-kind service provider
    5. An independent contractor or businessperson working at a school site.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.oldethnicitydescriptorid IS 'Previous definition of Ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN staff.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffancestryethnicorigin (
    ancestryethnicorigindescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE staffancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the Staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    credentialidentifier character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident (e.g., Victim, Perpetrator, Witness, Reporter).';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident (e.g., Victim, Perpetrator, Witness, Reporter).';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the EducationOrganization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    addresstypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    begindate date NOT NULL,
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the EducationOrganization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffidentificationsystemdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    languagedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken, for example: Sick, Personal, Vacation.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    othernametypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the Staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    racedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    recognitiontypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the learner for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the School(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the Calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned; for example:
        Regular education
        Title I-Academic
        Title I-Non-Academic
        Special Education
        Bilingual/English as a Second Language.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    classroompositiondescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    highlyqualifiedteacher boolean,
    teacherstudentdatalinkexclusion boolean,
    percentagecontribution numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the Staff member holds in the specific class/section; for example:
        Teacher of Record, Assistant Teacher, Support Teacher, Substitute Teacher...';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the Section. If blank, defaults to the first day of the first grading period for the Section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the Section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid integer NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    schoolyear smallint NOT NULL,
    stateeducationagencyid integer NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    stateeducationagencyid integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    birthdate date NOT NULL,
    birthcity character varying(30),
    birthstateabbreviationdescriptorid integer,
    birthinternationalprovince character varying(150),
    birthcountrydescriptorid integer,
    dateenteredus date,
    multiplebirthstatus boolean,
    birthsexdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN student.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativegradepointsearned numeric(18,4),
    cumulativegradepointaverage numeric(18,4),
    gradevaluequalifier character varying(80),
    projectedgraduationdate date,
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionattemptedcreditconversion numeric(9,2),
    sessiongradepointsearned numeric(18,4),
    sessiongradepointaverage numeric(18,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointsearned IS 'The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointaverage IS 'A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.gradevaluequalifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.gradevaluequalifier IS 'The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student''s Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointsearned IS 'The number of grade points an individual earned for this session.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointaverage IS 'The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    academichonorcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    honorawarddate date,
    honorawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    totalnumberinclass integer NOT NULL,
    percentageranking integer,
    classrankingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    diplomaleveldescriptorid integer,
    ctecompleter boolean,
    diplomadescription character varying(80),
    diplomaawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.
        Minimum high school program
        Recommended high school program
        Distinguished Achievement Program.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the learner for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the learner.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the award expires.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone NOT NULL,
    administrationenddate timestamp without time zone,
    serialnumber character varying(60),
    administrationlanguagedescriptorid integer,
    administrationenvironmentdescriptorid integer,
    retestindicatordescriptorid integer,
    reasonnottesteddescriptorid integer,
    whenassessedgradeleveldescriptorid integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    schoolyear smallint,
    platformtypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was retaken. For example:
        Primary administration
        First retest
        Second retest
        ...';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested. For example:
        Absent
        Refusal by parent
        Refusal by student
        Medical waiver
        Illness
        Disruptive behavior
        LEP Exempt
        ...';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    accommodationdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria. For example:
        Braille
        Enlarged monitor view
        Extra time
        Large Print
        Setting
        Oral Administration
        ...';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria. For example:
        Braille
        Enlarged monitor view
        Extra time
        Large Print
        Setting
        Oral Administration
        ...';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentresponse character varying(60),
    descriptivefeedback character varying(1024),
    responseindicatordescriptorid integer,
    assessmentitemresultdescriptorid integer NOT NULL,
    rawscoreresult numeric(15,5),
    timeassessed character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a learner in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response. For example:
        Nonscorable response
        Ineffective response
        Effective response
        Partial response
        ...';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item. For example:
        Correct
        Incorrect
         Met standard
        ...';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of an individual on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the AssessmentItem.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelmet boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the StudentAssessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelmet; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelmet IS 'Indicator of whether the performance level was met.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an ObjectiveAssessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelmet boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The PerformanceLevel(s) achieved for the ObjectiveAssessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelmet; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelmet IS 'Indicator of whether the performance level was met.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the Assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the Cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the Student was first identified as part of the Cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the Student was removed as part of the Cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The Cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the Student was first identified as part of the Cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the CompetencyObjective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the CompetencyObjective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA).
Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogram (
    begindate date NOT NULL,
    careerpathwaydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cipcode character varying(120),
    primarycteprogramindicator boolean,
    cteprogramcompletionindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogram OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogram IS 'The career cluster representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.careerpathwaydescriptorid IS 'A sequence of courses within an area of interest that is a student''s educational road map to a chosen career.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cipcode IS 'Number and description of the CIP Code associated with the student''s CTEProgram.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.primarycteprogramindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.primarycteprogramindicator IS 'A boolean indicator of whether this CTEProgram, is the student''s primary CTEProgram.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cteprogramcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cteprogramcompletionindicator IS 'A boolean indicator of whether the Student has completed the CTEProgram.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    cipcode character varying(120),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the Service(s) being provided to the Student by the CTE Program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE Program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP Code associated with the student''s CTE Program.';


--
-- Name: studentcteprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studentcteprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studentcteprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    studentparticipationcodedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociation IS 'This association indicates those students who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident;
        for example:
        Victim
        Perpetrator
        Witness
        Reporter.';


--
-- Name: studentdisciplineincidentassociationbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociationbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociationbehavior OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociationbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociationbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociation IS 'This association describes the behavior of students involved in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (
    behaviordescriptorid integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociation IS 'This association indicates those students who were involved and not perpetrators for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire DisciplineIncident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    sexdescriptorid integer NOT NULL,
    profilethumbnail character varying(255),
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    primarylearningdeviceawayfromschooldescriptorid integer,
    primarylearningdeviceaccessdescriptorid integer,
    primarylearningdeviceproviderdescriptorid integer,
    internetaccessinresidence boolean,
    barriertointernetaccessinresidencedescriptorid integer,
    internetaccesstypeinresidencedescriptorid integer,
    internetperformanceinresidencedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the Education Organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s gender as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.oldethnicitydescriptorid IS 'Previous definition of Ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid IS 'The provider of the primary learning device.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccessinresidence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccessinresidence IS 'An indication of whether the student is able to access the internet in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetperformanceinresidencedescriptorid IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationancestryethnicorigin (
    ancestryethnicorigindescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    cohortyeartypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the person moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipat_810575; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid IS 'Reflects important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipation (
    educationorganizationid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date,
    enddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipation IS 'Key programs the student is participating in or receives services from.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.begindate IS 'The date the Student was associated with the Program or service.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.enddate IS 'The date the Program participation ended.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid integer NOT NULL,
    racedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the Student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the Student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    indicatorgroup character varying(200),
    indicator character varying(60) NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'An indicator or metric computed for the student (e.g., at risk).';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    begindate date NOT NULL,
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    datefulfilled date,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    competencyleveldescriptorid integer,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentgradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN studentgradebookentry.gradebookentrytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentrytitle IS 'The name or title of the activity to be recorded in the GradebookEntry.';


--
-- Name: COLUMN studentgradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentgradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentgradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentgradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentgradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The CompetencyLevel assessed for the student for the referenced LearningObjective.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprimarynighttimeresidencedescriptorid integer,
    awaitingfostercare boolean,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the Student by the Homeless Program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Homeless Program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(20),
    cohorteducationorganizationid integer,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the Cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    englishlearnerparticipation boolean,
    dosage integer
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English Learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    monitoreddescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The School Year for which the Assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the Student by the Language Instruction Program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Language Instruction Program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: TABLE studentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.competencyleveldescriptorid IS 'The CompetencyLevel assessed for the student for the referenced LearningObjective.';


--
-- Name: COLUMN studentlearningobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentlearningobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.namespace IS 'Namespace for the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    priorityforservices boolean NOT NULL,
    lastqualifyingmove date NOT NULL,
    continuationofservicesreasondescriptorid integer,
    usinitialentry date,
    usmostrecententry date,
    usinitialschoolentry date,
    qualifyingarrivaldate date,
    stateresidencydate date,
    eligibilityexpirationdate date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the State''s challenging State academic content standards and challenging State student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the Student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the Student''s most recent entry into the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the Student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The Qualifying Arrival Date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified State residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The Eligibility Expiration Date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by States'' requirements), or if the child passes away.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the Service(s) being provided to the Student by the Migrant Education Program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the Service being provided to the student by the Migrant Education Program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramdescriptorid integer,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the Student by the Neglected or Delinquent Program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Neglected or Delinquent Program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    othernametypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the Program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    alternativeeducationorganizationid integer NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    educationplandescriptorid integer NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch Program, that a student participates in or from which the Student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the Student by the School Food Service Program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the School Food Service Program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    attemptstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the Student''s entry or assignment to the Section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the Student from the Section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the Section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.
        Repeated, counted in grade point average
        Repeated, not counted in grade point average
        Not repeated
        Other.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentsectionattendanceeventclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceeventclassperiod (
    attendanceeventcategorydescriptorid integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceeventclassperiod OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceeventclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceeventclassperiod IS 'The Class Period(s) to which the Section Attendance Event applies.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    specialeducationsettingdescriptorid integer,
    specialeducationhoursperweek numeric(5,2),
    schoolhoursperweek numeric(5,2),
    multiplydisabled boolean,
    medicallyfragile boolean,
    lastevaluationdate date,
    iepreviewdate date,
    iepbegindate date,
    iependdate date
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the Student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the Student receiving special education and related services is:
        1) in the age range of birth to 22 years, and
        2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and
        3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and
        4) lives with ongoing threat to his or her continued well-being.
        Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The Staff providing special education services to the Student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the Service(s) being provided to the Student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The Staff providing the service to the Student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Special Education Program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the Student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served:
        Public Targeted Assistance Program
        Public Schoolwide Program
        Private School Students Participating
        Local Neglected Program.';


--
-- Name: studenttitleipartaprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationservice IS 'Indicates the Service(s) being provided to the Student by the Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicedescriptorid IS 'Indicates the Service being provided to the student by the Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the Student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: survey; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    educationorganizationid integer,
    surveytitle character varying(255) NOT NULL,
    sessionname character varying(60),
    schoolyear smallint NOT NULL,
    schoolid integer,
    surveycategorydescriptorid integer,
    numberadministered integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.survey OWNER TO postgres;

--
-- Name: TABLE survey; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.survey IS 'A survey to identified or anonymous respondents.';


--
-- Name: COLUMN survey.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN survey.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN survey.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN survey.surveytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveytitle IS 'The title of the survey.';


--
-- Name: COLUMN survey.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN survey.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolyear IS 'The school year associated with the survey.';


--
-- Name: COLUMN survey.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN survey.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveycategorydescriptorid IS 'The category or type of survey.';


--
-- Name: COLUMN survey.numberadministered; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.numberadministered IS 'Number of persons to whom this survey was administered.';


--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE surveycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycategorydescriptor IS 'The descriptor holds the category or type of survey.';


--
-- Name: COLUMN surveycategorydescriptor.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycategorydescriptor.surveycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveycourseassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: TABLE surveycourseassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycourseassociation IS 'The course associated with the survey.';


--
-- Name: COLUMN surveycourseassociation.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN surveycourseassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveycourseassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveycourseassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE surveyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyleveldescriptor IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyleveldescriptor.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyleveldescriptor.surveyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveyprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyprogramassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: TABLE surveyprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyprogramassociation IS 'The program associated with the survey.';


--
-- Name: COLUMN surveyprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programname IS 'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN surveyprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN surveyprogramassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyquestion; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    questionformdescriptorid integer NOT NULL,
    questiontext character varying(1024) NOT NULL,
    surveysectiontitle character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestion OWNER TO postgres;

--
-- Name: TABLE surveyquestion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestion IS 'The questions for the survey.';


--
-- Name: COLUMN surveyquestion.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestion.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestion.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestion.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questionformdescriptorid IS 'The form or type of question.';


--
-- Name: COLUMN surveyquestion.questiontext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questiontext IS 'The text of the question.';


--
-- Name: COLUMN surveyquestion.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveyquestionmatrix; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionmatrix (
    matrixelement character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    minrawscore integer,
    maxrawscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionmatrix OWNER TO postgres;

--
-- Name: TABLE surveyquestionmatrix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionmatrix IS 'Information about the matrix element in the survey.';


--
-- Name: COLUMN surveyquestionmatrix.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionmatrix.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestionmatrix.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionmatrix.minrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.minrawscore IS 'The minimum score possible on a survey.';


--
-- Name: COLUMN surveyquestionmatrix.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.maxrawscore IS 'The maximum score possible on a survey.';


--
-- Name: surveyquestionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    noresponse boolean,
    comment character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponse IS 'The response to a survey question.';


--
-- Name: COLUMN surveyquestionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestionresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponse.comment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.comment IS 'Additional information provided by the responder about the question in the survey.';


--
-- Name: surveyquestionresponsechoice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsechoice (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    sortorder integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    numericvalue integer,
    textvalue character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsechoice OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsechoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsechoice IS 'The optional list of possible responses to a survey question.';


--
-- Name: COLUMN surveyquestionresponsechoice.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.sortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.sortorder IS 'Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn''t apply, the value of NumericValue or a unique, possibly sequential numeric value.';


--
-- Name: COLUMN surveyquestionresponsechoice.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsechoice.numericvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.numericvalue IS 'A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.';


--
-- Name: COLUMN surveyquestionresponsechoice.textvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.textvalue IS 'A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.';


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (
    matrixelement character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    noresponse boolean,
    minnumericresponse integer,
    maxnumericresponse integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsesurveyquestionmatrixelementresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse IS 'For matrix questions, the response for each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse IS 'The numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse IS 'The text response(s) for the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse IS 'The minimum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse IS 'The maximum score response to the question.';


--
-- Name: surveyquestionresponsevalue; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsevalue (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyquestionresponsevalueidentifier integer NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsevalue OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsevalue IS 'For free-form, single- or multiple-selection questions, one or more responses.';


--
-- Name: COLUMN surveyquestionresponsevalue.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyquestionresponsevalueidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyquestionresponsevalueidentifier IS 'Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsevalue.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.numericresponse IS 'A numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsevalue.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.textresponse IS 'A text response to the question.';


--
-- Name: surveyresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    responsedate date NOT NULL,
    responsetime integer,
    electronicmailaddress character varying(128),
    fullname character varying(80),
    location character varying(75),
    studentusi integer,
    parentusi integer,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponse OWNER TO postgres;

--
-- Name: TABLE surveyresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponse IS 'Responses to a Survey for named or anonymous persons.';


--
-- Name: COLUMN surveyresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponse.responsedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsedate IS 'Date of the survey response.';


--
-- Name: COLUMN surveyresponse.responsetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsetime IS 'The amount of time (in seconds) it took for the respondent to complete the survey.';


--
-- Name: COLUMN surveyresponse.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.electronicmailaddress IS 'Email address of the respondent.';


--
-- Name: COLUMN surveyresponse.fullname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.fullname IS 'Full name of the respondent.';


--
-- Name: COLUMN surveyresponse.location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.location IS 'Location of the respondent, often a city, district, or school.';


--
-- Name: COLUMN surveyresponse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN surveyresponse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN surveyresponse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponseeducationorganizationtargetassociation IS 'This association provides information about the survey being taken and the education organization the survey is about.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsestafftargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsesurveylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsesurveylevel (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyleveldescriptorid integer NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyresponsesurveylevel OWNER TO postgres;

--
-- Name: TABLE surveyresponsesurveylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsesurveylevel IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyleveldescriptorid IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysection OWNER TO postgres;

--
-- Name: TABLE surveysection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysection IS 'The section of questions for the survey.';


--
-- Name: COLUMN surveysection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysection.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysection.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionassociation IS 'The section associated with the survey.';


--
-- Name: COLUMN surveysectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN surveysectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN surveysectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN surveysectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN surveysectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN surveysectionassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveysectionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    sectionrating numeric(9,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: TABLE surveysectionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponse IS 'Optional information about the responses provided for a section of a survey.';


--
-- Name: COLUMN surveysectionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysectionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponse.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: COLUMN surveysectionresponse.sectionrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.sectionrating IS 'Numeric rating computed from the survey responses for the section.';


--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponseeducationorganizationtargetassociation IS 'This association provides information about the survey section and the Education Organization the survey section is about.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponsestafftargetassociation IS 'This association provides information about the survey section and the staff the survey section is about.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'This descriptor defines the term of a session during the school year (e.g., Semester).';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: accreditationstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.accreditationstatusdescriptor (
    accreditationstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.accreditationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE accreditationstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.accreditationstatusdescriptor IS 'Accreditation Status for a Teacher Preparation Provider.';


--
-- Name: COLUMN accreditationstatusdescriptor.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.accreditationstatusdescriptor.accreditationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: aidtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.aidtypedescriptor (
    aidtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.aidtypedescriptor OWNER TO postgres;

--
-- Name: TABLE aidtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.aidtypedescriptor IS 'This descriptor defines the classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN aidtypedescriptor.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.aidtypedescriptor.aidtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: candidate; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidate (
    candidateidentifier character varying(32) NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer NOT NULL,
    birthdate date NOT NULL,
    birthcity character varying(30),
    birthstateabbreviationdescriptorid integer,
    birthinternationalprovince character varying(150),
    birthcountrydescriptorid integer,
    dateenteredus date,
    multiplebirthstatus boolean,
    birthsexdescriptorid integer,
    hispaniclatinoethnicity boolean,
    economicdisadvantaged boolean,
    limitedenglishproficiencydescriptorid integer,
    displacementstatus character varying(30),
    genderdescriptorid integer,
    englishlanguageexamdescriptorid integer,
    firstgenerationstudent boolean,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidate OWNER TO postgres;

--
-- Name: TABLE candidate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidate IS 'A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.';


--
-- Name: COLUMN candidate.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidate.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN candidate.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidate.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidate.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidate.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidate.maidenname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.maidenname IS 'The person''s maiden name.';


--
-- Name: COLUMN candidate.sexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sexdescriptorid IS 'The sex of the candidate.';


--
-- Name: COLUMN candidate.birthdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN candidate.birthcity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN candidate.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN candidate.birthinternationalprovince; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN candidate.birthcountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidate.dateenteredus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN candidate.multiplebirthstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN candidate.birthsexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN candidate.hispaniclatinoethnicity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN candidate.economicdisadvantaged; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.economicdisadvantaged IS 'An indication of inadequate financial condition of an individual''s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.';


--
-- Name: COLUMN candidate.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN candidate.displacementstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.displacementstatus IS 'Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.';


--
-- Name: COLUMN candidate.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.genderdescriptorid IS 'The gender of the candidate.';


--
-- Name: COLUMN candidate.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.englishlanguageexamdescriptorid IS 'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).';


--
-- Name: COLUMN candidate.firstgenerationstudent; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstgenerationstudent IS 'Indicator of whether individual is a first generation college student.';


--
-- Name: COLUMN candidate.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN candidate.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: candidateaddress; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddress (
    addresstypedescriptorid integer NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddress OWNER TO postgres;

--
-- Name: TABLE candidateaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN candidateaddress.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddress.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddress.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddress.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddress.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN candidateaddress.buildingsitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN candidateaddress.nameofcounty; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN candidateaddress.countyfipscode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN candidateaddress.latitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN candidateaddress.longitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN candidateaddress.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN candidateaddress.congressionaldistrict; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN candidateaddress.localedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: candidateaddressperiod; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddressperiod OWNER TO postgres;

--
-- Name: TABLE candidateaddressperiod; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN candidateaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddressperiod.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN candidateaddressperiod.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddressperiod.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddressperiod.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: candidatedisability; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisability (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisability OWNER TO postgres;

--
-- Name: TABLE candidatedisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisability IS 'The disability condition(s) that best describes an individual''s impairment.';


--
-- Name: COLUMN candidatedisability.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisability.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN candidatedisability.disabilitydiagnosis; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN candidatedisability.orderofdisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.orderofdisability IS 'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN candidatedisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: candidatedisabilitydesignation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisabilitydesignation (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE candidatedisabilitydesignation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN candidatedisabilitydesignation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a child''s impairment.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociation (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    eppprogrampathwaydescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociation IS 'Information about the association between the Teacher Candidate and the EducatorPreparationProgram';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.enddate IS 'The end date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid IS 'Reason exited for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid IS 'The program pathway the candidate is following; for example: Residency, Internship, Traditional';


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationcohortyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear IS 'The type and year of a cohort the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    majorspecialization character varying(255) NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    minorspecialization character varying(255),
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 IS 'Information around the area(s) of specialization for an individual.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate IS 'The month, day, and year on which the Teacher Candidate first declared specialization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization IS 'The major area for a degree or area of specialization for a certificate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization IS 'The minor area for a degree or area of specialization for a certificate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate IS 'The month, day, and year on which the Teacher Candidate exited the declared specialization.';


--
-- Name: candidateelectronicmail; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateelectronicmail (
    candidateidentifier character varying(32) NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateelectronicmail OWNER TO postgres;

--
-- Name: TABLE candidateelectronicmail; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN candidateelectronicmail.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN candidateelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN candidateelectronicmail.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: candidatelanguage; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguage (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguage OWNER TO postgres;

--
-- Name: TABLE candidatelanguage; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguage IS 'The language(s) the individual uses to communicate.';


--
-- Name: COLUMN candidatelanguage.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguage.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: candidatelanguageuse; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguageuse (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguageuse OWNER TO postgres;

--
-- Name: TABLE candidatelanguageuse; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN candidatelanguageuse.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguageuse.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN candidatelanguageuse.languageusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: candidateothername; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateothername (
    candidateidentifier character varying(32) NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateothername OWNER TO postgres;

--
-- Name: TABLE candidateothername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN candidateothername.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateothername.othernametypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.othernametypedescriptorid IS 'The types of alternate names for a person.';


--
-- Name: COLUMN candidateothername.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the person.';


--
-- Name: COLUMN candidateothername.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidateothername.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidateothername.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidateothername.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: candidatepersonalidentificationdocument; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatepersonalidentificationdocument (
    candidateidentifier character varying(32) NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatepersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE candidatepersonalidentificationdocument; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatepersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: candidaterace; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidaterace (
    candidateidentifier character varying(32) NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidaterace OWNER TO postgres;

--
-- Name: TABLE candidaterace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidaterace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN candidaterace.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidaterace.racedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: candidatetelephone; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatetelephone (
    candidateidentifier character varying(32) NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatetelephone OWNER TO postgres;

--
-- Name: TABLE candidatetelephone; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatetelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN candidatetelephone.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatetelephone.telephonenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN candidatetelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN candidatetelephone.orderofpriority; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN candidatetelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN candidatetelephone.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: certificationroutedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.certificationroutedescriptor (
    certificationroutedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.certificationroutedescriptor OWNER TO postgres;

--
-- Name: TABLE certificationroutedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.certificationroutedescriptor IS 'The process, program, or pathway used to obtain a certification.';


--
-- Name: COLUMN certificationroutedescriptor.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.certificationroutedescriptor.certificationroutedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coteachingstyleobserveddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.coteachingstyleobserveddescriptor (
    coteachingstyleobserveddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.coteachingstyleobserveddescriptor OWNER TO postgres;

--
-- Name: TABLE coteachingstyleobserveddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.coteachingstyleobserveddescriptor IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialextension (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    certificationtitle character varying(64),
    certificationroutedescriptorid integer,
    boardcertificationindicator boolean,
    credentialstatusdescriptorid integer,
    credentialstatusdate date,
    educatorroledescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialextension OWNER TO postgres;

--
-- Name: COLUMN credentialextension.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialextension.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN credentialextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN credentialextension.certificationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationtitle IS 'The title of the certification obtained by the educator.';


--
-- Name: COLUMN credentialextension.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationroutedescriptorid IS 'The process, program, or pathway used to obtain certification.';


--
-- Name: COLUMN credentialextension.boardcertificationindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.boardcertificationindicator IS 'Indicator that the credential was granted under the authority of a national Board Certification.';


--
-- Name: COLUMN credentialextension.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdescriptorid IS 'The current status of the credential (e.g., active, suspended, etc.).';


--
-- Name: COLUMN credentialextension.credentialstatusdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdate IS 'The month, day, and year on which the credential status was effective.';


--
-- Name: COLUMN credentialextension.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.educatorroledescriptorid IS 'The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: credentialstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstatusdescriptor (
    credentialstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.credentialstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE credentialstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstatusdescriptor IS 'The current status of the credential.';


--
-- Name: COLUMN credentialstatusdescriptor.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstatusdescriptor.credentialstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialstudentacademicrecord; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstudentacademicrecord (
    credentialidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialstudentacademicrecord OWNER TO postgres;

--
-- Name: TABLE credentialstudentacademicrecord; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstudentacademicrecord IS 'Reference to the person''s Student Academic Records for the school(s) with which the Credential is associated.';


--
-- Name: COLUMN credentialstudentacademicrecord.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialstudentacademicrecord.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN credentialstudentacademicrecord.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialstudentacademicrecord.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN credentialstudentacademicrecord.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    accreditationstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogram; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogram IS 'The Educator Preparation Program is designed to prepare students to become licensed educators.';


--
-- Name: COLUMN educatorpreparationprogram.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogram.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogram.programid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educatorpreparationprogram.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.accreditationstatusdescriptorid IS 'The current accreditation status of the Educator Preparation Program.';


--
-- Name: educatorpreparationprogramgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogramgradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogramgradelevel OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogramgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogramgradelevel IS 'The grade levels served at the EPP Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.gradeleveldescriptorid IS 'The grade levels served at the EPP Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: educatorroledescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorroledescriptor (
    educatorroledescriptorid integer NOT NULL
);


ALTER TABLE tpdm.educatorroledescriptor OWNER TO postgres;

--
-- Name: TABLE educatorroledescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorroledescriptor IS 'The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN educatorroledescriptor.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorroledescriptor.educatorroledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: englishlanguageexamdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.englishlanguageexamdescriptor (
    englishlanguageexamdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.englishlanguageexamdescriptor OWNER TO postgres;

--
-- Name: TABLE englishlanguageexamdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.englishlanguageexamdescriptor IS 'Indicates that a person passed, failed, or did not take an English Language assessment.';


--
-- Name: COLUMN englishlanguageexamdescriptor.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.englishlanguageexamdescriptor.englishlanguageexamdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eppprogrampathwaydescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.eppprogrampathwaydescriptor (
    eppprogrampathwaydescriptorid integer NOT NULL
);


ALTER TABLE tpdm.eppprogrampathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE eppprogrampathwaydescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.eppprogrampathwaydescriptor IS 'The description of the program pathway, for example: Residency, Internship, Traditional';


--
-- Name: COLUMN eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationdescription character varying(255),
    minrating numeric(6,3),
    maxrating numeric(6,3),
    evaluationtypedescriptorid integer,
    interraterreliabilityscore integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluation OWNER TO postgres;

--
-- Name: TABLE evaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluation IS 'An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.';


--
-- Name: COLUMN evaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluation.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluation.evaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationdescription IS 'The long description of the Evaluation.';


--
-- Name: COLUMN evaluation.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.minrating IS 'The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluation.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.maxrating IS 'The maximum summary numerical rating or score for the evaluation.';


--
-- Name: COLUMN evaluation.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluation.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: evaluationelement; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelement (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    sortorder integer,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    evaluationtypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelement OWNER TO postgres;

--
-- Name: TABLE evaluationelement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelement IS 'The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.';


--
-- Name: COLUMN evaluationelement.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelement.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelement.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelement.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelement.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelement.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelement.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelement.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.sortorder IS 'The sort order of this Evaluation Element.';


--
-- Name: COLUMN evaluationelement.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.minrating IS 'The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationelement.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.maxrating IS 'The maximum summary numerical rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelement.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: evaluationelementrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationelementratingleveldescriptorid integer,
    areaofrefinement character varying(1024),
    areaofreinforcement character varying(1024),
    comments character varying(1024),
    feedback character varying(2048),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: TABLE evaluationelementrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementrating IS 'The lowest-level rating for an Evaluation Element for an individual educator.';


--
-- Name: COLUMN evaluationelementrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementrating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationelementrating.areaofrefinement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofrefinement IS 'Area identified for person to refine or improve as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.areaofreinforcement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofreinforcement IS 'Area identified for reinforcement or positive feedback as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationelementrating.feedback; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.feedback IS 'Feedback provided to the evaluated person.';


--
-- Name: evaluationelementratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationelementratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationelementratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationelementratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingleveldescriptor (
    evaluationelementratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingleveldescriptor IS 'Rating levels for Evaluation Elements.';


--
-- Name: COLUMN evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationelementratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingresult IS 'The numerical summary rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationelementratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationobjective; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjective (
    educationorganizationid integer NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationobjectivedescription character varying(255),
    sortorder integer,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    evaluationtypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: TABLE evaluationobjective; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjective IS 'A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN evaluationobjective.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjective.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjective.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjective.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivedescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivedescription IS 'The long description of the Evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.sortorder IS 'The sort order of this Evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.minrating IS 'The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationobjective.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.maxrating IS 'The maximum summary numerical rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtypedescriptorid IS 'The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiverating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    objectiveratingleveldescriptorid integer,
    comments character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiverating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiverating IS 'The rating for the component Evaluation Objective for an individual educator.';


--
-- Name: COLUMN evaluationobjectiverating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiverating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiverating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiverating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiverating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiverating.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.objectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationobjectiverating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: evaluationobjectiveratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationobjectiveratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratingresult IS 'The numerical summary rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationobjectiveratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationperioddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationperioddescriptor (
    evaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationperioddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationperioddescriptor.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationperioddescriptor.evaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer,
    sectionidentifier character varying(255),
    localcoursecode character varying(60),
    sessionname character varying(60),
    schoolid integer,
    evaluationratingstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationrating OWNER TO postgres;

--
-- Name: TABLE evaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationrating IS 'The summary weighting for the Evaluation instrument for an individual educator.';


--
-- Name: COLUMN evaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationrating.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationrating.sectionidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN evaluationrating.localcoursecode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN evaluationrating.sessionname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sessionname IS 'The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).';


--
-- Name: COLUMN evaluationrating.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN evaluationrating.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingstatusdescriptorid IS 'The Status of the poerformance evaluation.';


--
-- Name: evaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingleveldescriptor (
    evaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingleveldescriptor IS 'Rating levels for Evaluations.';


--
-- Name: COLUMN evaluationratingleveldescriptor.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingleveldescriptor.evaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingresult IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewer (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: evaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewerreceivedtraining (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    receivedtrainingdate date,
    interraterreliabilityscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: evaluationratingstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingstatusdescriptor (
    evaluationratingstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingstatusdescriptor IS 'Represents the status of a Evaluation Rating.';


--
-- Name: COLUMN evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationtypedescriptor (
    evaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationtypedescriptor IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationtypedescriptor.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationtypedescriptor.evaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: financialaid; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.financialaid (
    aidtypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    aidconditiondescription character varying(1024),
    aidamount numeric(19,4),
    pellgrantrecipient boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.financialaid OWNER TO postgres;

--
-- Name: TABLE financialaid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.financialaid IS 'This entity represents the financial aid a person is awarded.';


--
-- Name: COLUMN financialaid.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidtypedescriptorid IS 'The classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN financialaid.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.begindate IS 'The date the award was designated.';


--
-- Name: COLUMN financialaid.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN financialaid.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.enddate IS 'The date the award was removed.';


--
-- Name: COLUMN financialaid.aidconditiondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidconditiondescription IS 'The description of the condition (e.g., placement in a high need school) under which the aid was given.';


--
-- Name: COLUMN financialaid.aidamount; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidamount IS 'The amount of financial aid awarded to a person for the term/year.';


--
-- Name: COLUMN financialaid.pellgrantrecipient; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.pellgrantrecipient IS 'Indicates a person who receives Pell Grant aid.';


--
-- Name: genderdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.genderdescriptor (
    genderdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.genderdescriptor OWNER TO postgres;

--
-- Name: TABLE genderdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.genderdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN genderdescriptor.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.genderdescriptor.genderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.objectiveratingleveldescriptor (
    objectiveratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.objectiveratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE objectiveratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.objectiveratingleveldescriptor IS 'Rating levels for Evaluation Objectives.';


--
-- Name: COLUMN objectiveratingleveldescriptor.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.objectiveratingleveldescriptor.objectiveratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    performanceevaluationdescription character varying(255),
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: TABLE performanceevaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluation IS 'A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.';


--
-- Name: COLUMN performanceevaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationdescription IS 'The long description of the Performance Evaluation.';


--
-- Name: COLUMN performanceevaluation.academicsubjectdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.academicsubjectdescriptorid IS 'The description of the content or subject area of a performance evaluation.';


--
-- Name: performanceevaluationgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationgradelevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationgradelevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationgradelevel IS 'The grade levels involved with the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationgradelevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.gradeleveldescriptorid IS 'The grade levels involved with the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationgradelevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    actualdate date NOT NULL,
    announced boolean,
    comments character varying(1024),
    coteachingstyleobserveddescriptorid integer,
    actualduration integer,
    performanceevaluationratingleveldescriptorid integer,
    scheduledate date,
    actualtime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: TABLE performanceevaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationrating IS 'The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.';


--
-- Name: COLUMN performanceevaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationrating.actualdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualdate IS 'The month, day, and year on which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.announced; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.announced IS 'An indicator of whether the performance evaluation was announced or not.';


--
-- Name: COLUMN performanceevaluationrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN performanceevaluationrating.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.coteachingstyleobserveddescriptorid IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.actualduration; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualduration IS 'The actual or estimated number of clock minutes during which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN performanceevaluationrating.scheduledate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.scheduledate IS 'The month, day, and year on which the performance evaluation was scheduled.';


--
-- Name: COLUMN performanceevaluationrating.actualtime; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualtime IS 'An indication of the the time at which the performance evaluation was conducted.';


--
-- Name: performanceevaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    minrating numeric(6,3),
    maxrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN performanceevaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: performanceevaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingleveldescriptor (
    performanceevaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingleveldescriptor IS 'Rating levels for Performance Evaluations.';


--
-- Name: COLUMN performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingresult (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingresult OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingresult IS 'The numerical summary rating or score for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN performanceevaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: performanceevaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewer (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewerreceivedtraining (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    receivedtrainingdate date,
    interraterreliabilityscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: performanceevaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationtypedescriptor (
    performanceevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationtypedescriptor IS 'The type of performance evaluation conducted (e.g., walkthrough, summative).';


--
-- Name: COLUMN performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: rubricdimension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricdimension (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    rubricrating integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    rubricratingleveldescriptorid integer,
    criteriondescription character varying(1024) NOT NULL,
    dimensionorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.rubricdimension OWNER TO postgres;

--
-- Name: TABLE rubricdimension; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.';


--
-- Name: COLUMN rubricdimension.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN rubricdimension.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN rubricdimension.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN rubricdimension.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN rubricdimension.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN rubricdimension.rubricrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricrating IS 'The rating achieved for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN rubricdimension.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN rubricdimension.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricratingleveldescriptorid IS 'The rating level achieved for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.criteriondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.criteriondescription IS 'The criterion description for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.dimensionorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.dimensionorder IS 'The order for the rubric dimension.';


--
-- Name: rubricratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricratingleveldescriptor (
    rubricratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.rubricratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE rubricratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricratingleveldescriptor IS 'Rating levels for Rubric Dimensions.';


--
-- Name: COLUMN rubricratingleveldescriptor.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricratingleveldescriptor.rubricratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.schoolextension (
    schoolid integer NOT NULL,
    postsecondaryinstitutionid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.schoolextension OWNER TO postgres;

--
-- Name: COLUMN schoolextension.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolextension.postsecondaryinstitutionid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: surveyresponseextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponseextension (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.surveyresponseextension OWNER TO postgres;

--
-- Name: COLUMN surveyresponseextension.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponseextension.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseextension.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponseextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponseextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveyresponsepersontargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveysectionresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    createdbyownershiptokenid smallint,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveysectionresponsepersontargetassociation IS 'This association provides information about the survey section and the person the survey section is about.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.namespace IS 'Namespace for the Survey.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveysectiontitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: academicweek; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.academicweek (
    schoolid integer NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.academicweek OWNER TO postgres;

--
-- Name: accommodationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: account; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.account (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.account OWNER TO postgres;

--
-- Name: accountabilityrating; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.accountabilityrating (
    educationorganizationid integer NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.accountabilityrating OWNER TO postgres;

--
-- Name: accountclassificationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.accountclassificationdescriptor (
    accountclassificationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.accountclassificationdescriptor OWNER TO postgres;

--
-- Name: accountcode; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.accountcode (
    accountclassificationdescriptorid integer NOT NULL,
    accountcodenumber character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.accountcode OWNER TO postgres;

--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: actual; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.actual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.actual OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: addresstypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: assessment; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessment OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: assessmentitem; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentitem OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: behaviordescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: bellschedule; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.bellschedule OWNER TO postgres;

--
-- Name: budget; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.budget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.budget OWNER TO postgres;

--
-- Name: calendar; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.calendar OWNER TO postgres;

--
-- Name: calendardate; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.calendardate OWNER TO postgres;

--
-- Name: calendareventdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: calendartypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: classperiod; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.classperiod OWNER TO postgres;

--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: cohort; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.cohort (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.cohort OWNER TO postgres;

--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: communityorganization; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.communityorganization (
    communityorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.communityorganization OWNER TO postgres;

--
-- Name: communityprovider; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.communityprovider (
    communityproviderid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.communityprovider OWNER TO postgres;

--
-- Name: communityproviderlicense; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.communityproviderlicense (
    communityproviderid integer NOT NULL,
    licenseidentifier character varying(20) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: competencyobjective; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.competencyobjective (
    educationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.competencyobjective OWNER TO postgres;

--
-- Name: contacttypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: contentclassdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: contractedstaff; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.contractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.contractedstaff OWNER TO postgres;

--
-- Name: costratedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.costratedescriptor OWNER TO postgres;

--
-- Name: countrydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.countrydescriptor OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.course OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: courseoffering; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.courseoffering OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: coursetranscript; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.coursetranscript OWNER TO postgres;

--
-- Name: credential; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.credential OWNER TO postgres;

--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: credittypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: descriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.descriptor (
    descriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.descriptor OWNER TO postgres;

--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: disabilitydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: disciplineaction; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disciplineaction (
    disciplineactionidentifier character varying(20) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disciplineaction OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: disciplinedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: disciplineincident; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disciplineincident (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disciplineincident OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: educationcontent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationcontent OWNER TO postgres;

--
-- Name: educationorganization; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganization (
    educationorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganization OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationnetwork (
    educationorganizationnetworkid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid integer NOT NULL,
    membereducationorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationorganizationpeerassociation (
    educationorganizationid integer NOT NULL,
    peereducationorganizationid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: educationplandescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: educationservicecenter; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.educationservicecenter (
    educationservicecenterid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.educationservicecenter OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: entrytypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: feederschoolassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid integer NOT NULL,
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: grade; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.grade OWNER TO postgres;

--
-- Name: gradebookentry; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradebookentry (
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradebookentry OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: gradetypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: gradingperiod; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradingperiod OWNER TO postgres;

--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: graduationplan; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.graduationplan (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.graduationplan OWNER TO postgres;

--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: indicatordescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: intervention; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.intervention (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.intervention OWNER TO postgres;

--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: interventionprescription; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.interventionprescription (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.interventionprescription OWNER TO postgres;

--
-- Name: interventionstudy; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.interventionstudy (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.interventionstudy OWNER TO postgres;

--
-- Name: languagedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.languagedescriptor OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: languageusedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: learningobjective; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningobjective (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningobjective OWNER TO postgres;

--
-- Name: learningstandard; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningstandard OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: licensetypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: localedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.localedescriptor (
    localedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.localedescriptor OWNER TO postgres;

--
-- Name: localeducationagency; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.localeducationagency (
    localeducationagencyid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.localeducationagency OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.location OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: monitoreddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: objectiveassessment; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.objectiveassessment OWNER TO postgres;

--
-- Name: oldethnicitydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.oldethnicitydescriptor (
    oldethnicitydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.oldethnicitydescriptor OWNER TO postgres;

--
-- Name: openstaffposition; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.openstaffposition (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.openstaffposition OWNER TO postgres;

--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: organizationdepartment; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.organizationdepartment (
    organizationdepartmentid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.organizationdepartment OWNER TO postgres;

--
-- Name: othernametypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: parent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.parent (
    parentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.parent OWNER TO postgres;

--
-- Name: participationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.participationdescriptor OWNER TO postgres;

--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: payroll; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.payroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.payroll OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.person OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: platformtypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: populationserveddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: postingresultdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: postsecondaryevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.postsecondaryinstitution (
    postsecondaryinstitutionid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: proficiencydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.program (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.program OWNER TO postgres;

--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: programsponsordescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: programtypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: progressdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.progressdescriptor OWNER TO postgres;

--
-- Name: progressleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: providercategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: questionformdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: racedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.racedescriptor (
    racedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.racedescriptor OWNER TO postgres;

--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: relationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.relationdescriptor OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: reportcard; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.reportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.reportcard OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: restraintevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.restraintevent (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.restraintevent OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: school; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.school (
    schoolid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.school OWNER TO postgres;

--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: schooltypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.section OWNER TO postgres;

--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: separationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.separationdescriptor OWNER TO postgres;

--
-- Name: separationreasondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: servicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.servicedescriptor OWNER TO postgres;

--
-- Name: session; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.session (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.session OWNER TO postgres;

--
-- Name: sexdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.sexdescriptor OWNER TO postgres;

--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: staff; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staff (
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staff OWNER TO postgres;

--
-- Name: staffabsenceevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: staffcohortassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid integer NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: staffleave; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffleave OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: staffprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: staffschoolassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: staffsectionassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: stateeducationagency; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.stateeducationagency (
    stateeducationagencyid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.stateeducationagency OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.student (
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.student OWNER TO postgres;

--
-- Name: studentacademicrecord; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentacademicrecord (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: studentassessment; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentassessment OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: studentcohortassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studenteducationorganizationassociation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: studentgradebookentry; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentgradebookentry (
    begindate date NOT NULL,
    dateassigned date NOT NULL,
    gradebookentrytitle character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: studentinterventionassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentinterventionassociation (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: studentlearningobjective; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentlearningobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentparentassociation (
    parentusi integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentparentassociation OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: studentprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: studentsectionassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: survey; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.survey OWNER TO postgres;

--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: surveycourseassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: surveyprogramassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyprogramassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: surveyquestion; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyquestion OWNER TO postgres;

--
-- Name: surveyquestionresponse; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: surveyresponse; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyresponse OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: surveysection; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveysection OWNER TO postgres;

--
-- Name: surveysectionassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: surveysectionresponse; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: termdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.termdescriptor (
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.termdescriptor OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: visadescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.visadescriptor (
    visadescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.visadescriptor OWNER TO postgres;

--
-- Name: weapondescriptor; Type: TABLE; Schema: tracked_deletes_edfi; Owner: postgres
--

CREATE TABLE tracked_deletes_edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_edfi.weapondescriptor OWNER TO postgres;

--
-- Name: accreditationstatusdescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.accreditationstatusdescriptor (
    accreditationstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.accreditationstatusdescriptor OWNER TO postgres;

--
-- Name: aidtypedescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.aidtypedescriptor (
    aidtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.aidtypedescriptor OWNER TO postgres;

--
-- Name: candidate; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.candidate (
    candidateidentifier character varying(32) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.candidate OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: certificationroutedescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.certificationroutedescriptor (
    certificationroutedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.certificationroutedescriptor OWNER TO postgres;

--
-- Name: coteachingstyleobserveddescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.coteachingstyleobserveddescriptor (
    coteachingstyleobserveddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.coteachingstyleobserveddescriptor OWNER TO postgres;

--
-- Name: credentialstatusdescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.credentialstatusdescriptor (
    credentialstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.credentialstatusdescriptor OWNER TO postgres;

--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.educatorpreparationprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: educatorroledescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.educatorroledescriptor (
    educatorroledescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.educatorroledescriptor OWNER TO postgres;

--
-- Name: englishlanguageexamdescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.englishlanguageexamdescriptor (
    englishlanguageexamdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.englishlanguageexamdescriptor OWNER TO postgres;

--
-- Name: eppprogrampathwaydescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.eppprogrampathwaydescriptor (
    eppprogrampathwaydescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.eppprogrampathwaydescriptor OWNER TO postgres;

--
-- Name: evaluation; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluation OWNER TO postgres;

--
-- Name: evaluationelement; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationelement (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationelement OWNER TO postgres;

--
-- Name: evaluationelementrating; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationelementrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: evaluationelementratingleveldescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationelementratingleveldescriptor (
    evaluationelementratingleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationelementratingleveldescriptor OWNER TO postgres;

--
-- Name: evaluationobjective; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationobjective (
    educationorganizationid integer NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationobjectiverating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: evaluationperioddescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationperioddescriptor (
    evaluationperioddescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationperioddescriptor OWNER TO postgres;

--
-- Name: evaluationrating; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationrating OWNER TO postgres;

--
-- Name: evaluationratingleveldescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationratingleveldescriptor (
    evaluationratingleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: evaluationratingstatusdescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationratingstatusdescriptor (
    evaluationratingstatusdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationratingstatusdescriptor OWNER TO postgres;

--
-- Name: evaluationtypedescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.evaluationtypedescriptor (
    evaluationtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.evaluationtypedescriptor OWNER TO postgres;

--
-- Name: financialaid; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.financialaid (
    aidtypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    studentusi integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.financialaid OWNER TO postgres;

--
-- Name: genderdescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.genderdescriptor (
    genderdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.genderdescriptor OWNER TO postgres;

--
-- Name: objectiveratingleveldescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.objectiveratingleveldescriptor (
    objectiveratingleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.objectiveratingleveldescriptor OWNER TO postgres;

--
-- Name: performanceevaluation; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.performanceevaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.performanceevaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: performanceevaluationratingleveldescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.performanceevaluationratingleveldescriptor (
    performanceevaluationratingleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.performanceevaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: performanceevaluationtypedescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.performanceevaluationtypedescriptor (
    performanceevaluationtypedescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.performanceevaluationtypedescriptor OWNER TO postgres;

--
-- Name: rubricdimension; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.rubricdimension (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    rubricrating integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.rubricdimension OWNER TO postgres;

--
-- Name: rubricratingleveldescriptor; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.rubricratingleveldescriptor (
    rubricratingleveldescriptorid integer NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.rubricratingleveldescriptor OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.surveyresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tracked_deletes_tpdm; Owner: postgres
--

CREATE TABLE tracked_deletes_tpdm.surveysectionresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    id uuid NOT NULL,
    changeversion bigint NOT NULL
);


ALTER TABLE tracked_deletes_tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: parent parentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent ALTER COLUMN parentusi SET DEFAULT nextval('edfi.parent_parentusi_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: educationorganizationidtoeducationorganizationid; Type: TABLE DATA; Schema: auth; Owner: postgres
--

COPY auth.educationorganizationidtoeducationorganizationid (sourceeducationorganizationid, targeteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: snapshot; Type: TABLE DATA; Schema: changes; Owner: postgres
--

COPY changes.snapshot (snapshotidentifier, snapshotdatetime, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
2
3
7
8
9
11
1
5
10
12
4
6
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
15
20
23
13
14
17
18
21
22
24
26
27
28
30
16
19
25
29
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
33
34
35
36
37
39
42
43
46
48
49
32
38
40
41
44
45
47
31
3042
3043
3044
3045
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
52
50
55
58
53
56
51
54
57
\.


--
-- Data for Name: account; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.account (accountidentifier, educationorganizationid, fiscalyear, accountname, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: accountaccountcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountaccountcode (accountclassificationdescriptorid, accountcodenumber, accountidentifier, educationorganizationid, fiscalyear, createdate) FROM stdin;
\.


--
-- Data for Name: accountclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountclassificationdescriptor (accountclassificationdescriptorid) FROM stdin;
61
62
65
59
63
66
67
60
64
\.


--
-- Data for Name: accountcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountcode (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear, accountcodedescription, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
70
75
71
68
72
74
77
79
69
73
76
78
\.


--
-- Data for Name: actual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.actual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amounttodate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
82
81
83
84
80
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
87
88
90
91
92
93
96
98
99
86
94
85
89
95
97
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
100
102
101
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
103
104
105
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid) FROM stdin;
106
107
112
109
111
108
110
113
114
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, assessmenttitle, assessmentcategorydescriptorid, assessmentform, assessmentversion, revisiondate, maxrawscore, nomenclature, assessmentfamily, educationorganizationid, adaptiveassessment, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (academicsubjectdescriptorid, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, gradeleveldescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
117
115
116
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
144
143
145
146
147
148
149
150
151
152
153
154
155
156
157
158
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, author, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
159
162
163
164
165
161
160
166
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, maxrawscore, itemtext, correctresponse, expectedtimeassessed, nomenclature, assessmentitemuri, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
169
171
174
175
176
178
180
181
182
184
187
188
168
170
172
167
173
177
179
183
185
186
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, responsedescription, correctresponse, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
190
194
192
189
193
191
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, languagedescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, namespace, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
195
197
196
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, assessmentreportingmethoddescriptorid, minimumscore, maximumscore, identificationcode, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandardlearningstandard (assessmentidentifier, learningstandardid, namespace, scorerangeid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
244
245
243
248
252
256
242
246
247
249
250
251
253
254
255
257
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
259
260
258
262
263
261
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid) FROM stdin;
264
266
267
265
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
268
271
270
269
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, starttime, endtime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, classperiodname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, date, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: budget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.budget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
272
273
274
275
276
277
278
279
280
281
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, gradeleveldescriptorid, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
284
285
286
282
283
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
287
291
293
296
299
300
303
288
295
290
294
297
298
301
302
289
292
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
304
305
307
306
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
310
309
311
308
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
314
312
316
315
313
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, endtime, schoolid, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
318
319
317
320
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, cohortdescription, cohorttypedescriptorid, cohortscopedescriptorid, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
321
324
327
323
326
322
325
328
329
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
330
333
334
337
338
332
331
335
336
339
340
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
341
345
346
348
349
350
352
342
347
351
343
344
3086
3087
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, providerprofitabilitydescriptorid, providerstatusdescriptorid, providercategorydescriptorid, schoolindicator, licenseexemptindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, authorizedfacilitycapacity, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
354
356
357
358
359
353
355
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
360
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
361
362
363
364
365
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
366
368
367
\.


--
-- Data for Name: contractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amounttodate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
369
370
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
371
375
376
378
379
380
382
384
385
386
387
389
391
392
393
396
397
399
400
402
404
405
406
409
410
412
414
417
419
421
422
425
426
427
428
430
431
432
433
436
437
438
440
441
443
446
447
448
450
451
453
455
456
458
459
460
462
463
466
467
468
471
472
474
476
478
479
480
482
485
486
488
490
492
498
499
502
505
508
510
511
512
514
515
517
518
519
520
521
522
524
525
527
528
530
531
532
533
535
538
540
541
543
546
547
550
551
553
556
558
559
560
563
564
565
567
568
571
572
573
574
575
579
584
586
587
589
591
593
594
595
598
599
602
603
604
606
608
609
610
613
615
616
618
374
381
383
388
394
398
401
403
407
408
411
413
415
416
418
420
423
424
429
434
435
439
442
444
445
449
452
454
457
461
464
469
475
477
481
483
484
487
489
491
497
500
503
506
509
513
516
526
529
534
536
537
539
542
544
545
548
549
552
554
557
561
562
566
569
570
576
581
583
588
590
592
597
601
605
607
611
614
617
619
373
377
390
395
465
470
473
493
495
501
504
523
555
578
580
585
596
600
612
372
494
496
507
577
582
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, coursetitle, numberofparts, academicsubjectdescriptorid, coursedescription, timerequiredforcompletion, datecourseadopted, highschoolcourserequirement, coursegpaapplicabilitydescriptorid, coursedefinedbydescriptorid, minimumavailablecredits, minimumavailablecredittypedescriptorid, minimumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, maximumavailablecreditconversion, careerpathwaydescriptorid, maxcompletionsforcredit, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
623
621
620
622
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (competencyleveldescriptorid, coursecode, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
625
627
626
624
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
628
630
629
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, courseidentificationsystemdescriptorid, educationorganizationid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
631
632
633
634
635
636
637
638
639
\.


--
-- Data for Name: courselearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningobjective (coursecode, educationorganizationid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
640
644
647
648
650
652
654
655
657
659
660
661
641
645
653
643
646
649
651
656
658
662
642
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, localcoursetitle, instructionaltimeplanned, coursecode, educationorganizationid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
663
667
668
664
666
665
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, attemptedcredits, attemptedcredittypedescriptorid, attemptedcreditconversion, earnedcredits, earnedcredittypedescriptorid, earnedcreditconversion, whentakengradeleveldescriptorid, methodcreditearneddescriptorid, finallettergradeearned, finalnumericgradeearned, courserepeatcodedescriptorid, coursetitle, alternativecoursetitle, alternativecoursecode, externaleducationorganizationid, externaleducationorganizationnameofinstitution, assigningorganizationidentificationcode, coursecatalogurl, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptpartialcoursetranscriptawards (awarddate, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, earnedcredits, methodcreditearneddescriptorid, lettergradeearned, numericgradeearned, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, effectivedate, expirationdate, credentialfielddescriptorid, issuancedate, credentialtypedescriptorid, teachingcredentialdescriptorid, teachingcredentialbasisdescriptorid, namespace, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
670
672
673
675
678
679
680
681
683
669
674
676
677
682
671
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
684
687
686
688
685
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
689
692
691
690
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
694
695
696
693
697
698
699
700
702
701
703
704
705
706
707
708
709
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
710
712
716
720
713
714
717
718
719
721
722
724
726
711
715
723
725
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
727
730
729
728
731
732
733
734
735
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
736
739
738
737
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
1	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2022-02-28 17:19:06.560096	2022-02-28 17:19:06.545181	b7031a14-1285-4c5f-a36c-eca238386cb1	\N	61
5	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2022-02-28 17:19:06.692035	2022-02-28 17:19:06.691932	196759d3-9ea8-4578-b465-df395bb2bf92	\N	65
10	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2022-02-28 17:19:06.709256	2022-02-28 17:19:06.708173	52a9a4dd-9136-4a85-8a97-e6a9f1d01432	\N	70
12	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2022-02-28 17:19:06.712862	2022-02-28 17:19:06.712763	239b6f41-951d-4d24-93fa-f55599d6c0b1	\N	72
16	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2022-02-28 17:19:06.751031	2022-02-28 17:19:06.749705	ef303f4d-cf52-4140-9808-e4979bf9cc15	\N	76
19	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	2022-02-28 17:19:06.769678	2022-02-28 17:19:06.769649	160b321a-1f14-44c9-8d0e-9afbdd04044e	\N	79
25	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	2022-02-28 17:19:06.78693	2022-02-28 17:19:06.786883	ca1e1849-6d16-44c4-9346-32b9928d183e	\N	85
29	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	2022-02-28 17:19:06.800718	2022-02-28 17:19:06.800696	c1dd52cf-7021-4af0-a961-ce28b0f4239a	\N	89
32	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:06.835842	2022-02-28 17:19:06.834605	6e04a117-1fe1-4eae-a052-31ca5c949f18	\N	91
38	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	2022-02-28 17:19:06.85539	2022-02-28 17:19:06.855275	c24acd3f-1241-4305-a4ab-204156e50a23	\N	98
40	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2022-02-28 17:19:06.862993	2022-02-28 17:19:06.862928	ba030feb-f785-4c0b-a1c7-aa70cdb4cf39	\N	100
41	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	2022-02-28 17:19:06.866769	2022-02-28 17:19:06.866749	d62a8740-3b58-4862-81f2-e60fd9d0b522	\N	101
44	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	2022-02-28 17:19:06.875068	2022-02-28 17:19:06.875016	9774c6d5-e59b-4a9b-a718-35a55cd57ea8	\N	104
45	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	2022-02-28 17:19:06.879288	2022-02-28 17:19:06.879234	6e58c8d9-8ad3-4733-920a-762ef8db7a8a	\N	105
47	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2022-02-28 17:19:06.884961	2022-02-28 17:19:06.884833	68784f06-992b-43c2-8363-2abb154e7876	\N	107
51	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	2022-02-28 17:19:06.919709	2022-02-28 17:19:06.918291	0b272cc5-a438-4749-904b-98feef7ae950	\N	111
54	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	2022-02-28 17:19:06.933676	2022-02-28 17:19:06.933547	a5e611de-7b9e-4d15-adea-56edc24e2fb0	\N	114
57	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	2022-02-28 17:19:06.93958	2022-02-28 17:19:06.939301	5a5a9d59-492d-4dbe-88d1-b6b338af904b	\N	117
60	uri://ed-fi.org/AccountClassificationDescriptor	Fund	Fund	Fund	\N	\N	\N	2022-02-28 17:19:06.98097	2022-02-28 17:19:06.979513	706aaae4-85f7-41d3-957a-46b1823c72d6	\N	120
64	uri://ed-fi.org/AccountClassificationDescriptor	Project	Project	Project	\N	\N	\N	2022-02-28 17:19:06.99628	2022-02-28 17:19:06.99607	dcba9f68-145a-4379-a075-f8bd09e3b49e	\N	124
68	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	2022-02-28 17:19:07.039161	2022-02-28 17:19:07.037654	a255a653-3458-4802-a8bb-bdce865a7e99	\N	128
72	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	2022-02-28 17:19:07.055202	2022-02-28 17:19:07.054531	aa3901c6-1c34-454a-bcb2-7f7f1faf07f3	\N	132
74	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	2022-02-28 17:19:07.060572	2022-02-28 17:19:07.060511	a6104673-5e1c-472a-a655-f5129ebab4d4	\N	134
77	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	2022-02-28 17:19:07.07058	2022-02-28 17:19:07.070183	ff19b624-6aa3-4c13-9f55-bf70299b75b2	\N	137
79	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	2022-02-28 17:19:07.076816	2022-02-28 17:19:07.076788	912596bf-4c5c-40c9-aa50-44dfb37828a5	\N	139
80	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:07.10962	2022-02-28 17:19:07.108263	b19ced20-6dbf-4384-886b-513a9e5d0233	\N	140
85	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	2022-02-28 17:19:07.154896	2022-02-28 17:19:07.15348	300b4dab-fe7a-4141-80a0-258b0e32fa77	\N	145
89	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	2022-02-28 17:19:07.170121	2022-02-28 17:19:07.169974	2157a155-8c84-412f-99ad-a149921f0de7	\N	149
95	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.186585	2022-02-28 17:19:07.186539	0c09990d-8c94-4eef-bd71-6dfcfb8b6827	\N	155
97	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	2022-02-28 17:19:07.429953	2022-02-28 17:19:07.429845	1487e5da-5ef0-47d2-9002-a8c2b46b3384	\N	157
100	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-02-28 17:19:07.467136	2022-02-28 17:19:07.46575	d5e7ffc2-f426-4a58-a5d8-7cdd41fc75ec	\N	160
104	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	2022-02-28 17:19:07.481943	2022-02-28 17:19:07.481877	ec07c92b-a07e-46a8-8250-7984732d6867	\N	164
109	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Colombian	Colombian	Colombian	\N	\N	\N	2022-02-28 17:19:07.518337	2022-02-28 17:19:07.516825	8a85e7b0-b23d-4f98-8f92-81ba5e023996	\N	168
111	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Salvadoran	Salvadoran	Salvadoran	\N	\N	\N	2022-02-28 17:19:07.539957	2022-02-28 17:19:07.539897	f058a162-c73b-4f29-a3ce-ceebd3250d5e	\N	171
115	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	2022-02-28 17:19:07.588594	2022-02-28 17:19:07.587162	346bebd3-c972-4e0a-994b-1eb05250ad19	\N	176
121	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	2022-02-28 17:19:07.609815	2022-02-28 17:19:07.609621	f909bcee-1d5d-4126-8a3e-90a300c73d41	\N	181
126	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	2022-02-28 17:19:07.627554	2022-02-28 17:19:07.626742	9a9d6565-142e-4355-b6a9-e2f6e4b8280c	\N	186
130	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:07.643968	2022-02-28 17:19:07.643859	e94bf6d2-5982-4397-b727-1ecad6753698	\N	190
132	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	2022-02-28 17:19:07.648418	2022-02-28 17:19:07.648152	c8147e3f-de88-4d8f-b425-26153f550961	\N	192
134	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	2022-02-28 17:19:07.656931	2022-02-28 17:19:07.656894	6c34d9b3-9fd6-43b7-91ac-7c0aefaf1d3c	\N	194
135	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	2022-02-28 17:19:07.664211	2022-02-28 17:19:07.663356	05bdd4c6-f1dd-4f53-a453-cef1d60c0c89	\N	195
137	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	2022-02-28 17:19:07.669822	2022-02-28 17:19:07.6697	93f484d4-d116-4f3c-81b1-952ec93649ed	\N	197
140	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	2022-02-28 17:19:07.677797	2022-02-28 17:19:07.677749	b784ca5b-e32f-49d0-bfc6-87b0f9883032	\N	200
3	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2022-02-28 17:19:06.56008	2022-02-28 17:19:06.545184	cfc5ce75-3d98-4eb0-bcd7-e2c180f0a9db	\N	63
8	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2022-02-28 17:19:06.693262	2022-02-28 17:19:06.693242	f3dc3c61-ef2e-4fce-bc96-ecdaa37d51b2	\N	68
9	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2022-02-28 17:19:06.708224	2022-02-28 17:19:06.708061	1fe55322-5670-414b-9f07-729fb47d186a	\N	69
11	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2022-02-28 17:19:06.711551	2022-02-28 17:19:06.711335	58c2f2ba-a4b8-43a4-8334-1980217648f3	\N	71
14	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2022-02-28 17:19:06.751032	2022-02-28 17:19:06.749697	33f7671f-b619-47d4-917e-b003fba15cd4	\N	74
17	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2022-02-28 17:19:06.762379	2022-02-28 17:19:06.762317	29327e36-cbaa-404b-8849-5904f30db8e0	\N	77
18	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2022-02-28 17:19:06.767641	2022-02-28 17:19:06.767432	91110607-e4f6-43c1-8ce8-968c8b07bb6e	\N	78
21	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	2022-02-28 17:19:06.775125	2022-02-28 17:19:06.775075	4fc33295-014c-4e9f-be7a-fc2099193d37	\N	81
22	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	2022-02-28 17:19:06.782333	2022-02-28 17:19:06.782273	a2604558-9400-4edd-9c95-44ba462e3d9b	\N	82
24	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	2022-02-28 17:19:06.785619	2022-02-28 17:19:06.78557	affe2ab9-15cc-4939-bbed-4b50089188cf	\N	84
26	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:06.791425	2022-02-28 17:19:06.791374	5c13f5fb-ade0-4b67-8a56-4669b9de561c	\N	86
27	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	2022-02-28 17:19:06.795314	2022-02-28 17:19:06.795267	7becbd5a-28e8-4261-a4d8-3d3fd85274ad	\N	87
28	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2022-02-28 17:19:06.800374	2022-02-28 17:19:06.800304	a2a1d10f-f6d7-47ec-80d1-84aa3a5299bf	\N	88
30	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	2022-02-28 17:19:06.805802	2022-02-28 17:19:06.805753	8635f721-6c27-4515-a8de-6db91960b4eb	\N	90
33	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	2022-02-28 17:19:06.835843	2022-02-28 17:19:06.834595	45e827cd-b894-4ea6-b794-b5b26fda27c6	\N	93
35	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	2022-02-28 17:19:06.848744	2022-02-28 17:19:06.8487	faf90884-7e8c-4855-93b1-5df18baafa76	\N	95
36	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	2022-02-28 17:19:06.851687	2022-02-28 17:19:06.851636	087ce8f6-76c5-47d9-b4f7-62b5c925083f	\N	96
37	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	2022-02-28 17:19:06.855115	2022-02-28 17:19:06.855073	ec617ba9-081e-42da-9fa5-166948217660	\N	97
39	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2022-02-28 17:19:06.860532	2022-02-28 17:19:06.860438	74c0cc44-cb0d-4fda-8803-b6e9c88159fe	\N	99
42	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:06.86788	2022-02-28 17:19:06.867839	8bc243e2-d5bf-4b1b-8b6b-f6e6ef748df4	\N	102
43	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	2022-02-28 17:19:06.872778	2022-02-28 17:19:06.872734	81514a72-84d2-496f-8bbd-11a929874afb	\N	103
46	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	2022-02-28 17:19:06.880172	2022-02-28 17:19:06.880113	d175ca5d-0bac-46f3-ba8f-37c93d0884ee	\N	106
48	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	2022-02-28 17:19:06.8868	2022-02-28 17:19:06.88675	61dd74d7-01b6-4cf4-b251-f6f6e3071325	\N	108
49	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	2022-02-28 17:19:06.890617	2022-02-28 17:19:06.890425	87abb6dc-ffd9-4538-ba95-b75288991df9	\N	109
52	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:06.919548	2022-02-28 17:19:06.918285	2b214993-2f13-411c-9e9e-339332ac55de	\N	112
55	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology	Student equipment/technology	Student equipment/technology	\N	\N	\N	2022-02-28 17:19:06.93537	2022-02-28 17:19:06.934703	49f5e495-2b0c-44f1-8ce4-c0dda5ee29d9	\N	115
58	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	2022-02-28 17:19:06.948137	2022-02-28 17:19:06.948088	2aa24f63-e78f-453e-9646-600edb773f9c	\N	118
59	uri://ed-fi.org/AccountClassificationDescriptor	Program	Program	Program	\N	\N	\N	2022-02-28 17:19:06.980969	2022-02-28 17:19:06.979508	c37770e1-6207-4f9a-bca4-09758a911080	\N	119
63	uri://ed-fi.org/AccountClassificationDescriptor	Level of Instruction	Level of Instruction	Level of Instruction	\N	\N	\N	2022-02-28 17:19:06.996117	2022-02-28 17:19:06.9959	531ad1d8-1f6a-40cf-8f72-a3ec9f095f40	\N	123
66	uri://ed-fi.org/AccountClassificationDescriptor	Subject Matter	Subject Matter	Subject Matter	\N	\N	\N	2022-02-28 17:19:07.001293	2022-02-28 17:19:07.001235	b40910ea-8bc7-42be-9ff8-502990f59667	\N	126
67	uri://ed-fi.org/AccountClassificationDescriptor	Job Class	Job Class	Job Class	\N	\N	\N	2022-02-28 17:19:07.009042	2022-02-28 17:19:07.008117	7e17a93f-7a18-43f8-b6f9-ea5f54d87585	\N	127
69	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	2022-02-28 17:19:07.03908	2022-02-28 17:19:07.037643	ca2ad2a1-4b9b-4dd2-ba82-f36f1b1556ef	\N	129
73	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	2022-02-28 17:19:07.056586	2022-02-28 17:19:07.055813	36943dfa-2e36-4f63-a02a-0f8b48d449a5	\N	133
76	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	2022-02-28 17:19:07.067136	2022-02-28 17:19:07.066526	79b9509f-e524-4873-b8a7-03c21886095e	\N	136
78	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	2022-02-28 17:19:07.073932	2022-02-28 17:19:07.073831	5e4eafe9-a64a-4e49-91fd-bdd6203fd2e5	\N	138
83	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-02-28 17:19:07.109618	2022-02-28 17:19:07.108252	c0d9cea6-29d4-4170-bf16-4fd35d0b5d32	\N	143
84	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.125905	2022-02-28 17:19:07.125471	5a712dd0-b55d-4f40-9e68-e7b36f6e1ded	\N	144
87	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	2022-02-28 17:19:07.154895	2022-02-28 17:19:07.153473	1092cc82-814a-49f2-8d81-edf4ec476f81	\N	147
91	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	2022-02-28 17:19:07.170855	2022-02-28 17:19:07.17076	a8d9a0eb-1364-4b09-affc-680df317d520	\N	151
92	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	2022-02-28 17:19:07.178304	2022-02-28 17:19:07.178243	50145c4e-67f4-46ec-a879-57ce469e2145	\N	152
98	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2022-02-28 17:19:07.429947	2022-02-28 17:19:07.42971	0b777369-4f2c-447a-8893-8be10d3a83e7	\N	158
99	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-02-28 17:19:07.433864	2022-02-28 17:19:07.433843	3d9e3f62-54b5-4dd0-a037-e6add783a20d	\N	159
102	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:07.467133	2022-02-28 17:19:07.465737	925f6c9d-4ba8-4938-96b2-43077f5b9e4a	\N	162
103	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.478998	2022-02-28 17:19:07.477767	d0734227-988b-4efa-85f9-dad03251b3a7	\N	163
105	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	2022-02-28 17:19:07.485687	2022-02-28 17:19:07.485662	58b3d61f-91e0-4b9d-8b3d-a733997f92da	\N	165
108	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Mexican	Mexican	Mexican	\N	\N	\N	2022-02-28 17:19:07.518337	2022-02-28 17:19:07.516801	a50920eb-c70a-4b1f-a8ed-f8db1b0c64ee	\N	167
4	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2022-02-28 17:19:06.560094	2022-02-28 17:19:06.545184	80dfb0e3-3df9-4a8e-81c7-68cdf31b414c	\N	64
6	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2022-02-28 17:19:06.692057	2022-02-28 17:19:06.691931	d357187e-b266-4868-b915-aa72e838a790	\N	66
13	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	2022-02-28 17:19:06.751031	2022-02-28 17:19:06.749736	97a22e6c-5b94-4540-990e-08d57fb7645c	\N	73
34	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	2022-02-28 17:19:06.836009	2022-02-28 17:19:06.834622	efe442fa-3bbe-4eb5-bcb4-a131429c6c5e	\N	94
53	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	2022-02-28 17:19:06.919911	2022-02-28 17:19:06.918312	e9a0e71d-4f30-4257-a03c-d82ce1b6a2e9	\N	113
56	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	2022-02-28 17:19:06.93781	2022-02-28 17:19:06.937323	1a2c3a57-4747-430e-bd64-ead143990976	\N	116
61	uri://ed-fi.org/AccountClassificationDescriptor	Object	Object	Object	\N	\N	\N	2022-02-28 17:19:06.98095	2022-02-28 17:19:06.979542	a4315257-7ff1-4718-876c-b01cdce35dd1	\N	121
71	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	2022-02-28 17:19:07.03962	2022-02-28 17:19:07.037671	f8052a5b-ddf9-4fb9-8eb1-a7cfae31313e	\N	131
82	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	2022-02-28 17:19:07.10968	2022-02-28 17:19:07.10828	2dc512b0-4d57-46eb-8cab-56faa511beec	\N	142
86	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	2022-02-28 17:19:07.1549	2022-02-28 17:19:07.153505	bc062d58-515b-42be-8df9-8bdab5bce127	\N	146
94	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	2022-02-28 17:19:07.184862	2022-02-28 17:19:07.184835	10434232-6ae2-42ea-905d-cbea571dd0e1	\N	154
106	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Ecuadorian	Ecuadorian	Ecuadorian	\N	\N	\N	2022-02-28 17:19:07.51832	2022-02-28 17:19:07.51684	ef0c0f2c-bcde-4c4b-a727-9544575d2d14	\N	166
117	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-02-28 17:19:07.588648	2022-02-28 17:19:07.587169	9bf6aa05-0baf-49e3-bd3d-620b5e2428da	\N	177
161	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-02-28 17:19:07.767771	2022-02-28 17:19:07.766349	846bd8c2-c46b-4e4c-a98a-b19cf2a966bd	\N	221
168	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	2022-02-28 17:19:07.821665	2022-02-28 17:19:07.820262	6e2169ed-70e1-4850-ad86-a033d1d47d2e	\N	228
191	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	2022-02-28 17:19:07.919389	2022-02-28 17:19:07.917939	34e3ce61-0cce-4fbf-beee-ba1c004e7be4	\N	251
244	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-02-28 17:19:08.154835	2022-02-28 17:19:08.153474	e6a3a54d-e613-4f6f-adb5-837bd1a96857	\N	304
260	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	2022-02-28 17:19:08.235213	2022-02-28 17:19:08.233831	521c5b35-fe55-455d-8969-d11a9d469bf6	\N	320
265	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Available	Not Available	The student cannot access the internet in their primary place of residence because internet service is not available.	\N	\N	\N	2022-02-28 17:19:08.282571	2022-02-28 17:19:08.281116	89ac2145-48ea-4ed6-9960-de25fb8ae680	\N	325
269	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	2022-02-28 17:19:08.3251	2022-02-28 17:19:08.32367	305cacf4-2849-4191-aecc-5a9907f8514a	\N	329
284	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	2022-02-28 17:19:08.634945	2022-02-28 17:19:08.633536	c7efa27f-293d-4e8f-b6af-eb9fa7b19665	\N	344
288	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2022-02-28 17:19:08.680886	2022-02-28 17:19:08.679375	8be22321-6365-4e98-93fc-80ce88ff14b1	\N	347
295	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2022-02-28 17:19:08.705541	2022-02-28 17:19:08.705501	689e25bd-1f10-40d7-9191-886b1617b118	\N	355
306	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:09.006324	2022-02-28 17:19:09.004957	4de66ffe-5e7c-4e0c-8b63-4b78ddf4d35f	\N	365
308	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	2022-02-28 17:19:09.044879	2022-02-28 17:19:09.043718	be3b3d9a-c449-41f9-a382-c56834847380	\N	368
315	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	2022-02-28 17:19:09.085978	2022-02-28 17:19:09.08459	93d528ac-c17c-459f-9fda-ab237947b366	\N	375
320	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	2022-02-28 17:19:09.247144	2022-02-28 17:19:09.245782	da5b2e18-ab96-4227-b9b2-705c970ef954	\N	380
321	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2022-02-28 17:19:09.285904	2022-02-28 17:19:09.284501	422f037b-c2bb-4861-bf7c-9e80214a0e83	\N	381
327	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:09.303187	2022-02-28 17:19:09.303152	222a6ad2-0cad-42a1-8c64-4ddcc0116c21	\N	387
333	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	2022-02-28 17:19:09.339811	2022-02-28 17:19:09.338559	b6860b31-fc00-4fac-8af9-37cd58e1982e	\N	393
344	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-02-28 17:19:09.399141	2022-02-28 17:19:09.397725	62518445-0211-4a18-a5ca-2db9fcb93800	\N	404
355	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-02-28 17:19:09.464024	2022-02-28 17:19:09.462515	683eb423-b155-4cfd-bca8-7f019a60495e	\N	415
360	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:09.511756	2022-02-28 17:19:09.510122	f388f852-c953-4d98-a402-81d6a2d92f30	\N	420
372	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	2022-02-28 17:19:09.618552	2022-02-28 17:19:09.617047	c03e90f2-ec4d-4e4a-b8f1-79aeb3d7dcf5	\N	432
494	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	2022-02-28 17:19:10.001113	2022-02-28 17:19:10.001084	037b953d-f0c3-480c-9703-369ec3ab2fea	\N	554
496	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	2022-02-28 17:19:10.249074	2022-02-28 17:19:10.248983	923b4c3d-a3ae-4dec-b8a6-992484369c65	\N	556
507	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	2022-02-28 17:19:10.285311	2022-02-28 17:19:10.285283	a0852f0d-3403-4b1e-bc9c-f7a3d10f611a	\N	567
577	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	2022-02-28 17:19:10.754355	2022-02-28 17:19:10.75434	5f2d3469-141e-4029-a74b-ff248d786273	\N	637
582	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	2022-02-28 17:19:11.016728	2022-02-28 17:19:11.016701	d2973a02-7b3c-496b-b116-49a0cb3fe8f4	\N	642
622	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-02-28 17:19:11.170931	2022-02-28 17:19:11.169501	9b2d2ff1-b78f-40d8-a4c8-3ba543b604b0	\N	682
626	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	2022-02-28 17:19:11.21334	2022-02-28 17:19:11.21184	1ed0098e-f576-4e3f-affc-fb654a5d8592	\N	686
642	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-02-28 17:19:11.319827	2022-02-28 17:19:11.318329	97f4d5d8-61bc-424d-98a3-388616755c1d	\N	702
666	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	2022-02-28 17:19:11.420703	2022-02-28 17:19:11.419235	c7a45a1c-4bfd-418a-b0d7-6d3696ebfc67	\N	726
671	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	2022-02-28 17:19:11.469775	2022-02-28 17:19:11.468294	4e899598-89cc-49c5-aa86-afaf952faadc	\N	731
687	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	2022-02-28 17:19:11.54342	2022-02-28 17:19:11.541913	154d6d8c-6f91-4ce8-b752-f47ff862d8a9	\N	747
690	uri://gbisd.edu/CreditCategoryDescriptor	Honors	Honors	Honors	\N	\N	\N	2022-02-28 17:19:11.589482	2022-02-28 17:19:11.587927	49a169a1-0562-4cb1-8505-c0216f6d7e6d	\N	750
455	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	2022-02-28 17:19:09.878992	2022-02-28 17:19:09.878977	79f5286e-683d-4866-b1fa-e69e9d6be938	\N	515
110	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Puerto Rican	Puerto Rican	Puerto Rican	\N	\N	\N	2022-02-28 17:19:07.539861	2022-02-28 17:19:07.5397	8cc486b4-dd8f-4b20-9795-27421fa87153	\N	170
113	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Other Hispanic/Latino	Other Hispanic/Latino	Other Hispanic/Latino	\N	\N	\N	2022-02-28 17:19:07.546368	2022-02-28 17:19:07.546343	f56c4296-746a-4f18-a0f3-7287367f9503	\N	173
114	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:07.554636	2022-02-28 17:19:07.553882	1c6c9416-c9d2-4515-ad9e-d29d15359528	\N	174
118	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	2022-02-28 17:19:07.588786	2022-02-28 17:19:07.587187	f48244e2-6fd3-40c1-9dce-12a8cfd6d5c0	\N	178
119	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	2022-02-28 17:19:07.603168	2022-02-28 17:19:07.602966	178125dd-42a9-4018-afe6-cbed33768097	\N	179
120	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	2022-02-28 17:19:07.607562	2022-02-28 17:19:07.606992	2884e9e3-b844-4c0c-877a-43b4319c72a4	\N	180
123	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	2022-02-28 17:19:07.616225	2022-02-28 17:19:07.616171	d47cbc63-a06f-4f5e-9d5e-fae5f0b45f30	\N	183
124	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	2022-02-28 17:19:07.621341	2022-02-28 17:19:07.621213	055700a0-d0f3-4b2d-a3b1-b09ef1e8a2ee	\N	184
127	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	2022-02-28 17:19:07.628919	2022-02-28 17:19:07.6279	9ebcbfe3-b636-4290-90a4-0d995319cf7e	\N	187
128	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	2022-02-28 17:19:07.633237	2022-02-28 17:19:07.633134	8453357a-0436-4eb7-af76-e43d2e8fb5b6	\N	188
129	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	2022-02-28 17:19:07.641255	2022-02-28 17:19:07.64112	6ba27493-c57b-49ee-a283-29d3e189476f	\N	189
131	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	2022-02-28 17:19:07.64828	2022-02-28 17:19:07.648016	e9aa7b6f-f862-46a8-a541-4a171fb4e2a4	\N	191
133	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	2022-02-28 17:19:07.654194	2022-02-28 17:19:07.653847	a719c12b-b286-4aae-ae3e-cbfa90c9958f	\N	193
136	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	2022-02-28 17:19:07.665014	2022-02-28 17:19:07.664937	9550a471-0f0e-4f3c-b461-96b86ac7a9b4	\N	196
138	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	2022-02-28 17:19:07.670828	2022-02-28 17:19:07.670767	e3b996f2-bf42-4cdb-abf6-85592cf199f3	\N	198
139	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	2022-02-28 17:19:07.675246	2022-02-28 17:19:07.675198	cca19de6-e96b-4ba3-923b-01ec9e45ce06	\N	199
142	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	2022-02-28 17:19:07.684185	2022-02-28 17:19:07.684102	0878aa39-7669-46d3-99b9-b2ff41c685a4	\N	202
143	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	2022-02-28 17:19:07.690854	2022-02-28 17:19:07.690513	4b214739-86b1-46ac-94e8-b0b695142b8a	\N	203
145	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	2022-02-28 17:19:07.698319	2022-02-28 17:19:07.69826	b27e226e-8526-4782-8fe7-958163ae9bcd	\N	205
147	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	2022-02-28 17:19:07.704686	2022-02-28 17:19:07.704639	2d41849a-a6fa-4742-b19f-ea7ea199018a	\N	207
149	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	2022-02-28 17:19:07.71073	2022-02-28 17:19:07.710673	728d89ef-fd09-4b01-83fc-42227ecc2e0b	\N	209
151	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	2022-02-28 17:19:07.716622	2022-02-28 17:19:07.71654	32c9d620-b16b-4ef0-bcd7-09f19ecb1415	\N	211
154	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	2022-02-28 17:19:07.722931	2022-02-28 17:19:07.722887	aff08d58-d266-4e02-bee6-122cd7baa55e	\N	214
156	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	2022-02-28 17:19:07.729645	2022-02-28 17:19:07.729529	6b345042-31f1-4199-bc2d-a24bb5a7b591	\N	216
157	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	2022-02-28 17:19:07.732411	2022-02-28 17:19:07.732358	a7698d16-6862-404d-bdc2-5b6e49d9ba3c	\N	217
158	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.738645	2022-02-28 17:19:07.738602	ebb8a75c-3220-45f2-be41-60f941859767	\N	218
162	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-02-28 17:19:07.767705	2022-02-28 17:19:07.766332	cd40c8cd-762e-4dfd-a69c-0428513e1b41	\N	222
163	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:07.779275	2022-02-28 17:19:07.779178	5146eedf-8821-4ca2-8116-5b055ff5cb1a	\N	223
164	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2022-02-28 17:19:07.783115	2022-02-28 17:19:07.783077	c118578f-258c-4f6e-bba3-915c36daf576	\N	224
165	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	National	National	National	\N	\N	\N	2022-02-28 17:19:07.786791	2022-02-28 17:19:07.786725	e7220cc2-a993-478b-ad30-59001afa9ea9	\N	225
169	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	2022-02-28 17:19:07.821463	2022-02-28 17:19:07.820236	c9aa29c9-4291-415c-b9c1-10359bcb2144	\N	229
171	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	2022-02-28 17:19:07.834446	2022-02-28 17:19:07.834395	eaf848d3-bad6-43d2-97c2-845f9f6e84f1	\N	231
174	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	2022-02-28 17:19:07.841625	2022-02-28 17:19:07.841597	3ab54cc5-3a6f-445c-b9d6-751a5c661f8f	\N	234
175	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	2022-02-28 17:19:07.845332	2022-02-28 17:19:07.845272	1945b4d4-d20e-40b1-b3c4-b24f354b99e0	\N	235
176	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	2022-02-28 17:19:07.84918	2022-02-28 17:19:07.84913	c4af5d34-8f98-47a5-a2dd-70a7c310da48	\N	236
178	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	2022-02-28 17:19:07.854074	2022-02-28 17:19:07.854022	06f84f39-3fa7-4599-89df-6f7a278fe74c	\N	238
180	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	2022-02-28 17:19:07.860924	2022-02-28 17:19:07.860885	c28f22c0-5d88-41c0-96aa-e7658132c8da	\N	240
181	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	2022-02-28 17:19:07.865095	2022-02-28 17:19:07.865048	d7cf6e24-57b3-4bb4-bcba-3891662fafec	\N	241
182	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	2022-02-28 17:19:07.870416	2022-02-28 17:19:07.870373	413cedb9-2aa8-49cd-a47e-c1377201b82a	\N	242
184	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	2022-02-28 17:19:07.876373	2022-02-28 17:19:07.87633	a6c55f56-96ff-417b-93f8-726dcc020f74	\N	244
187	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	2022-02-28 17:19:07.882474	2022-02-28 17:19:07.882428	f0e6b8d8-00d7-435e-a328-a4c476d8411d	\N	247
188	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	2022-02-28 17:19:07.888034	2022-02-28 17:19:07.887962	10cc963b-1ef4-4f50-a7d9-d767b91f7030	\N	248
141	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	2022-02-28 17:19:07.68336	2022-02-28 17:19:07.683313	9c4aa513-569e-42c1-9a8f-fe285bbe196a	\N	201
144	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	2022-02-28 17:19:07.690915	2022-02-28 17:19:07.690798	4599def5-ce34-467f-b4b4-081c8b92db46	\N	204
146	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	2022-02-28 17:19:07.698479	2022-02-28 17:19:07.698456	89da304a-21ea-4d6c-b1ec-34dcb33cb2ae	\N	206
148	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	2022-02-28 17:19:07.704899	2022-02-28 17:19:07.704853	87321b4a-04b7-4fb7-a18f-98d2135e72b6	\N	208
150	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	2022-02-28 17:19:07.710837	2022-02-28 17:19:07.710788	1dea48be-b36b-4c28-9322-bfc26c2d0122	\N	210
152	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	2022-02-28 17:19:07.716672	2022-02-28 17:19:07.716624	dfffc155-95f5-4934-b8dc-93c636f08cbc	\N	212
153	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	2022-02-28 17:19:07.722106	2022-02-28 17:19:07.722045	217b27a0-0634-4478-997b-cd7a5c7e2794	\N	213
155	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	2022-02-28 17:19:07.726844	2022-02-28 17:19:07.7268	2fda2d35-9fce-4916-9d49-f2af921dfa81	\N	215
160	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2022-02-28 17:19:07.767703	2022-02-28 17:19:07.766336	c2e0ea83-880e-4b62-a450-0b99c373fe17	\N	220
166	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	2022-02-28 17:19:07.78841	2022-02-28 17:19:07.788393	49ed9e3d-dfdd-471c-8957-85f9dd4e5bcf	\N	226
167	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	2022-02-28 17:19:07.821626	2022-02-28 17:19:07.820243	d081f027-382b-40af-a01a-5275ed952c55	\N	227
173	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	2022-02-28 17:19:07.840303	2022-02-28 17:19:07.84026	d4143e6d-ba05-4efe-b0b6-20d05a7332d4	\N	233
177	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.852975	2022-02-28 17:19:07.852909	6af6444d-cbbd-4f09-85d3-e0cb74834500	\N	237
179	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	2022-02-28 17:19:07.859278	2022-02-28 17:19:07.859238	a76b98e2-d074-4516-a5ee-54b308fc5b71	\N	239
183	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	2022-02-28 17:19:07.871646	2022-02-28 17:19:07.871604	f1a2c6d0-0728-4af8-8348-5c81da074745	\N	243
185	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	2022-02-28 17:19:07.87649	2022-02-28 17:19:07.876439	cd6b12f7-efc6-4b59-a9ac-6427a4ba931a	\N	245
186	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	2022-02-28 17:19:07.880808	2022-02-28 17:19:07.880762	7e84df39-6fa1-4a57-ac29-b4db18a079a6	\N	246
190	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	2022-02-28 17:19:07.919401	2022-02-28 17:19:07.917929	26cd1ac2-7789-4ffc-8b72-0a24e2788cd9	\N	250
194	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	2022-02-28 17:19:07.934693	2022-02-28 17:19:07.934661	51b17cca-e1b3-4e6f-aecb-1c5ce992ce76	\N	254
195	uri://ed-fi.org/AssessmentPeriodDescriptor	MOY	MOY	Middle of Year	\N	\N	\N	2022-02-28 17:19:07.968613	2022-02-28 17:19:07.967264	14ee1ca1-fc60-4f00-a965-d5dcec0751a6	\N	255
199	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	2022-02-28 17:19:07.981511	2022-02-28 17:19:07.981243	96588ed2-4b3d-496b-bea9-50be3c7b82d0	\N	259
201	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	2022-02-28 17:19:07.986141	2022-02-28 17:19:07.98611	40b97cdc-9609-4fdd-ba63-63361581b585	\N	261
203	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	2022-02-28 17:19:08.000022	2022-02-28 17:19:07.999985	b76bdc4c-d27d-4e10-ad1d-9347060fcf05	\N	263
204	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	2022-02-28 17:19:08.004298	2022-02-28 17:19:08.004208	fb7185e8-e2df-4321-80a2-b15b11f97db0	\N	264
207	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	2022-02-28 17:19:08.012958	2022-02-28 17:19:08.012927	64fbee86-f4d9-4859-92fb-64948111e9a0	\N	267
208	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	2022-02-28 17:19:08.01757	2022-02-28 17:19:08.017525	968301b4-10fe-4e95-848c-a2a5b1148de0	\N	268
211	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	2022-02-28 17:19:08.024277	2022-02-28 17:19:08.024257	603d900a-f3c2-40ee-8679-6026187b8e69	\N	271
212	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	2022-02-28 17:19:08.028947	2022-02-28 17:19:08.028922	64e2e8ec-35a8-4cb1-b9b2-7a65b0097f99	\N	272
214	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	2022-02-28 17:19:08.036575	2022-02-28 17:19:08.036523	75ad28db-802e-415b-895b-d8c21bdc6106	\N	274
216	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	2022-02-28 17:19:08.041733	2022-02-28 17:19:08.041686	d5126839-1c00-4500-bf3b-6449d365ff18	\N	276
220	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	2022-02-28 17:19:08.057083	2022-02-28 17:19:08.056986	eb8a46e8-cc5d-40cf-ac36-056057b77dd4	\N	280
223	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	2022-02-28 17:19:08.066809	2022-02-28 17:19:08.066769	a70299f8-e9ba-4c20-b062-f976b639d393	\N	283
227	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	2022-02-28 17:19:08.080634	2022-02-28 17:19:08.080605	02eee252-6003-4ad9-83fb-ab6ef03db88f	\N	287
229	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	2022-02-28 17:19:08.085171	2022-02-28 17:19:08.084995	fa388c57-f840-4925-a5b4-da4b8c18cfb0	\N	289
231	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	2022-02-28 17:19:08.092402	2022-02-28 17:19:08.092352	8df5cd01-ba52-4a0f-a020-c393ff4d61f1	\N	291
234	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	2022-02-28 17:19:08.098919	2022-02-28 17:19:08.098896	686727bd-7f54-4178-a7bf-cb5a9fef19f8	\N	294
235	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	2022-02-28 17:19:08.104831	2022-02-28 17:19:08.10449	c241f6f0-9726-4c73-9670-346826f42c3e	\N	295
237	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	2022-02-28 17:19:08.110853	2022-02-28 17:19:08.110819	f499007a-211f-4f54-a4b7-550b444e0331	\N	297
240	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	2022-02-28 17:19:08.121305	2022-02-28 17:19:08.121207	71106bf9-3ae9-44a2-8cf9-aa528ea06c64	\N	300
243	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-02-28 17:19:08.154735	2022-02-28 17:19:08.153457	925a02fb-f3ca-488b-801a-509e940248f6	\N	303
248	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	2022-02-28 17:19:08.172536	2022-02-28 17:19:08.172515	ecc250c3-c75a-4b13-903b-38a686e884d3	\N	308
252	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	2022-02-28 17:19:08.184355	2022-02-28 17:19:08.184304	6a403718-8894-4eaa-a30c-15e635c548bc	\N	312
2766	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	2022-02-28 17:19:26.85833	2022-02-28 17:19:26.858295	dd42ea27-8330-403b-a298-c83d1ede707f	\N	2826
189	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	2022-02-28 17:19:07.919204	2022-02-28 17:19:07.917914	3c1375d0-4afe-4dd4-9bc0-8716961206a7	\N	249
193	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2022-02-28 17:19:07.930743	2022-02-28 17:19:07.930694	3b0ed85d-4778-40c0-be66-c9a77c688acb	\N	253
196	uri://ed-fi.org/AssessmentPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	2022-02-28 17:19:07.968685	2022-02-28 17:19:07.967257	71bd1e04-a66e-4628-9645-d68119a52923	\N	256
198	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	2022-02-28 17:19:07.979575	2022-02-28 17:19:07.978211	36ff5944-b1ea-4952-acdf-f5b8d0934e24	\N	258
200	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	2022-02-28 17:19:07.986058	2022-02-28 17:19:07.986022	37b8cd36-b517-4a0a-9eaa-bdd664631825	\N	260
202	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	2022-02-28 17:19:07.999952	2022-02-28 17:19:07.999894	c5bf689d-ddf9-4765-b1db-f6c5bb41f914	\N	262
205	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	2022-02-28 17:19:08.006066	2022-02-28 17:19:08.006018	f46e8726-27b5-41c1-8d11-8d5315a6c3d3	\N	265
206	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	2022-02-28 17:19:08.01158	2022-02-28 17:19:08.011464	48277b07-24de-4dc6-a7c9-12b2bf2d1eb9	\N	266
209	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	2022-02-28 17:19:08.018632	2022-02-28 17:19:08.018591	abccf0d7-4672-4a87-80a7-9422eba2dfaa	\N	269
210	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	2022-02-28 17:19:08.023922	2022-02-28 17:19:08.023872	f5692eb1-ac43-47eb-b5d4-a41c13c02888	\N	270
213	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	2022-02-28 17:19:08.030497	2022-02-28 17:19:08.030466	0f7dfb67-2ce6-4848-b284-a570a6e57ff7	\N	273
215	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	2022-02-28 17:19:08.037682	2022-02-28 17:19:08.037639	b1ef1693-c1eb-4fae-9d8e-16f744fe175a	\N	275
217	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2022-02-28 17:19:08.042606	2022-02-28 17:19:08.042554	963477be-94bc-4742-b005-4e93415cc38e	\N	277
218	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	2022-02-28 17:19:08.051557	2022-02-28 17:19:08.051504	d24b366b-40e9-44b9-a94d-0d122c0e5cab	\N	278
219	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	2022-02-28 17:19:08.056336	2022-02-28 17:19:08.056205	acafa5a4-b552-46cb-ac71-200587a3d130	\N	279
222	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	2022-02-28 17:19:08.062368	2022-02-28 17:19:08.062319	a0c6221d-a976-4394-a44c-f8bad4b895a4	\N	282
224	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	2022-02-28 17:19:08.068024	2022-02-28 17:19:08.067961	85b8caa2-2644-44ee-a79d-569175ee1805	\N	284
225	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	2022-02-28 17:19:08.073508	2022-02-28 17:19:08.073449	1061fc2d-0f10-4c03-a3ca-e9f981728997	\N	285
226	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	2022-02-28 17:19:08.076529	2022-02-28 17:19:08.076473	d7eb8120-6d4a-4708-9a39-336b57e4e011	\N	286
228	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	2022-02-28 17:19:08.081777	2022-02-28 17:19:08.081718	5fbd8936-c755-4efe-ad04-5d4a21a84bbf	\N	288
230	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	2022-02-28 17:19:08.08687	2022-02-28 17:19:08.086835	0f1444ce-67c9-4cb0-936d-72b855720dc9	\N	290
232	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	2022-02-28 17:19:08.093972	2022-02-28 17:19:08.093899	0686c4da-55bb-4c11-b892-59691775a097	\N	292
233	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:08.098542	2022-02-28 17:19:08.098503	4db5c7fb-fd8c-4dfc-a923-a0e0c38aa34f	\N	293
236	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	2022-02-28 17:19:08.106627	2022-02-28 17:19:08.106423	147b4e12-0981-4340-ab7c-d554ec184436	\N	296
238	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	2022-02-28 17:19:08.111885	2022-02-28 17:19:08.111865	49c4a42e-2023-4b6e-bd13-953f26bf9079	\N	298
239	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	2022-02-28 17:19:08.11563	2022-02-28 17:19:08.115599	0caba3aa-dc83-4608-98c1-0d2221ec6ed6	\N	299
241	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	2022-02-28 17:19:08.122791	2022-02-28 17:19:08.122757	ae22e4e1-1d40-428e-a057-f1cfa71c47fc	\N	301
242	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-02-28 17:19:08.154883	2022-02-28 17:19:08.153448	b2b673f7-73c4-470c-b98d-dddc4b79b06c	\N	302
246	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	2022-02-28 17:19:08.166595	2022-02-28 17:19:08.166568	5b1f817b-5e46-4769-9601-e077ace831b5	\N	306
247	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	2022-02-28 17:19:08.169625	2022-02-28 17:19:08.169529	8f0e991c-2d0b-4334-9f10-61ee3d542fac	\N	307
249	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	2022-02-28 17:19:08.17352	2022-02-28 17:19:08.173434	664aa1dd-2a98-48cd-9814-bd5391decbba	\N	309
250	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	2022-02-28 17:19:08.178885	2022-02-28 17:19:08.178836	3a48fb94-87be-473e-9cd4-4cee48e59ed9	\N	310
251	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	2022-02-28 17:19:08.183056	2022-02-28 17:19:08.183	8ccb06bd-03e1-4838-a5a6-dcca489d2f97	\N	311
253	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2022-02-28 17:19:08.186537	2022-02-28 17:19:08.186502	d3b6b869-2cee-4861-92aa-c643493e94d6	\N	313
254	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	2022-02-28 17:19:08.193074	2022-02-28 17:19:08.193018	cb68d58e-c08b-4a9c-8467-c5a9cf448a95	\N	314
255	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	2022-02-28 17:19:08.196778	2022-02-28 17:19:08.196698	6c8a9e1e-1e32-4032-8b39-047a001b3f97	\N	315
257	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	2022-02-28 17:19:08.200574	2022-02-28 17:19:08.200519	e2e35133-cc9f-4605-9fa9-2aaba484aff0	\N	317
258	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	2022-02-28 17:19:08.235148	2022-02-28 17:19:08.233805	a19203aa-fb71-4645-8b0b-0773c064c13f	\N	318
262	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	2022-02-28 17:19:08.246176	2022-02-28 17:19:08.246124	59056cdc-aee5-42b9-ba61-bb04c0c71d89	\N	322
263	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	2022-02-28 17:19:08.251337	2022-02-28 17:19:08.251286	3139896b-060e-47a5-935e-8cfa1f5afd69	\N	323
2769	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.864239	2022-02-28 17:19:26.864208	a2f24bf9-2209-4d78-93ca-98e2792ced2c	\N	2829
256	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	2022-02-28 17:19:08.198055	2022-02-28 17:19:08.198014	b83e4bec-bffa-45aa-a429-06b50777185d	\N	316
259	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	2022-02-28 17:19:08.235219	2022-02-28 17:19:08.23382	7e5f9a1f-6d66-478a-865e-72e4b9518bd8	\N	319
266	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Other	Other	The reason why a student cannot access the internet in their primary place of residence is not yet defined.	\N	\N	\N	2022-02-28 17:19:08.282571	2022-02-28 17:19:08.281092	74b25d65-5023-4bc0-aa9a-22ae09160e39	\N	326
271	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	2022-02-28 17:19:08.324842	2022-02-28 17:19:08.32364	e8945a56-19eb-4e82-bfee-7692bc0a413b	\N	330
274	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	2022-02-28 17:19:08.580395	2022-02-28 17:19:08.580374	942c1fe9-4109-4a9a-983b-e234ca9b8881	\N	334
277	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	2022-02-28 17:19:08.592518	2022-02-28 17:19:08.592491	06aa329a-48a6-4555-910b-134223400eab	\N	337
280	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	2022-02-28 17:19:08.599669	2022-02-28 17:19:08.599646	8646f978-28ee-47fc-8146-2f60f68acd92	\N	340
283	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:08.634802	2022-02-28 17:19:08.633526	cd13a71f-34b8-487b-a22b-31be4e24bcde	\N	343
290	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2022-02-28 17:19:08.680725	2022-02-28 17:19:08.679354	4064dcf6-8498-4ecc-b02b-0535f927a7e8	\N	350
294	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	2022-02-28 17:19:08.700115	2022-02-28 17:19:08.700004	14f03a1c-cbe6-4f71-99f4-1bbe0513146c	\N	354
297	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2022-02-28 17:19:08.950808	2022-02-28 17:19:08.950767	cd5f338b-2c25-4c1e-b980-ae2834e4bd86	\N	357
298	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2022-02-28 17:19:08.959199	2022-02-28 17:19:08.958959	1121df2f-a525-4217-af3a-7ecf04a7bcbc	\N	358
301	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2022-02-28 17:19:08.967481	2022-02-28 17:19:08.967411	128bce7f-cd10-49d3-97f1-fe968f31f47b	\N	361
302	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2022-02-28 17:19:08.973106	2022-02-28 17:19:08.972693	472c2d4b-617f-4fae-8b7b-f1964399c7f7	\N	362
305	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	2022-02-28 17:19:09.006217	2022-02-28 17:19:09.004935	8d15c73f-bee4-4ebb-a64f-78d35fa2dc00	\N	367
311	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	2022-02-28 17:19:09.045114	2022-02-28 17:19:09.043699	d4a2a208-66fa-4d23-baa8-3b67182257de	\N	371
313	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2022-02-28 17:19:09.085989	2022-02-28 17:19:09.08459	c85caf23-77be-47e7-a979-0e0eee369707	\N	373
318	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	2022-02-28 17:19:09.24717	2022-02-28 17:19:09.245786	1040835d-9826-4ea4-acec-11f3f8792988	\N	378
323	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	2022-02-28 17:19:09.285662	2022-02-28 17:19:09.284484	dfa488b9-48b3-4152-9d43-93568ec22a53	\N	383
326	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:09.301425	2022-02-28 17:19:09.301359	1855241a-06fd-48a1-b822-9b22835771ff	\N	386
330	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	2022-02-28 17:19:09.339703	2022-02-28 17:19:09.33854	19d2221c-a4af-480e-b8f7-f324c8bdc1de	\N	390
334	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	2022-02-28 17:19:09.351165	2022-02-28 17:19:09.351118	91115009-3f1e-4f7f-b55a-e06d66dde651	\N	394
337	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	2022-02-28 17:19:09.358662	2022-02-28 17:19:09.358629	9a6f3e6d-c3ed-4ad0-a9d2-205ceed8c21d	\N	397
338	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	2022-02-28 17:19:09.364877	2022-02-28 17:19:09.364843	733ba9b8-5f39-4dbb-a7d9-052b19213cb9	\N	398
342	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-02-28 17:19:09.398881	2022-02-28 17:19:09.397703	4f4cd7f2-9a97-4ed4-89ef-316b56a8fced	\N	402
347	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-02-28 17:19:09.417131	2022-02-28 17:19:09.417097	fcfd740c-b9ed-4844-84eb-00f7b967a860	\N	407
351	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-02-28 17:19:09.429446	2022-02-28 17:19:09.429402	0e9a7955-930e-48ba-b62e-1ad4f9772868	\N	411
354	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-02-28 17:19:09.463719	2022-02-28 17:19:09.462497	ce08e8ac-e887-443f-9581-e65d1a962467	\N	414
363	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	2022-02-28 17:19:09.516637	2022-02-28 17:19:09.515355	875d570b-7594-4bf8-8f76-184c3b7a0529	\N	423
367	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	2022-02-28 17:19:09.574714	2022-02-28 17:19:09.573287	47962b68-5769-4f60-8e9f-eb7cbecec61b	\N	427
374	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	2022-02-28 17:19:09.618266	2022-02-28 17:19:09.617034	f72ef8d0-3424-4455-8e66-f4a44f4b8db4	\N	434
381	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	2022-02-28 17:19:09.646937	2022-02-28 17:19:09.646898	3096a68c-363c-4e60-9eb0-8ebb66983671	\N	441
383	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	2022-02-28 17:19:09.655123	2022-02-28 17:19:09.655089	6c53555d-f707-4a47-a51a-f173732883a7	\N	443
388	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	2022-02-28 17:19:09.669999	2022-02-28 17:19:09.669943	c3769087-ce22-405c-a518-530274c7bd91	\N	448
394	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	2022-02-28 17:19:09.690028	2022-02-28 17:19:09.689958	6a48cfd7-bdca-4d87-8b6e-77cd2bff2c97	\N	454
398	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	2022-02-28 17:19:09.702947	2022-02-28 17:19:09.702893	b5ca68f6-535d-4b2d-9be6-5344bd8e861f	\N	458
401	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	2022-02-28 17:19:09.715161	2022-02-28 17:19:09.715125	d053fcef-5aad-476e-80a1-37f930323ce9	\N	461
403	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	2022-02-28 17:19:09.717838	2022-02-28 17:19:09.717802	8761f6e0-c0d0-4b3a-9500-f2e2717fa723	\N	463
407	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	2022-02-28 17:19:09.73403	2022-02-28 17:19:09.73398	c38ed5bb-5633-41a8-83d3-bae2c34991e6	\N	467
408	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	2022-02-28 17:19:09.738699	2022-02-28 17:19:09.738665	6c667f49-f74b-4363-b3e6-5125f57c8c72	\N	468
411	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	2022-02-28 17:19:09.745257	2022-02-28 17:19:09.745229	eaa2e6f0-4f8c-46dd-8845-874f6a57055c	\N	471
413	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	2022-02-28 17:19:09.75196	2022-02-28 17:19:09.751921	fb3b531f-bf57-4658-bee6-3d8c4ac2d718	\N	473
415	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	2022-02-28 17:19:09.758093	2022-02-28 17:19:09.758053	b41d31a8-970e-4fa1-8b79-6c2411f77086	\N	475
416	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	2022-02-28 17:19:09.762342	2022-02-28 17:19:09.762323	29bda019-2113-45d1-811e-45453bcb49b6	\N	476
418	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	2022-02-28 17:19:09.768287	2022-02-28 17:19:09.768236	6a6d9443-50ed-470c-9413-ffb94ceeab3d	\N	478
420	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	2022-02-28 17:19:09.773833	2022-02-28 17:19:09.773802	824c28c1-8659-4db9-acc1-6559f5369cbb	\N	480
264	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Desired	Not Desired	The student cannot access the internet in their primary place of residence because the parent or guardian chooses not to subscribe to internet service.	\N	\N	\N	2022-02-28 17:19:08.282457	2022-02-28 17:19:08.281093	9e876c64-ed5a-43ad-9454-58426970443d	\N	324
268	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:08.32502	2022-02-28 17:19:08.323632	09823d4b-db8c-4b1d-9f0d-6ae9dab3b2a7	\N	328
272	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	2022-02-28 17:19:08.363921	2022-02-28 17:19:08.362708	b461f765-1f04-4f26-b03c-1fbe1ce1d001	\N	332
273	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	2022-02-28 17:19:08.580239	2022-02-28 17:19:08.579589	25808ba8-7b63-4bba-94b4-405930b74ae6	\N	333
276	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:08.587142	2022-02-28 17:19:08.58709	8e7d4a32-99e2-48f5-a0f0-9bc07e7f44f8	\N	336
278	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	2022-02-28 17:19:08.593436	2022-02-28 17:19:08.593395	baaac4b4-70d0-4b31-aedb-029a845072d6	\N	338
279	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	2022-02-28 17:19:08.599432	2022-02-28 17:19:08.599335	ce049093-bd6f-460a-be31-63c51f027ebf	\N	339
281	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	2022-02-28 17:19:08.6059	2022-02-28 17:19:08.605854	99b39c38-48c9-4be0-bffb-8ea5eec4bec9	\N	341
285	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	2022-02-28 17:19:08.634942	2022-02-28 17:19:08.633521	daffb9c3-796b-44ef-955c-a35a8e5e0841	\N	345
286	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	2022-02-28 17:19:08.646157	2022-02-28 17:19:08.64611	5e22f204-b122-4fee-8505-22e2a983972b	\N	346
287	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2022-02-28 17:19:08.680884	2022-02-28 17:19:08.679346	e56076ff-501c-452b-911f-a92d23332ecf	\N	348
291	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2022-02-28 17:19:08.692523	2022-02-28 17:19:08.692477	e3869c3a-bccb-48b3-8d0c-7e23a01f330d	\N	351
293	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2022-02-28 17:19:08.699572	2022-02-28 17:19:08.699486	feca0f15-0eaa-4764-95d9-2bb025df627e	\N	353
296	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2022-02-28 17:19:08.950732	2022-02-28 17:19:08.950672	4ca1c6e8-f83a-4c77-9328-def1fc8152f1	\N	356
299	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2022-02-28 17:19:08.960013	2022-02-28 17:19:08.959974	863f50a4-f8ab-4e03-a558-b525750f1f3a	\N	359
300	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:08.967223	2022-02-28 17:19:08.966975	330954fa-a974-4d36-bb17-a919c391f534	\N	360
303	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2022-02-28 17:19:08.974829	2022-02-28 17:19:08.973371	c199c9e9-8306-46d1-99ca-bc428a291b30	\N	363
304	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	2022-02-28 17:19:09.006223	2022-02-28 17:19:09.004931	485420f2-c5c6-4019-8efb-25a8307cfa13	\N	364
309	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2022-02-28 17:19:09.04488	2022-02-28 17:19:09.043691	14245b1c-b247-42b0-a54d-c2affc0c35c4	\N	369
312	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	2022-02-28 17:19:09.085986	2022-02-28 17:19:09.084574	b707ad14-cd73-4d69-a115-55d1bb74ca7c	\N	372
316	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	2022-02-28 17:19:09.104344	2022-02-28 17:19:09.104307	5fba344a-5643-446b-942f-425728e2d020	\N	376
317	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	2022-02-28 17:19:09.247165	2022-02-28 17:19:09.245766	0b2017e7-55f4-4372-aefe-9a4018a03d49	\N	377
322	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-02-28 17:19:09.285901	2022-02-28 17:19:09.28448	00a47337-48b2-4682-8c34-5885f35e611b	\N	382
325	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-02-28 17:19:09.301413	2022-02-28 17:19:09.30073	f189afc1-c9cf-403b-913c-091b0434e5c4	\N	385
328	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	2022-02-28 17:19:09.304527	2022-02-28 17:19:09.304471	f1c42892-35d5-417e-a885-e9450c87ced0	\N	388
329	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-02-28 17:19:09.313754	2022-02-28 17:19:09.313713	743db264-ff4a-4a4e-bf56-6849ad7ffa8f	\N	389
331	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	2022-02-28 17:19:09.339703	2022-02-28 17:19:09.338536	ecff9226-73db-4eaa-bb56-c20399adbc81	\N	391
335	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	2022-02-28 17:19:09.351977	2022-02-28 17:19:09.351939	d9bdcac5-c7bd-4eb6-8ed3-50ec62adc209	\N	395
336	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	2022-02-28 17:19:09.358578	2022-02-28 17:19:09.358541	80ce4d77-2b90-4901-8860-7f07c17aabf4	\N	396
339	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:09.365896	2022-02-28 17:19:09.365845	49b0fde7-78f2-4a9f-8063-6038eb6801a6	\N	399
340	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	2022-02-28 17:19:09.368893	2022-02-28 17:19:09.368836	cf138e3d-9e7c-4c3f-938f-76defc7f520e	\N	400
341	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-02-28 17:19:09.39887	2022-02-28 17:19:09.397699	fefbe3fc-5fcd-487a-9953-c898d7d7732f	\N	401
345	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-02-28 17:19:09.409248	2022-02-28 17:19:09.409208	f5fdffc1-bb63-4e95-8490-f5f5e78a030f	\N	405
346	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-02-28 17:19:09.414556	2022-02-28 17:19:09.414517	b32a28f1-9d3b-450a-8180-e4381f581d7f	\N	406
348	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-02-28 17:19:09.418052	2022-02-28 17:19:09.418036	74e9996c-d982-4f9d-ab05-e243e331666c	\N	408
349	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-02-28 17:19:09.423081	2022-02-28 17:19:09.423043	1340df64-c8bb-4113-89df-d916dd26e214	\N	409
350	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-02-28 17:19:09.429067	2022-02-28 17:19:09.429011	18da1bb8-6a50-4449-9188-0013199bca39	\N	410
352	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-02-28 17:19:09.432539	2022-02-28 17:19:09.432501	07a9329d-ccc4-4295-8409-a1cf5637c3cf	\N	412
356	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-02-28 17:19:09.463719	2022-02-28 17:19:09.462493	339af2d2-7889-4202-8d89-4113aeddb2d3	\N	416
357	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-02-28 17:19:09.474455	2022-02-28 17:19:09.474409	f58556d1-6705-47e8-a920-8135fa157bba	\N	417
358	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-02-28 17:19:09.478593	2022-02-28 17:19:09.478441	c7ad5c49-7fe7-4471-81e5-c0b915968c9c	\N	418
359	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-02-28 17:19:09.48144	2022-02-28 17:19:09.48141	9f80f550-2286-485a-a024-61e6e81be5b6	\N	419
361	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	2022-02-28 17:19:09.516516	2022-02-28 17:19:09.515344	1bc258e9-dedf-4b75-9a8e-b2208109150c	\N	421
364	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	2022-02-28 17:19:09.523982	2022-02-28 17:19:09.523938	d7b5b31d-cb60-4a25-be34-f9d26852a812	\N	424
365	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	2022-02-28 17:19:09.531017	2022-02-28 17:19:09.530926	103a5a7c-3c11-4a48-84d0-4208141be3a5	\N	425
2770	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	2022-02-28 17:19:26.868351	2022-02-28 17:19:26.868309	e3835f04-828a-49f7-bbff-0fecedea6032	\N	2830
362	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	2022-02-28 17:19:09.516705	2022-02-28 17:19:09.515363	92126688-965d-4643-beb8-93c5d27fb6b6	\N	422
368	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	2022-02-28 17:19:09.57457	2022-02-28 17:19:09.573278	429df1ab-3d65-456b-a7c6-c618ec000a8e	\N	428
373	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	2022-02-28 17:19:09.618302	2022-02-28 17:19:09.617055	f9d2096d-fca2-4d63-966d-53e0094d08ee	\N	433
377	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	2022-02-28 17:19:09.636494	2022-02-28 17:19:09.63645	dcd21475-edbb-472d-9930-732e42b5be6b	\N	437
390	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	2022-02-28 17:19:09.675292	2022-02-28 17:19:09.675258	89e18479-1aa7-4936-8416-5206beeea4db	\N	450
395	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	2022-02-28 17:19:09.691788	2022-02-28 17:19:09.691763	6320f440-5c41-4385-b5e8-490c14c39794	\N	455
465	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	2022-02-28 17:19:09.911548	2022-02-28 17:19:09.911455	b01cb467-9033-4179-a489-27779029d960	\N	525
470	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	2022-02-28 17:19:09.926446	2022-02-28 17:19:09.926414	42e2a21c-0ed7-4b84-af3b-e0c7a6629d61	\N	530
473	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	2022-02-28 17:19:09.940974	2022-02-28 17:19:09.940819	ce5111b6-a2d5-4f68-9103-7ee532fa700f	\N	533
493	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	2022-02-28 17:19:09.997801	2022-02-28 17:19:09.997767	e9fe3bdc-96f5-445e-ba5c-39a93751014f	\N	553
495	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	2022-02-28 17:19:10.248245	2022-02-28 17:19:10.248116	756d4993-0d06-4259-b591-9bb89d480490	\N	555
501	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	2022-02-28 17:19:10.264134	2022-02-28 17:19:10.264078	f05da282-20b9-4a18-a3ac-4456ba6ae549	\N	561
504	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	2022-02-28 17:19:10.277557	2022-02-28 17:19:10.277493	e5bf7961-9936-4470-9ee7-fc713a9bc597	\N	564
523	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	2022-02-28 17:19:10.580179	2022-02-28 17:19:10.580142	006e7823-bc74-4a22-9456-48ef2a59db79	\N	583
555	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	2022-02-28 17:19:10.687813	2022-02-28 17:19:10.687763	1cbc426c-80b7-44aa-a5ed-cae5866425a6	\N	615
578	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	2022-02-28 17:19:10.75539	2022-02-28 17:19:10.755351	64a08ce3-e515-4cad-a9cd-aa3dc6b24518	\N	638
580	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	2022-02-28 17:19:11.014951	2022-02-28 17:19:11.014292	a556ecb3-b5c0-48fd-a144-e8ba41fc2ebd	\N	640
585	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	2022-02-28 17:19:11.031163	2022-02-28 17:19:11.031113	036ed68d-804c-4f92-bbde-64e9e5f12f1e	\N	645
596	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	2022-02-28 17:19:11.066956	2022-02-28 17:19:11.066536	4f52b4d6-306d-40ce-b4a6-e9f0404ed7a4	\N	656
600	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	2022-02-28 17:19:11.080817	2022-02-28 17:19:11.080512	f49a98d8-6ade-4583-815d-3c4bb22aa02f	\N	660
612	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	2022-02-28 17:19:11.11806	2022-02-28 17:19:11.117783	1123bdae-c44e-44da-8808-a23f6fae59a1	\N	672
623	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-02-28 17:19:11.17071	2022-02-28 17:19:11.169496	a45a8c39-6d14-41ef-ab94-705eb3dbe6a1	\N	683
627	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	2022-02-28 17:19:11.213333	2022-02-28 17:19:11.21183	a455a553-5fa4-48d0-ae09-9dfa37626480	\N	687
629	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	2022-02-28 17:19:11.253955	2022-02-28 17:19:11.252539	8e8e9d9b-a21c-44af-8988-cbc92b56257a	\N	689
641	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-02-28 17:19:11.319828	2022-02-28 17:19:11.318325	7740dc8b-ae86-41ab-afaf-9fde71ad3713	\N	700
645	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	2022-02-28 17:19:11.337034	2022-02-28 17:19:11.336924	13e71313-adbe-4518-872b-de942a7405cc	\N	705
653	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	2022-02-28 17:19:11.358876	2022-02-28 17:19:11.35884	84ba25f1-c79f-478e-a0ef-93aacf49ae16	\N	713
665	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	2022-02-28 17:19:11.420462	2022-02-28 17:19:11.419204	7cbb480b-04e6-4382-8f6c-5061e9c21a92	\N	725
670	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	2022-02-28 17:19:11.469498	2022-02-28 17:19:11.468275	75a9b8e6-3af9-4dd2-a420-88798936b89f	\N	730
683	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	2022-02-28 17:19:11.509843	2022-02-28 17:19:11.509806	a485ec22-d65b-460d-b0b1-1a894d5d9e8c	\N	743
685	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	2022-02-28 17:19:11.543081	2022-02-28 17:19:11.541906	d6b5bce1-f996-40a2-8526-ea391810216f	\N	745
691	uri://gbisd.edu/CreditCategoryDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	2022-02-28 17:19:11.589105	2022-02-28 17:19:11.587919	992a6362-5219-4861-96a3-36e771f4bfc3	\N	751
695	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	2022-02-28 17:19:11.636333	2022-02-28 17:19:11.634837	86d5f673-1086-4252-80d8-806509163349	\N	755
700	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2022-02-28 17:19:11.656785	2022-02-28 17:19:11.656376	389fece1-87b1-4926-8834-924b2939d794	\N	760
702	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	2022-02-28 17:19:11.669518	2022-02-28 17:19:11.669416	601c886f-763b-47f3-b61a-774da1b9eaee	\N	762
707	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	2022-02-28 17:19:11.68511	2022-02-28 17:19:11.685046	259ee984-35dc-4ce3-9c4f-e62492166a04	\N	767
710	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2022-02-28 17:19:11.729056	2022-02-28 17:19:11.727791	5787d9ff-a7c1-4cb1-89cb-9cdb88cbb2fc	\N	770
716	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2022-02-28 17:19:11.745289	2022-02-28 17:19:11.745232	4762996f-28c8-4f18-805d-468ebb06aa36	\N	776
720	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2022-02-28 17:19:11.760499	2022-02-28 17:19:11.760454	6b51b65b-6c0c-4db8-8478-ff9dff0e7259	\N	780
728	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	2022-02-28 17:19:11.812999	2022-02-28 17:19:11.811761	d4b08e6f-00c8-4363-938d-a6cd7219ca5d	\N	788
732	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	2022-02-28 17:19:11.827347	2022-02-28 17:19:11.827152	c84f954d-c467-4e67-b195-839f085006e7	\N	792
739	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	2022-02-28 17:19:11.869498	2022-02-28 17:19:11.868328	ab9a1e0a-29b2-4e31-bb0e-9fcec96adbfe	\N	799
743	uri://ed-fi.org/DiagnosisDescriptor	Low Attendance	Low Attendance	Low Attendance	\N	\N	\N	2022-02-28 17:19:11.919698	2022-02-28 17:19:11.91849	a6aa0de7-5aff-4102-9da8-d50f20aeb9d5	\N	803
746	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2022-02-28 17:19:11.930199	2022-02-28 17:19:11.930156	6a49f43a-57c0-4fbe-acd5-905da35e98f5	\N	806
749	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	2022-02-28 17:19:11.97036	2022-02-28 17:19:11.96909	fec065a6-d679-48ee-b385-23f6cd505d74	\N	809
755	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	2022-02-28 17:19:11.984518	2022-02-28 17:19:11.984488	fd439c6a-8a4e-4d04-bd77-742fcefbb8a2	\N	815
767	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	2022-02-28 17:19:12.050162	2022-02-28 17:19:12.048934	8f1bac0f-b2d2-4d13-9ef6-e81f2c50f660	\N	827
366	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	2022-02-28 17:19:09.57446	2022-02-28 17:19:09.57327	bfcddb6a-c244-4af3-b17d-c1835fc52891	\N	426
369	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	2022-02-28 17:19:09.586023	2022-02-28 17:19:09.584894	6339c53f-19d1-4e85-a8d5-3033092a7126	\N	429
370	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	2022-02-28 17:19:09.592383	2022-02-28 17:19:09.592011	7a4cb1ab-e16e-4faa-85c8-22baec85d6bb	\N	430
371	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	2022-02-28 17:19:09.618266	2022-02-28 17:19:09.617029	013c643d-b0a8-470f-8ec6-b6a1a5ac0bd1	\N	431
375	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	2022-02-28 17:19:09.628715	2022-02-28 17:19:09.628667	2b46209d-a403-4903-ba3c-2666f4877ecd	\N	435
376	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	2022-02-28 17:19:09.634035	2022-02-28 17:19:09.634017	745b51d6-45ab-4c57-9e13-8d47be6dc0a9	\N	436
378	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	2022-02-28 17:19:09.637549	2022-02-28 17:19:09.637304	24a2b1c1-2a83-47b5-a190-8cee5ccaec7b	\N	438
379	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	2022-02-28 17:19:09.640585	2022-02-28 17:19:09.640568	1887fc5a-8c34-425f-972b-9138c6b2868b	\N	439
380	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	2022-02-28 17:19:09.645019	2022-02-28 17:19:09.644977	722c96d5-a953-4dd5-abb2-24244432495f	\N	440
382	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	2022-02-28 17:19:09.650169	2022-02-28 17:19:09.650127	4aafbe09-f532-449c-b34a-3486f99924ca	\N	442
384	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	2022-02-28 17:19:09.655893	2022-02-28 17:19:09.65586	b865e68d-f760-4060-a3ad-76bd494e518d	\N	444
385	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	2022-02-28 17:19:09.660975	2022-02-28 17:19:09.660916	238f7cfb-0707-46f0-94a9-7cf6bf531d2a	\N	445
386	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	2022-02-28 17:19:09.663577	2022-02-28 17:19:09.663539	eda192f1-982e-458b-b945-c9cc4a297949	\N	446
387	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	2022-02-28 17:19:09.666751	2022-02-28 17:19:09.66673	10977c47-9e1e-4ff1-b80a-88802c68a511	\N	447
389	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	2022-02-28 17:19:09.67498	2022-02-28 17:19:09.674937	14be9371-6ac9-41de-98db-34b279924f5c	\N	449
391	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	2022-02-28 17:19:09.679184	2022-02-28 17:19:09.679142	a81bb019-2641-4c68-bd8b-5fe4b7ce468c	\N	451
392	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	2022-02-28 17:19:09.685071	2022-02-28 17:19:09.684986	0f9a78e1-58bf-4c90-87b2-969df000fb8f	\N	452
393	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	2022-02-28 17:19:09.689775	2022-02-28 17:19:09.689719	0c5514bf-1787-45c1-ae86-51133e098f26	\N	453
396	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	2022-02-28 17:19:09.695133	2022-02-28 17:19:09.695096	f5c2d476-8cf1-444d-aee5-f4cf3ec5b3ed	\N	456
397	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	2022-02-28 17:19:09.70169	2022-02-28 17:19:09.701641	9a164ca3-8a5e-40c3-a088-09c4ad8df9b5	\N	457
399	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	2022-02-28 17:19:09.704334	2022-02-28 17:19:09.704298	4e96e68d-ccb5-4d37-b272-07ef19aef42d	\N	459
400	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	2022-02-28 17:19:09.707716	2022-02-28 17:19:09.707671	13087aa2-9c6b-45cc-b31f-ae11a391a263	\N	460
402	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	2022-02-28 17:19:09.716746	2022-02-28 17:19:09.716568	92038844-80de-4ab7-ac43-879f6f5c4629	\N	462
404	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	2022-02-28 17:19:09.719743	2022-02-28 17:19:09.71973	cec7fd2e-1494-4da6-86a1-02f231f14f6b	\N	464
405	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	2022-02-28 17:19:09.725916	2022-02-28 17:19:09.725872	83bed6ea-f1b2-4415-907e-4d0182bcf054	\N	465
406	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	2022-02-28 17:19:09.732632	2022-02-28 17:19:09.732608	335a5679-4deb-46b0-9c74-7156799c853f	\N	466
409	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	2022-02-28 17:19:09.739725	2022-02-28 17:19:09.739613	19468f7f-2f45-4a09-b4b6-95ddbf44e71b	\N	469
410	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	2022-02-28 17:19:09.745007	2022-02-28 17:19:09.744953	1791a461-7f4f-4dfa-8a32-37727233c2f4	\N	470
412	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	2022-02-28 17:19:09.751411	2022-02-28 17:19:09.751374	9ca9f6b6-0029-4254-9328-69a1f1801536	\N	472
414	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	2022-02-28 17:19:09.755954	2022-02-28 17:19:09.755936	3fd4ae57-f7f4-4923-8475-19da0cc01b9b	\N	474
417	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	2022-02-28 17:19:09.763359	2022-02-28 17:19:09.76331	0c3abbce-9540-4ccf-8d0b-a0522e632f36	\N	477
419	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	2022-02-28 17:19:09.769683	2022-02-28 17:19:09.769645	9b01636b-a5be-4356-85e7-decd24fc7f56	\N	479
421	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	2022-02-28 17:19:09.775012	2022-02-28 17:19:09.774962	46b0b01b-85d6-40d0-9f82-70298725570c	\N	481
422	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	2022-02-28 17:19:09.779355	2022-02-28 17:19:09.779337	c1d64207-3e76-4dcf-8d9b-c925753b6d13	\N	482
425	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	2022-02-28 17:19:09.785895	2022-02-28 17:19:09.78588	6f627110-4757-4039-9527-4b409915d01c	\N	485
426	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	2022-02-28 17:19:09.791362	2022-02-28 17:19:09.791332	5e2a0f17-a96d-470d-a216-5abfc1620026	\N	486
427	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	2022-02-28 17:19:09.79502	2022-02-28 17:19:09.794975	dd5b4cad-be54-4a5e-8f83-32a222d17f08	\N	487
428	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	2022-02-28 17:19:09.797612	2022-02-28 17:19:09.797462	ab358534-6a53-4354-828a-5b1fcba24507	\N	488
430	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	2022-02-28 17:19:09.80258	2022-02-28 17:19:09.80241	7331de58-a63b-4efd-a1d8-ee7ea7d98a94	\N	490
431	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	2022-02-28 17:19:09.805937	2022-02-28 17:19:09.805898	974521fe-b1a0-4de6-a051-15e4c0585799	\N	491
432	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	2022-02-28 17:19:09.808973	2022-02-28 17:19:09.808953	8a55fc34-a79f-44a1-b195-1a69a815dd5d	\N	492
433	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	2022-02-28 17:19:09.815494	2022-02-28 17:19:09.815034	b0bfdda6-e2d2-42b0-b4c6-6f8e1b42d06b	\N	493
436	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	2022-02-28 17:19:09.819869	2022-02-28 17:19:09.819847	dfa076b6-dba6-40bb-af1d-9e8dc7f6958b	\N	496
437	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	2022-02-28 17:19:09.827729	2022-02-28 17:19:09.827711	e676099d-6527-43fb-833f-80266ad43412	\N	497
438	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	2022-02-28 17:19:09.830325	2022-02-28 17:19:09.830288	a4bebddc-63e6-40b2-b21a-3d3f4e03bec7	\N	498
440	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	2022-02-28 17:19:09.833714	2022-02-28 17:19:09.833689	bc321e27-5f0a-4a71-8dea-3b1ce1d7d2b0	\N	500
441	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	2022-02-28 17:19:09.838203	2022-02-28 17:19:09.838163	7f1f9490-2372-4cd3-9f6d-4be19f3eca22	\N	501
443	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	2022-02-28 17:19:09.842853	2022-02-28 17:19:09.842823	d1f6df51-92f9-41a2-b209-51963b3ed9fc	\N	503
446	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	2022-02-28 17:19:09.851655	2022-02-28 17:19:09.851623	e5b2ae34-f247-4846-8438-5c5c17c9c103	\N	506
447	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	2022-02-28 17:19:09.854713	2022-02-28 17:19:09.854672	b991195c-e65b-42d9-b586-b5a0703bd487	\N	507
448	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	2022-02-28 17:19:09.857928	2022-02-28 17:19:09.857886	1b905b2e-f7dd-4123-bb7d-664b439fb9c0	\N	508
450	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	2022-02-28 17:19:09.863733	2022-02-28 17:19:09.863697	f3470c4c-c23a-4210-8b87-84f8beae8e8d	\N	510
451	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	2022-02-28 17:19:09.86919	2022-02-28 17:19:09.869152	1e535fff-a5df-45a3-8b10-593425c91a3b	\N	511
453	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	2022-02-28 17:19:09.875039	2022-02-28 17:19:09.874988	b1b60cc1-4f47-49df-9672-acf99e024b08	\N	513
423	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	2022-02-28 17:19:09.78176	2022-02-28 17:19:09.781718	cc88208d-4282-499b-9e93-24d4beda4eb7	\N	483
424	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	2022-02-28 17:19:09.78491	2022-02-28 17:19:09.784863	2039a25f-1b5e-46a9-a192-38fdb366e6a1	\N	484
429	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	2022-02-28 17:19:09.799304	2022-02-28 17:19:09.79929	b2925c9e-5458-47e2-9b81-6563268ba400	\N	489
434	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	2022-02-28 17:19:09.816471	2022-02-28 17:19:09.816402	7310ee75-5ceb-4e1f-81be-dda31c4a06be	\N	494
435	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	2022-02-28 17:19:09.819217	2022-02-28 17:19:09.819123	03342d5d-0c24-4958-9f33-dbde09ad7407	\N	495
439	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	2022-02-28 17:19:09.831837	2022-02-28 17:19:09.83181	573f44b0-143d-4663-bc85-329e47018f66	\N	499
442	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	2022-02-28 17:19:09.841856	2022-02-28 17:19:09.841833	e71c0adc-2bd5-4a66-b765-cc996e4884a5	\N	502
444	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	2022-02-28 17:19:09.846932	2022-02-28 17:19:09.846887	80898cbb-ec16-42df-913c-18ec05b4e9d2	\N	504
445	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	2022-02-28 17:19:09.850983	2022-02-28 17:19:09.850891	b35c215d-8206-4f72-addd-8377482655b7	\N	505
449	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	2022-02-28 17:19:09.862864	2022-02-28 17:19:09.862823	c44e15d8-62fc-4331-b6ca-8dcd860663b0	\N	509
452	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	2022-02-28 17:19:09.869431	2022-02-28 17:19:09.8694	5a156400-4d65-4b7e-8fbd-1832c94c0a33	\N	512
454	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	2022-02-28 17:19:09.875465	2022-02-28 17:19:09.875427	3f0e5fce-2394-451d-bfc3-c79522ea09fb	\N	514
457	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	2022-02-28 17:19:09.886172	2022-02-28 17:19:09.886117	2480f59e-5478-47b0-bc36-c343404ab9ca	\N	517
461	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	2022-02-28 17:19:09.899099	2022-02-28 17:19:09.898583	c04b899f-fd89-4a07-a80f-decae50cb164	\N	521
464	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	2022-02-28 17:19:09.910458	2022-02-28 17:19:09.910381	bca391b9-fbf4-44fd-81c9-2671d86c9c55	\N	524
469	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	2022-02-28 17:19:09.926295	2022-02-28 17:19:09.926262	0b7d6714-1ccf-4aba-8ed9-38dc9e4c8c59	\N	529
475	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	2022-02-28 17:19:09.942434	2022-02-28 17:19:09.942398	18d39ed1-9f42-468e-8252-f5781bbe1305	\N	535
477	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	2022-02-28 17:19:09.952448	2022-02-28 17:19:09.95241	84da4779-7352-4dc2-814b-8fdb0a4dc963	\N	537
481	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	2022-02-28 17:19:09.964045	2022-02-28 17:19:09.964002	9cad968f-5c7d-4798-8f2c-d86112de8242	\N	541
483	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	2022-02-28 17:19:09.968488	2022-02-28 17:19:09.96845	67f47127-3a51-4db1-8450-c566dd6e3dd9	\N	543
484	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	2022-02-28 17:19:09.9737	2022-02-28 17:19:09.973661	5dd3aadf-9133-430e-89d6-ab596f1be300	\N	544
487	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	2022-02-28 17:19:09.98227	2022-02-28 17:19:09.982254	10087fdd-9cab-42a7-b52c-d4a26bdc5b83	\N	547
489	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	2022-02-28 17:19:09.986421	2022-02-28 17:19:09.986388	56668503-8a61-42ef-b91b-7b2130a9ec7d	\N	549
491	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	2022-02-28 17:19:09.993934	2022-02-28 17:19:09.993895	40d405f4-1a93-4efe-980a-63bd7edcde73	\N	551
497	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	2022-02-28 17:19:10.250199	2022-02-28 17:19:10.249794	a3021c36-3e4f-489d-ac8d-6def51c7e079	\N	557
500	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	2022-02-28 17:19:10.262299	2022-02-28 17:19:10.262215	e16151ca-12f2-4de1-a291-fcfcbf418ffe	\N	560
503	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	2022-02-28 17:19:10.277324	2022-02-28 17:19:10.277212	f27de32e-e55a-4e58-9460-34652aaff559	\N	563
506	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	2022-02-28 17:19:10.284122	2022-02-28 17:19:10.284081	7d085b3f-ea30-4067-9c13-845635990b60	\N	566
509	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	2022-02-28 17:19:10.528523	2022-02-28 17:19:10.528485	a7a9cfda-ffb2-433c-9e69-4e551ab9757d	\N	569
513	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	2022-02-28 17:19:10.547345	2022-02-28 17:19:10.547165	ae2f0b38-47c2-49ef-a51d-cec90b46cf46	\N	573
516	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	2022-02-28 17:19:10.554076	2022-02-28 17:19:10.554033	732b1678-9121-4ced-bde2-105a77fdc5d7	\N	576
526	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	2022-02-28 17:19:10.591886	2022-02-28 17:19:10.591834	34bc4e5a-9112-4b1e-b383-d8d9a5dbd045	\N	586
529	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	2022-02-28 17:19:10.600267	2022-02-28 17:19:10.600053	1e238eca-5c6a-486d-bf59-79af2bbc16e2	\N	589
534	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	2022-02-28 17:19:10.617805	2022-02-28 17:19:10.617747	531c5c29-0a08-40b1-a666-3611def322eb	\N	594
536	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	2022-02-28 17:19:10.622046	2022-02-28 17:19:10.622027	2fcfef10-c169-4493-864e-fd08b4fd2a7a	\N	596
537	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	2022-02-28 17:19:10.627698	2022-02-28 17:19:10.627663	2c6e9319-28eb-42e8-89ae-4e488c204bd0	\N	597
539	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	2022-02-28 17:19:10.635382	2022-02-28 17:19:10.635333	557d000b-6cb8-47fc-8803-c46782120576	\N	599
542	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	2022-02-28 17:19:10.642518	2022-02-28 17:19:10.642485	9add431b-aa75-4950-9f23-380dea68ef59	\N	602
544	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	2022-02-28 17:19:10.649563	2022-02-28 17:19:10.649508	3ec7acd1-d5f1-45d4-bc24-a22d70f05079	\N	604
545	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	2022-02-28 17:19:10.655537	2022-02-28 17:19:10.655482	33356506-5f9f-48c3-8242-1b74d7e18028	\N	605
548	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	2022-02-28 17:19:10.663058	2022-02-28 17:19:10.663018	83213d1d-3957-4758-af7f-e190b0124d39	\N	608
549	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	2022-02-28 17:19:10.67046	2022-02-28 17:19:10.67042	bb5fe122-ae0e-4636-a387-bd7e6de3373e	\N	609
552	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	2022-02-28 17:19:10.677736	2022-02-28 17:19:10.677689	1b9404a2-4950-4292-b552-49211f21f833	\N	612
554	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	2022-02-28 17:19:10.686646	2022-02-28 17:19:10.686566	62529d13-ee1e-4215-a83f-752192e322aa	\N	614
557	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	2022-02-28 17:19:10.693193	2022-02-28 17:19:10.693151	af1b8394-544b-403a-9abe-aefcc5efe8cd	\N	617
561	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	2022-02-28 17:19:10.705933	2022-02-28 17:19:10.705886	70328309-a2f3-454a-8a2b-c19a78db549a	\N	621
562	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	2022-02-28 17:19:10.710633	2022-02-28 17:19:10.710599	e2b2a775-bd94-406d-97f2-c8dcc969d4a3	\N	622
566	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	2022-02-28 17:19:10.721601	2022-02-28 17:19:10.721568	54a11e4b-d95c-4588-ad52-b43dc832faee	\N	626
569	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	2022-02-28 17:19:10.730001	2022-02-28 17:19:10.729961	f7a05fb2-b6e0-48c3-b403-a6c06b80ab41	\N	629
570	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	2022-02-28 17:19:10.73298	2022-02-28 17:19:10.732931	12659a72-5889-48f7-920c-24b0267b8be9	\N	630
576	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	2022-02-28 17:19:10.7531	2022-02-28 17:19:10.753059	9da7cf24-ef73-49aa-af51-a6ff3c4b69dd	\N	636
581	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	2022-02-28 17:19:11.015432	2022-02-28 17:19:11.015291	94c73c39-2afb-4096-9832-acda8339eedb	\N	641
583	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	2022-02-28 17:19:11.028315	2022-02-28 17:19:11.028253	45ed428c-a72f-4fe1-9011-c97ec12b42ee	\N	643
588	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	2022-02-28 17:19:11.041333	2022-02-28 17:19:11.041292	b9f185dc-6047-4ab3-8e22-87e5c265bafb	\N	648
590	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	2022-02-28 17:19:11.04676	2022-02-28 17:19:11.046369	180aeed5-bf79-4fc4-9d29-7bc3ca32196d	\N	650
592	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	2022-02-28 17:19:11.052488	2022-02-28 17:19:11.052419	10360954-73b7-47b7-9988-0e5ebea74b73	\N	652
456	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	2022-02-28 17:19:09.882413	2022-02-28 17:19:09.882394	eb7375bb-a252-4a99-854b-a226883cae59	\N	516
458	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	2022-02-28 17:19:09.887575	2022-02-28 17:19:09.887539	5395bdfc-acad-4652-97d7-fd91f8e09ec9	\N	518
459	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	2022-02-28 17:19:09.894679	2022-02-28 17:19:09.894658	19aea213-48b1-4a72-9503-677da51f07e4	\N	519
460	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	2022-02-28 17:19:09.897319	2022-02-28 17:19:09.897273	98348916-ba55-477e-8599-390e3c2fdf4c	\N	520
462	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	2022-02-28 17:19:09.900513	2022-02-28 17:19:09.900467	df075a90-ce3c-49a4-b95b-a85c3e33561d	\N	522
463	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	2022-02-28 17:19:09.90459	2022-02-28 17:19:09.904546	d55a8d72-e461-4cbb-9dd6-07d334f4ee3c	\N	523
466	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	2022-02-28 17:19:09.91309	2022-02-28 17:19:09.913068	340eab42-1906-4278-82f4-1e23c7fbdf42	\N	526
467	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	2022-02-28 17:19:09.916111	2022-02-28 17:19:09.916089	79877f57-b7c2-498e-a449-fa4d345197ab	\N	527
468	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	2022-02-28 17:19:09.925138	2022-02-28 17:19:09.925001	b97db222-be8c-4c42-b8cd-c05fe9664415	\N	528
471	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	2022-02-28 17:19:09.929102	2022-02-28 17:19:09.929084	6ca7fe04-8392-4cd7-8bd7-2baa487641a7	\N	531
472	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	2022-02-28 17:19:09.937478	2022-02-28 17:19:09.937437	28fa4bd8-87a8-4891-ac13-24f8b3e82cf1	\N	532
474	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	2022-02-28 17:19:09.941875	2022-02-28 17:19:09.941814	0ec83ae8-170f-4222-a002-f6ad681d14b2	\N	534
476	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	2022-02-28 17:19:09.945767	2022-02-28 17:19:09.945743	446cb7ac-b544-4125-b9b2-bc9395979453	\N	536
478	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	2022-02-28 17:19:09.953251	2022-02-28 17:19:09.953217	88892f05-7337-4891-aecc-56bd3c2bcbf8	\N	538
479	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	2022-02-28 17:19:09.957654	2022-02-28 17:19:09.95761	8a3ec41d-5826-4125-975e-a40f4efb75dd	\N	539
480	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	2022-02-28 17:19:09.960545	2022-02-28 17:19:09.960511	d870f7cd-1d87-4b44-8878-b5cf963a6456	\N	540
482	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	2022-02-28 17:19:09.96791	2022-02-28 17:19:09.96789	2064574a-d300-42ee-8a6f-4118392c3b4d	\N	542
485	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	2022-02-28 17:19:09.974466	2022-02-28 17:19:09.97442	d7bd5ede-26dc-49a6-b675-de119721f7b8	\N	545
486	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	2022-02-28 17:19:09.980489	2022-02-28 17:19:09.980452	396449c3-dbea-4124-9949-d1f0ae8eb47d	\N	546
488	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	2022-02-28 17:19:09.984311	2022-02-28 17:19:09.984269	fb467eac-225e-4a18-9640-591ba151e9d0	\N	548
490	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	2022-02-28 17:19:09.989487	2022-02-28 17:19:09.989446	74c26a70-e2f8-4277-9161-d0e37ec9b6bb	\N	550
492	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	2022-02-28 17:19:09.997485	2022-02-28 17:19:09.997449	7cfb3a8f-549a-4476-901c-3d19979ae4df	\N	552
498	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	2022-02-28 17:19:10.250958	2022-02-28 17:19:10.250908	8b7340f7-4e44-4548-bfa9-f2c94488b236	\N	558
499	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	2022-02-28 17:19:10.262117	2022-02-28 17:19:10.262072	0ae75fb7-a9b7-44f7-97df-ee0d4e68fa8f	\N	559
502	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	2022-02-28 17:19:10.274276	2022-02-28 17:19:10.274253	6a10b02f-c8da-45f6-9ab7-3e6ad86c25a0	\N	562
505	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	2022-02-28 17:19:10.278875	2022-02-28 17:19:10.278849	56f986a4-dd2d-4b93-83bd-2c9fd0910708	\N	565
508	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	2022-02-28 17:19:10.528033	2022-02-28 17:19:10.527988	34a2ad77-d443-441c-bb42-227a83dfcd1a	\N	568
510	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	2022-02-28 17:19:10.533074	2022-02-28 17:19:10.532993	61c7966e-8f93-44ec-9521-714fa282f199	\N	570
511	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	2022-02-28 17:19:10.537146	2022-02-28 17:19:10.537104	b9a98f61-a80f-40b4-8538-54169bc4a572	\N	571
512	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	2022-02-28 17:19:10.541062	2022-02-28 17:19:10.541014	d04eaa27-aa74-4446-815c-049154f9e22e	\N	572
514	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	2022-02-28 17:19:10.548968	2022-02-28 17:19:10.548922	d3f45b5c-f34e-4698-a6d6-d59bcccdad29	\N	574
515	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	2022-02-28 17:19:10.55202	2022-02-28 17:19:10.552003	bd92a6ba-49e3-4e89-91ae-7dbf86789faa	\N	575
517	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	2022-02-28 17:19:10.558597	2022-02-28 17:19:10.558551	2c66f62b-7b1c-49fe-8ae7-617128b6b92a	\N	577
518	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	2022-02-28 17:19:10.561756	2022-02-28 17:19:10.561712	c88dfb62-64f3-4d2b-8b6b-6af28cec8e95	\N	578
519	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	2022-02-28 17:19:10.565203	2022-02-28 17:19:10.565163	2b87089f-8d75-40aa-9bfa-e7d64d01badf	\N	579
520	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	2022-02-28 17:19:10.568497	2022-02-28 17:19:10.568458	e53b5574-7ed1-46c0-b92f-c6a93a444eaa	\N	580
521	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	2022-02-28 17:19:10.572394	2022-02-28 17:19:10.572313	64a11cde-7c6a-47d7-99aa-64a736f594d6	\N	581
522	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	2022-02-28 17:19:10.575841	2022-02-28 17:19:10.575796	65802a0f-aef0-467a-b09d-0dabd6e92486	\N	582
524	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	2022-02-28 17:19:10.58213	2022-02-28 17:19:10.582085	081e644c-8edf-40c5-86f0-ac68ad6e1d3d	\N	584
525	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	2022-02-28 17:19:10.585776	2022-02-28 17:19:10.585725	59c81e61-eee3-4839-a6bd-7fba25bbf357	\N	585
527	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	2022-02-28 17:19:10.593056	2022-02-28 17:19:10.593014	4bd0cb29-83f9-456e-950e-b26d7a96ab8c	\N	587
528	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	2022-02-28 17:19:10.597825	2022-02-28 17:19:10.59778	b543b003-0ff3-4d6d-9354-38a64c8a6019	\N	588
530	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	2022-02-28 17:19:10.602769	2022-02-28 17:19:10.602732	f20d81a4-1d07-4533-b819-d536ff34430f	\N	590
531	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	2022-02-28 17:19:10.606245	2022-02-28 17:19:10.606201	9df6c475-63e1-475e-818a-70ab77e39a2c	\N	591
532	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	2022-02-28 17:19:10.61068	2022-02-28 17:19:10.610637	2d57ba2d-1250-40f4-90fe-6b094f0ddd11	\N	592
533	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	2022-02-28 17:19:10.616193	2022-02-28 17:19:10.61615	5317310b-545f-4663-940e-01733c7f58cb	\N	593
535	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	2022-02-28 17:19:10.62133	2022-02-28 17:19:10.620855	b9d3d504-20c8-4801-976b-9383af166e33	\N	595
538	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	2022-02-28 17:19:10.628575	2022-02-28 17:19:10.62854	69af8f0b-9ba5-45f5-b05b-71daf5d8e31e	\N	598
540	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	2022-02-28 17:19:10.636113	2022-02-28 17:19:10.636076	109d860b-b84c-48e4-81b7-0af18819166f	\N	600
541	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	2022-02-28 17:19:10.642193	2022-02-28 17:19:10.642154	5f839097-46e9-46ea-b226-0124324964db	\N	601
543	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	2022-02-28 17:19:10.649551	2022-02-28 17:19:10.649508	e4266305-efdf-46a4-90f9-78764cd7decb	\N	603
546	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	2022-02-28 17:19:10.656599	2022-02-28 17:19:10.656544	65f79f4b-24e4-4fef-af73-9510abda8c83	\N	606
547	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	2022-02-28 17:19:10.66265	2022-02-28 17:19:10.66247	f109c138-c4e4-4a85-9cc2-96ecd8092e3d	\N	607
550	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	2022-02-28 17:19:10.67134	2022-02-28 17:19:10.671309	b66fbc25-ff09-4f9b-87c0-919798a120a1	\N	610
551	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	2022-02-28 17:19:10.675914	2022-02-28 17:19:10.675894	9b2f4771-3358-4a17-8e42-9cddae926949	\N	611
553	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	2022-02-28 17:19:10.682327	2022-02-28 17:19:10.682285	fb1fccfa-a696-428a-81d7-eff243141089	\N	613
556	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	2022-02-28 17:19:10.689213	2022-02-28 17:19:10.689185	a0527b1b-7196-4e55-bc17-b82829609032	\N	616
558	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	2022-02-28 17:19:10.696388	2022-02-28 17:19:10.696369	182b69fa-84b7-451c-b94b-756c7cc7c6ad	\N	618
559	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	2022-02-28 17:19:10.698922	2022-02-28 17:19:10.698898	af2cb4cb-e6b1-4ef3-aeef-add86d9b33a2	\N	619
560	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	2022-02-28 17:19:10.703947	2022-02-28 17:19:10.703907	fb85535d-495b-41bf-8fd8-cdcffc543591	\N	620
563	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	2022-02-28 17:19:10.712295	2022-02-28 17:19:10.712256	fd09a850-b7ae-44ff-8187-c79923052d4b	\N	623
564	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	2022-02-28 17:19:10.715341	2022-02-28 17:19:10.715325	d1df5b46-e82b-4815-ac98-fbce505c8dc1	\N	624
565	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	2022-02-28 17:19:10.717832	2022-02-28 17:19:10.717812	614666cf-2ea1-499f-947e-bb1adbf8b582	\N	625
567	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	2022-02-28 17:19:10.723153	2022-02-28 17:19:10.723083	e0429d70-0485-4bf7-bac9-23ff93dd5c23	\N	627
568	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	2022-02-28 17:19:10.72991	2022-02-28 17:19:10.729862	4333962d-8fb3-41cc-b2f1-9cca3f7428da	\N	628
571	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	2022-02-28 17:19:10.735177	2022-02-28 17:19:10.735131	feff71f8-fc7c-493d-aade-6ac45d032120	\N	631
572	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	2022-02-28 17:19:10.738354	2022-02-28 17:19:10.738305	96e1f0a7-f32c-41ea-b9d7-61f576907e5e	\N	632
573	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	2022-02-28 17:19:10.741271	2022-02-28 17:19:10.741231	e6f3b01e-7d1f-487f-896a-e6eb4fc61bdc	\N	633
574	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	2022-02-28 17:19:10.744103	2022-02-28 17:19:10.744082	0eaceeac-9309-4cc7-9f82-2388860c8043	\N	634
575	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	2022-02-28 17:19:10.746972	2022-02-28 17:19:10.746951	1aee994f-f7a1-49d3-a278-1e0a6c976fc1	\N	635
579	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	2022-02-28 17:19:11.01473	2022-02-28 17:19:11.012924	045b6a57-64a8-44d0-8b0b-d7a5de748e3f	\N	639
584	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	2022-02-28 17:19:11.028995	2022-02-28 17:19:11.028961	1ff919ed-e2be-4488-b96b-84bcf67c5034	\N	644
586	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	2022-02-28 17:19:11.032728	2022-02-28 17:19:11.032423	0c60fd09-ee21-449c-8c7f-97ad4898815f	\N	646
587	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	2022-02-28 17:19:11.038261	2022-02-28 17:19:11.038122	a431a7c3-e0e0-486e-8802-aeda1fcea274	\N	647
589	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	2022-02-28 17:19:11.046039	2022-02-28 17:19:11.04599	fe66ba90-d835-47f7-b42c-021e6b668369	\N	649
591	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	2022-02-28 17:19:11.051101	2022-02-28 17:19:11.050534	9b747cf6-e1ed-44ee-8d30-f88cf93e9d88	\N	651
593	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	2022-02-28 17:19:11.055638	2022-02-28 17:19:11.055598	b47c8997-fc88-465e-831b-9c8989db60ea	\N	653
594	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	2022-02-28 17:19:11.059802	2022-02-28 17:19:11.059758	a15c7afb-6342-43b3-a509-75ebfd0bdf5b	\N	654
595	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	2022-02-28 17:19:11.06367	2022-02-28 17:19:11.063596	7e7bdfb3-7a0d-4fdb-92b6-bca73c3486fa	\N	655
598	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	2022-02-28 17:19:11.071144	2022-02-28 17:19:11.071125	27bfc953-fb1a-4da7-9572-9fb37ece4208	\N	658
599	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	2022-02-28 17:19:11.079613	2022-02-28 17:19:11.079333	7a7ddf4a-6d01-4159-899c-4dd2bbf44f43	\N	659
602	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	2022-02-28 17:19:11.086374	2022-02-28 17:19:11.086331	a1220c65-01cc-4247-b486-a2b699031fc2	\N	662
603	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	2022-02-28 17:19:11.091576	2022-02-28 17:19:11.091409	92ecc72d-c9b4-49a5-8e89-986d0c2540c0	\N	663
604	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	2022-02-28 17:19:11.09404	2022-02-28 17:19:11.09395	973ffa1e-248a-446e-ad72-b603f84ddbc8	\N	664
606	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	2022-02-28 17:19:11.099329	2022-02-28 17:19:11.099112	a095654c-5a65-47f8-9fa7-b64ab0882f72	\N	666
608	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	2022-02-28 17:19:11.104143	2022-02-28 17:19:11.104106	c45cc4a9-d482-4808-b23f-7bc6a5463fa4	\N	668
609	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	2022-02-28 17:19:11.110376	2022-02-28 17:19:11.110294	37795bd9-a46e-45df-9de7-9d6e192b13a7	\N	669
610	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	2022-02-28 17:19:11.112995	2022-02-28 17:19:11.112946	778fae6c-7204-402c-a944-a6c3304ba596	\N	670
613	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	2022-02-28 17:19:11.119313	2022-02-28 17:19:11.119271	555f44a0-ebab-41ad-83a1-44790c9a2fb8	\N	673
615	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	2022-02-28 17:19:11.126243	2022-02-28 17:19:11.126197	87595fde-ff36-4821-b8c5-2a19e3579c76	\N	675
616	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	2022-02-28 17:19:11.130715	2022-02-28 17:19:11.130665	3b8b02db-b8f5-4c20-beb9-cf0c63aca0c8	\N	676
618	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	2022-02-28 17:19:11.136222	2022-02-28 17:19:11.135965	607ab176-0124-46cb-a1e9-928c54cb6b97	\N	678
620	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2022-02-28 17:19:11.170647	2022-02-28 17:19:11.169474	d618ab1c-4770-469e-9b26-61a522177fad	\N	680
624	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:11.213041	2022-02-28 17:19:11.211811	f57636ea-858d-43a4-b18b-82de90fe159f	\N	685
630	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2022-02-28 17:19:11.254506	2022-02-28 17:19:11.252522	f1375580-85b3-40f7-8667-5244eae14eab	\N	690
631	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	2022-02-28 17:19:11.260436	2022-02-28 17:19:11.259275	7b853c0a-e786-4d60-a8c8-e84365d2f48b	\N	691
633	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	2022-02-28 17:19:11.26736	2022-02-28 17:19:11.26728	fe6e8b49-6b2b-43bd-84fa-50e327f6a45c	\N	693
634	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	2022-02-28 17:19:11.270051	2022-02-28 17:19:11.270027	3e0cde6d-2af4-4653-9a92-4eb4904f383d	\N	694
635	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:11.273553	2022-02-28 17:19:11.273517	596ffc94-b79a-460b-904e-c85d1d6b3476	\N	695
636	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	2022-02-28 17:19:11.276968	2022-02-28 17:19:11.276932	2bcbe248-265c-473d-bee2-a17640235bd6	\N	696
638	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	2022-02-28 17:19:11.281644	2022-02-28 17:19:11.281607	0350f4be-2eb4-4887-9437-a9694d7bdf2d	\N	698
639	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	2022-02-28 17:19:11.286394	2022-02-28 17:19:11.286362	937856c9-b14f-48e5-8b65-55d0238a60ba	\N	699
640	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	2022-02-28 17:19:11.31954	2022-02-28 17:19:11.318302	a119c00d-3eb2-47e2-848e-1e33257214ad	\N	701
644	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:11.332919	2022-02-28 17:19:11.332869	565c3259-f3e0-487c-af6d-5838c024716f	\N	704
647	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	2022-02-28 17:19:11.338779	2022-02-28 17:19:11.338419	09d3758e-5f34-4c76-b2a6-8855b176fda1	\N	707
648	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	2022-02-28 17:19:11.345319	2022-02-28 17:19:11.345175	e59eb0ad-cfe5-404c-95d6-ee10d2f43b54	\N	708
597	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	2022-02-28 17:19:11.067283	2022-02-28 17:19:11.067218	76654bc9-e164-4f66-8062-5650b25c0d36	\N	657
601	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	2022-02-28 17:19:11.081464	2022-02-28 17:19:11.081351	a4b5b114-34c2-4cb0-9e55-877ff1daab59	\N	661
605	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	2022-02-28 17:19:11.097207	2022-02-28 17:19:11.096931	5c201b74-d37b-4db2-bdbc-77ef9d684d9c	\N	665
607	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	2022-02-28 17:19:11.101349	2022-02-28 17:19:11.101078	20c2fb78-f7e4-4797-b17e-66b0e61537f8	\N	667
611	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	2022-02-28 17:19:11.114405	2022-02-28 17:19:11.114337	dd832a6c-0974-49a0-b324-40234c29d1ce	\N	671
614	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	2022-02-28 17:19:11.124691	2022-02-28 17:19:11.1246	8649b3fd-7821-439a-86ab-507eae2f4513	\N	674
617	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	2022-02-28 17:19:11.13118	2022-02-28 17:19:11.131114	5175cb2a-c978-4b04-96c8-dfdc529df4af	\N	677
619	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	2022-02-28 17:19:11.138274	2022-02-28 17:19:11.138204	4612a949-d7d0-4e9f-838b-d0089b16105e	\N	679
621	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-02-28 17:19:11.170648	2022-02-28 17:19:11.169486	8dd28615-ccde-48e9-9ac5-7f43a17298a9	\N	681
625	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	2022-02-28 17:19:11.213025	2022-02-28 17:19:11.211819	820d93d1-7081-4188-a523-ccd4e15d50ed	\N	684
628	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	2022-02-28 17:19:11.25396	2022-02-28 17:19:11.252539	fed1e0ea-b774-4fb1-a559-72bcd0fad39b	\N	688
632	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	2022-02-28 17:19:11.265798	2022-02-28 17:19:11.265754	d0384b90-e85b-4016-b06a-cd60ddda996f	\N	692
637	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	2022-02-28 17:19:11.28019	2022-02-28 17:19:11.279962	52dffd87-8cb2-4f00-85a9-404e8759651d	\N	697
643	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-02-28 17:19:11.319555	2022-02-28 17:19:11.318309	db0bfc4c-5dd5-4b22-a007-4bcb7468d58f	\N	703
646	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	2022-02-28 17:19:11.338814	2022-02-28 17:19:11.338723	a476d913-607a-4e14-93d0-0ed7a8af0324	\N	706
649	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	2022-02-28 17:19:11.34753	2022-02-28 17:19:11.347486	6f7c2451-5dd9-4ae0-9021-9eb66bdff173	\N	709
651	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	2022-02-28 17:19:11.353764	2022-02-28 17:19:11.353733	da6d2e07-32d9-48a4-99e2-024b9925e239	\N	711
656	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:11.371193	2022-02-28 17:19:11.371146	8db87620-c1f6-4021-a0eb-d65886d04b55	\N	716
658	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	2022-02-28 17:19:11.374222	2022-02-28 17:19:11.374192	161430f9-ffb9-4e6a-aea6-07a08008f8a0	\N	718
662	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	2022-02-28 17:19:11.388225	2022-02-28 17:19:11.388187	866cb3cb-28d2-4cee-9e1e-56561af8999a	\N	722
664	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	2022-02-28 17:19:11.420453	2022-02-28 17:19:11.419199	205dc077-2d35-443c-b44f-4063100c8e5b	\N	724
669	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2022-02-28 17:19:11.469755	2022-02-28 17:19:11.468277	90f9bdcb-3a01-426e-a334-d5684f6f4f6a	\N	729
674	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2022-02-28 17:19:11.483791	2022-02-28 17:19:11.483754	b3550470-28c5-46cd-8dcb-e067b86e1ded	\N	734
676	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	2022-02-28 17:19:11.487899	2022-02-28 17:19:11.487875	d56b901c-a6a3-49b8-a5b1-1bd6c7b8ad05	\N	736
677	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	2022-02-28 17:19:11.494031	2022-02-28 17:19:11.493986	74dd947f-a9d9-4641-b903-72bd61d7d30d	\N	737
682	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	2022-02-28 17:19:11.508039	2022-02-28 17:19:11.508	84d94a3f-e929-402e-9ff7-1a879bb9e331	\N	742
684	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	2022-02-28 17:19:11.543364	2022-02-28 17:19:11.541896	54344321-51d6-4bf9-8e5f-06e2cdf97ed1	\N	744
689	uri://gbisd.edu/CreditCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:11.589105	2022-02-28 17:19:11.587908	d32772fc-8361-45ff-88d6-27c515359926	\N	749
694	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	2022-02-28 17:19:11.636131	2022-02-28 17:19:11.634815	71917db2-32cf-4aae-9fc7-e189d6155609	\N	754
697	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	2022-02-28 17:19:11.654751	2022-02-28 17:19:11.653254	f85225ee-bc44-4722-84ee-15c827574593	\N	757
704	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	2022-02-28 17:19:11.671959	2022-02-28 17:19:11.671858	8c91fb88-86b7-473d-8bf2-14426998bcf5	\N	764
705	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	2022-02-28 17:19:11.683261	2022-02-28 17:19:11.683092	1325ca42-b770-4541-9165-4877fc32c77f	\N	765
708	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	2022-02-28 17:19:11.687223	2022-02-28 17:19:11.68719	421928bf-65cd-42df-96ba-cad17e949544	\N	768
711	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2022-02-28 17:19:11.729379	2022-02-28 17:19:11.727769	aa7fcc7d-421b-4d34-895e-0645db2c46b7	\N	771
715	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2022-02-28 17:19:11.74385	2022-02-28 17:19:11.743755	3464a726-1669-43d5-9714-142bd3246d78	\N	775
723	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2022-02-28 17:19:11.770364	2022-02-28 17:19:11.770337	e121adf7-b167-4dfd-8565-81ffc15d630b	\N	783
725	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2022-02-28 17:19:11.777016	2022-02-28 17:19:11.776976	de1b77f9-ff7f-4e21-ae77-b15aecfa8251	\N	785
730	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	2022-02-28 17:19:11.812996	2022-02-28 17:19:11.811749	71250335-41c9-400b-b081-05296dfe3192	\N	790
731	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	2022-02-28 17:19:11.825721	2022-02-28 17:19:11.825651	306b91de-01a0-4f0c-aaad-7d0fc0d34fb4	\N	791
734	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	2022-02-28 17:19:11.830909	2022-02-28 17:19:11.830868	aba8c1ca-92d9-44ba-8e17-52addf4209b5	\N	794
736	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	2022-02-28 17:19:11.869493	2022-02-28 17:19:11.868304	aeb3f670-cad6-4fc2-88a5-c0fb8a9b1397	\N	796
741	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	2022-02-28 17:19:11.91462	2022-02-28 17:19:11.913438	05a1efc3-3e20-4b8b-b200-bf7283032045	\N	801
742	uri://ed-fi.org/DiagnosisDescriptor	Dropout Risk	Dropout Risk	Dropout Risk	\N	\N	\N	2022-02-28 17:19:11.919719	2022-02-28 17:19:11.91849	fc034170-3395-483b-9b28-7efda2555b0f	\N	802
744	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2022-02-28 17:19:11.926305	2022-02-28 17:19:11.926274	d6be50e8-3abe-4408-9b09-90e2dd2d119d	\N	804
752	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	2022-02-28 17:19:11.970361	2022-02-28 17:19:11.969122	1bbfeb77-d196-45ab-bac6-9f449129e8f4	\N	812
753	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	2022-02-28 17:19:11.984451	2022-02-28 17:19:11.984411	d5d05cb8-db39-4a06-848e-932d3a513da8	\N	813
650	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	2022-02-28 17:19:11.353488	2022-02-28 17:19:11.353434	50877d63-bacf-42b2-931b-399233777d7c	\N	710
652	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2022-02-28 17:19:11.357653	2022-02-28 17:19:11.357626	a9ea4163-0031-4e72-b108-9f5c49433530	\N	712
654	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	2022-02-28 17:19:11.361799	2022-02-28 17:19:11.361742	618ea886-f53c-4364-bea1-939bd92c559f	\N	714
655	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:11.367993	2022-02-28 17:19:11.367948	db8f1919-5e1e-43ff-a85d-173424f75ce6	\N	715
657	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	2022-02-28 17:19:11.372947	2022-02-28 17:19:11.372905	1ce20cb3-5567-4988-b665-23f24acb4a94	\N	717
659	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	2022-02-28 17:19:11.376945	2022-02-28 17:19:11.376901	b63ba7b6-ed65-4bfc-8d18-1f108de64a12	\N	719
660	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	2022-02-28 17:19:11.380098	2022-02-28 17:19:11.380073	33207917-06af-407d-9279-ae5779df45de	\N	720
661	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	2022-02-28 17:19:11.386098	2022-02-28 17:19:11.386057	d0a71967-a373-4c44-8d68-5c14a151188a	\N	721
663	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	2022-02-28 17:19:11.420456	2022-02-28 17:19:11.419215	7434675e-fb49-4b67-b2f2-4ce0f0d93169	\N	723
667	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	2022-02-28 17:19:11.431678	2022-02-28 17:19:11.43163	e826ddce-7e1c-45a9-9b54-cb9e5a07a8e7	\N	727
668	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	2022-02-28 17:19:11.436293	2022-02-28 17:19:11.436213	b89ab125-cd4b-4b78-9252-6679ffbf603d	\N	728
672	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2022-02-28 17:19:11.469452	2022-02-28 17:19:11.468263	6577571b-208d-4bc2-a9d0-cde0f20aa3e7	\N	732
673	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	2022-02-28 17:19:11.483479	2022-02-28 17:19:11.483436	895d80e9-f6f4-4509-a840-15b66fc2c66a	\N	733
675	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2022-02-28 17:19:11.487775	2022-02-28 17:19:11.487753	663c7620-53ad-4841-bf2b-24ed22b74eb4	\N	735
678	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	2022-02-28 17:19:11.494851	2022-02-28 17:19:11.494811	7f68c21e-a4fb-4de9-bbbe-7341d8974011	\N	738
679	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	2022-02-28 17:19:11.49833	2022-02-28 17:19:11.498288	ed29000b-d091-452b-b102-9a49061f9f90	\N	739
680	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	2022-02-28 17:19:11.501103	2022-02-28 17:19:11.501078	dec1cd49-e02d-465b-97d3-752a039d7d2d	\N	740
681	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	2022-02-28 17:19:11.507687	2022-02-28 17:19:11.507637	91acd08a-21cb-4e9e-9fda-e17f81634e45	\N	741
686	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:11.543075	2022-02-28 17:19:11.541892	9deaf838-5d54-4e40-9819-07595ef91f25	\N	746
688	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	2022-02-28 17:19:11.553388	2022-02-28 17:19:11.553343	eece8b80-6f8e-4317-90d1-fbd09b240429	\N	748
692	uri://gbisd.edu/CreditCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-02-28 17:19:11.589094	2022-02-28 17:19:11.587895	bc62b416-28a2-4f77-bc23-f5692a92ad92	\N	752
693	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	2022-02-28 17:19:11.636007	2022-02-28 17:19:11.634809	33ddb3ea-3312-4e7a-b271-c84ca9f504b5	\N	753
698	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	2022-02-28 17:19:11.655694	2022-02-28 17:19:11.654358	eebc575a-bea7-4e28-8df8-c9065b393cdc	\N	758
701	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:11.669463	2022-02-28 17:19:11.669062	bd9456e6-411c-4bb6-a847-bf4d45912cb6	\N	761
706	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	2022-02-28 17:19:11.685029	2022-02-28 17:19:11.684968	cd2215d6-b30a-40cf-8c53-53c3f242f6b1	\N	766
709	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	2022-02-28 17:19:11.698433	2022-02-28 17:19:11.69839	e3eae970-6665-4150-9b29-82c88563972b	\N	769
713	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2022-02-28 17:19:11.729049	2022-02-28 17:19:11.727765	916d552e-2ef4-48b4-8ca3-e5c2c7c57932	\N	773
714	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	2022-02-28 17:19:11.744117	2022-02-28 17:19:11.743857	da27d02c-d92e-4f01-8b17-537703227cdb	\N	774
717	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2022-02-28 17:19:11.748499	2022-02-28 17:19:11.74842	35cbd7eb-ecf1-4e88-8ed1-3de144a63e5f	\N	777
718	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2022-02-28 17:19:11.754891	2022-02-28 17:19:11.754845	f7b182df-bd2e-4461-a896-52e1ab556ec9	\N	778
719	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2022-02-28 17:19:11.758491	2022-02-28 17:19:11.758458	7baf9226-09a3-4663-ac4d-55aaf52c2420	\N	779
721	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2022-02-28 17:19:11.762138	2022-02-28 17:19:11.762094	c06f46d1-1d4b-4afd-bb83-6b252ea6256e	\N	781
722	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2022-02-28 17:19:11.765769	2022-02-28 17:19:11.765725	21855191-70a8-41ce-93f9-f55cfbb05045	\N	782
724	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:11.771242	2022-02-28 17:19:11.771189	089ea928-a6d4-4cb2-8358-e32866c27574	\N	784
726	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2022-02-28 17:19:11.778648	2022-02-28 17:19:11.778607	f2661b5b-4b95-40c9-b1c7-20fb5d4c2767	\N	786
727	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	2022-02-28 17:19:11.812999	2022-02-28 17:19:11.811743	8e3cf8a9-c59d-4946-9145-ca9777987b83	\N	787
733	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	2022-02-28 17:19:11.828875	2022-02-28 17:19:11.8288	e0ced8c7-089e-466b-86d8-7c69c253751e	\N	793
735	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	2022-02-28 17:19:11.837619	2022-02-28 17:19:11.837321	1e4d815e-eda7-481b-94f4-e54067614236	\N	795
737	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	2022-02-28 17:19:11.86949	2022-02-28 17:19:11.8683	d11f40e6-af3c-4e3e-8476-ec4b4183394f	\N	797
740	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2022-02-28 17:19:11.914911	2022-02-28 17:19:11.913442	e49f3ce1-6f78-41e5-9f38-2191c681c286	\N	800
745	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	2022-02-28 17:19:11.926239	2022-02-28 17:19:11.926194	a6cb269c-d366-4f19-9d24-c13b650b4c1b	\N	805
747	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2022-02-28 17:19:11.934327	2022-02-28 17:19:11.934286	ce574ac7-7d36-448e-957e-7b17053b8d73	\N	807
748	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	2022-02-28 17:19:11.941722	2022-02-28 17:19:11.941353	d5741a3b-0c67-420d-b2b9-7a3f58b79aa3	\N	808
751	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	2022-02-28 17:19:11.970768	2022-02-28 17:19:11.969085	78a7f226-7592-4bd0-a236-5895ff4bc466	\N	811
696	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2022-02-28 17:19:11.636583	2022-02-28 17:19:11.634837	d438b06b-6a16-42cf-8bbb-7d3f788c93be	\N	756
699	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2022-02-28 17:19:11.655895	2022-02-28 17:19:11.655776	ca0e9a46-61b1-4603-8fe0-e88a074a0845	\N	759
703	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	2022-02-28 17:19:11.670703	2022-02-28 17:19:11.670627	612bafd6-cab0-49ee-a0fd-6134179bef22	\N	763
712	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2022-02-28 17:19:11.729049	2022-02-28 17:19:11.727784	4575ef8c-24a0-40c6-934a-107b6b747893	\N	772
729	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	2022-02-28 17:19:11.813385	2022-02-28 17:19:11.811769	dc337519-3610-4d59-b9a9-12b65619b43e	\N	789
738	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	2022-02-28 17:19:11.869857	2022-02-28 17:19:11.868341	504d6072-10a2-4e6b-b45a-63bebd2c9091	\N	798
750	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	2022-02-28 17:19:11.970366	2022-02-28 17:19:11.969138	ebe602d7-c67d-4293-b2dc-aa6d3cb3bc32	\N	810
769	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	2022-02-28 17:19:12.050527	2022-02-28 17:19:12.048939	6fdd6d97-ec11-44a0-b2e9-6bdca205e436	\N	829
800	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	2022-02-28 17:19:12.217984	2022-02-28 17:19:12.216763	11277ba6-3773-45ae-b071-a520cc51e807	\N	860
813	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	2022-02-28 17:19:12.298403	2022-02-28 17:19:12.296677	da88bd01-d13c-451c-94c9-2540998ea524	\N	873
820	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2022-02-28 17:19:12.378959	2022-02-28 17:19:12.377702	f07d317b-7785-4cd5-b74d-292d5bd203bf	\N	880
826	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	2022-02-28 17:19:12.428803	2022-02-28 17:19:12.427161	9747677f-574a-4520-97ab-f5fcfbc56b0c	\N	886
837	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2022-02-28 17:19:12.501593	2022-02-28 17:19:12.50041	d449d8fa-f381-4848-bdf6-c450b6c4fe50	\N	897
845	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	2022-02-28 17:19:12.557768	2022-02-28 17:19:12.55643	51acd01f-ee57-453d-b12d-d749e55ff2cd	\N	905
853	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:12.580291	2022-02-28 17:19:12.580253	7caa22a1-d3d8-43b8-a24b-b3b4e1553510	\N	913
856	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	2022-02-28 17:19:12.864896	2022-02-28 17:19:12.863736	b3e089c3-0f60-467b-8545-5403f112a5d2	\N	916
871	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-02-28 17:19:12.933604	2022-02-28 17:19:12.932179	2d3ff922-3fb3-481e-b840-91bf54d693f8	\N	931
875	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	2022-02-28 17:19:12.980942	2022-02-28 17:19:12.979013	d6438fe9-6f7d-47e8-b8fc-8de5d51aa431	\N	935
884	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	2022-02-28 17:19:13.045897	2022-02-28 17:19:13.044195	620050b7-cadc-4f22-9c8e-40129f0a7e95	\N	944
888	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	2022-02-28 17:19:13.062814	2022-02-28 17:19:13.062783	5df0a8fe-c40d-4125-9a9d-98702738dfbc	\N	948
895	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	2022-02-28 17:19:13.124503	2022-02-28 17:19:13.123288	46d1dd77-1728-4ed0-af96-15b6eb11f6cd	\N	955
903	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	2022-02-28 17:19:13.176167	2022-02-28 17:19:13.174348	2f1c432e-e728-4b9d-81ed-bb640590106f	\N	963
933	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	2022-02-28 17:19:13.315443	2022-02-28 17:19:13.314187	c6311d40-1c11-454c-8e44-3fc8aecc0b9c	\N	993
949	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	2022-02-28 17:19:13.402143	2022-02-28 17:19:13.40095	1f145d69-f922-49d7-bdc4-c7a07422104d	\N	1009
957	uri://ed-fi.org/GradeLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	2022-02-28 17:19:13.463916	2022-02-28 17:19:13.4627	c3fd8161-3013-41bc-80ac-734dab7ef694	\N	1017
977	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2022-02-28 17:19:13.569705	2022-02-28 17:19:13.56843	ef59404d-618e-456b-8544-a1648ec7cc3f	\N	1037
988	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2022-02-28 17:19:13.632896	2022-02-28 17:19:13.631719	99ce1173-5b30-4c61-b79f-7f0ff962c888	\N	1048
998	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	2022-02-28 17:19:13.669541	2022-02-28 17:19:13.669502	5c9b1e32-ddfa-491e-991a-00f68bdd0423	\N	1058
1002	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	2022-02-28 17:19:13.771726	2022-02-28 17:19:13.771689	ec2fdd57-b989-4d96-b5fa-d8ed8401127c	\N	1062
1008	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2022-02-28 17:19:14.04432	2022-02-28 17:19:14.043124	23dae3ba-4c98-4519-a407-0fe848fef23e	\N	1068
1011	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	2022-02-28 17:19:14.096187	2022-02-28 17:19:14.095028	f2842475-b6d8-4e85-9dd8-ed9cece49859	\N	1071
1018	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	2022-02-28 17:19:14.146254	2022-02-28 17:19:14.144583	baf6e91a-a1a3-42d9-bddb-7ee5f346abb0	\N	1078
1022	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2022-02-28 17:19:14.196423	2022-02-28 17:19:14.194643	a3ce0463-54f7-4ce5-89a1-44c77808874a	\N	1082
1025	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	2022-02-28 17:19:14.212403	2022-02-28 17:19:14.212276	0583117b-e956-4298-bf03-973d37d445d1	\N	1085
1028	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	2022-02-28 17:19:14.515051	2022-02-28 17:19:14.513698	9a75fc2d-ce67-41cd-9427-45be5ae60887	\N	1088
1055	uri://gbisd.edu/IndicatorDescriptor	Retention Rate	Percent of staff retained	The percent of staff retained for the education organization	\N	\N	\N	2022-02-28 17:19:14.638017	2022-02-28 17:19:14.636803	3da90c78-82f3-4028-89f9-00e6dcfb9555	\N	1115
1058	uri://gbisd.edu/IndicatorLevelDescriptor	High Retention	High Retention	Staff retention from previous school year is between 90-100 percent of staff retained.	\N	\N	\N	2022-02-28 17:19:14.885298	2022-02-28 17:19:14.883903	713afae8-8320-4b42-9de6-c4ea4f0aa6eb	\N	1118
1062	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2022-02-28 17:19:14.940422	2022-02-28 17:19:14.938813	c0c22375-af7c-4da7-afb0-e244b978d1cb	\N	1122
1068	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:15.003379	2022-02-28 17:19:15.002146	46401ac7-5132-4649-8f3e-6ee6813ae1c8	\N	1128
1071	uri://ed-fi.org/InternetAccessDescriptor	High Speed	High Speed	High Speed	\N	\N	\N	2022-02-28 17:19:15.06162	2022-02-28 17:19:15.060354	b965086e-9214-42de-87c8-5a15bd12a4c8	\N	1131
1091	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:15.213177	2022-02-28 17:19:15.211892	fd99486a-ef2d-4b8b-a30a-366fc4b1639b	\N	1151
1100	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	2022-02-28 17:19:15.277766	2022-02-28 17:19:15.275884	13a32bca-ff99-4289-b6b3-484feec4ab14	\N	1160
754	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	2022-02-28 17:19:11.984446	2022-02-28 17:19:11.98431	08e2f292-b4cc-4dc2-88a3-ac80b82464fc	\N	814
756	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	2022-02-28 17:19:11.989439	2022-02-28 17:19:11.989403	2f2dbd01-e43d-4534-a2b6-cd5332c3280e	\N	816
757	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	2022-02-28 17:19:11.993804	2022-02-28 17:19:11.993762	3f9a5bb6-f328-4345-ab33-f39b52cd81c4	\N	817
759	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	2022-02-28 17:19:11.998935	2022-02-28 17:19:11.99892	71e72017-6e22-43eb-a9fd-199753b7c35a	\N	819
760	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	2022-02-28 17:19:12.001504	2022-02-28 17:19:12.001471	2fd001e3-06ed-4919-b806-844632c6656c	\N	820
761	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.00697	2022-02-28 17:19:12.006928	bd908e09-7f75-44e5-a2d0-55cc514a6bec	\N	821
763	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	2022-02-28 17:19:12.012631	2022-02-28 17:19:12.012579	42bf51c0-c516-41fc-890d-8b2061390989	\N	823
765	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	2022-02-28 17:19:12.018676	2022-02-28 17:19:12.018636	9f64ba07-7e38-474a-98f0-4464339751ad	\N	825
768	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	2022-02-28 17:19:12.050162	2022-02-28 17:19:12.048916	aa6be436-d584-40f8-966d-5ab7e3628a75	\N	828
770	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	2022-02-28 17:19:12.063128	2022-02-28 17:19:12.062977	ca07a587-7da8-4452-af4f-408cf46e63da	\N	830
773	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	2022-02-28 17:19:12.068759	2022-02-28 17:19:12.068721	34ded587-8d42-4ce1-b6fb-e9581fb0b7e6	\N	833
775	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	2022-02-28 17:19:12.075203	2022-02-28 17:19:12.075121	35f9148b-8b8b-4cab-8824-5ef2fe36b20b	\N	835
776	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.08111	2022-02-28 17:19:12.080907	09567274-1ee2-46d5-8c22-fbe9e0299067	\N	836
778	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	2022-02-28 17:19:12.086607	2022-02-28 17:19:12.08657	ce08f931-cb7b-4392-859b-98bfe0a3ade2	\N	838
780	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	2022-02-28 17:19:12.092762	2022-02-28 17:19:12.092742	0b6d54a3-bf5d-4dea-aaea-8ee491cd91ea	\N	840
781	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	2022-02-28 17:19:12.094986	2022-02-28 17:19:12.094946	ec8bde83-4557-494d-9d90-2e5af29dd7ef	\N	841
782	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	2022-02-28 17:19:12.098876	2022-02-28 17:19:12.09883	57fd1084-3973-4996-9f93-5fa82074fe4e	\N	842
784	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	2022-02-28 17:19:12.102368	2022-02-28 17:19:12.102332	6f3931ae-71f8-4c16-8f36-5e1fa4119748	\N	844
785	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	2022-02-28 17:19:12.107356	2022-02-28 17:19:12.107315	b66e6cc1-1d60-44f5-8805-b3121fff4eb0	\N	845
787	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	2022-02-28 17:19:12.144512	2022-02-28 17:19:12.14252	2b6ba6df-26e9-4105-b78b-081241be46c0	\N	847
789	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	2022-02-28 17:19:12.15116	2022-02-28 17:19:12.150009	60053ddf-1b38-4491-8899-80bef2348ac1	\N	849
790	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	2022-02-28 17:19:12.159364	2022-02-28 17:19:12.158875	25593a9e-cdaf-4a4d-b369-69eef057a0ae	\N	850
793	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	2022-02-28 17:19:12.16388	2022-02-28 17:19:12.163801	2dcece1b-5972-4f4d-b751-06359d4e32b8	\N	853
794	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	2022-02-28 17:19:12.171169	2022-02-28 17:19:12.171125	c2f86544-1cab-406d-91ca-5b16d69c1506	\N	854
796	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	2022-02-28 17:19:12.174758	2022-02-28 17:19:12.174702	e73e0f9a-690c-4a7c-abd0-62136a34cca0	\N	856
797	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	2022-02-28 17:19:12.178744	2022-02-28 17:19:12.178706	62d52712-2c85-4be6-8a36-18b011ca40cd	\N	857
799	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	2022-02-28 17:19:12.217979	2022-02-28 17:19:12.216744	637a6f95-2a7b-439e-912b-ddad04e24098	\N	859
802	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	2022-02-28 17:19:12.23073	2022-02-28 17:19:12.230693	648c334e-e293-41e9-a192-f0825e4be837	\N	862
804	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	2022-02-28 17:19:12.245875	2022-02-28 17:19:12.245766	0f7e6faf-fab3-444e-bb38-66c561f8e781	\N	864
808	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	2022-02-28 17:19:12.259041	2022-02-28 17:19:12.258796	6af80db4-f0ed-4955-9dfa-82a5eea989c2	\N	868
810	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	2022-02-28 17:19:12.29792	2022-02-28 17:19:12.296647	0838f28f-f80d-4e8a-b2e6-6e6825e5c675	\N	870
814	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	2022-02-28 17:19:12.309042	2022-02-28 17:19:12.308984	03f6badf-6a7f-4979-8cab-899f23122eab	\N	874
815	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	2022-02-28 17:19:12.315573	2022-02-28 17:19:12.315293	11e6e575-c2eb-4e07-82d4-d5828ff22344	\N	875
818	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	2022-02-28 17:19:12.321054	2022-02-28 17:19:12.321	b87e6047-3637-4757-ae86-bde915e121ac	\N	878
819	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	2022-02-28 17:19:12.327551	2022-02-28 17:19:12.327488	e3177f0c-ce5c-4d37-b49d-ede398f871c2	\N	879
822	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2022-02-28 17:19:12.378959	2022-02-28 17:19:12.377693	07809b0f-87b6-4f5b-a56a-389984ec6f44	\N	882
827	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-02-28 17:19:12.428307	2022-02-28 17:19:12.427125	6acd7df0-3363-4d2b-814f-114cce0040d7	\N	887
828	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	2022-02-28 17:19:12.441392	2022-02-28 17:19:12.44134	f3883aa9-3cc1-4b6b-afe5-6e16feb20839	\N	888
758	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:11.997422	2022-02-28 17:19:11.997381	a3d8fd3c-f6a0-45fa-9e79-db0316af61be	\N	818
762	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	2022-02-28 17:19:12.008186	2022-02-28 17:19:12.008147	ea5ce28b-bd03-4a8b-9626-d94412701508	\N	822
764	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	2022-02-28 17:19:12.012819	2022-02-28 17:19:12.012726	27138bcd-0378-47ed-9008-8c777df0f1b0	\N	824
766	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	2022-02-28 17:19:12.050138	2022-02-28 17:19:12.048919	fe38a42e-42b9-49a0-bfbe-b6efb4120859	\N	826
771	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	2022-02-28 17:19:12.064269	2022-02-28 17:19:12.06423	846483b4-b64d-4465-b5ee-194d7e4f1ad7	\N	831
774	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	2022-02-28 17:19:12.074444	2022-02-28 17:19:12.074406	a3b4fe1d-cbc9-4f62-87ca-f8844b316299	\N	834
777	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	2022-02-28 17:19:12.083285	2022-02-28 17:19:12.08323	48c935aa-bf20-4bee-a984-feb0881b6267	\N	837
779	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	2022-02-28 17:19:12.087992	2022-02-28 17:19:12.087775	adb36960-8848-4c61-a743-82bff60c240c	\N	839
783	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	2022-02-28 17:19:12.099207	2022-02-28 17:19:12.099143	5e26893c-0739-4e77-a130-0cdd0c1c49ed	\N	843
786	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.144274	2022-02-28 17:19:12.142597	e34de412-7e79-45a4-9e54-bd5dcb41de79	\N	846
791	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	2022-02-28 17:19:12.159489	2022-02-28 17:19:12.159448	74948446-060a-463b-8121-c45cf770ed9b	\N	851
792	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	2022-02-28 17:19:12.163216	2022-02-28 17:19:12.163153	7e7d856d-6672-403d-a015-c1156995e445	\N	852
795	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.17136	2022-02-28 17:19:12.171296	e3fdd49b-8f28-4c74-8472-a1e15db2e98b	\N	855
801	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	2022-02-28 17:19:12.218382	2022-02-28 17:19:12.21677	72eb1fc3-8f58-451c-8423-521cd8c729c1	\N	861
803	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	2022-02-28 17:19:12.231053	2022-02-28 17:19:12.23102	202548bb-e882-4c2d-acbc-4327713116d5	\N	863
806	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	2022-02-28 17:19:12.249747	2022-02-28 17:19:12.249703	098c8963-6e92-40cb-ae90-0b740f8f56c4	\N	866
807	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	2022-02-28 17:19:12.259054	2022-02-28 17:19:12.25889	d9e85ea6-8b5d-4b59-91e4-986f35da0dff	\N	867
811	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	2022-02-28 17:19:12.297905	2022-02-28 17:19:12.296655	78bdd7ab-a327-493a-90db-a03f724ca3cb	\N	871
816	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.316832	2022-02-28 17:19:12.316772	185e1d1c-11af-43fd-bd74-4e922a951379	\N	876
823	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2022-02-28 17:19:12.379417	2022-02-28 17:19:12.377721	0ccda442-e909-4077-b510-6aabaaf47d12	\N	883
824	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2022-02-28 17:19:12.428309	2022-02-28 17:19:12.427131	9f9987ec-6e24-43aa-9fb4-b504574d0ab9	\N	884
830	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	2022-02-28 17:19:12.444957	2022-02-28 17:19:12.444941	f48242c0-8b5a-4acc-a950-55cdb08da0f0	\N	890
833	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	2022-02-28 17:19:12.458349	2022-02-28 17:19:12.458318	388c3da7-75cb-4847-9625-f5b493e442b3	\N	893
835	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	2022-02-28 17:19:12.462937	2022-02-28 17:19:12.462869	0c42b975-42fe-4e51-812e-56321d6d2f3e	\N	895
838	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	2022-02-28 17:19:12.501592	2022-02-28 17:19:12.500421	332d5d06-2134-466b-bff6-e5e1e0836de6	\N	898
841	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:12.515345	2022-02-28 17:19:12.515124	e0848bff-940d-4ddd-b074-0341b3238491	\N	901
846	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	2022-02-28 17:19:12.557757	2022-02-28 17:19:12.556417	8893d36e-5855-4977-af6c-6f0efc914eec	\N	906
850	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	2022-02-28 17:19:12.572198	2022-02-28 17:19:12.572157	c7d9634a-6938-4fea-aab1-ee73f761da52	\N	910
857	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	2022-02-28 17:19:12.864885	2022-02-28 17:19:12.863723	86271181-8894-4518-8d1c-d0b6075ab46e	\N	917
862	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	2022-02-28 17:19:12.880877	2022-02-28 17:19:12.880778	2e5a0a67-2c3f-4259-ad6b-7cdc03158cc9	\N	922
865	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	2022-02-28 17:19:12.894039	2022-02-28 17:19:12.894018	941ea905-ca1c-42a6-98e7-26937050aa56	\N	925
870	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	2022-02-28 17:19:12.933435	2022-02-28 17:19:12.932161	ec7255a2-c426-483a-9122-0cb601402d6e	\N	930
872	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	2022-02-28 17:19:12.980242	2022-02-28 17:19:12.978993	d09e086e-033b-4323-b7d0-8e8299efc807	\N	932
876	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	2022-02-28 17:19:12.994219	2022-02-28 17:19:12.994129	b6e40459-a355-4ed8-a231-7a14d9011760	\N	936
882	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	2022-02-28 17:19:13.045364	2022-02-28 17:19:13.044175	ae8eb156-b4f9-4244-980d-d558ef149c25	\N	942
890	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	2022-02-28 17:19:13.071917	2022-02-28 17:19:13.071877	e028abae-f92b-4d5d-a0c5-9e62cdeca54c	\N	950
893	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	2022-02-28 17:19:13.077771	2022-02-28 17:19:13.077729	e673d324-712c-405b-b762-0275524c5523	\N	953
898	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	2022-02-28 17:19:13.125186	2022-02-28 17:19:13.123268	2b965892-6f42-45b9-9c7a-9eb0c0be2338	\N	958
901	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	2022-02-28 17:19:13.175533	2022-02-28 17:19:13.174321	9bef881e-a1f6-489c-bd1a-c74db08edc1c	\N	961
904	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	2022-02-28 17:19:13.190288	2022-02-28 17:19:13.190144	ea106b5a-952f-4988-afdc-3b6d735f3974	\N	964
908	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	2022-02-28 17:19:13.201229	2022-02-28 17:19:13.201189	b0831621-7e3c-4f9f-bd56-8388867ec388	\N	968
915	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:13.222486	2022-02-28 17:19:13.222446	3331308a-f58b-417a-ab3e-c741513ae495	\N	975
917	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	2022-02-28 17:19:13.229359	2022-02-28 17:19:13.229325	1b19526d-757a-451b-834e-e56f84d48b68	\N	977
772	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	2022-02-28 17:19:12.065591	2022-02-28 17:19:12.065544	1242568e-a049-4443-8dc4-964d883238af	\N	832
788	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	2022-02-28 17:19:12.145473	2022-02-28 17:19:12.142539	89d5252a-4a3d-48e8-b99a-4c9742d7cd4e	\N	848
798	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.217984	2022-02-28 17:19:12.216749	b0f17acb-aaef-45f6-87c9-95f7d0efc27f	\N	858
805	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	2022-02-28 17:19:12.248326	2022-02-28 17:19:12.248013	cb857108-3d09-4daf-8151-b2428dc3a0c1	\N	865
809	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	2022-02-28 17:19:12.261162	2022-02-28 17:19:12.261123	deab2e1a-1ad8-4d37-838a-74b3b4a25545	\N	869
812	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	2022-02-28 17:19:12.297981	2022-02-28 17:19:12.296671	41f1e615-29bf-4e32-9bd0-f9c7e394cda3	\N	872
817	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	2022-02-28 17:19:12.31697	2022-02-28 17:19:12.31691	2f90e278-438c-4f35-8c3d-1ba744af01dc	\N	877
821	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2022-02-28 17:19:12.378962	2022-02-28 17:19:12.377714	ea6ed349-1258-4a07-96ee-1a914479caeb	\N	881
825	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	2022-02-28 17:19:12.428343	2022-02-28 17:19:12.427147	ea48f184-e55d-4c82-8f5c-b4611d92e00e	\N	885
839	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2022-02-28 17:19:12.50209	2022-02-28 17:19:12.500425	c7d20a7e-bf3f-4d9a-bf1f-3bc48828d4f7	\N	899
842	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2022-02-28 17:19:12.515365	2022-02-28 17:19:12.515313	e48c60a9-e22f-4a50-b1c5-b924082237bc	\N	902
847	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	2022-02-28 17:19:12.558285	2022-02-28 17:19:12.556457	1712d91a-9429-4bec-bcc3-0eb62900c0c7	\N	907
852	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-02-28 17:19:12.576517	2022-02-28 17:19:12.576478	f9e5c65e-a64d-4d5e-8e72-36ecc19de62c	\N	912
859	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	2022-02-28 17:19:12.865413	2022-02-28 17:19:12.863743	a53047a7-0d32-461d-8b3a-f4ca8f16228b	\N	919
861	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	2022-02-28 17:19:12.879689	2022-02-28 17:19:12.879606	23f70855-5e3f-4875-a578-ac7a8eab1bb6	\N	921
863	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	2022-02-28 17:19:12.883108	2022-02-28 17:19:12.88305	7d6d2017-120a-482f-bb54-701f9216a8dd	\N	923
868	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	2022-02-28 17:19:12.933435	2022-02-28 17:19:12.93217	5df25476-f4a2-4239-a79d-b2d911a814e8	\N	928
873	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	2022-02-28 17:19:12.980254	2022-02-28 17:19:12.979005	b6002ab5-51ec-4c9b-a1ff-ca57422d6d38	\N	933
877	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.994653	2022-02-28 17:19:12.994593	71df1c8c-e592-4294-86e4-d8335164348e	\N	937
883	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	2022-02-28 17:19:13.045367	2022-02-28 17:19:13.044187	1566fdd6-ca1a-4618-959d-f49c62cc544c	\N	943
887	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	2022-02-28 17:19:13.061297	2022-02-28 17:19:13.060967	bab1304e-8d03-4dca-ab9f-e191c834c79f	\N	947
896	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	2022-02-28 17:19:13.124517	2022-02-28 17:19:13.123287	7152536e-2156-4556-aac6-7fb973ccd112	\N	956
902	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	2022-02-28 17:19:13.175556	2022-02-28 17:19:13.174337	932960e5-3c66-4713-ac3c-ecc73e800527	\N	962
905	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	2022-02-28 17:19:13.190407	2022-02-28 17:19:13.190223	8d3b9c33-f6d8-40de-b2c2-ab9a0336ba53	\N	965
932	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	2022-02-28 17:19:13.315415	2022-02-28 17:19:13.314179	c3006cda-f9d9-497a-ba25-b833c11bbe76	\N	992
938	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	2022-02-28 17:19:13.332781	2022-02-28 17:19:13.332709	1d660357-8ee7-4c72-b46f-448138f8ffff	\N	998
942	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	2022-02-28 17:19:13.349189	2022-02-28 17:19:13.349131	b78facfa-671e-4f2e-adcb-413610bffda8	\N	1002
950	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	2022-02-28 17:19:13.402115	2022-02-28 17:19:13.400941	0a8a0cf4-b9fd-4d12-83d9-da984f277640	\N	1010
958	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	2022-02-28 17:19:13.463885	2022-02-28 17:19:13.46269	2861233c-4361-4ac3-835d-1d555e1b9572	\N	1018
961	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-02-28 17:19:13.481477	2022-02-28 17:19:13.481444	9b259f6c-8dfb-423e-906b-01882bbf428b	\N	1021
978	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	2022-02-28 17:19:13.569702	2022-02-28 17:19:13.568431	20a5cfc2-e6dd-49bb-944c-452844bc8cf3	\N	1038
987	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	2022-02-28 17:19:13.632896	2022-02-28 17:19:13.631701	380e3d50-a0e1-4508-9864-984d349bfd09	\N	1047
990	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	2022-02-28 17:19:13.648323	2022-02-28 17:19:13.648242	ae5850bd-d61b-44eb-be92-03c54f858219	\N	1050
997	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	2022-02-28 17:19:13.665758	2022-02-28 17:19:13.665692	b881f8c0-312d-44df-93c9-756b0b84639b	\N	1057
1001	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	2022-02-28 17:19:13.769356	2022-02-28 17:19:13.768948	f906170d-b692-4100-bab2-9726a9b555bc	\N	1061
1007	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2022-02-28 17:19:14.044336	2022-02-28 17:19:14.043125	a9de4a43-6cf0-4297-b403-90da442eb497	\N	1067
1013	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	2022-02-28 17:19:14.096263	2022-02-28 17:19:14.095044	40d623c3-a9a7-4947-b3c9-93bd02ff0bac	\N	1073
1015	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	2022-02-28 17:19:14.145758	2022-02-28 17:19:14.144568	34f2183f-c599-429a-9548-c81cb80789b5	\N	1075
1021	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	2022-02-28 17:19:14.195803	2022-02-28 17:19:14.194625	6d6f1b66-354d-4494-b8d7-1b5ab730a5b6	\N	1081
1026	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	2022-02-28 17:19:14.213268	2022-02-28 17:19:14.213224	6fd9e2b1-9955-4775-94d7-5c7aa07b43b8	\N	1086
1027	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	2022-02-28 17:19:14.515027	2022-02-28 17:19:14.513699	d6e97959-25f3-40fc-8c1d-977226200d6f	\N	1087
1038	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	2022-02-28 17:19:14.549991	2022-02-28 17:19:14.549932	af2ed8e9-888f-4614-9442-fe2a2864e879	\N	1098
1053	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:14.599621	2022-02-28 17:19:14.599579	da353e58-edae-4c20-afa3-f9ebfd52752a	\N	1113
829	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	2022-02-28 17:19:12.444634	2022-02-28 17:19:12.444591	579bb3df-e8ef-4ddd-90d1-aa1cae9632b2	\N	889
831	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	2022-02-28 17:19:12.448837	2022-02-28 17:19:12.448797	8f40acba-7776-4472-9d7c-a6f82cc27303	\N	891
832	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	2022-02-28 17:19:12.453586	2022-02-28 17:19:12.453546	c6003903-8d0a-4ad3-b869-1aef796166aa	\N	892
834	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	2022-02-28 17:19:12.459286	2022-02-28 17:19:12.459224	f388b45e-9732-4eb5-b13a-e3923e35fe75	\N	894
836	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	2022-02-28 17:19:12.463866	2022-02-28 17:19:12.463844	ed59e937-d2a9-454d-a59f-b4542c16be55	\N	896
840	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.501584	2022-02-28 17:19:12.500402	e25941b4-990a-40b3-9022-40c6477428fd	\N	900
843	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	2022-02-28 17:19:12.516942	2022-02-28 17:19:12.516924	489fd623-eb40-4596-99a5-09461be5c5be	\N	903
844	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Organization Department	Organization Department	An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.	\N	\N	\N	2022-02-28 17:19:12.520515	2022-02-28 17:19:12.52048	baf9b52c-2459-4a5a-830f-c302926d1903	\N	904
848	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-02-28 17:19:12.557759	2022-02-28 17:19:12.556411	3f3310dc-6b5f-4e42-9e9f-b70f455d5c83	\N	908
849	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	2022-02-28 17:19:12.571772	2022-02-28 17:19:12.571729	ce574085-891b-4aaf-bcff-f0da3362fd68	\N	909
851	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.576454	2022-02-28 17:19:12.576409	7a6eda5b-421e-4c28-99ec-b7220d661463	\N	911
854	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	2022-02-28 17:19:12.828567	2022-02-28 17:19:12.828436	d7b6478c-d9b9-4f02-90dc-470cf23d49a0	\N	914
855	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	2022-02-28 17:19:12.833518	2022-02-28 17:19:12.833464	e1e3ca6f-997e-41e6-9a8f-e95cff75fed5	\N	915
858	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	2022-02-28 17:19:12.864894	2022-02-28 17:19:12.863714	fc691e26-3e91-4d03-844c-d0541f95aa2a	\N	918
860	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	2022-02-28 17:19:12.879648	2022-02-28 17:19:12.879415	7b7ee5a8-71b7-42bf-b9bd-fa38770fe61d	\N	920
864	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.888663	2022-02-28 17:19:12.888617	22eeecfa-cec6-4e02-8775-8424d86f0c31	\N	924
866	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	2022-02-28 17:19:12.895705	2022-02-28 17:19:12.89569	94c1891b-c69a-46d5-a70f-e449be59e63a	\N	926
867	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	2022-02-28 17:19:12.898267	2022-02-28 17:19:12.898246	8640df1d-0031-4b60-ae44-26c892330177	\N	927
869	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:12.933435	2022-02-28 17:19:12.932158	380618ff-e2a3-4e18-afc9-404c0446adc7	\N	929
874	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	2022-02-28 17:19:12.980242	2022-02-28 17:19:12.978985	60279c51-63c4-4995-ab2d-693c255201aa	\N	934
878	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	2022-02-28 17:19:12.995324	2022-02-28 17:19:12.995208	8a6eaff7-398f-4a40-a638-8d883c805330	\N	938
879	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	2022-02-28 17:19:12.998555	2022-02-28 17:19:12.998511	3cc60b92-841e-4598-a8ff-c5bd2e2d0716	\N	939
880	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	2022-02-28 17:19:13.003688	2022-02-28 17:19:13.003642	8c8d2baf-8691-4893-aafb-71c62b40be8f	\N	940
881	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	2022-02-28 17:19:13.007076	2022-02-28 17:19:13.007039	5f40fff4-d6b5-4627-a9cb-d68f8e605758	\N	941
885	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	2022-02-28 17:19:13.045363	2022-02-28 17:19:13.044168	61ba7bc4-fdc8-45bd-b7d5-c57acf43d26f	\N	945
886	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	2022-02-28 17:19:13.061052	2022-02-28 17:19:13.060682	967820b0-7d98-45f0-888c-a231fb08e21d	\N	946
889	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	2022-02-28 17:19:13.063816	2022-02-28 17:19:13.063786	729b86e1-c43c-41b6-a8db-1829832279e2	\N	949
891	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	2022-02-28 17:19:13.072845	2022-02-28 17:19:13.072805	b2425ce2-8b8e-4bce-b7b4-69cbbf76bfee	\N	951
892	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	2022-02-28 17:19:13.077339	2022-02-28 17:19:13.077292	a5472321-3bba-4d60-859b-86d7c8e78c5e	\N	952
894	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	2022-02-28 17:19:13.086541	2022-02-28 17:19:13.086497	0745e32f-24ff-4dc6-b997-c7a9f01d5e59	\N	954
897	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:13.125187	2022-02-28 17:19:13.123246	98e34430-6ff2-4ae4-99c5-72d5b1901216	\N	957
899	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	2022-02-28 17:19:13.139601	2022-02-28 17:19:13.139532	01c83a77-7236-4af8-a704-a8205a2ba90d	\N	959
900	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	2022-02-28 17:19:13.175531	2022-02-28 17:19:13.17431	c6fb5bf8-4c5b-420e-a1fe-86f6cb614a62	\N	960
906	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	2022-02-28 17:19:13.191807	2022-02-28 17:19:13.191738	42e32b99-80ed-4a9f-aeed-dc5ef671a0e2	\N	966
907	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	2022-02-28 17:19:13.196291	2022-02-28 17:19:13.196249	3a61e06a-117a-4659-a138-aabf5451abf1	\N	967
909	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2022-02-28 17:19:13.202633	2022-02-28 17:19:13.202585	2dfad831-8be2-4667-8856-b97a4d1324b4	\N	969
910	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	2022-02-28 17:19:13.205329	2022-02-28 17:19:13.205313	a0a82521-0564-4f81-9c84-8809acd7248a	\N	970
911	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	2022-02-28 17:19:13.20856	2022-02-28 17:19:13.208516	643099b7-32ed-477b-b8c2-2d599fe74486	\N	971
912	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	2022-02-28 17:19:13.214283	2022-02-28 17:19:13.214243	8215aa04-1441-4c86-809a-48931d7942ac	\N	972
913	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	2022-02-28 17:19:13.217141	2022-02-28 17:19:13.217106	f9b67aa0-0ff5-4186-9c2b-a7e584e60a76	\N	973
2771	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	2022-02-28 17:19:26.870934	2022-02-28 17:19:26.870901	28d8205e-5e4b-4a39-b67d-fa1e12fcf0e4	\N	2831
914	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	2022-02-28 17:19:13.220498	2022-02-28 17:19:13.220451	18cc610f-e03d-41e3-8b90-fc7023d28691	\N	974
916	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	2022-02-28 17:19:13.229044	2022-02-28 17:19:13.229	ac0018d5-6d44-455b-a0e6-764b48783edf	\N	976
918	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	2022-02-28 17:19:13.235589	2022-02-28 17:19:13.235488	c0b58263-fadf-4e84-bb9b-54851a625af4	\N	978
919	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	2022-02-28 17:19:13.238419	2022-02-28 17:19:13.23838	48dcebab-bfa1-4d36-9c96-3ae30588735b	\N	979
920	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	2022-02-28 17:19:13.244306	2022-02-28 17:19:13.244265	6c413083-e501-4781-997b-a7cc0a7794b4	\N	980
923	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	2022-02-28 17:19:13.250176	2022-02-28 17:19:13.250127	7d06e60e-aca3-4220-96b2-6c323182fa3a	\N	983
924	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	2022-02-28 17:19:13.257121	2022-02-28 17:19:13.257068	4cfdb1e8-4aa9-4e13-bbca-87fb4354cd04	\N	984
927	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	2022-02-28 17:19:13.263498	2022-02-28 17:19:13.263456	688a349f-300f-4b96-aa88-e90cae1ead81	\N	987
928	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	2022-02-28 17:19:13.266722	2022-02-28 17:19:13.266685	e8eedd2d-9381-46df-858d-cabf4dbd88b2	\N	988
929	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	2022-02-28 17:19:13.27073	2022-02-28 17:19:13.270688	96937007-75fb-41b3-bb9c-dc58f5bbbb97	\N	989
931	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	2022-02-28 17:19:13.276779	2022-02-28 17:19:13.276741	6f460b79-c09a-4acd-9c04-620ba154d18a	\N	991
934	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2022-02-28 17:19:13.315414	2022-02-28 17:19:13.314161	0a3f0816-0622-474d-90e8-1669613332f4	\N	994
937	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	2022-02-28 17:19:13.331454	2022-02-28 17:19:13.331382	6dc31a4b-f880-4811-a0ac-1791ca9dd8c8	\N	997
939	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	2022-02-28 17:19:13.336394	2022-02-28 17:19:13.336344	1629a06d-1798-48cc-8d64-2e8a14a9722e	\N	999
940	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	2022-02-28 17:19:13.344092	2022-02-28 17:19:13.344029	adde9cc4-65d1-49e1-a1d0-31015f5ce031	\N	1000
943	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:13.350089	2022-02-28 17:19:13.350068	2d9f97a2-96ee-4308-bff4-6ffdcfed3fa9	\N	1003
944	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2022-02-28 17:19:13.353527	2022-02-28 17:19:13.353504	5e1efb79-192a-4333-b47f-1fe81c7b9b23	\N	1004
945	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	2022-02-28 17:19:13.356547	2022-02-28 17:19:13.356531	798a2371-2b89-4482-8834-f9d61aefe02e	\N	1005
946	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-02-28 17:19:13.366399	2022-02-28 17:19:13.366234	89df7250-b2d0-4615-842f-2546f7e67b2a	\N	1006
948	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	2022-02-28 17:19:13.402114	2022-02-28 17:19:13.400938	2319ae67-b5bb-4ac7-9c7d-04bd106af5a6	\N	1008
951	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	2022-02-28 17:19:13.417293	2022-02-28 17:19:13.417243	52f02af8-11ed-4983-bcfc-3e32a331bbb0	\N	1011
954	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	2022-02-28 17:19:13.423455	2022-02-28 17:19:13.423402	02ab1118-d211-436a-ba37-a63f4ccdb4f3	\N	1014
956	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	2022-02-28 17:19:13.463886	2022-02-28 17:19:13.462707	ed81f425-f24d-4d1a-837b-3ebbb1156452	\N	1016
959	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-02-28 17:19:13.481077	2022-02-28 17:19:13.480945	9124732d-3f16-46af-8f97-accebd628009	\N	1019
962	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-02-28 17:19:13.484148	2022-02-28 17:19:13.484093	fea1abb1-898d-4920-a6d3-d4b5727dd1c3	\N	1022
964	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-02-28 17:19:13.494118	2022-02-28 17:19:13.494086	4085183e-21f1-4883-b047-2a4567325807	\N	1024
965	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-02-28 17:19:13.497369	2022-02-28 17:19:13.497353	34b85df9-874b-48a5-b55e-9fc8f0f3fb9e	\N	1025
968	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-02-28 17:19:13.505436	2022-02-28 17:19:13.505391	831d1bae-16aa-4169-9a6d-47869a4b93ce	\N	1028
969	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-02-28 17:19:13.510473	2022-02-28 17:19:13.5104	3bd73d0c-da4f-44a5-be63-d56431393674	\N	1029
971	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	2022-02-28 17:19:13.514529	2022-02-28 17:19:13.51449	bc2126fe-5d18-4149-95dc-a37994997481	\N	1031
972	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	2022-02-28 17:19:13.519405	2022-02-28 17:19:13.519358	86e19e75-39ce-48ae-b215-e47fb9f1b8e7	\N	1032
973	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	2022-02-28 17:19:13.523628	2022-02-28 17:19:13.523608	e87f05a8-d1e9-4dd2-ad76-5f19c65ea032	\N	1033
975	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:13.527488	2022-02-28 17:19:13.527459	3a9d2533-e8af-45fc-80e0-799a7c5c4916	\N	1035
976	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-02-28 17:19:13.530091	2022-02-28 17:19:13.530054	c40ef604-c59c-454a-92a8-af4451c76a3d	\N	1036
980	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	2022-02-28 17:19:13.576462	2022-02-28 17:19:13.575173	29c2feb2-d8d1-425e-bd3d-8e8c36b4b7d3	\N	1040
981	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	2022-02-28 17:19:13.584692	2022-02-28 17:19:13.584648	11b09e9a-09ba-4031-a1f5-f55a4503f60b	\N	1041
984	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	2022-02-28 17:19:13.590579	2022-02-28 17:19:13.590548	70b3dd97-c853-4d57-a9cf-25d2c97f7c3e	\N	1044
985	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	2022-02-28 17:19:13.595358	2022-02-28 17:19:13.595321	5d2e361a-2590-4431-81ee-aa2002f86599	\N	1045
989	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	2022-02-28 17:19:13.633497	2022-02-28 17:19:13.631697	acd8de0e-c14a-47ea-8f4a-f58c0e7395d1	\N	1049
992	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2022-02-28 17:19:13.650334	2022-02-28 17:19:13.649949	950dedfd-14e5-4805-8f67-16ea788a39b1	\N	1052
995	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	2022-02-28 17:19:13.660926	2022-02-28 17:19:13.660892	701f0259-dce7-4631-a43b-9fb598dcdedc	\N	1055
1000	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	2022-02-28 17:19:13.768493	2022-02-28 17:19:13.768406	ec4e06f7-dcaa-4a68-9527-ce8ea7c578a2	\N	1060
1003	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	2022-02-28 17:19:14.000699	2022-02-28 17:19:14.000651	58873407-9128-4ff7-9596-67e3e1301756	\N	1063
1005	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	2022-02-28 17:19:14.006613	2022-02-28 17:19:14.006596	bd071b0a-2e4e-491a-8f18-48afa46f0bc0	\N	1065
1009	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2022-02-28 17:19:14.044898	2022-02-28 17:19:14.043095	edf7a3c6-c1d2-4720-9801-d7f6a5e80368	\N	1069
1010	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	2022-02-28 17:19:14.058368	2022-02-28 17:19:14.057902	44860293-418e-4b95-8573-1b0a6760fc51	\N	1070
921	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	2022-02-28 17:19:13.244456	2022-02-28 17:19:13.244438	1bf6d53d-98a8-4448-951b-90b13f8cd5cf	\N	981
922	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	2022-02-28 17:19:13.249028	2022-02-28 17:19:13.248989	9efa7349-6aae-48ee-8a68-73e1484b7cce	\N	982
925	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	2022-02-28 17:19:13.257195	2022-02-28 17:19:13.257168	175e38ac-a116-4091-9c71-7b04ec04fd77	\N	985
926	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	2022-02-28 17:19:13.262161	2022-02-28 17:19:13.26212	452eac5b-e4af-4214-90ca-b7b93b6466cd	\N	986
930	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	2022-02-28 17:19:13.275091	2022-02-28 17:19:13.27502	e4ed182d-d1d5-49f3-9cb5-2e56fcc3677b	\N	990
935	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-02-28 17:19:13.315415	2022-02-28 17:19:13.314171	e5aaa1f1-e2a2-4d1e-a4d9-0e77b460675e	\N	995
936	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	2022-02-28 17:19:13.330951	2022-02-28 17:19:13.330508	67fc5304-7d78-450b-98ce-bf80aea80266	\N	996
941	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	2022-02-28 17:19:13.347707	2022-02-28 17:19:13.347523	416d6446-dc4c-434b-8370-b9bf666346f7	\N	1001
947	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	2022-02-28 17:19:13.40212	2022-02-28 17:19:13.40096	ecdbf48d-7cd4-4bbd-9fe3-d76efae5aa4e	\N	1007
952	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	2022-02-28 17:19:13.417504	2022-02-28 17:19:13.417484	9ad66e78-7899-42cf-8117-780a1d97a4ad	\N	1012
953	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	2022-02-28 17:19:13.422439	2022-02-28 17:19:13.422402	458dc886-d925-4907-b0da-586b3b9a7e86	\N	1013
955	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	2022-02-28 17:19:13.463886	2022-02-28 17:19:13.462685	c4fb5312-f9e0-497f-9873-a7e50e1e3cb5	\N	1015
960	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-02-28 17:19:13.481204	2022-02-28 17:19:13.481037	f8740355-db1d-4c10-9ef2-e46c0c3f3f81	\N	1020
963	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-02-28 17:19:13.493299	2022-02-28 17:19:13.49326	636258a9-f504-442e-b538-f775b66614f8	\N	1023
966	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-02-28 17:19:13.497555	2022-02-28 17:19:13.497529	a9eb03ed-2b43-4229-834b-5e283605c96c	\N	1026
967	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-02-28 17:19:13.505458	2022-02-28 17:19:13.505438	90b52ef7-a841-431c-8409-530b21f8319d	\N	1027
970	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-02-28 17:19:13.511005	2022-02-28 17:19:13.510967	24448b3d-c438-468b-b2bc-9170585e31d6	\N	1030
974	uri://ed-fi.org/GradeLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	2022-02-28 17:19:13.523932	2022-02-28 17:19:13.523915	e05c3791-456c-4fd8-9b7b-7b4b8065dca5	\N	1034
979	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	2022-02-28 17:19:13.576608	2022-02-28 17:19:13.575173	8b2027f3-7db7-4927-83cf-cc4de5a73d82	\N	1039
982	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	2022-02-28 17:19:13.584743	2022-02-28 17:19:13.58472	dfad9a97-91b3-4d30-a0a5-efe3596de88f	\N	1042
983	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	2022-02-28 17:19:13.589482	2022-02-28 17:19:13.589429	2acbd6df-cb5d-4be8-9f72-2c7bd77f9302	\N	1043
986	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	2022-02-28 17:19:13.632898	2022-02-28 17:19:13.631723	787915b7-8510-460b-9e5b-f3aab8517abd	\N	1046
991	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	2022-02-28 17:19:13.649143	2022-02-28 17:19:13.648991	18710e96-0553-40ca-8265-db04251c22fb	\N	1051
993	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2022-02-28 17:19:13.652782	2022-02-28 17:19:13.652728	69654fc3-c324-4ecf-82e6-acc69738471e	\N	1053
994	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2022-02-28 17:19:13.660103	2022-02-28 17:19:13.660065	3bdf05cc-fb51-4496-a9ec-06d630c811ad	\N	1054
996	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	2022-02-28 17:19:13.665346	2022-02-28 17:19:13.665306	02583956-b755-48c8-8104-d920ca4c4fce	\N	1056
999	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	2022-02-28 17:19:13.767251	2022-02-28 17:19:13.767055	611dc009-1537-4433-9e3f-3c8a725e25e8	\N	1059
1004	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	2022-02-28 17:19:14.003177	2022-02-28 17:19:14.00314	419c98a4-4509-4971-9de6-c97e1959360d	\N	1064
1006	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:14.04432	2022-02-28 17:19:14.043099	43ed742d-1ab1-47ce-b762-2e6922d0576d	\N	1066
1014	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	2022-02-28 17:19:14.096191	2022-02-28 17:19:14.095037	0fb238f5-f4ec-45e9-9454-c90d542cec0e	\N	1074
1017	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	2022-02-28 17:19:14.145763	2022-02-28 17:19:14.144579	5043bdd8-2c24-4772-bb1e-8ef6b7c4fea4	\N	1077
1020	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	2022-02-28 17:19:14.195778	2022-02-28 17:19:14.194614	310a2200-78ed-4865-969c-3237295f2542	\N	1080
1024	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	2022-02-28 17:19:14.211664	2022-02-28 17:19:14.211542	5472634c-3aa2-4644-b01b-364157c49109	\N	1084
1029	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	2022-02-28 17:19:14.515016	2022-02-28 17:19:14.513693	1f8ce350-b613-4f8a-985f-fa5bfc987b55	\N	1089
1037	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	2022-02-28 17:19:14.548536	2022-02-28 17:19:14.54844	f0221a0d-a7d3-4ae7-a136-9df2f3bceb45	\N	1097
1041	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	2022-02-28 17:19:14.561784	2022-02-28 17:19:14.56175	f80cd874-57b3-4b65-a4c2-ed41e713f062	\N	1101
1044	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	2022-02-28 17:19:14.567511	2022-02-28 17:19:14.56747	301b166e-a1de-4c2f-8688-cc0929924647	\N	1104
1048	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	2022-02-28 17:19:14.582056	2022-02-28 17:19:14.582022	b5874729-72c5-4c4b-9f2b-20a249a057ec	\N	1108
1050	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	2022-02-28 17:19:14.585995	2022-02-28 17:19:14.585788	f8b67418-7d07-4d84-af9a-282d2873abaa	\N	1110
1052	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	2022-02-28 17:19:14.593571	2022-02-28 17:19:14.593434	539f3cb6-40a8-4504-8957-921bf2921bcb	\N	1112
1056	uri://gbisd.edu/IndicatorGroupDescriptor	Staff Indicator	Staff Indicator	Indicators related to organization staffing.	\N	\N	\N	2022-02-28 17:19:14.880152	2022-02-28 17:19:14.877678	5bece653-9b85-418b-bfb4-b0e87361db78	\N	1116
1060	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2022-02-28 17:19:14.939952	2022-02-28 17:19:14.938784	503ede66-63ce-4486-8296-71123970252e	\N	1120
1065	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:14.959491	2022-02-28 17:19:14.959411	7d857957-73a7-422f-b2d2-94133a4d1330	\N	1125
1069	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	2022-02-28 17:19:15.003376	2022-02-28 17:19:15.002136	b90af4c6-e564-4de0-a1ae-a0a12955b791	\N	1129
2773	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.875536	2022-02-28 17:19:26.875498	f225e1dc-a127-4ca6-958e-0735a6f9c0a7	\N	2833
1059	uri://gbisd.edu/IndicatorLevelDescriptor	Medium Retention	Medium Retention	Staff retention from previous school year is between 80-90 percent of staff retained.	\N	\N	\N	2022-02-28 17:19:14.88515	2022-02-28 17:19:14.883888	5a244fd4-bec8-4a85-b51a-852571fa14b5	\N	1119
1012	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	2022-02-28 17:19:14.096186	2022-02-28 17:19:14.095021	9af136e6-bb4f-4d18-b6e6-0128c2f9dcc6	\N	1072
1016	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	2022-02-28 17:19:14.145759	2022-02-28 17:19:14.144561	e9cbc14d-4f40-4868-902a-c53dae007f6a	\N	1076
1019	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	2022-02-28 17:19:14.195778	2022-02-28 17:19:14.194608	fc45310e-db04-414f-83f4-3518d350188e	\N	1079
1023	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	2022-02-28 17:19:14.208595	2022-02-28 17:19:14.208529	47197bcb-9d54-43ab-8900-df3c502efeaf	\N	1083
1030	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	2022-02-28 17:19:14.521358	2022-02-28 17:19:14.520163	a3ee6471-7638-487e-9447-afb9eb7782e5	\N	1090
1031	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	2022-02-28 17:19:14.527428	2022-02-28 17:19:14.527365	3f6cbf5c-dc7d-412b-8427-52ed82ad4278	\N	1091
1032	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	2022-02-28 17:19:14.530485	2022-02-28 17:19:14.530458	7ce4c623-fb4a-4647-87c0-1a950103466c	\N	1092
1033	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	2022-02-28 17:19:14.532914	2022-02-28 17:19:14.532878	a403caf0-249f-4bc5-b9a9-6cda8032aab9	\N	1093
1034	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	2022-02-28 17:19:14.536595	2022-02-28 17:19:14.536542	0de92f74-6e76-401e-921d-04b690abb3f7	\N	1094
1035	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-02-28 17:19:14.540375	2022-02-28 17:19:14.540333	4dc37b25-f867-4620-b2bc-59dc18940f06	\N	1095
1036	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	2022-02-28 17:19:14.545427	2022-02-28 17:19:14.545384	ab527a90-f9e7-4748-9a4c-ebeb24b61823	\N	1096
1039	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	2022-02-28 17:19:14.551296	2022-02-28 17:19:14.551259	a91b6bec-f12e-45a2-9a7d-452e93c3e664	\N	1099
1040	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	2022-02-28 17:19:14.555787	2022-02-28 17:19:14.555746	e85f62c6-0cf7-464d-acda-75afe414fe3d	\N	1100
1042	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	2022-02-28 17:19:14.562499	2022-02-28 17:19:14.562464	ee76c642-b08b-4e1e-b4c2-0c393c3f9324	\N	1102
1043	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	2022-02-28 17:19:14.565486	2022-02-28 17:19:14.565408	d93e8800-83cc-4d4b-a05c-bb49c9a731a6	\N	1103
1045	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	2022-02-28 17:19:14.571359	2022-02-28 17:19:14.571329	46e3e941-da32-4d02-828c-abccdeaf5dda	\N	1105
1046	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	2022-02-28 17:19:14.576218	2022-02-28 17:19:14.576178	e06e757b-7412-49c1-9b2b-98652e44c145	\N	1106
1047	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	2022-02-28 17:19:14.581796	2022-02-28 17:19:14.581737	a24f3184-552c-4a3b-a257-5913de866f20	\N	1107
1049	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	2022-02-28 17:19:14.584592	2022-02-28 17:19:14.584514	09b1b671-4863-4b8a-b51b-a3b509de9fe0	\N	1109
1051	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	2022-02-28 17:19:14.592767	2022-02-28 17:19:14.592718	7b476b8d-f214-4e83-a17a-969ef5039b72	\N	1111
1054	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	2022-02-28 17:19:14.600322	2022-02-28 17:19:14.600286	f1058063-33ff-46b4-9f3d-86de78435f40	\N	1114
1057	uri://gbisd.edu/IndicatorLevelDescriptor	Low Retention	Low Retention	Staff retention from previous school year is under 80 percent of staff retained.	\N	\N	\N	2022-02-28 17:19:14.885132	2022-02-28 17:19:14.883885	2849c453-1706-49ac-adb6-5069ca186d53	\N	1117
1061	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	2022-02-28 17:19:14.939949	2022-02-28 17:19:14.938768	289611f9-7921-415b-a66f-33117d080ee9	\N	1121
1064	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	2022-02-28 17:19:14.959142	2022-02-28 17:19:14.959086	5b754c09-8b4e-4841-b4ff-0503ecbf0edb	\N	1124
1066	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	2022-02-28 17:19:14.963567	2022-02-28 17:19:14.963549	408d6e7c-3b1f-47b4-ac2a-fb22b1928ade	\N	1126
1067	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	2022-02-28 17:19:15.003377	2022-02-28 17:19:15.002132	a4f24a63-ff7b-44df-99c3-d13e86cc59db	\N	1127
1074	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Residential Broadband	Residential Broadband	The type of internet service used in the student’s primary place of residence is residential broadband.	\N	\N	\N	2022-02-28 17:19:15.069927	2022-02-28 17:19:15.068744	0f3056cd-cffb-44f6-b11b-d860167b57bf	\N	1134
1075	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Cellular Network	Cellular Network	The type of internet service used in the student’s primary place of residence is a cellular network that creates a hot spot using a cell phone for additional device access or access to the internet is only available through a cellular device.	\N	\N	\N	2022-02-28 17:19:15.080454	2022-02-28 17:19:15.080409	3130b2cd-91e0-4167-a71c-c5114c233969	\N	1135
1078	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Satellite	Satellite	The type of internet service used in the student’s primary place of residence is satellite.	\N	\N	\N	2022-02-28 17:19:15.086478	2022-02-28 17:19:15.086438	6b17a930-c8cd-423a-9f74-03c74c7f6d2e	\N	1138
1079	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Dial-up	Dial-up	The type of internet service used in the student’s primary place of residence is dial-up.	\N	\N	\N	2022-02-28 17:19:15.091276	2022-02-28 17:19:15.091238	2201c0d0-ff4d-4bfc-b5d1-402834db3db1	\N	1139
1081	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Other	Other	The type of internet service used in the student’s primary place of residence is not yet defined.	\N	\N	\N	2022-02-28 17:19:15.096086	2022-02-28 17:19:15.096032	d2297b7e-259d-4bd0-b166-96cc3dae0e1b	\N	1141
1082	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Unknown	Unknown	It is not known whether there is internet service in the student’s primary place of residence.	\N	\N	\N	2022-02-28 17:19:15.098784	2022-02-28 17:19:15.098745	45eb1477-f3b6-4d14-a5d0-0a099f061279	\N	1142
1083	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Sometimes	Sometimes	The student regularly experiences interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	2022-02-28 17:19:15.144743	2022-02-28 17:19:15.143518	1b9f34c9-24d6-4d17-bd72-07b35be34b9c	\N	1143
1086	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	2022-02-28 17:19:15.15588	2022-02-28 17:19:15.154699	e0168893-5200-4223-9844-8da7b2a7a4f6	\N	1146
1088	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	2022-02-28 17:19:15.161152	2022-02-28 17:19:15.160886	df983f67-3c9e-419c-8f1e-f1d0f9dd36fd	\N	1148
1092	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	2022-02-28 17:19:15.213176	2022-02-28 17:19:15.211855	2c6ee576-0a67-4a7d-a791-b328c5c05db1	\N	1152
1095	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	2022-02-28 17:19:15.230749	2022-02-28 17:19:15.230703	386fc311-db33-428b-bb0b-19f53797197b	\N	1155
1096	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	2022-02-28 17:19:15.236379	2022-02-28 17:19:15.236337	e5b24552-6c56-4a39-825c-f8f20bf071e7	\N	1156
1098	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	2022-02-28 17:19:15.277119	2022-02-28 17:19:15.275831	684c7857-255f-4b9b-8621-10f8622fa535	\N	1158
1063	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2022-02-28 17:19:14.939977	2022-02-28 17:19:14.938798	fa497520-0160-4c77-a11d-33a2495d1038	\N	1123
1070	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	2022-02-28 17:19:15.003929	2022-02-28 17:19:15.002151	b36e23f4-f4e5-4c86-afcc-a0fce78db71a	\N	1130
1073	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	2022-02-28 17:19:15.061619	2022-02-28 17:19:15.060346	5fb4ef17-829c-4c02-9cf5-78fbd770aa27	\N	1133
1077	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Hot Spot	Hot Spot	The type of internet service used in the student’s primary place of residence is a standalone hot spot device that is not a cell phone that allows for additional device access.	\N	\N	\N	2022-02-28 17:19:15.080855	2022-02-28 17:19:15.080799	69c79568-9bcc-4f16-be13-282e55d54879	\N	1137
1080	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	None	None	There is no internet service in the student’s primary place of residence.	\N	\N	\N	2022-02-28 17:19:15.094452	2022-02-28 17:19:15.094191	37ec0f71-08fd-4cfb-9171-8a48af617993	\N	1140
1084	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	No	No	The student is unable to complete learning activities due to poor internet performance in their primary place of residence.	\N	\N	\N	2022-02-28 17:19:15.144748	2022-02-28 17:19:15.143526	cff9eb4c-a019-477e-96f5-2e8104dfe155	\N	1144
1089	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	2022-02-28 17:19:15.16237	2022-02-28 17:19:15.162325	0a9278fb-7be8-452a-a506-accf79ff37c7	\N	1149
1090	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	2022-02-28 17:19:15.213166	2022-02-28 17:19:15.211858	390be1ab-5053-4842-ba43-f44172777fe5	\N	1150
1097	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	2022-02-28 17:19:15.277134	2022-02-28 17:19:15.275846	0bc290f4-1aac-4eaa-86bf-4641b242bfd5	\N	1157
1152	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	2022-02-28 17:19:15.46498	2022-02-28 17:19:15.464944	cf8852b1-637b-4955-8c25-43a008a137f7	\N	1212
1155	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	2022-02-28 17:19:15.473094	2022-02-28 17:19:15.473053	40b372c2-c84e-42f6-a252-34be805548c7	\N	1215
1166	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	2022-02-28 17:19:15.755005	2022-02-28 17:19:15.754965	92f3b53f-513e-48fe-9002-64e2205f3647	\N	1226
1168	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	2022-02-28 17:19:15.819437	2022-02-28 17:19:15.819246	ba596f9b-8656-4d06-8f73-deff48bb91d4	\N	1228
1172	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	2022-02-28 17:19:15.832469	2022-02-28 17:19:15.832395	ef839aed-991b-47a5-977d-b0c9ba091b4c	\N	1232
1185	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	2022-02-28 17:19:15.876357	2022-02-28 17:19:15.876234	65e346a4-c56e-4bf9-a7c5-48b32f332ff4	\N	1245
1196	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	2022-02-28 17:19:15.908953	2022-02-28 17:19:15.908909	7ea6e9b7-8235-4ab2-91be-222186aab517	\N	1256
1212	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	2022-02-28 17:19:15.961216	2022-02-28 17:19:15.96115	fa26a6e5-8182-4c2f-bc5d-eeb1e6e00042	\N	1272
1220	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	2022-02-28 17:19:15.9899	2022-02-28 17:19:15.989833	7498a492-6a33-478a-8c48-bfb34a7c42b5	\N	1280
1226	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	2022-02-28 17:19:16.007489	2022-02-28 17:19:16.007333	e1dac4b5-3495-4752-964b-02cefd92c8a3	\N	1286
1230	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	2022-02-28 17:19:16.021867	2022-02-28 17:19:16.021771	0731b28d-6ab3-4779-ad7d-776d1c992e09	\N	1290
1234	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	2022-02-28 17:19:16.03616	2022-02-28 17:19:16.035832	9113c377-5196-485d-bf3a-a8858ccf04eb	\N	1294
1239	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	2022-02-28 17:19:16.052354	2022-02-28 17:19:16.052304	060f64bb-3c24-455f-b9ac-f4cb1e97e869	\N	1299
1244	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	2022-02-28 17:19:16.072664	2022-02-28 17:19:16.072631	429e01e7-aba9-43b6-85f1-5ae929c48d4a	\N	1304
1248	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	2022-02-28 17:19:16.0899	2022-02-28 17:19:16.089861	0a89ddbe-84ee-47a0-a06d-61d252c39bbd	\N	1308
1250	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	2022-02-28 17:19:16.102053	2022-02-28 17:19:16.10201	9a38d8e5-6f1f-4696-bdec-c8d7cbc0abd4	\N	1310
1279	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	2022-02-28 17:19:16.199782	2022-02-28 17:19:16.199561	59a9510e-fe3b-49e4-a946-7abc2155fa35	\N	1339
1323	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	2022-02-28 17:19:16.332606	2022-02-28 17:19:16.332569	6acff313-8bf7-4c99-b38a-4d632164b203	\N	1383
1328	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	2022-02-28 17:19:16.349365	2022-02-28 17:19:16.349326	65a63e30-bddc-4b40-8dc9-3073aff6d217	\N	1388
1332	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	2022-02-28 17:19:16.498521	2022-02-28 17:19:16.498466	ef62e3bc-f7d3-45d2-a15a-3e3ae6fe6c53	\N	1392
1386	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	2022-02-28 17:19:16.668214	2022-02-28 17:19:16.668045	a5cf8d04-57b0-4c90-934b-ceeb410a4474	\N	1446
1398	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	2022-02-28 17:19:16.704607	2022-02-28 17:19:16.704553	59fea7d4-adc8-4e6e-b11e-f75b389dbf0c	\N	1458
1452	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	2022-02-28 17:19:16.864867	2022-02-28 17:19:16.864825	d3065bf4-b0c2-43d8-8434-32c3ad24f4d6	\N	1512
1455	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	2022-02-28 17:19:17.109358	2022-02-28 17:19:17.109316	d75c6eb2-70cd-4ff9-badf-4b8988543ab9	\N	1515
1473	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	2022-02-28 17:19:17.167698	2022-02-28 17:19:17.167658	29aae5b6-cf08-4dd2-9f5d-d7be611f27e8	\N	1533
1478	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	2022-02-28 17:19:17.183755	2022-02-28 17:19:17.183717	5ebc2500-6ca4-48df-a29f-7bee150423d0	\N	1538
1480	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	2022-02-28 17:19:17.193345	2022-02-28 17:19:17.19307	8bc7b928-8e70-4613-bcc4-49bff6e30f8d	\N	1540
1484	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	2022-02-28 17:19:17.437289	2022-02-28 17:19:17.43718	b97bb802-3868-46cb-8f1f-199707147985	\N	1544
1488	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	2022-02-28 17:19:17.454293	2022-02-28 17:19:17.454275	e128f384-833b-4722-a866-b39aa4b2ed5f	\N	1548
1513	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	2022-02-28 17:19:17.530601	2022-02-28 17:19:17.530565	c548f170-beb2-409d-87aa-a0987cfa9edb	\N	1573
1520	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	2022-02-28 17:19:17.556511	2022-02-28 17:19:17.556476	c105591b-9099-4417-8f5e-df166111a41f	\N	1580
1581	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	Dual Language	Dual Language	\N	\N	\N	2022-02-28 17:19:17.832584	2022-02-28 17:19:17.831386	78087ed7-72a4-449a-943b-d6bb11585b94	\N	1641
1587	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	Sheltered English Instruction	Sheltered English Instruction	\N	\N	\N	2022-02-28 17:19:17.849009	2022-02-28 17:19:17.848981	cce639ea-ffed-4b2f-bec4-ff467d03ed9f	\N	1647
1595	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	2022-02-28 17:19:17.904259	2022-02-28 17:19:17.903093	7992fa61-b999-4f28-b7dd-35019a397bf6	\N	1655
1598	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	2022-02-28 17:19:17.920048	2022-02-28 17:19:17.920007	7e80b37a-8177-4a6d-b148-a88f3c12ae89	\N	1658
1601	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	2022-02-28 17:19:17.970769	2022-02-28 17:19:17.969439	47715a80-032e-44f9-81fe-5a2394888838	\N	1661
1608	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-02-28 17:19:18.030336	2022-02-28 17:19:18.029183	bbb716f1-b9ed-4ab2-9e98-ffe4a88dcc95	\N	1668
1615	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	2022-02-28 17:19:18.087511	2022-02-28 17:19:18.086344	e1ebf63b-4247-4b97-bb3d-f2007c4c49b9	\N	1675
1620	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	2022-02-28 17:19:18.148331	2022-02-28 17:19:18.147128	33fc950a-5b26-4bc7-90dc-a7ccedb57ee3	\N	1680
1626	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	2022-02-28 17:19:18.167711	2022-02-28 17:19:18.167652	58c57dfc-5669-43bf-860e-da4d77c22d13	\N	1686
1072	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	Less Than High Speed	Less Than High Speed	\N	\N	\N	2022-02-28 17:19:15.061686	2022-02-28 17:19:15.060342	6a20796d-5c46-4e13-8b72-133de1e97f86	\N	1132
1076	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Community Provided Wi-Fi	Community Provided Wi-Fi	The type of internet service used in the student’s primary place of residence is community provided Wi-Fi.	\N	\N	\N	2022-02-28 17:19:15.080523	2022-02-28 17:19:15.080477	c4c23732-6e3a-4186-8011-a70675a2f736	\N	1136
1085	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Yes	Yes	The student experiences very few or no interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	2022-02-28 17:19:15.145459	2022-02-28 17:19:15.143527	f8b3ae10-d265-4387-8c27-8d0f776cac8e	\N	1145
1087	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:15.161243	2022-02-28 17:19:15.160956	7da89e68-711b-4063-ad3f-5d2e03337f84	\N	1147
1093	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	2022-02-28 17:19:15.213318	2022-02-28 17:19:15.211868	6417e222-79a2-40e6-b2f4-77320d2f6c11	\N	1153
1094	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	2022-02-28 17:19:15.228787	2022-02-28 17:19:15.228674	592423aa-a12b-41e0-b018-f0b0896f8318	\N	1154
1099	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	2022-02-28 17:19:15.277126	2022-02-28 17:19:15.275837	cb819216-f4d1-4b5f-bc98-69336e27600f	\N	1159
1102	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	2022-02-28 17:19:15.291495	2022-02-28 17:19:15.291454	735c4eb6-dcbf-4271-9586-864b30115bb3	\N	1162
1106	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	2022-02-28 17:19:15.305701	2022-02-28 17:19:15.305649	32a7a010-165e-4c53-9af6-28df994343fc	\N	1166
1111	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	2022-02-28 17:19:15.33055	2022-02-28 17:19:15.330502	3eb64ed3-a41d-4197-8bbb-32d0f244dd53	\N	1171
1114	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	2022-02-28 17:19:15.338742	2022-02-28 17:19:15.338696	3aeec60f-751e-42d4-9738-33db13b59ec5	\N	1174
1115	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	2022-02-28 17:19:15.344013	2022-02-28 17:19:15.343975	64e84294-bfcf-4efd-9440-073f9ea99065	\N	1175
1118	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	2022-02-28 17:19:15.350461	2022-02-28 17:19:15.350449	832ad88b-a4a0-4771-b693-e2c5f6b0d4cd	\N	1178
1121	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	2022-02-28 17:19:15.359874	2022-02-28 17:19:15.359703	ab2c147d-3d9d-49a4-aa3d-9c3c5921f80d	\N	1181
1125	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	2022-02-28 17:19:15.372443	2022-02-28 17:19:15.372369	26ce07e4-f31d-43bc-ba50-a40661e5fc69	\N	1185
1129	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	2022-02-28 17:19:15.385982	2022-02-28 17:19:15.385951	6144f855-e979-4b5f-ba1b-4ddf1b7c601b	\N	1189
1130	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	2022-02-28 17:19:15.389869	2022-02-28 17:19:15.389765	d51fb72e-67f3-48cd-82b7-bbcd84caea47	\N	1190
1133	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	2022-02-28 17:19:15.397514	2022-02-28 17:19:15.397467	6a5bc1c1-c67c-44f5-a326-a0ddc8913b93	\N	1193
1135	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	2022-02-28 17:19:15.406083	2022-02-28 17:19:15.406047	4ff4e012-9095-4710-8607-db8e8bff9f05	\N	1195
1137	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	2022-02-28 17:19:15.412941	2022-02-28 17:19:15.412851	cfdc6e27-b9be-47d7-9775-bff6cd840e1c	\N	1197
1139	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	2022-02-28 17:19:15.418029	2022-02-28 17:19:15.418006	5e0e9603-d541-4580-ba6d-a3aefada3504	\N	1199
1140	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	2022-02-28 17:19:15.423913	2022-02-28 17:19:15.423813	be077576-7710-4548-9b57-e5cd04a1d759	\N	1200
1143	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	2022-02-28 17:19:15.431408	2022-02-28 17:19:15.431379	be2d3ed3-dd0c-4a06-882b-efef40f1b2e9	\N	1203
1145	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	2022-02-28 17:19:15.438802	2022-02-28 17:19:15.438763	7ebcb6df-0294-452d-8397-625c2e22c890	\N	1205
1147	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	2022-02-28 17:19:15.445594	2022-02-28 17:19:15.445547	3db07cff-a4c6-4c25-88fd-d382389ff8e3	\N	1207
1149	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	2022-02-28 17:19:15.452791	2022-02-28 17:19:15.452693	248cfa5e-bc34-441b-b527-0960c932888d	\N	1209
1150	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	2022-02-28 17:19:15.459339	2022-02-28 17:19:15.459295	275d654b-4337-4040-8260-b0f3ac665262	\N	1210
1153	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	2022-02-28 17:19:15.465769	2022-02-28 17:19:15.465733	611a41cf-08f6-4f37-88a4-8191399d3875	\N	1213
1158	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	2022-02-28 17:19:15.726572	2022-02-28 17:19:15.726518	638977d2-b651-4c2f-9be1-574dcf694333	\N	1218
1159	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	2022-02-28 17:19:15.731759	2022-02-28 17:19:15.731714	69c810e6-4e05-4b19-acaa-52e4df6740b8	\N	1219
1161	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	2022-02-28 17:19:15.738703	2022-02-28 17:19:15.738661	61e0c1cc-eaf4-4af0-ae09-54c981cab18e	\N	1221
1164	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	2022-02-28 17:19:15.747055	2022-02-28 17:19:15.746955	c45e4571-773f-4a75-be3d-285097f2bb96	\N	1224
1169	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	2022-02-28 17:19:15.819846	2022-02-28 17:19:15.819748	6ec7259c-7dbf-4bba-867a-e15f115a5873	\N	1229
1176	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	2022-02-28 17:19:15.846287	2022-02-28 17:19:15.846192	9ebb730f-61ad-4f18-b943-fd3c98ad6053	\N	1236
1180	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	2022-02-28 17:19:15.860218	2022-02-28 17:19:15.860188	6e1afe75-c4ac-41b3-afd7-3ecc3d1f64b6	\N	1240
1182	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	2022-02-28 17:19:15.8664	2022-02-28 17:19:15.866369	f178cbfa-2ee0-4d99-a0fe-b09a21f1a048	\N	1242
1184	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	2022-02-28 17:19:15.875289	2022-02-28 17:19:15.875194	3cdf4a75-8477-4ec1-bebd-a1aaa4f98475	\N	1244
1190	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	2022-02-28 17:19:15.892367	2022-02-28 17:19:15.892331	6f19b4b7-dc83-4157-9b95-cb9d49be275b	\N	1250
1195	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	2022-02-28 17:19:15.906871	2022-02-28 17:19:15.906841	713863cd-123b-4082-9329-092407d9e44f	\N	1255
1200	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	2022-02-28 17:19:15.923342	2022-02-28 17:19:15.92331	7b368da3-a1b2-4922-88bb-eba22dadab93	\N	1260
1204	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	2022-02-28 17:19:15.934879	2022-02-28 17:19:15.934863	c5afd124-5203-4a20-8aef-ce6782dfe923	\N	1264
1209	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	2022-02-28 17:19:15.949588	2022-02-28 17:19:15.949479	62913308-5d9b-4941-a9b8-1c46e4548acd	\N	1269
1216	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	2022-02-28 17:19:15.972264	2022-02-28 17:19:15.972249	1ebd50b8-cb96-4bc9-9cdc-a73513bea5f3	\N	1276
1217	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	2022-02-28 17:19:15.976263	2022-02-28 17:19:15.976182	1226eeec-e5b4-4f59-97fd-5d075bf341a0	\N	1277
1221	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	2022-02-28 17:19:15.990808	2022-02-28 17:19:15.990523	848a3df3-d4d2-4e3c-b567-b5d9dae52a99	\N	1281
1225	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	2022-02-28 17:19:16.006395	2022-02-28 17:19:16.006286	fa97592a-3d02-44c3-807f-771a444e4b66	\N	1285
1231	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	2022-02-28 17:19:16.023545	2022-02-28 17:19:16.023509	8d51a647-332e-4d19-a29c-29704b3665a7	\N	1291
1235	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	2022-02-28 17:19:16.038052	2022-02-28 17:19:16.038035	4cbce4c3-20a5-4690-81af-69a3da0a82ff	\N	1295
1238	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	2022-02-28 17:19:16.052249	2022-02-28 17:19:16.052179	5d75fac3-fc27-403e-bf6f-a1e5713a2263	\N	1298
1241	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	2022-02-28 17:19:16.068838	2022-02-28 17:19:16.067889	984d470a-13d6-4aa8-a653-7d96092cf26a	\N	1301
1245	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	2022-02-28 17:19:16.087159	2022-02-28 17:19:16.087091	ba9d1f39-fdfb-4b66-aac4-e72d7a1ab70f	\N	1305
1249	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	2022-02-28 17:19:16.101941	2022-02-28 17:19:16.101894	a27351d9-f736-4800-be5c-a5d4757bb118	\N	1309
1253	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	2022-02-28 17:19:16.113617	2022-02-28 17:19:16.11358	9c49a19f-cd5d-4ff2-9783-1398124411cb	\N	1313
1101	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	2022-02-28 17:19:15.290993	2022-02-28 17:19:15.290889	27a303b4-ffbe-4e5d-b95f-2ebfebca5b0c	\N	1161
1103	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	2022-02-28 17:19:15.294335	2022-02-28 17:19:15.294288	b7b9d0cd-815b-4766-88a5-af631e901e41	\N	1163
1104	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	2022-02-28 17:19:15.296959	2022-02-28 17:19:15.29692	bb001fe9-1905-499b-bd39-4e1b47fe1233	\N	1164
1105	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	2022-02-28 17:19:15.303554	2022-02-28 17:19:15.303505	472f7e92-35bd-42ef-b017-8a0328989f73	\N	1165
1107	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	2022-02-28 17:19:15.314022	2022-02-28 17:19:15.313988	f8ffc165-3c8a-4316-a736-b03d9dda28f3	\N	1167
1108	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	2022-02-28 17:19:15.317191	2022-02-28 17:19:15.31715	36542edc-40bf-42fb-bc9f-07c035faa555	\N	1168
1109	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	2022-02-28 17:19:15.322462	2022-02-28 17:19:15.322422	515ffcf2-2d4c-4f5b-97fd-997876119f12	\N	1169
1110	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	2022-02-28 17:19:15.325876	2022-02-28 17:19:15.325833	dcc72910-e3c0-4f91-96b4-9c0f38582028	\N	1170
1112	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	2022-02-28 17:19:15.331669	2022-02-28 17:19:15.33163	d1b6887d-f694-4c67-b9ad-41452c2272ff	\N	1172
1113	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	2022-02-28 17:19:15.336536	2022-02-28 17:19:15.3365	1d68737f-2342-4056-98e3-f5868b6e0465	\N	1173
1116	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	2022-02-28 17:19:15.344967	2022-02-28 17:19:15.344883	d1aa1355-44c0-48e0-a7ac-a1973b2d5e92	\N	1176
1117	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	2022-02-28 17:19:15.350028	2022-02-28 17:19:15.349986	64763ad9-7831-42c9-b241-7b1ccfe19596	\N	1177
1119	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	2022-02-28 17:19:15.355008	2022-02-28 17:19:15.354992	c32fbead-e3cb-49b9-af55-093ff7c80ba0	\N	1179
1120	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	2022-02-28 17:19:15.357649	2022-02-28 17:19:15.357611	dd6e4040-906e-482f-9196-3503dfc114ac	\N	1180
1122	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	2022-02-28 17:19:15.36206	2022-02-28 17:19:15.362019	42e24dbb-1553-4c3d-9b58-e3236357f9d0	\N	1182
1123	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	2022-02-28 17:19:15.368366	2022-02-28 17:19:15.368325	bc6d76f7-a345-4e49-adf6-27d462bc36ac	\N	1183
1124	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	2022-02-28 17:19:15.371271	2022-02-28 17:19:15.371179	2b997775-bd87-4bc8-a347-a8f7f5f98a24	\N	1184
1126	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	2022-02-28 17:19:15.375572	2022-02-28 17:19:15.375532	456cc8b6-2718-4d7f-b5d8-be6ea8e467af	\N	1186
1127	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	2022-02-28 17:19:15.379647	2022-02-28 17:19:15.37961	37f52949-6b9a-4171-9aac-996de4cf9cdf	\N	1187
1128	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	2022-02-28 17:19:15.385905	2022-02-28 17:19:15.385859	de85bd71-44ae-41b6-9b65-fe065a70854c	\N	1188
1131	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	2022-02-28 17:19:15.39192	2022-02-28 17:19:15.39188	3927a528-cbcb-4b03-87de-c700a9743a5a	\N	1191
1132	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	2022-02-28 17:19:15.395556	2022-02-28 17:19:15.395512	360f89c7-b6dc-4b7a-b6c2-16eaf5e01699	\N	1192
1134	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	2022-02-28 17:19:15.404709	2022-02-28 17:19:15.404648	f4bee1b9-3468-4d7e-91e3-64f4aa5f3bc9	\N	1194
1136	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	2022-02-28 17:19:15.411492	2022-02-28 17:19:15.411451	1dc611cb-63b4-47b2-b989-3b40c19c77cf	\N	1196
1138	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	2022-02-28 17:19:15.417422	2022-02-28 17:19:15.417386	ce926b5b-2949-4106-b6ff-436168ac5e6c	\N	1198
1141	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	2022-02-28 17:19:15.424759	2022-02-28 17:19:15.424476	11cc41aa-9b34-44d4-bfe1-236802d6ceab	\N	1201
1142	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	2022-02-28 17:19:15.43135	2022-02-28 17:19:15.431306	2f8720eb-bc8e-44f2-aa43-0f0532934065	\N	1202
1144	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	2022-02-28 17:19:15.438689	2022-02-28 17:19:15.438647	39235b00-6c4d-4fd7-b901-add8ef03d449	\N	1204
1146	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	2022-02-28 17:19:15.445381	2022-02-28 17:19:15.445341	853ff17b-29ee-406a-923a-88436fa44dd2	\N	1206
1148	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	2022-02-28 17:19:15.452533	2022-02-28 17:19:15.45248	3cf5c0db-e94a-443c-af50-7db3fc5b1986	\N	1208
1151	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	2022-02-28 17:19:15.46017	2022-02-28 17:19:15.460131	c23ff666-b62f-4832-b907-c9446511f78d	\N	1211
1154	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	2022-02-28 17:19:15.46872	2022-02-28 17:19:15.468689	317fe04c-52d3-46f0-bb78-b4ae5c88eb96	\N	1214
1157	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	2022-02-28 17:19:15.725949	2022-02-28 17:19:15.725905	218f8865-7a76-4b2c-984e-a4e7bf6b6ef6	\N	1217
1160	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	2022-02-28 17:19:15.732729	2022-02-28 17:19:15.732689	2a91748e-5888-4b79-9e17-b82508c4687a	\N	1220
1162	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	2022-02-28 17:19:15.740326	2022-02-28 17:19:15.740287	30453c69-2347-4c3e-8b5c-d0d8d0dfbe9a	\N	1222
1163	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	2022-02-28 17:19:15.746936	2022-02-28 17:19:15.746887	51680164-7b06-45f7-b4cb-ed33d7341c3e	\N	1223
1167	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	2022-02-28 17:19:15.816024	2022-02-28 17:19:15.815915	15d291fe-e230-418d-9989-2344aee1cf35	\N	1227
1170	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	2022-02-28 17:19:15.820989	2022-02-28 17:19:15.820972	909df141-4114-48c9-a1da-fb3000975784	\N	1230
1171	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	2022-02-28 17:19:15.8299	2022-02-28 17:19:15.829847	93cb3089-1bb4-4923-b016-6b6be55564c7	\N	1231
1173	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	2022-02-28 17:19:15.834179	2022-02-28 17:19:15.834095	2cac5579-866d-45b6-9da1-2b88a1ea9712	\N	1233
1174	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	2022-02-28 17:19:15.840686	2022-02-28 17:19:15.840643	b2c253e0-e014-4679-8acf-834b7d73fe48	\N	1234
1175	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	2022-02-28 17:19:15.844132	2022-02-28 17:19:15.844093	b39e3cd4-7e76-44a4-8abe-9a49e89ee3b0	\N	1235
1177	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	2022-02-28 17:19:15.85037	2022-02-28 17:19:15.850328	3b7a3b7b-f460-4dba-a615-2ee4243c3503	\N	1237
1178	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	2022-02-28 17:19:15.853624	2022-02-28 17:19:15.853581	b1f776f3-088e-4f70-bea5-c4341ff510da	\N	1238
1179	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	2022-02-28 17:19:15.860204	2022-02-28 17:19:15.860111	889eec79-277b-4964-96b4-47c3c1a6ee19	\N	1239
1181	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	2022-02-28 17:19:15.866107	2022-02-28 17:19:15.86607	1013c194-9528-4a41-aa86-391b3b06b134	\N	1241
1183	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	2022-02-28 17:19:15.871223	2022-02-28 17:19:15.871188	492a5ed8-fa5d-4e52-b517-3f65f0d6a6a7	\N	1243
1186	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	2022-02-28 17:19:15.877432	2022-02-28 17:19:15.877409	506023cd-9ba8-48d2-b8de-72ceee443597	\N	1246
1187	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	2022-02-28 17:19:15.88379	2022-02-28 17:19:15.883768	8a7228cd-8b8b-457a-9f9a-f2e07c80de14	\N	1247
1188	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	2022-02-28 17:19:15.886389	2022-02-28 17:19:15.886369	e09a49be-c940-4dad-8318-7a3c19ee05dd	\N	1248
1189	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	2022-02-28 17:19:15.890241	2022-02-28 17:19:15.890201	d9bc532b-108e-4ba7-8360-ff6fc9a7cd95	\N	1249
1191	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	2022-02-28 17:19:15.895144	2022-02-28 17:19:15.895042	ed51a3f5-13ae-47b3-83cb-31adedc8ad79	\N	1251
1192	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	2022-02-28 17:19:15.897676	2022-02-28 17:19:15.89765	28482878-14d4-4daa-a1d6-40c098353209	\N	1252
1193	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	2022-02-28 17:19:15.90043	2022-02-28 17:19:15.900408	72abfac3-f096-405b-a1fe-fd48b3c58d15	\N	1253
1194	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	2022-02-28 17:19:15.906827	2022-02-28 17:19:15.906783	0f3ea7a0-f592-4469-be41-547d570814e4	\N	1254
1156	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	2022-02-28 17:19:15.476093	2022-02-28 17:19:15.47605	34f1c916-e4cb-4c30-b7a4-3ad87ba998d3	\N	1216
1165	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	2022-02-28 17:19:15.753471	2022-02-28 17:19:15.753426	2df06acf-542a-4520-b69f-806a5ea44dac	\N	1225
1240	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	2022-02-28 17:19:16.054886	2022-02-28 17:19:16.054855	f0a3be15-2439-45d5-a16b-e14e3d9686b4	\N	1300
1242	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	2022-02-28 17:19:16.069969	2022-02-28 17:19:16.069898	ef457dc3-6001-4eca-9525-b5826521fa6c	\N	1302
1247	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	2022-02-28 17:19:16.089179	2022-02-28 17:19:16.089148	f88216d9-1a91-4ab6-b7e6-ae88c856bba1	\N	1307
1329	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	2022-02-28 17:19:16.34971	2022-02-28 17:19:16.349676	3b5f8a46-cae0-41d5-907f-b02fc3209ddb	\N	1389
1451	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	2022-02-28 17:19:16.863881	2022-02-28 17:19:16.863844	28e3fc57-4849-49ff-9fb1-9c813800b24a	\N	1511
1482	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	2022-02-28 17:19:17.197114	2022-02-28 17:19:17.19708	e6a25e71-6adf-4ec0-8707-3867bd63cafe	\N	1542
1526	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	2022-02-28 17:19:17.572609	2022-02-28 17:19:17.572598	575b2db0-289c-4159-a27f-a73ccf082eab	\N	1586
1584	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	Transitional Bilingual	Transitional Bilingual	\N	\N	\N	2022-02-28 17:19:17.833243	2022-02-28 17:19:17.831394	e8f05005-730f-45e8-bece-9a5584c77834	\N	1644
1594	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	2022-02-28 17:19:17.904548	2022-02-28 17:19:17.9031	48aa6034-60c0-45cd-bcaa-5e9be8d29e92	\N	1654
1610	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:18.030451	2022-02-28 17:19:18.029186	66b2511b-740a-4353-adeb-1f557585a5ce	\N	1670
1616	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	2022-02-28 17:19:18.087631	2022-02-28 17:19:18.086363	e2b457ea-1ff1-4864-8266-240d115a7993	\N	1676
1622	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	2022-02-28 17:19:18.148332	2022-02-28 17:19:18.147136	62222158-b255-48e5-95c4-cf85440f9745	\N	1682
1640	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	2022-02-28 17:19:18.248742	2022-02-28 17:19:18.247568	8644fd88-c772-4b94-94c4-b17bf2203d1f	\N	1700
1645	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	2022-02-28 17:19:18.301535	2022-02-28 17:19:18.299668	bb282424-3861-4720-8968-f91deb6f28cd	\N	1705
1662	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	2022-02-28 17:19:18.434277	2022-02-28 17:19:18.432979	041e6c29-ed22-4e5e-b098-21c8344f4331	\N	1722
1666	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	2022-02-28 17:19:18.455098	2022-02-28 17:19:18.455065	8cfafa9e-d49d-4427-8de7-95158d1e84eb	\N	1726
1674	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2022-02-28 17:19:18.521771	2022-02-28 17:19:18.520589	e27435ef-c567-4757-9931-5720a39260a9	\N	1734
1683	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	2022-02-28 17:19:18.59075	2022-02-28 17:19:18.589018	570d91fb-e5ec-4dd3-8fa3-32978f4ac5fb	\N	1743
1698	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	Health And Social Services	Health And Social Services	\N	\N	\N	2022-02-28 17:19:18.721096	2022-02-28 17:19:18.719832	bb99268b-5a54-4044-8f22-22baf36a86a2	\N	1758
1703	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	2022-02-28 17:19:18.782698	2022-02-28 17:19:18.781456	42e24e7c-f2e4-4ab0-a4c8-3e6e39ba04db	\N	1763
1708	uri://ed-fi.org/OldEthnicityDescriptor	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	\N	\N	\N	2022-02-28 17:19:18.803035	2022-02-28 17:19:18.802996	b43bcd69-0748-4741-9122-109d632a2b73	\N	1768
1712	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	2022-02-28 17:19:19.091509	2022-02-28 17:19:19.089526	54ad5bfa-daa7-4f70-bfc5-9de9816e4417	\N	1772
1715	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	2022-02-28 17:19:19.104923	2022-02-28 17:19:19.104893	da3dd5c7-8d29-4a32-afca-c263e416e467	\N	1775
1720	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	2022-02-28 17:19:19.268372	2022-02-28 17:19:19.26642	30c9df87-7f5b-4d9c-86e1-0249694eb4ca	\N	1780
1723	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2022-02-28 17:19:19.322852	2022-02-28 17:19:19.321534	fd6559d6-5f91-4d36-aebc-bf6490858e12	\N	1783
1725	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	2022-02-28 17:19:19.378417	2022-02-28 17:19:19.377227	94208d23-daab-4035-b8fc-ce7e63e8f7e8	\N	1785
1731	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-02-28 17:19:19.436209	2022-02-28 17:19:19.435062	1b7b9e36-0acd-4332-91ed-0d18d0fb570f	\N	1791
1740	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-02-28 17:19:19.495133	2022-02-28 17:19:19.493454	c529345b-5f2d-4f73-a426-bb726069fbda	\N	1800
1753	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	2022-02-28 17:19:19.576226	2022-02-28 17:19:19.575	0f166a91-3628-47dd-8442-7356f6a2995c	\N	1813
1767	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	2022-02-28 17:19:19.665879	2022-02-28 17:19:19.664649	4d324046-0e81-459c-aeba-8681362311de	\N	1827
1782	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	2022-02-28 17:19:20.003801	2022-02-28 17:19:20.002412	45381dd1-35e5-4c2a-b2cc-96dc4e9ccedb	\N	1842
1794	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate/Associate's College	Baccalaureate/Associate's College	Includes four-year colleges (by virtue of having at least one baccalaureate degree program) that conferred more than 50 percent of degrees at the associate's level . Excludes Special Focus Institutions, Tribal Colleges, and institutions that have sufficient master's or doctoral degrees to fall into those categories.	\N	\N	\N	2022-02-28 17:19:20.087101	2022-02-28 17:19:20.085537	421bb889-c5da-4432-bbb5-8e04df007cb3	\N	1854
1798	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Four-Year	Special Focus Institution/Four-Year	Four-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.103564	2022-02-28 17:19:20.10308	ef99032a-5947-4ee1-8ef7-ae68f8b72aaf	\N	1858
1818	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:20.303308	2022-02-28 17:19:20.302075	49d3e0bc-58d6-4419-9956-c148b407f05b	\N	1878
1829	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2022-02-28 17:19:20.382614	2022-02-28 17:19:20.382574	366cdf3f-d416-4873-9f64-a70b22e99345	\N	1889
1839	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	2022-02-28 17:19:20.643527	2022-02-28 17:19:20.642324	1378257a-d4aa-4376-be2a-9096c66fcbff	\N	1899
1842	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:20.658213	2022-02-28 17:19:20.658125	fa12a7a6-b25b-46e5-aeba-bef8043c2ecf	\N	1902
1900	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	2022-02-28 17:19:20.86497	2022-02-28 17:19:20.86378	12d7163a-8cef-4a38-9e8e-edb26f400137	\N	1960
1905	uri://ed-fi.org/ProviderCategoryDescriptor	Child care center	Child care center	Child care center	\N	\N	\N	2022-02-28 17:19:20.924171	2022-02-28 17:19:20.922947	4779e915-33b8-400f-9ba5-1f2aa6b4d0d9	\N	1964
1932	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	2022-02-28 17:19:21.079481	2022-02-28 17:19:21.078211	03924ba8-3b25-438d-af59-36421329ce87	\N	1992
1939	uri://ed-fi.org/QuestionFormDescriptor	Matrix of numeric ratings	Matrix of numeric ratings	Matrix of numeric ratings	\N	\N	\N	2022-02-28 17:19:21.342253	2022-02-28 17:19:21.34093	0b25be4f-a0bc-4a8e-91b0-9ab294a40941	\N	1999
1197	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	2022-02-28 17:19:15.912884	2022-02-28 17:19:15.912848	c2055b93-44bd-43f0-94de-f0fe8cd39a5d	\N	1257
1198	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	2022-02-28 17:19:15.919811	2022-02-28 17:19:15.919772	6657b46f-66d1-4072-9ced-668b6c6e1bb5	\N	1258
1199	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	2022-02-28 17:19:15.92217	2022-02-28 17:19:15.922135	8f153a26-9704-4f8a-85cd-95a0039f726b	\N	1259
1201	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	2022-02-28 17:19:15.924568	2022-02-28 17:19:15.924553	1c64f478-b378-47f2-a57c-9b9d767790a5	\N	1261
1202	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	2022-02-28 17:19:15.927248	2022-02-28 17:19:15.927233	a24e5d7a-ce62-4ef4-ac4e-e409fc1d59b7	\N	1262
1203	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	2022-02-28 17:19:15.930598	2022-02-28 17:19:15.930567	14d4c7db-60df-423f-afd5-525a17f2756f	\N	1263
1205	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	2022-02-28 17:19:15.936185	2022-02-28 17:19:15.93615	b8bfd9a8-d9a1-4ceb-b4b0-3cc2adaa8273	\N	1265
1206	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	2022-02-28 17:19:15.940916	2022-02-28 17:19:15.940872	b6775d76-164f-4b62-8261-7f2f00fda9b4	\N	1266
1207	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	2022-02-28 17:19:15.945472	2022-02-28 17:19:15.945455	67657ce1-ae12-4c83-9ab9-498724a6e1b4	\N	1267
1208	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	2022-02-28 17:19:15.948258	2022-02-28 17:19:15.948207	50b527d4-8037-46fd-96ff-ce7a2e3a5ecd	\N	1268
1210	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	2022-02-28 17:19:15.953342	2022-02-28 17:19:15.9533	cbbed33f-c9ee-4a8b-87d1-caace0c99034	\N	1270
1211	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	2022-02-28 17:19:15.959955	2022-02-28 17:19:15.959921	7600c2d5-148d-45dc-a64e-9021ac081f26	\N	1271
1213	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	2022-02-28 17:19:15.962861	2022-02-28 17:19:15.962819	1c8ade1c-1650-49d8-8a35-801c7a3cb873	\N	1273
1214	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	2022-02-28 17:19:15.965653	2022-02-28 17:19:15.965618	0d5f36d0-8223-45f8-8140-244090285719	\N	1274
1215	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	2022-02-28 17:19:15.971023	2022-02-28 17:19:15.970976	e91ff618-c5a9-45f6-a6a6-26da270500fd	\N	1275
1218	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	2022-02-28 17:19:15.97712	2022-02-28 17:19:15.97709	d236ddcf-c95c-44f0-baf5-2a97c60f53b8	\N	1278
1219	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	2022-02-28 17:19:15.980576	2022-02-28 17:19:15.980533	b3dd8300-834d-482f-834d-3e129e9e0572	\N	1279
1222	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	2022-02-28 17:19:15.991784	2022-02-28 17:19:15.991621	c1cfe9b5-26a0-4303-a25f-de3d524dcaa4	\N	1282
1223	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	2022-02-28 17:19:15.995301	2022-02-28 17:19:15.995254	74c92741-014a-4e62-8937-b831b9779773	\N	1283
1224	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	2022-02-28 17:19:16.00275	2022-02-28 17:19:16.002699	64053822-2ff5-45c1-ad0e-afc3efae5637	\N	1284
1227	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	2022-02-28 17:19:16.00862	2022-02-28 17:19:16.008571	097f64fc-a5f3-4e38-b209-751b0964c2fd	\N	1287
1228	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	2022-02-28 17:19:16.012752	2022-02-28 17:19:16.012711	5649ba82-c90e-4f04-be9f-80cc18be486b	\N	1288
1229	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	2022-02-28 17:19:16.021353	2022-02-28 17:19:16.021276	1a1c8c3b-66e4-4120-a4d3-96922f881768	\N	1289
1232	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	2022-02-28 17:19:16.028529	2022-02-28 17:19:16.028451	3d81a1ef-1741-47cc-99e2-2c729f3a9f34	\N	1292
1233	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	2022-02-28 17:19:16.035923	2022-02-28 17:19:16.035572	b33eb769-377b-49e7-b001-7138cb57af62	\N	1293
1236	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	2022-02-28 17:19:16.041908	2022-02-28 17:19:16.041866	a1700fb2-e834-4449-a145-3581e60a233d	\N	1296
1237	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	2022-02-28 17:19:16.05221	2022-02-28 17:19:16.052083	f6106adf-11f1-4286-a3d5-49c116815190	\N	1297
1243	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	2022-02-28 17:19:16.070902	2022-02-28 17:19:16.070839	257da03a-ffdb-443b-8fa6-f6b41b91ceb9	\N	1303
1246	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	2022-02-28 17:19:16.088667	2022-02-28 17:19:16.088612	5484beb2-0bc1-410e-a173-f3888087b391	\N	1306
1251	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	2022-02-28 17:19:16.102988	2022-02-28 17:19:16.102911	e04677b4-5390-4c5e-8f85-08dec5512e10	\N	1311
1252	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	2022-02-28 17:19:16.107117	2022-02-28 17:19:16.107073	8a5aa3c0-4f10-423f-bccf-ef48c964b98b	\N	1312
1254	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	2022-02-28 17:19:16.114364	2022-02-28 17:19:16.114328	9a42d797-83de-41e8-a585-5901e427fa9a	\N	1314
1256	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	2022-02-28 17:19:16.119936	2022-02-28 17:19:16.119914	5639f4ca-f171-4232-807a-8d2913d6662b	\N	1316
1257	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	2022-02-28 17:19:16.124264	2022-02-28 17:19:16.124221	9b29189d-1bf0-44ad-94b1-77f64015617b	\N	1317
1258	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	2022-02-28 17:19:16.132075	2022-02-28 17:19:16.132033	3fb69d85-1bf9-4a19-8c5a-4eff403e270f	\N	1318
1259	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	2022-02-28 17:19:16.136558	2022-02-28 17:19:16.136511	ec379b28-e797-4f7d-9575-4ca582b4aba6	\N	1319
1261	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	2022-02-28 17:19:16.139248	2022-02-28 17:19:16.139185	d0ce3565-864b-46a4-a104-0cf42c0c5184	\N	1321
1262	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	2022-02-28 17:19:16.143013	2022-02-28 17:19:16.142978	c79bbf5b-7f79-4aa3-b62e-0d88fd4366fc	\N	1322
1264	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	2022-02-28 17:19:16.149894	2022-02-28 17:19:16.149832	bc156f7e-e8f7-4939-8939-95e124d17633	\N	1324
1265	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	2022-02-28 17:19:16.152654	2022-02-28 17:19:16.15263	278a4feb-7c66-47b8-b672-f7eb0317d293	\N	1325
1266	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	2022-02-28 17:19:16.156885	2022-02-28 17:19:16.156855	f97a6fa7-5abd-4717-841a-c305b8551840	\N	1326
1267	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	2022-02-28 17:19:16.162798	2022-02-28 17:19:16.162734	149ec18c-9436-4ab0-8e15-36d1250b6b46	\N	1327
1269	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	2022-02-28 17:19:16.168259	2022-02-28 17:19:16.168136	da18ac9f-3f8a-4984-8310-93e6aadcd760	\N	1329
1271	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	2022-02-28 17:19:16.173607	2022-02-28 17:19:16.17359	4dbdb764-db13-4011-b8be-afd5362c6022	\N	1331
1273	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	2022-02-28 17:19:16.181601	2022-02-28 17:19:16.181566	94353838-2485-4522-88d7-7ae610dad2fb	\N	1333
1276	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	2022-02-28 17:19:16.187124	2022-02-28 17:19:16.187091	d349632a-67ed-4ed9-a3d1-c8d7db7613f2	\N	1336
1277	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	2022-02-28 17:19:16.190154	2022-02-28 17:19:16.189983	f6b8e9cd-f6c3-4f4a-a3d5-ea17726b6d05	\N	1337
1278	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	2022-02-28 17:19:16.199348	2022-02-28 17:19:16.198963	2556257e-6e94-448f-afd2-04622a43c2ee	\N	1338
1281	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	2022-02-28 17:19:16.203952	2022-02-28 17:19:16.20392	feace6af-9642-41d5-9126-07c301e1d827	\N	1341
1282	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	2022-02-28 17:19:16.20904	2022-02-28 17:19:16.208994	da935e81-1de1-4b1a-b0d0-0b09784339a3	\N	1342
1283	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	2022-02-28 17:19:16.212004	2022-02-28 17:19:16.211971	09a9b659-886f-40ab-87b9-1b5da267c381	\N	1343
1285	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	2022-02-28 17:19:16.21593	2022-02-28 17:19:16.215891	40525a37-0eb1-4bf1-9987-fa2bf41f62cf	\N	1345
1286	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	2022-02-28 17:19:16.220222	2022-02-28 17:19:16.220184	25edfae1-48cf-4189-bc88-ebd2162ec019	\N	1346
1288	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	2022-02-28 17:19:16.225913	2022-02-28 17:19:16.225748	dc10249f-2290-46ec-9c7e-d4cfafe30859	\N	1348
1289	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	2022-02-28 17:19:16.229321	2022-02-28 17:19:16.229279	f42ac302-658e-4421-b9b9-dc42fb0685c1	\N	1349
1292	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	2022-02-28 17:19:16.239021	2022-02-28 17:19:16.238986	107e68c7-cd9c-4ad5-84cf-a04e644c8946	\N	1352
1293	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	2022-02-28 17:19:16.242504	2022-02-28 17:19:16.242471	ec896c9e-33d1-4fbe-9741-ea8278bd9564	\N	1353
1255	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	2022-02-28 17:19:16.119284	2022-02-28 17:19:16.119176	0288b6a4-f4e0-4624-a618-1b193cc80850	\N	1315
1260	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	2022-02-28 17:19:16.138697	2022-02-28 17:19:16.138678	781b18b8-92b0-4be1-adb6-a12d9c6d5efc	\N	1320
1263	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	2022-02-28 17:19:16.148804	2022-02-28 17:19:16.148757	fa8ee6a6-b053-43e2-8d88-eb5ff7e22903	\N	1323
1268	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	2022-02-28 17:19:16.162999	2022-02-28 17:19:16.162967	59a9016d-ad85-4641-80cd-55b6e59949b0	\N	1328
1270	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	2022-02-28 17:19:16.168266	2022-02-28 17:19:16.168229	5c7255e5-19b9-43c2-a548-acb344afb83e	\N	1330
1272	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	2022-02-28 17:19:16.174947	2022-02-28 17:19:16.174907	7b19fb8a-2bc0-442c-b953-76a8ea6d9319	\N	1332
1274	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	2022-02-28 17:19:16.181693	2022-02-28 17:19:16.181665	baf01faf-5ba8-4aae-a57e-ccda5b7b947b	\N	1334
1275	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	2022-02-28 17:19:16.186479	2022-02-28 17:19:16.186313	66690dee-345e-4395-8d5b-afa5af7d2319	\N	1335
1280	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	2022-02-28 17:19:16.201043	2022-02-28 17:19:16.201008	8ff1fe8a-32de-4a70-8bd5-0bec9810e5b2	\N	1340
1284	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	2022-02-28 17:19:16.212469	2022-02-28 17:19:16.212339	1c722c11-e339-447b-af4a-23b5751de143	\N	1344
1287	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	2022-02-28 17:19:16.224631	2022-02-28 17:19:16.224574	2a6f82e7-f957-424d-ac2e-2e7968ebec3f	\N	1347
1290	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	2022-02-28 17:19:16.233295	2022-02-28 17:19:16.233252	c47d267d-eb70-4a86-a958-00b79b828a74	\N	1350
1291	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	2022-02-28 17:19:16.23756	2022-02-28 17:19:16.237526	15fb59a6-dffa-4981-a220-7835573c45f3	\N	1351
1294	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	2022-02-28 17:19:16.245202	2022-02-28 17:19:16.245165	54b8ab40-c079-4b85-90e8-4b199bdab9cb	\N	1354
1296	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	2022-02-28 17:19:16.249946	2022-02-28 17:19:16.249913	0e417b8f-5859-4174-a4d1-7c6fd2abd366	\N	1356
1298	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	2022-02-28 17:19:16.257715	2022-02-28 17:19:16.257679	5b51c675-f774-4e7b-b5e4-fd4b915a9b7b	\N	1358
1299	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	2022-02-28 17:19:16.26166	2022-02-28 17:19:16.261623	cd4cf040-a59a-4f6a-8b54-cae2bc1729ce	\N	1359
1301	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	2022-02-28 17:19:16.267279	2022-02-28 17:19:16.26724	a6ef6136-e9cc-4d8c-a3cc-3995179e9cf2	\N	1361
1303	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	2022-02-28 17:19:16.27231	2022-02-28 17:19:16.272276	b15a39c9-4f4e-4f4c-a2d5-d9518a11ecae	\N	1363
1306	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	2022-02-28 17:19:16.279843	2022-02-28 17:19:16.279807	c09d4345-6a8e-443f-95fd-f03e53006a25	\N	1366
1310	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	2022-02-28 17:19:16.291947	2022-02-28 17:19:16.291927	cf439f76-cf50-4cc5-a493-f3e1abb62813	\N	1370
1312	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	2022-02-28 17:19:16.297574	2022-02-28 17:19:16.297542	74222643-121c-4886-850a-972149a6fff7	\N	1372
1313	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	2022-02-28 17:19:16.302253	2022-02-28 17:19:16.302216	90e4cc3c-edaf-431d-b66b-e945ecb5f46a	\N	1373
1316	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	2022-02-28 17:19:16.309646	2022-02-28 17:19:16.30961	b2e07a08-636a-43d4-b5c2-1d6cba66ae32	\N	1376
1317	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	2022-02-28 17:19:16.313667	2022-02-28 17:19:16.313631	0b05b76e-c622-4c0d-8cdb-2628ad3cc56c	\N	1377
1319	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	2022-02-28 17:19:16.319536	2022-02-28 17:19:16.319504	db7597be-1b91-4677-a229-26bd03126c8a	\N	1379
1322	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	2022-02-28 17:19:16.327559	2022-02-28 17:19:16.327534	407ef5bd-de8b-444a-9957-3d4afe9b0b90	\N	1382
1325	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	2022-02-28 17:19:16.338392	2022-02-28 17:19:16.338356	04f4cf70-344a-4a6e-bc99-c07e0edd6bb4	\N	1385
1327	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	2022-02-28 17:19:16.345471	2022-02-28 17:19:16.345424	5e2a917d-0bab-48a1-831a-96c5b43ef00f	\N	1387
1333	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	2022-02-28 17:19:16.499322	2022-02-28 17:19:16.49927	83d42d45-b446-487b-a5d0-d77b643e0844	\N	1393
1335	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	2022-02-28 17:19:16.507454	2022-02-28 17:19:16.507415	bcb4d2cd-c80a-4a9f-a545-88c529c2ce9a	\N	1395
1338	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	2022-02-28 17:19:16.513172	2022-02-28 17:19:16.513146	d37d71be-64fe-41cb-9461-921c73b92913	\N	1398
1339	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	2022-02-28 17:19:16.518975	2022-02-28 17:19:16.518941	d5a10e60-6c43-44a0-aa66-27378c6d1fac	\N	1399
1341	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	2022-02-28 17:19:16.524184	2022-02-28 17:19:16.524147	39e20a04-4696-4c9b-985d-1838723381fc	\N	1401
1344	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	2022-02-28 17:19:16.531791	2022-02-28 17:19:16.531757	a365c95a-7244-4125-bb5b-aa47f1a11c01	\N	1404
1349	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	2022-02-28 17:19:16.547619	2022-02-28 17:19:16.547558	0165e213-be18-4c5b-a41e-b282e1f85183	\N	1409
1352	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	2022-02-28 17:19:16.558747	2022-02-28 17:19:16.558712	920d01bf-cadc-46c1-876a-8fb53089a1d0	\N	1412
1354	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	2022-02-28 17:19:16.566673	2022-02-28 17:19:16.566645	088adc73-2e16-4b83-9561-18662e790f32	\N	1414
1359	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	2022-02-28 17:19:16.585978	2022-02-28 17:19:16.585958	26fa3fda-0433-43dc-b80b-4eb67f3faded	\N	1419
1366	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	2022-02-28 17:19:16.604837	2022-02-28 17:19:16.604818	a2b631fd-ce0b-425d-865e-82897af89a47	\N	1426
1367	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	2022-02-28 17:19:16.607361	2022-02-28 17:19:16.607345	1beba6a6-2be9-46e0-af1b-cd9a765d622f	\N	1427
1369	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	2022-02-28 17:19:16.615664	2022-02-28 17:19:16.615624	8f0ca9b7-4726-420e-b5d9-c44ad8c8769a	\N	1429
1374	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	2022-02-28 17:19:16.629183	2022-02-28 17:19:16.629024	4b3c84a5-1451-4ed5-bb65-e83e9f32c6ac	\N	1434
1378	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	2022-02-28 17:19:16.641521	2022-02-28 17:19:16.641506	8c21fa56-bfd4-447f-a392-015457091f96	\N	1438
1379	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	2022-02-28 17:19:16.64601	2022-02-28 17:19:16.645853	9e9ed2f7-ab26-46ee-be00-1c885e9b03cd	\N	1439
1381	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	2022-02-28 17:19:16.652698	2022-02-28 17:19:16.65261	f3319164-b80b-455c-b9a6-a1f8b3961a7c	\N	1441
1384	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	2022-02-28 17:19:16.660438	2022-02-28 17:19:16.660409	1f09bdcf-b985-4a2c-93ca-68e28460ce9e	\N	1444
1385	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	2022-02-28 17:19:16.66739	2022-02-28 17:19:16.667304	95a14b72-433c-43f2-9fb5-7ce09a63e5dd	\N	1445
1389	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	2022-02-28 17:19:16.678177	2022-02-28 17:19:16.678142	6c098e5d-c904-4a11-a642-53319f48351d	\N	1449
1391	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	2022-02-28 17:19:16.681607	2022-02-28 17:19:16.681572	4ef9187a-6184-4fc7-be95-89371434f1e6	\N	1451
1394	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	2022-02-28 17:19:16.690369	2022-02-28 17:19:16.690283	ff2c0d6e-174a-4ab3-8774-5a22bfdf4e68	\N	1454
1402	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	2022-02-28 17:19:16.717229	2022-02-28 17:19:16.717177	688700f1-63d8-4fff-a036-604c07f90e8f	\N	1462
1406	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	2022-02-28 17:19:16.73065	2022-02-28 17:19:16.730615	dbc97b66-eb18-446b-8ca1-a28f8c9784b9	\N	1466
1408	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	2022-02-28 17:19:16.735454	2022-02-28 17:19:16.735368	98ea41a6-4cb9-4845-b7ad-f80811b69ae6	\N	1468
1411	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	2022-02-28 17:19:16.745468	2022-02-28 17:19:16.745426	0d3ec95c-2461-4b99-b587-961e83c28cfb	\N	1471
1414	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	2022-02-28 17:19:16.751193	2022-02-28 17:19:16.751144	54c3178a-bac2-42b6-84ff-b31a41aadfe7	\N	1474
1416	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	2022-02-28 17:19:16.75937	2022-02-28 17:19:16.759327	b8910689-9745-4d7e-8289-4c7d134c77fa	\N	1476
1295	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	2022-02-28 17:19:16.248681	2022-02-28 17:19:16.248644	ec7ad141-54fb-4a06-98b9-5f4a3fabd086	\N	1355
1297	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	2022-02-28 17:19:16.255504	2022-02-28 17:19:16.255473	60f31ea2-116b-4838-923c-fbed790ed2b5	\N	1357
1300	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	2022-02-28 17:19:16.262456	2022-02-28 17:19:16.262405	92140c4a-d561-482d-83e3-f1b83827a860	\N	1360
1302	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	2022-02-28 17:19:16.268255	2022-02-28 17:19:16.268224	d00f8d5f-2676-47e3-a983-fb18eb02907f	\N	1362
1304	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	2022-02-28 17:19:16.273097	2022-02-28 17:19:16.273072	4ca0dcfd-eedd-41b2-ba66-1f77bc11be1e	\N	1364
1305	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	2022-02-28 17:19:16.278625	2022-02-28 17:19:16.278593	c1ea5627-f4a3-457b-8b97-c636d4ac1962	\N	1365
1307	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	2022-02-28 17:19:16.283565	2022-02-28 17:19:16.283521	28f25940-f584-40b2-828c-dbddabbec054	\N	1367
1308	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	2022-02-28 17:19:16.286298	2022-02-28 17:19:16.28626	cd699766-859d-4b46-8509-487852433db1	\N	1368
1309	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	2022-02-28 17:19:16.291631	2022-02-28 17:19:16.291594	e78c659f-1360-41d0-a984-2da01a760198	\N	1369
1311	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	2022-02-28 17:19:16.297224	2022-02-28 17:19:16.29719	9fa51814-c892-4017-bc69-e77e2eb84c4d	\N	1371
1314	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	2022-02-28 17:19:16.303149	2022-02-28 17:19:16.303108	f902e79c-63b0-4567-ad61-30174680d252	\N	1374
1315	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	2022-02-28 17:19:16.308208	2022-02-28 17:19:16.308171	9b019d9b-fc0b-4ade-8800-8fc488b44862	\N	1375
1318	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	2022-02-28 17:19:16.314384	2022-02-28 17:19:16.314352	bbed1537-bbe7-44b8-a4b6-b5643598e4aa	\N	1378
1320	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	2022-02-28 17:19:16.320955	2022-02-28 17:19:16.320809	6faefbb9-7420-4d78-8822-f3b68ecb9318	\N	1380
1321	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	2022-02-28 17:19:16.327434	2022-02-28 17:19:16.327401	4cdcdce5-2cfb-406e-b10e-cbffc9cf5af7	\N	1381
1324	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	2022-02-28 17:19:16.333804	2022-02-28 17:19:16.333778	b9833df6-9f16-43b5-92f3-c1bf009ee1de	\N	1384
1326	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	2022-02-28 17:19:16.342015	2022-02-28 17:19:16.341976	071c6728-f969-4e84-9a00-09891a601e76	\N	1386
1330	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	2022-02-28 17:19:16.488881	2022-02-28 17:19:16.488835	2abf99e0-bb10-4065-9b8e-525c7321f2be	\N	1390
1331	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	2022-02-28 17:19:16.496258	2022-02-28 17:19:16.496183	fc945e2c-9778-4358-b357-e0b616ac1a5e	\N	1391
1334	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	2022-02-28 17:19:16.502337	2022-02-28 17:19:16.502302	35ee3389-70bd-4cf1-a2a8-d2eed8fa31f4	\N	1394
1336	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	2022-02-28 17:19:16.508158	2022-02-28 17:19:16.50813	c4fb0718-54cd-4776-9ddf-5c2fd7bb8cc5	\N	1396
1337	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	2022-02-28 17:19:16.512616	2022-02-28 17:19:16.512578	bd5b5930-2633-407b-902c-44d7f6109af6	\N	1397
1340	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	2022-02-28 17:19:16.51968	2022-02-28 17:19:16.519644	2f965617-4b3b-4b4e-bff1-670228ff807b	\N	1400
1342	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	2022-02-28 17:19:16.525176	2022-02-28 17:19:16.525143	41e404a9-4ab6-466c-918b-aecf8215f173	\N	1402
1343	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	2022-02-28 17:19:16.530525	2022-02-28 17:19:16.530504	cbda25d5-bfbe-49a5-87ce-6fb180577998	\N	1403
1345	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	2022-02-28 17:19:16.536663	2022-02-28 17:19:16.536622	133003e9-add8-4d4e-ba51-465222afdf7f	\N	1405
1346	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	2022-02-28 17:19:16.539727	2022-02-28 17:19:16.539688	44c78224-952e-4542-ae2e-5df51b455400	\N	1406
1347	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	2022-02-28 17:19:16.542681	2022-02-28 17:19:16.542642	f19dfbdb-eb1d-44d3-a479-cbe928af6858	\N	1407
1348	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	2022-02-28 17:19:16.547502	2022-02-28 17:19:16.547284	1c5a40c5-b4fa-4353-a4d3-0134c61c686b	\N	1408
1350	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	2022-02-28 17:19:16.551133	2022-02-28 17:19:16.5511	21877dba-4b8f-445e-97f7-d63aa38d5294	\N	1410
1351	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	2022-02-28 17:19:16.554352	2022-02-28 17:19:16.554313	cb08e754-3f6f-443e-a913-129bad22a02d	\N	1411
1353	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	2022-02-28 17:19:16.559575	2022-02-28 17:19:16.559537	154646fc-bf9c-4c72-8ee7-2f359e5a59aa	\N	1413
1355	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	2022-02-28 17:19:16.567893	2022-02-28 17:19:16.567746	d5827ef8-637c-4f75-b9e6-ae8004199753	\N	1415
1356	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	2022-02-28 17:19:16.573451	2022-02-28 17:19:16.573408	230fc624-64bf-43b8-9669-5718723644fa	\N	1416
1357	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	2022-02-28 17:19:16.577784	2022-02-28 17:19:16.577744	be9f1b78-6ff2-4857-9c41-d0e9765ed50b	\N	1417
1358	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	2022-02-28 17:19:16.581363	2022-02-28 17:19:16.581325	96729143-b59d-40f6-b235-cbda9c9f6269	\N	1418
1360	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	2022-02-28 17:19:16.58761	2022-02-28 17:19:16.587573	d825b5dd-78b7-49c3-8613-4c9040639c77	\N	1420
1361	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	2022-02-28 17:19:16.590657	2022-02-28 17:19:16.590616	b5accc2d-0afb-4726-8713-e795f13d0f92	\N	1421
1362	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	2022-02-28 17:19:16.593757	2022-02-28 17:19:16.593717	3f07fa05-4f21-4ba2-a5b5-7641a84a3df2	\N	1422
1363	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	2022-02-28 17:19:16.596402	2022-02-28 17:19:16.596366	6b5d82c2-4875-4418-b1f6-4df217dec971	\N	1423
1364	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	2022-02-28 17:19:16.601509	2022-02-28 17:19:16.60147	84fe5143-9bd8-4e0d-a713-0ab82accd354	\N	1424
1365	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	2022-02-28 17:19:16.604719	2022-02-28 17:19:16.604676	d32c5827-c460-45ed-b398-6195a5a3d396	\N	1425
1368	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	2022-02-28 17:19:16.610248	2022-02-28 17:19:16.610201	5ac638b6-cc09-4419-9789-0e710e608ec7	\N	1428
1370	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	2022-02-28 17:19:16.616564	2022-02-28 17:19:16.616541	8fd58be6-0d2b-48d9-b04f-f55f12dda81f	\N	1430
1371	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	2022-02-28 17:19:16.62141	2022-02-28 17:19:16.621367	afe6be7e-e08f-4a00-9da4-1063f3c397e4	\N	1431
1372	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	2022-02-28 17:19:16.624284	2022-02-28 17:19:16.624243	b9cbb4e5-6f32-4c2c-8024-d41fa290eb67	\N	1432
1373	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	2022-02-28 17:19:16.628672	2022-02-28 17:19:16.628636	32e5d377-9a9b-4d18-babd-4728bf0a05ee	\N	1433
1375	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	2022-02-28 17:19:16.632355	2022-02-28 17:19:16.632319	a65f0d2a-f9cc-4e31-a2ae-1d1c4c6e590b	\N	1435
1376	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	2022-02-28 17:19:16.634556	2022-02-28 17:19:16.634542	05213c4f-2896-4164-bf8f-cf38263648ab	\N	1436
1377	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	2022-02-28 17:19:16.640293	2022-02-28 17:19:16.640252	a8e998e2-45b4-40ce-87f2-4209a5ca964d	\N	1437
1380	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	2022-02-28 17:19:16.646697	2022-02-28 17:19:16.646641	bf02d21c-e908-4f94-b77f-39823f7a0e09	\N	1440
1382	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	2022-02-28 17:19:16.653611	2022-02-28 17:19:16.653553	57245e9e-424a-4558-985a-7f07ce4defba	\N	1442
1383	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	2022-02-28 17:19:16.660148	2022-02-28 17:19:16.660117	57ef66da-20f3-4db2-b2b6-ce1f61273fcc	\N	1443
1387	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	2022-02-28 17:19:16.66986	2022-02-28 17:19:16.669842	362bd9f5-2189-40a5-b2ba-73f278f4b512	\N	1447
1388	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	2022-02-28 17:19:16.673503	2022-02-28 17:19:16.673439	f8167336-8819-4133-bcab-762900aca0d1	\N	1448
1390	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	2022-02-28 17:19:16.679588	2022-02-28 17:19:16.679553	6a182b9c-2082-4efc-b5b3-be9f9c4bc24e	\N	1450
1392	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	2022-02-28 17:19:16.685521	2022-02-28 17:19:16.685484	0cabe071-c075-489b-a015-9362e336e8a4	\N	1452
1393	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	2022-02-28 17:19:16.689139	2022-02-28 17:19:16.689104	aed3aa00-fe44-4aaa-ad29-1fa6feeaa58a	\N	1453
1395	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	2022-02-28 17:19:16.692795	2022-02-28 17:19:16.692782	421ccdf9-3346-473f-b26f-6c1370400ae5	\N	1455
1396	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	2022-02-28 17:19:16.695429	2022-02-28 17:19:16.69539	5e88055d-fbbc-47d5-a875-ef725af55ff3	\N	1456
1397	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	2022-02-28 17:19:16.702852	2022-02-28 17:19:16.702799	83bc53a9-3aea-47e4-a756-bfcc33c97514	\N	1457
1399	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	2022-02-28 17:19:16.705576	2022-02-28 17:19:16.705544	dbff5ac1-d196-411a-85ee-891298b2fc6e	\N	1459
1400	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	2022-02-28 17:19:16.70863	2022-02-28 17:19:16.708595	9817d64b-a2b7-4d93-a793-c8a3d00ad140	\N	1460
1401	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	2022-02-28 17:19:16.713602	2022-02-28 17:19:16.713563	03c14078-3616-4072-91dc-589518d803f5	\N	1461
1403	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	2022-02-28 17:19:16.718297	2022-02-28 17:19:16.718266	d9d07ddf-4ee3-42ec-87dc-e48885e75c1b	\N	1463
1404	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	2022-02-28 17:19:16.723205	2022-02-28 17:19:16.72317	6828bb60-f9e8-493a-90bb-ebe75e7ca519	\N	1464
1405	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	2022-02-28 17:19:16.725649	2022-02-28 17:19:16.725635	c96dcd0f-2263-4d8f-a31f-addc38a7b046	\N	1465
1407	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	2022-02-28 17:19:16.731955	2022-02-28 17:19:16.73192	378aa3ec-5226-4543-afed-202f8896ebc8	\N	1467
1409	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	2022-02-28 17:19:16.736345	2022-02-28 17:19:16.736325	d0a26e49-792b-4718-9753-92ea2a2096e5	\N	1469
1410	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	2022-02-28 17:19:16.740866	2022-02-28 17:19:16.740824	29b2712c-59d0-470d-89a8-f4fb0f8a3071	\N	1470
1412	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	2022-02-28 17:19:16.746477	2022-02-28 17:19:16.746446	2ef57148-22f0-4dc0-aeba-acb93edf57ca	\N	1472
1413	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	2022-02-28 17:19:16.749889	2022-02-28 17:19:16.749862	22a8d1cb-5a87-4ff6-b7c9-641c08a8ddf6	\N	1473
1415	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	2022-02-28 17:19:16.754687	2022-02-28 17:19:16.75465	24c15530-7673-4594-b399-193c1e57945b	\N	1475
1417	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	2022-02-28 17:19:16.760651	2022-02-28 17:19:16.760596	1cc6f729-a7e4-4d9e-b552-c9ffd3090f04	\N	1477
1418	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	2022-02-28 17:19:16.763751	2022-02-28 17:19:16.763722	cf139a7f-3165-47cf-969e-2fc3bd7005b3	\N	1478
1419	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	2022-02-28 17:19:16.766664	2022-02-28 17:19:16.766634	988d758e-1afd-452a-9616-1f69400dae7b	\N	1479
1421	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	2022-02-28 17:19:16.771859	2022-02-28 17:19:16.771826	d83aa233-b485-4570-b6b4-618450c66d86	\N	1481
1422	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	2022-02-28 17:19:16.774452	2022-02-28 17:19:16.774431	9e251597-7c7a-42f3-90a1-cf5c2dc466bc	\N	1482
1423	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	2022-02-28 17:19:16.778326	2022-02-28 17:19:16.778293	7cc6497d-133e-4d58-9865-f1d00a3d2569	\N	1483
1424	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	2022-02-28 17:19:16.781959	2022-02-28 17:19:16.781912	f80caaca-c48c-435d-ad03-aa259e6c14fd	\N	1484
1426	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	2022-02-28 17:19:16.787722	2022-02-28 17:19:16.787682	64ec642f-b778-444d-ae8f-3fbb6819e57c	\N	1486
1428	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	2022-02-28 17:19:16.793481	2022-02-28 17:19:16.79345	5756a961-3f7d-4f01-9a47-e98b53d21fc3	\N	1488
1429	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	2022-02-28 17:19:16.795805	2022-02-28 17:19:16.795786	3e018ea3-5414-4f9f-8545-ef6ff575c4d1	\N	1489
1430	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	2022-02-28 17:19:16.799473	2022-02-28 17:19:16.799437	91223f61-b912-4d8d-a0b8-efd355601e37	\N	1490
1431	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	2022-02-28 17:19:16.803441	2022-02-28 17:19:16.803398	6d2e4058-6044-4709-91da-090cda52c667	\N	1491
1432	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	2022-02-28 17:19:16.808294	2022-02-28 17:19:16.808267	50466bfa-94d9-45ef-ae63-b50e6e86e7fa	\N	1492
1435	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	2022-02-28 17:19:16.813375	2022-02-28 17:19:16.813346	e288333c-bd73-4743-897c-f54d1b8857e4	\N	1495
1437	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	2022-02-28 17:19:16.819181	2022-02-28 17:19:16.819168	a96a2a5e-b94c-4d23-bdad-c3c7c2c2fe3f	\N	1497
1438	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	2022-02-28 17:19:16.823767	2022-02-28 17:19:16.823727	a6999ede-78bb-4b5b-9e72-d8ee21bb873f	\N	1498
1440	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	2022-02-28 17:19:16.830055	2022-02-28 17:19:16.830028	c7683bc5-2f42-4ad0-9d2d-1c3c37aa558f	\N	1500
1442	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	2022-02-28 17:19:16.834143	2022-02-28 17:19:16.83411	6d9b2b7c-f7b0-4752-945a-00cb9d2da928	\N	1502
1443	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	2022-02-28 17:19:16.839739	2022-02-28 17:19:16.839698	689ef83d-bccc-4cd7-b106-d62dd0630e70	\N	1503
1444	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	2022-02-28 17:19:16.842558	2022-02-28 17:19:16.842523	4165f579-dce7-42b5-9277-162784925821	\N	1504
1445	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	2022-02-28 17:19:16.845593	2022-02-28 17:19:16.845563	f240eb45-7142-4a12-a24b-d4ab787de2ac	\N	1505
1447	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	2022-02-28 17:19:16.851221	2022-02-28 17:19:16.851179	75cafe14-01b7-4c9e-9e9e-122045566cae	\N	1507
1448	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	2022-02-28 17:19:16.855037	2022-02-28 17:19:16.854996	7af45a77-687a-4eb7-998e-ac2210fa8a57	\N	1508
1450	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	2022-02-28 17:19:16.860069	2022-02-28 17:19:16.860028	2fd802c5-ecf8-4187-93da-a09b9febf375	\N	1510
1453	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	2022-02-28 17:19:17.108213	2022-02-28 17:19:17.108113	03a1bf6a-2abe-410a-947b-b87f2ef88cd0	\N	1513
1456	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	2022-02-28 17:19:17.112182	2022-02-28 17:19:17.112143	3f095af5-8115-49a2-8df8-18489631b9cc	\N	1516
1458	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	2022-02-28 17:19:17.118513	2022-02-28 17:19:17.118499	a36a71b8-cbdb-4fd7-a2f8-d24d68027da3	\N	1518
1460	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	2022-02-28 17:19:17.129183	2022-02-28 17:19:17.129063	e8fde039-5a7d-4a50-9b3e-50c152bd1e28	\N	1520
1462	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	2022-02-28 17:19:17.13411	2022-02-28 17:19:17.134072	f1dafc5d-e872-43ad-b0e0-5d7a82cdee52	\N	1522
1464	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	2022-02-28 17:19:17.140082	2022-02-28 17:19:17.140048	2f445e7b-c044-4619-993a-d1e9193325b0	\N	1524
1466	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	2022-02-28 17:19:17.14773	2022-02-28 17:19:17.147696	1831dfd2-e484-41da-ae85-12bfc10f2b32	\N	1526
1468	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	2022-02-28 17:19:17.152106	2022-02-28 17:19:17.152072	36d6e665-9133-4d32-8b0a-0eeb1345fb35	\N	1528
1469	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	2022-02-28 17:19:17.158602	2022-02-28 17:19:17.158564	72e57bdf-7e39-41f5-8140-0278ba797347	\N	1529
1472	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	2022-02-28 17:19:17.164624	2022-02-28 17:19:17.164492	4bd5b0db-c0fb-4152-89db-2b9ce4187098	\N	1532
1475	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	2022-02-28 17:19:17.17745	2022-02-28 17:19:17.177413	1519eaf5-c973-48d7-bd1b-e59f9f4811ed	\N	1535
1476	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	2022-02-28 17:19:17.180227	2022-02-28 17:19:17.180067	6b3bc0f4-bbef-46a6-8b84-2a7fade7b645	\N	1536
1479	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	2022-02-28 17:19:17.189177	2022-02-28 17:19:17.189139	4f24327d-5929-492a-ac84-966d1df80887	\N	1539
1485	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	2022-02-28 17:19:17.438637	2022-02-28 17:19:17.438525	997a0561-d200-4303-b06d-5967c5a6e3a2	\N	1545
1487	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	2022-02-28 17:19:17.452235	2022-02-28 17:19:17.452195	a71583c1-e5f0-48f9-a5e4-cd6916e01377	\N	1547
1420	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	2022-02-28 17:19:16.770877	2022-02-28 17:19:16.770839	34c9072d-ad5e-4e97-b64f-1feff580936c	\N	1480
1425	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	2022-02-28 17:19:16.783069	2022-02-28 17:19:16.783048	7430a3dd-6e70-46c0-91c6-4f18e2478759	\N	1485
1427	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	2022-02-28 17:19:16.792224	2022-02-28 17:19:16.792204	16cf9f48-b5ee-4b19-8c7f-c968e7104911	\N	1487
1433	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	2022-02-28 17:19:16.808652	2022-02-28 17:19:16.808606	d483d394-5b29-4543-9c93-8b23a5e089a0	\N	1493
1434	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	2022-02-28 17:19:16.812607	2022-02-28 17:19:16.812593	7ed504ab-eedf-426b-82e9-101f1caa19b9	\N	1494
1436	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	2022-02-28 17:19:16.817904	2022-02-28 17:19:16.817858	d66faa79-a733-453f-a3ae-53e34aef2c23	\N	1496
1439	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	2022-02-28 17:19:16.828786	2022-02-28 17:19:16.828736	e2e8ca7b-c348-4e81-9101-3868b54a34f9	\N	1499
1441	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	2022-02-28 17:19:16.833419	2022-02-28 17:19:16.833396	018dc2cf-f25a-4349-aa49-735bf6c631aa	\N	1501
1446	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	2022-02-28 17:19:16.845672	2022-02-28 17:19:16.84566	5e3644a7-37f8-4827-9647-11f85c24bb45	\N	1506
1449	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	2022-02-28 17:19:16.856834	2022-02-28 17:19:16.856795	9e06da8b-5c7e-42f3-8c14-caf4c3bfef1e	\N	1509
1454	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	2022-02-28 17:19:17.108286	2022-02-28 17:19:17.108176	aa4dea18-f69c-47f0-b07e-e71126306457	\N	1514
1457	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	2022-02-28 17:19:17.117315	2022-02-28 17:19:17.117275	447d1a81-d712-4cac-a72f-32419bfd72c1	\N	1517
1459	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	2022-02-28 17:19:17.128181	2022-02-28 17:19:17.128099	725f1fa7-0534-46d7-951a-179788bdce9b	\N	1519
1461	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	2022-02-28 17:19:17.131097	2022-02-28 17:19:17.131059	1a0e55b1-39d4-46d3-a67b-460215da3beb	\N	1521
1463	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	2022-02-28 17:19:17.13942	2022-02-28 17:19:17.139385	2a4259d2-664c-4c07-856a-81d1f5f1ee32	\N	1523
1465	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	2022-02-28 17:19:17.146742	2022-02-28 17:19:17.146709	5538631f-99d1-4218-b9fc-2b0d8b81f38b	\N	1525
1467	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	2022-02-28 17:19:17.151386	2022-02-28 17:19:17.151351	5fdb4f9c-b6b3-4c8e-86e4-6e032c9805d0	\N	1527
1470	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	2022-02-28 17:19:17.159091	2022-02-28 17:19:17.159053	4c7ff61d-3e6c-4d03-af24-7abc11fc79bc	\N	1530
1471	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	2022-02-28 17:19:17.164524	2022-02-28 17:19:17.163896	4778fd26-ef9c-4f6c-875f-c6355981eb09	\N	1531
1474	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	2022-02-28 17:19:17.17043	2022-02-28 17:19:17.170365	0bcf11c6-775e-4877-894b-e7b195575a02	\N	1534
1477	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	2022-02-28 17:19:17.181522	2022-02-28 17:19:17.18147	f10c192a-5ec2-4af5-ac56-70c6d9eca6a6	\N	1537
1481	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	2022-02-28 17:19:17.194624	2022-02-28 17:19:17.194583	be5de848-df21-4ce0-8010-917896cb4777	\N	1541
1483	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	2022-02-28 17:19:17.437004	2022-02-28 17:19:17.436886	2977f2ea-4cd8-4e24-934c-93c910e2274c	\N	1543
1486	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	2022-02-28 17:19:17.440913	2022-02-28 17:19:17.440733	09196325-b688-47f0-88fe-5d5246c50db4	\N	1546
1490	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	2022-02-28 17:19:17.456546	2022-02-28 17:19:17.456424	c86b902c-795a-4fe7-a43a-5f61869364e3	\N	1550
1492	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	2022-02-28 17:19:17.466862	2022-02-28 17:19:17.466827	9cf35b7c-939f-4372-93bb-2e234f73e176	\N	1552
1494	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	2022-02-28 17:19:17.470581	2022-02-28 17:19:17.470535	6de62d2b-1f47-4770-a96e-aabcf869d362	\N	1554
1497	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	2022-02-28 17:19:17.481116	2022-02-28 17:19:17.481077	5d10d428-bd51-40ff-b529-a334dab7e7da	\N	1557
1500	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	2022-02-28 17:19:17.490005	2022-02-28 17:19:17.489967	ffb9f463-95ce-4ad0-bdf8-9dd89457a247	\N	1560
1505	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	2022-02-28 17:19:17.504269	2022-02-28 17:19:17.504234	30bdc70d-bf59-48c3-aa92-5e55b66c43c5	\N	1565
1509	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	2022-02-28 17:19:17.518973	2022-02-28 17:19:17.518938	46040fe5-0604-4077-9b22-79f9cf800f8e	\N	1569
1512	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	2022-02-28 17:19:17.526506	2022-02-28 17:19:17.526466	da458b51-ad76-4f80-94ec-e898bc5505a1	\N	1572
1516	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	2022-02-28 17:19:17.541966	2022-02-28 17:19:17.54194	3c58fd2f-3ed9-4154-a87e-286f8cd03286	\N	1576
1518	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	2022-02-28 17:19:17.545722	2022-02-28 17:19:17.545676	4a8cb9fc-4b51-4140-8629-a649c69d893e	\N	1578
1522	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	2022-02-28 17:19:17.557899	2022-02-28 17:19:17.557836	65ba8566-22ca-4e56-8571-f7fedeaf9aa5	\N	1582
1525	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	2022-02-28 17:19:17.571659	2022-02-28 17:19:17.571419	0c077267-30d1-412e-8448-62661d3674f1	\N	1585
1529	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	2022-02-28 17:19:17.583247	2022-02-28 17:19:17.583234	9b2ee4ce-f79e-43a2-9126-925b83ca9063	\N	1589
1531	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	2022-02-28 17:19:17.5885	2022-02-28 17:19:17.588461	d2663dca-fc5e-481b-83b5-f8a08ae33c0a	\N	1591
1532	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	2022-02-28 17:19:17.594894	2022-02-28 17:19:17.594853	c9240efb-d664-40fc-bd9a-074419a29b82	\N	1592
1535	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	2022-02-28 17:19:17.600311	2022-02-28 17:19:17.600279	3eaeb564-d9ed-4e0e-b143-59df0e5312ad	\N	1595
1537	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	2022-02-28 17:19:17.607317	2022-02-28 17:19:17.607284	11b6bb7e-96fa-489e-a650-1b73b262f810	\N	1597
1538	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	2022-02-28 17:19:17.612016	2022-02-28 17:19:17.611944	2b2611c8-d0a1-436c-86ea-40a29b8c19d4	\N	1598
1540	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	2022-02-28 17:19:17.620125	2022-02-28 17:19:17.620088	ebe97640-2da0-40a6-a1a3-b8405fbf2a95	\N	1600
1543	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	2022-02-28 17:19:17.625163	2022-02-28 17:19:17.625148	05a51739-70a0-4c34-ba6a-5502859751ce	\N	1603
1544	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	2022-02-28 17:19:17.63112	2022-02-28 17:19:17.631029	be54cd4f-9284-4926-adb6-d5c878cf5787	\N	1604
1546	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	2022-02-28 17:19:17.636242	2022-02-28 17:19:17.636196	c1bc54c3-b00b-42ec-bd7a-d56f254c19f9	\N	1606
1550	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	2022-02-28 17:19:17.649387	2022-02-28 17:19:17.649349	d4f698a4-4d2a-473e-8e1b-91250c8e3905	\N	1610
1552	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	2022-02-28 17:19:17.665047	2022-02-28 17:19:17.665008	aac89526-c202-4358-a488-5efd4d06bc69	\N	1612
1556	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	2022-02-28 17:19:17.677546	2022-02-28 17:19:17.677514	647b6977-fd5b-41e5-9b33-3c46f6e5e7d1	\N	1616
1558	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	2022-02-28 17:19:17.683181	2022-02-28 17:19:17.68315	e75fab54-08a3-4c3c-8077-088ea6f807c2	\N	1618
1560	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	2022-02-28 17:19:17.687447	2022-02-28 17:19:17.687409	64afc020-fc01-4e54-9fcb-e140d49cf2f5	\N	1620
1562	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	2022-02-28 17:19:17.694134	2022-02-28 17:19:17.694102	c5684be1-476f-4f1e-bb88-4a01d17c1474	\N	1622
1565	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	2022-02-28 17:19:17.700681	2022-02-28 17:19:17.700654	42aae2a0-67f7-48b6-ae3c-151494f7244d	\N	1625
1566	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	2022-02-28 17:19:17.749026	2022-02-28 17:19:17.748967	cc80c383-49d4-4b5f-87c8-b00939472447	\N	1626
1568	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	2022-02-28 17:19:17.752445	2022-02-28 17:19:17.752252	5eb03628-431d-42f0-8553-591ac9be05cf	\N	1628
1489	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	2022-02-28 17:19:17.455394	2022-02-28 17:19:17.455314	9739cbf2-75da-46fc-8b49-af07ca883c7a	\N	1549
1491	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	2022-02-28 17:19:17.462285	2022-02-28 17:19:17.462248	89b79d03-4b7b-4d54-97bd-9bb9adcb7927	\N	1551
1493	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	2022-02-28 17:19:17.468407	2022-02-28 17:19:17.468389	349765a1-e7ee-4b93-ac4b-c6389aad67f6	\N	1553
1495	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	2022-02-28 17:19:17.474765	2022-02-28 17:19:17.474726	d055f72a-fe77-475c-ab8c-a089a3d12503	\N	1555
1496	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	2022-02-28 17:19:17.479842	2022-02-28 17:19:17.479805	6cb01be0-0426-4f7a-a294-52d4e1fe7d81	\N	1556
1498	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	2022-02-28 17:19:17.48341	2022-02-28 17:19:17.48337	8b782205-ccf9-4e22-adbc-8113c652e0fa	\N	1558
1499	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	2022-02-28 17:19:17.486858	2022-02-28 17:19:17.486822	54cb6cbb-5029-4d24-93e8-6cafcc6ce29a	\N	1559
1501	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	2022-02-28 17:19:17.490733	2022-02-28 17:19:17.490716	bc1c43ec-b95d-4085-8192-6aadee9eda21	\N	1561
1502	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	2022-02-28 17:19:17.494651	2022-02-28 17:19:17.494621	c7f23f5c-e2ab-4c1b-a339-e53e3f31f329	\N	1562
1503	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	2022-02-28 17:19:17.498138	2022-02-28 17:19:17.498098	aefb5cb0-0cb2-4fe0-a2ef-76f844feea51	\N	1563
1504	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	2022-02-28 17:19:17.501905	2022-02-28 17:19:17.501891	2b62f6a3-d66f-427c-8c00-b6fd2979ff23	\N	1564
1506	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	2022-02-28 17:19:17.507572	2022-02-28 17:19:17.507539	02213d9f-9f37-4f35-af4c-8d03de16ecd7	\N	1566
1507	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	2022-02-28 17:19:17.510913	2022-02-28 17:19:17.510897	d01cb711-a69b-414e-bbf5-484c6072357f	\N	1567
1508	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	2022-02-28 17:19:17.515077	2022-02-28 17:19:17.515023	1a4c8673-ca7e-487a-bc7b-4001f95b8987	\N	1568
1510	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	2022-02-28 17:19:17.520053	2022-02-28 17:19:17.520013	98f650f0-90b3-48f1-958a-56eedebeae26	\N	1570
1511	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	2022-02-28 17:19:17.524448	2022-02-28 17:19:17.524432	97e2bcab-34c7-4652-a85f-6d34e162a36f	\N	1571
1514	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	2022-02-28 17:19:17.532106	2022-02-28 17:19:17.53205	c1ea167d-416a-4d05-9af5-02f01553f4e5	\N	1574
1515	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	2022-02-28 17:19:17.536848	2022-02-28 17:19:17.536803	ff6609e4-d988-4756-890e-e5e7fb16f3ee	\N	1575
1517	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	2022-02-28 17:19:17.542817	2022-02-28 17:19:17.542783	980740d8-f06a-4b1f-bb48-8af587b896b4	\N	1577
1519	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	2022-02-28 17:19:17.547412	2022-02-28 17:19:17.547376	f1953b5c-357a-47d9-a5fb-05f1329c3730	\N	1579
1521	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	2022-02-28 17:19:17.557349	2022-02-28 17:19:17.55729	0f816f92-4772-43ca-9fd6-8de1c15c7639	\N	1581
1523	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	2022-02-28 17:19:17.559965	2022-02-28 17:19:17.559933	2fc748b7-c3d2-4d70-99a0-2a5d454f7b69	\N	1583
1524	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	2022-02-28 17:19:17.570353	2022-02-28 17:19:17.570287	fb2d1173-1e0f-46f2-8487-38c0dd1c2e29	\N	1584
1527	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	2022-02-28 17:19:17.574216	2022-02-28 17:19:17.574183	ea7b9837-4dc3-4a2a-a4ff-25d213ce4f62	\N	1587
1528	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	2022-02-28 17:19:17.582018	2022-02-28 17:19:17.581979	7f254888-ff11-4c6f-920c-e1f2d5460d90	\N	1588
1530	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	2022-02-28 17:19:17.586676	2022-02-28 17:19:17.586643	0ea60cd7-fd8e-4dad-b692-4bad954209b4	\N	1590
1533	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	2022-02-28 17:19:17.596547	2022-02-28 17:19:17.59651	c3b74e1f-ddf4-4cde-addb-afe3b97c3b5c	\N	1593
1534	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	2022-02-28 17:19:17.600026	2022-02-28 17:19:17.600012	a05136d3-1739-410f-b840-e12bfd0198d1	\N	1594
1536	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	2022-02-28 17:19:17.60677	2022-02-28 17:19:17.606732	4b630fc7-c321-448d-8199-906a945f9eff	\N	1596
1539	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	2022-02-28 17:19:17.612665	2022-02-28 17:19:17.61263	68e175b8-e4e2-4c1c-9e23-93ee766ee489	\N	1599
1541	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	2022-02-28 17:19:17.620946	2022-02-28 17:19:17.620901	e30d3436-3050-4518-a882-ed9b87b4209a	\N	1601
1542	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	2022-02-28 17:19:17.624896	2022-02-28 17:19:17.624852	3eea7775-cf57-4848-b2d7-0002b0019c9a	\N	1602
1545	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	2022-02-28 17:19:17.632883	2022-02-28 17:19:17.632849	82a52033-a270-466a-a4cd-a4b6292b3040	\N	1605
1547	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	2022-02-28 17:19:17.636999	2022-02-28 17:19:17.636957	9425c573-3d05-4c7d-9f4e-c5854b694f85	\N	1607
1548	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	2022-02-28 17:19:17.643186	2022-02-28 17:19:17.643143	4357a1b9-a891-4d09-b82c-478d89138306	\N	1608
1549	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	2022-02-28 17:19:17.647425	2022-02-28 17:19:17.647386	a7693471-541b-48c2-995f-0f54d319dd22	\N	1609
1551	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	2022-02-28 17:19:17.660012	2022-02-28 17:19:17.659969	1e9105fe-0ae1-4993-bb13-2447e7f10356	\N	1611
1553	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	2022-02-28 17:19:17.666196	2022-02-28 17:19:17.666123	014c9296-d8a9-4896-ab7c-470c35df6ed1	\N	1613
1554	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	2022-02-28 17:19:17.669694	2022-02-28 17:19:17.669649	c4a74e06-f8c7-4523-a91d-2df8de94a45d	\N	1614
1555	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	2022-02-28 17:19:17.674266	2022-02-28 17:19:17.674219	05cbad10-0798-47a8-8765-55afe971c023	\N	1615
1557	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	2022-02-28 17:19:17.67918	2022-02-28 17:19:17.679144	36435189-d56c-4c81-b51a-2947c758e318	\N	1617
1559	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	2022-02-28 17:19:17.684484	2022-02-28 17:19:17.684457	084e8432-e21c-4695-9ded-b6cedb34559d	\N	1619
1561	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	2022-02-28 17:19:17.688491	2022-02-28 17:19:17.688457	8a4e3060-db11-4f19-bb90-42d3543dc59e	\N	1621
1563	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	2022-02-28 17:19:17.694957	2022-02-28 17:19:17.694926	215ffbf8-730a-40b6-9d56-4a62c02c0ca6	\N	1623
1564	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	2022-02-28 17:19:17.700397	2022-02-28 17:19:17.700351	92dbe420-a6ef-47fa-a374-85b1aa6f9261	\N	1624
1567	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	2022-02-28 17:19:17.749929	2022-02-28 17:19:17.749619	74ba7768-b55f-4648-8f15-9fcb3a0960b1	\N	1627
1569	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	2022-02-28 17:19:17.752479	2022-02-28 17:19:17.752396	19aec706-cecf-4297-b038-391088ef7b7b	\N	1629
1570	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	2022-02-28 17:19:17.757772	2022-02-28 17:19:17.757738	4d20cf98-2127-46e7-a6ef-1bc95d4f0cae	\N	1630
1571	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	2022-02-28 17:19:17.760338	2022-02-28 17:19:17.760304	7deebd7b-41ed-49cb-ae88-2a637bd9e571	\N	1631
1572	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	2022-02-28 17:19:17.764988	2022-02-28 17:19:17.764949	b450095a-f80b-4e8c-81c3-b6eb70d83eb0	\N	1632
1574	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	2022-02-28 17:19:17.769094	2022-02-28 17:19:17.769062	fd9015e7-e8b7-4126-b5a6-1b4695f169d2	\N	1634
1575	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	2022-02-28 17:19:17.775597	2022-02-28 17:19:17.775515	f7414444-e97a-4aa3-9458-3684a7b3a07c	\N	1635
1578	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	2022-02-28 17:19:17.782704	2022-02-28 17:19:17.782675	aada4b39-af57-482c-befd-3ee4b2b0e3b4	\N	1638
1580	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	2022-02-28 17:19:17.788738	2022-02-28 17:19:17.788712	a7158f15-1fec-4f10-88ab-e075355dd063	\N	1640
1582	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	Developmental Bilingual	Developmental Bilingual	\N	\N	\N	2022-02-28 17:19:17.832583	2022-02-28 17:19:17.831373	f5e3a75b-18b1-47f2-9419-4c8388aa5854	\N	1642
1586	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	Structured English Immersion	Structured English Immersion	\N	\N	\N	2022-02-28 17:19:17.846078	2022-02-28 17:19:17.845956	5ae8a73f-f1ad-4806-b659-4a58f6848b23	\N	1646
1573	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	2022-02-28 17:19:17.767824	2022-02-28 17:19:17.767784	ea6a1a99-c205-43a0-a44a-23a087e2dc9e	\N	1633
1576	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	2022-02-28 17:19:17.775854	2022-02-28 17:19:17.775822	324b8c05-33f2-4b0c-9341-0046731f5fb7	\N	1636
1577	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	2022-02-28 17:19:17.781809	2022-02-28 17:19:17.781758	f7f8d583-8699-46a0-9955-00a7dbc98c84	\N	1637
1579	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	2022-02-28 17:19:17.787273	2022-02-28 17:19:17.787124	7402d68a-986a-4678-bc4a-354a68974ff7	\N	1639
1583	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	Two-Way Immersion	Two-Way Immersion	\N	\N	\N	2022-02-28 17:19:17.832583	2022-02-28 17:19:17.831376	a1b90310-90e4-4c8d-94e9-4247feecc090	\N	1643
1585	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	Heritage Language	Heritage Language	\N	\N	\N	2022-02-28 17:19:17.845114	2022-02-28 17:19:17.84507	e7b9943d-bd38-463d-afb2-44c8f22edb68	\N	1645
1588	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	SDAIE - Specially Designed Academic Instruction Delivered In English	SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	2022-02-28 17:19:17.851468	2022-02-28 17:19:17.851427	7cd0bc2c-ba5f-45e8-ba23-aedf92874549	\N	1648
1590	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	Pull-Out ESL	Pull-Out ESL	\N	\N	\N	2022-02-28 17:19:17.857614	2022-02-28 17:19:17.857601	4baa6e13-e7d5-452c-957c-a2075b945b3c	\N	1650
1592	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	2022-02-28 17:19:17.904254	2022-02-28 17:19:17.903084	88c33c47-5571-43fd-8b02-bcbf6acffe36	\N	1652
1597	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:17.919129	2022-02-28 17:19:17.919065	79124b58-efb6-43d9-939e-05fdcc9d0eb7	\N	1657
1602	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	2022-02-28 17:19:17.970634	2022-02-28 17:19:17.969435	e4dab9dc-f786-4461-967f-01dea3d90fbf	\N	1662
1605	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	2022-02-28 17:19:17.986058	2022-02-28 17:19:17.985992	77b935c0-485f-4b68-bc95-46c445b5bd82	\N	1665
1609	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	2022-02-28 17:19:18.030337	2022-02-28 17:19:18.029172	45c1037f-0dc9-4b4d-878c-48171145e8f2	\N	1669
1612	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	2022-02-28 17:19:18.044983	2022-02-28 17:19:18.044756	8b2a3c91-e1f6-4693-9ba0-f039cb8eda2f	\N	1672
1614	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	2022-02-28 17:19:18.087517	2022-02-28 17:19:18.086359	0c3e5434-4190-495b-8f5e-44209b18f9b5	\N	1674
1617	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	2022-02-28 17:19:18.102213	2022-02-28 17:19:18.102173	549f28bc-8f90-4b51-9f2f-06ceeb741901	\N	1677
1621	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	2022-02-28 17:19:18.148342	2022-02-28 17:19:18.147135	49d91207-c0d6-46e8-a977-077e466add14	\N	1681
1625	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	2022-02-28 17:19:18.165492	2022-02-28 17:19:18.165431	640ebc38-64b0-4444-bf6d-ab0df02a7a00	\N	1685
1633	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	2022-02-28 17:19:18.19532	2022-02-28 17:19:18.195284	4643e156-b94b-4e54-9532-6646a2c398bd	\N	1693
1641	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	2022-02-28 17:19:18.249391	2022-02-28 17:19:18.247547	0b53d5e2-27da-4bc7-83b3-e8b5d7ef0d1c	\N	1701
1642	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	2022-02-28 17:19:18.300809	2022-02-28 17:19:18.29965	9a58a6cb-6433-48d8-947d-0c0be54c55b0	\N	1702
1646	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	2022-02-28 17:19:18.316264	2022-02-28 17:19:18.316184	2a6947a0-99ce-4fb6-87f0-33f563b0eae7	\N	1706
1650	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	2022-02-28 17:19:18.327409	2022-02-28 17:19:18.327372	4989cee2-2027-48b4-99ab-a54f76996c88	\N	1710
1655	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	Charter	Charter	\N	\N	\N	2022-02-28 17:19:18.381019	2022-02-28 17:19:18.37976	6c5aee12-30ae-44ce-ad1c-c0cd87e0c354	\N	1715
1657	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	2022-02-28 17:19:18.388626	2022-02-28 17:19:18.387397	91a639c9-0664-4416-b429-d40049f800cd	\N	1717
1659	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	2022-02-28 17:19:18.434119	2022-02-28 17:19:18.432959	820d55d8-9553-4dac-8eb4-e16de093e54f	\N	1719
1664	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	2022-02-28 17:19:18.451103	2022-02-28 17:19:18.45101	5ba246b1-ae64-4a84-9346-30bd040db38b	\N	1724
1667	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	2022-02-28 17:19:18.468211	2022-02-28 17:19:18.467779	295b5e1e-01d4-4ba1-a179-2671e9d51641	\N	1727
1670	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	2022-02-28 17:19:18.470764	2022-02-28 17:19:18.470734	07110941-5cb9-4772-893a-3a4f6b95605f	\N	1730
1672	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2022-02-28 17:19:18.521748	2022-02-28 17:19:18.520582	5da191b9-bb9f-4801-9caf-f34f797f0091	\N	1733
1678	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	2022-02-28 17:19:18.537806	2022-02-28 17:19:18.537738	c18c8dca-5bbd-4b7f-b7c2-b430eff87466	\N	1738
1680	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2022-02-28 17:19:18.590228	2022-02-28 17:19:18.589008	67840ef1-6c87-4ec7-8593-5bbbb8671d96	\N	1740
1685	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	2022-02-28 17:19:18.6045	2022-02-28 17:19:18.60447	0986a8cc-57b3-4deb-a4cb-d7fce5e70658	\N	1745
1689	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	2022-02-28 17:19:18.65299	2022-02-28 17:19:18.651752	ac6bb629-07f9-40e4-a0a3-9fcb5714e04a	\N	1749
1691	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	2022-02-28 17:19:18.666435	2022-02-28 17:19:18.666336	e5da24d6-c543-43fc-b743-fdac4573b3d3	\N	1751
1694	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	2022-02-28 17:19:18.669606	2022-02-28 17:19:18.669496	e4a00924-f285-4e4f-be57-67113242e377	\N	1754
1696	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	Dropout Prevention Programs	Dropout Prevention Programs	\N	\N	\N	2022-02-28 17:19:18.720984	2022-02-28 17:19:18.719813	21830d77-4376-4640-9708-d43624736780	\N	1756
1700	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	Pay For Success Initiatives	Pay For Success Initiatives	\N	\N	\N	2022-02-28 17:19:18.738994	2022-02-28 17:19:18.738891	ba51e342-5109-4937-b5ec-fbd3d42af2ba	\N	1760
1702	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	2022-02-28 17:19:18.782698	2022-02-28 17:19:18.781427	11d3a827-9995-4b69-883b-3a6ffa886001	\N	1762
1704	uri://ed-fi.org/OldEthnicityDescriptor	American Indian Or Alaskan Native	American Indian Or Alaskan Native	American Indian Or Alaskan Native	\N	\N	\N	2022-02-28 17:19:18.792243	2022-02-28 17:19:18.79089	154a4fa9-c998-4ff4-8aec-c95949ad9917	\N	1764
1707	uri://ed-fi.org/OldEthnicityDescriptor	Hispanic	Hispanic	Hispanic	\N	\N	\N	2022-02-28 17:19:18.797308	2022-02-28 17:19:18.797291	8e590ff7-8b4b-4645-9e54-a37eefc3653d	\N	1767
1710	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	2022-02-28 17:19:19.090719	2022-02-28 17:19:19.089511	54c93041-2ec7-4664-a1be-421c81ef88d8	\N	1770
1713	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	2022-02-28 17:19:19.104048	2022-02-28 17:19:19.104014	2d1df211-42f0-4fd9-8ed2-21a34a097573	\N	1773
1719	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	2022-02-28 17:19:19.267594	2022-02-28 17:19:19.266401	ce92f7c7-25aa-4d49-9d1d-2b528647cba4	\N	1779
1721	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	2022-02-28 17:19:19.322673	2022-02-28 17:19:19.321504	66da516d-c3e7-406f-8690-94462e9a3de5	\N	1781
1589	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	Content-Based ESL	Content-Based ESL	\N	\N	\N	2022-02-28 17:19:17.855941	2022-02-28 17:19:17.85585	83d1c82e-2d21-41cd-8356-710f93eabb1d	\N	1649
1591	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:17.8654	2022-02-28 17:19:17.865362	17e3b648-0459-4bba-8b80-ac53e84fe0b1	\N	1651
1593	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	2022-02-28 17:19:17.904245	2022-02-28 17:19:17.90308	b9bb111b-23e1-47ed-8a61-48f3bbc0f4d5	\N	1653
1596	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	2022-02-28 17:19:17.919117	2022-02-28 17:19:17.918977	9b2f9e5f-128a-4964-a454-bd04259e8f68	\N	1656
1599	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	2022-02-28 17:19:17.921912	2022-02-28 17:19:17.921899	46706f6b-6035-4f7e-9e86-2162c1dabf09	\N	1659
1600	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	2022-02-28 17:19:17.970629	2022-02-28 17:19:17.969431	80577fb0-0d25-4864-a45b-12b756f49dc5	\N	1660
1603	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	2022-02-28 17:19:17.976612	2022-02-28 17:19:17.975374	b5296c9d-8649-4776-b73a-daa493012591	\N	1663
1604	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	2022-02-28 17:19:17.985776	2022-02-28 17:19:17.985721	6b8a8506-616a-4db9-8693-a25c2d1c7459	\N	1664
1606	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	2022-02-28 17:19:17.988263	2022-02-28 17:19:17.988244	0d23c4ad-62ae-4b2e-bbcf-9689facd82d5	\N	1666
1607	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	2022-02-28 17:19:18.030326	2022-02-28 17:19:18.029166	876deeb4-c87e-4ee5-8d8a-28083958481c	\N	1667
1611	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	2022-02-28 17:19:18.044802	2022-02-28 17:19:18.044663	bdb3e00d-db1e-4634-a5d0-ae9f4f8b0dc3	\N	1671
1613	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	2022-02-28 17:19:18.087512	2022-02-28 17:19:18.08634	0d5c56db-25dd-4c7c-bd6a-2b08a164b963	\N	1673
1618	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	2022-02-28 17:19:18.10296	2022-02-28 17:19:18.102916	f7056772-6c5d-41e2-8565-103d93c0f575	\N	1678
1619	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	2022-02-28 17:19:18.106068	2022-02-28 17:19:18.105941	46133711-7617-49e1-b601-a337cdcf8bf8	\N	1679
1623	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	2022-02-28 17:19:18.158047	2022-02-28 17:19:18.156468	a555b8a1-acc0-4e86-8339-b4a90aecd681	\N	1683
1624	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	2022-02-28 17:19:18.165279	2022-02-28 17:19:18.165233	b501e5e6-dbf7-4cbf-9f41-c945a216cbd6	\N	1684
1627	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	2022-02-28 17:19:18.17126	2022-02-28 17:19:18.171225	c63c554b-3aee-4073-b433-b83cf8b02690	\N	1687
1628	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	2022-02-28 17:19:18.175614	2022-02-28 17:19:18.175577	f372d836-aa91-4ca9-95db-237e9d25d58f	\N	1688
1630	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	2022-02-28 17:19:18.179231	2022-02-28 17:19:18.179203	5aca01f0-2fe8-4454-a72a-21c37f88ddae	\N	1690
1631	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	2022-02-28 17:19:18.188538	2022-02-28 17:19:18.188495	38db8709-d307-4ee9-a115-d6069759ef09	\N	1691
1632	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	2022-02-28 17:19:18.193404	2022-02-28 17:19:18.19337	4084affa-25d3-4500-834e-a240e87603a5	\N	1692
1634	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	2022-02-28 17:19:18.197393	2022-02-28 17:19:18.197356	f0173439-49d0-49cb-80a3-f48cd4a61d7d	\N	1694
1635	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	2022-02-28 17:19:18.201645	2022-02-28 17:19:18.201607	e181afb1-00dd-4604-88c6-ff5988d30363	\N	1695
1636	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	2022-02-28 17:19:18.204728	2022-02-28 17:19:18.204693	6dbea64e-f202-45a7-ac0f-06fb4c9597d1	\N	1696
1637	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	2022-02-28 17:19:18.212394	2022-02-28 17:19:18.212182	b9713593-62d2-4479-9695-29b827c5a25b	\N	1697
1638	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	2022-02-28 17:19:18.248732	2022-02-28 17:19:18.247541	8e15cf4a-feb5-49f4-8507-f063fa37a8ec	\N	1698
1644	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	2022-02-28 17:19:18.300801	2022-02-28 17:19:18.299646	5837983a-dae7-4c76-a50c-50d072a50cdc	\N	1704
1647	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	2022-02-28 17:19:18.317293	2022-02-28 17:19:18.317204	fd0e9888-c1cf-4b3d-8a9a-1dea1a987113	\N	1707
1649	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	2022-02-28 17:19:18.320358	2022-02-28 17:19:18.320318	b39a038b-45fb-47a0-95e7-09d396a81ec0	\N	1709
1651	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	2022-02-28 17:19:18.328592	2022-02-28 17:19:18.328577	dbd364b8-a126-4208-9aef-ba38f7207ecd	\N	1711
1652	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	2022-02-28 17:19:18.332998	2022-02-28 17:19:18.332979	811dfe67-8c14-4f4e-8d06-cfa382049c73	\N	1712
1653	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	2022-02-28 17:19:18.335365	2022-02-28 17:19:18.335305	d16efa31-aa89-4e4c-8f81-b66114f0564f	\N	1713
1654	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	Independent	Independent	\N	\N	\N	2022-02-28 17:19:18.380974	2022-02-28 17:19:18.379763	b61f81a4-66d3-4101-b44e-61e539409c88	\N	1714
1656	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	2022-02-28 17:19:18.388579	2022-02-28 17:19:18.387395	5001b0bd-1ee0-4c41-a425-9f75f929d7f2	\N	1716
1658	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	2022-02-28 17:19:18.395607	2022-02-28 17:19:18.395568	7ee67454-86eb-4c22-8801-7b775a896433	\N	1718
1661	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	2022-02-28 17:19:18.434123	2022-02-28 17:19:18.432954	b2205f3a-8353-4086-86f9-f81cad7e7780	\N	1721
1663	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:18.450888	2022-02-28 17:19:18.450836	44e5727e-e151-43ba-be02-f7acfe24863c	\N	1723
1669	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	2022-02-28 17:19:18.469072	2022-02-28 17:19:18.468655	0da8e457-75cb-4a1a-8125-d44c93a7de2c	\N	1729
1671	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	2022-02-28 17:19:18.48444	2022-02-28 17:19:18.484379	acc3a3b1-5aac-4574-8514-024c6cdd9331	\N	1731
1673	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	2022-02-28 17:19:18.521773	2022-02-28 17:19:18.520564	f015160d-c790-4271-ae6d-88547924b001	\N	1732
1676	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	2022-02-28 17:19:18.536862	2022-02-28 17:19:18.536408	5e813f94-0c56-4f85-b790-c1b59ae1f5d5	\N	1736
1679	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:18.540752	2022-02-28 17:19:18.540698	0b01a4f8-b4e1-4265-8cc9-e80ba1d404fb	\N	1739
1681	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2022-02-28 17:19:18.590219	2022-02-28 17:19:18.588996	ea9f225a-11a1-461f-9fb9-2c99ecfd4c62	\N	1741
1684	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	2022-02-28 17:19:18.604418	2022-02-28 17:19:18.60438	3cb87189-b75f-42cf-9f67-13a1251aacc4	\N	1744
1629	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	2022-02-28 17:19:18.177825	2022-02-28 17:19:18.177796	551162d9-4ef9-4934-89ad-af2d4774bc3f	\N	1689
1639	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	2022-02-28 17:19:18.24874	2022-02-28 17:19:18.24756	b37807bb-3c72-436b-8a15-d425fc001951	\N	1699
1643	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	2022-02-28 17:19:18.300812	2022-02-28 17:19:18.299664	9689f3cc-3843-4766-8253-cefb2aec6482	\N	1703
1648	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	2022-02-28 17:19:18.318159	2022-02-28 17:19:18.318144	0b69e6dd-bfe2-4249-83ea-f68c29eb7f44	\N	1708
1660	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	2022-02-28 17:19:18.434128	2022-02-28 17:19:18.432971	0ccddd81-c728-4fbb-87ef-d015036376f4	\N	1720
1665	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	2022-02-28 17:19:18.453464	2022-02-28 17:19:18.453431	5c3f9237-0e8f-49a6-9402-b0b9da13744c	\N	1725
1668	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	2022-02-28 17:19:18.468357	2022-02-28 17:19:18.467904	5c983e43-05e7-469b-bc9d-aca5f5f16cde	\N	1728
1675	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2022-02-28 17:19:18.522421	2022-02-28 17:19:18.520571	4fbccc4e-4254-4fec-a124-236a2cde9468	\N	1735
1677	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	2022-02-28 17:19:18.537013	2022-02-28 17:19:18.536773	0b3e2ec7-397c-45a0-bfec-0f99831b6f7a	\N	1737
1682	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	2022-02-28 17:19:18.590231	2022-02-28 17:19:18.589013	3cf35629-1ee1-47e2-9e67-0e2faa2b865a	\N	1742
1688	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	2022-02-28 17:19:18.653119	2022-02-28 17:19:18.651754	8e635017-ced6-4f8c-96ed-40bcd5ebf349	\N	1748
1692	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	2022-02-28 17:19:18.666686	2022-02-28 17:19:18.666595	9548e29b-32e3-44c3-a2ce-20ea4dc2af82	\N	1752
1695	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	Special Programs	Special Programs	\N	\N	\N	2022-02-28 17:19:18.720986	2022-02-28 17:19:18.719824	81e68486-3acc-4eca-b43b-1f3f09ca6c9b	\N	1755
1701	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	Mentoring Programs	Mentoring Programs	\N	\N	\N	2022-02-28 17:19:18.739861	2022-02-28 17:19:18.739209	21682448-9957-4c89-be88-87ac32128b9e	\N	1761
1706	uri://ed-fi.org/OldEthnicityDescriptor	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	\N	\N	\N	2022-02-28 17:19:18.793736	2022-02-28 17:19:18.793702	5eeac019-cc35-425b-8dbb-72153f36282b	\N	1766
1709	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	2022-02-28 17:19:19.090645	2022-02-28 17:19:19.089499	26347a6e-f31f-4991-b638-4343edff28e9	\N	1769
1714	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2022-02-28 17:19:19.10476	2022-02-28 17:19:19.104727	57f9b550-1f70-4edd-bf41-ca0c06db32bc	\N	1774
1717	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	2022-02-28 17:19:19.267596	2022-02-28 17:19:19.266413	ee278a70-c41a-4f57-ab82-0c26c69311ee	\N	1777
1724	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-02-28 17:19:19.322703	2022-02-28 17:19:19.321516	644cf22f-ce87-4ef3-862a-28f65e73555b	\N	1784
1728	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	2022-02-28 17:19:19.379181	2022-02-28 17:19:19.377204	66d9f372-4998-4249-9596-9a93a14234b5	\N	1788
1730	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-02-28 17:19:19.4362	2022-02-28 17:19:19.43505	7635a0bd-c91e-4c1a-abfc-a82339083c73	\N	1790
1735	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-02-28 17:19:19.451542	2022-02-28 17:19:19.451499	1322dcb9-c31b-477a-b150-3396489ee7fb	\N	1795
1738	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-02-28 17:19:19.494584	2022-02-28 17:19:19.493433	2f17c9ef-4091-43cf-b1d6-bbdc73939bf4	\N	1798
1752	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	2022-02-28 17:19:19.576201	2022-02-28 17:19:19.574986	97be0068-e790-4ef4-8a68-f28b9669c012	\N	1812
1757	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	2022-02-28 17:19:19.590226	2022-02-28 17:19:19.590198	d60f3a91-b6d8-4938-b021-e41ec7698588	\N	1817
1766	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	2022-02-28 17:19:19.66587	2022-02-28 17:19:19.664649	9a87b6a3-64d3-4686-9a31-a7c327948020	\N	1826
1770	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	2022-02-28 17:19:19.677749	2022-02-28 17:19:19.677709	e08d7160-d758-48fb-9793-c8298f125683	\N	1830
1781	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	2022-02-28 17:19:20.003645	2022-02-28 17:19:20.002412	e176cfa2-537e-488f-9930-61038f088702	\N	1841
1784	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	2022-02-28 17:19:20.017279	2022-02-28 17:19:20.017214	06c6640b-7964-4f80-ad68-cab5ba5f972b	\N	1844
1795	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Master's College or University	Master's College or University	Generally includes institutions that awarded at least 50 master's degrees and fewer than 20 doctoral degrees during the update year (with occasional exceptions). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.08748	2022-02-28 17:19:20.085531	13a0fb7d-6062-485b-b565-a1c93656b8d4	\N	1855
1797	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Two-Year	Special Focus Institution/Two-Year	Two-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.10314	2022-02-28 17:19:20.102294	46023882-3aa9-4f7f-8f6f-96ea5c055727	\N	1857
1801	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	DEPRECATED: Four or more years	DEPRECATED: Four or more years	\N	\N	\N	2022-02-28 17:19:20.114641	2022-02-28 17:19:20.114575	e1694672-a379-4c4b-8a1a-8aeaafc46e24	\N	1861
1805	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Not Shared	Not Shared	The primary learning device is not shared with another individual.	\N	\N	\N	2022-02-28 17:19:20.16798	2022-02-28 17:19:20.166531	a1c173b7-9c47-4bdd-b721-7ac688cc735d	\N	1865
1815	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Personal	Personal	The provider of the primary learning device is the student or guardian.	\N	\N	\N	2022-02-28 17:19:20.244528	2022-02-28 17:19:20.243297	6f96c8b8-7518-4b64-95c2-31fe465d06e6	\N	1875
1820	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	2022-02-28 17:19:20.303309	2022-02-28 17:19:20.302093	8e863c20-422a-4ca4-a22a-2dad970a0bfd	\N	1880
1827	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	2022-02-28 17:19:20.373171	2022-02-28 17:19:20.37177	8ccea496-cf2d-4552-9149-0401212c11f6	\N	1887
1837	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	2022-02-28 17:19:20.643496	2022-02-28 17:19:20.642317	691eaf0b-3fac-4e8f-a961-89e89129b095	\N	1897
1843	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	2022-02-28 17:19:20.65903	2022-02-28 17:19:20.658971	9ad3f238-b564-4d35-8620-8b29b8dc47c5	\N	1903
1877	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:20.752782	2022-02-28 17:19:20.752455	05b7aa00-2e4e-496b-beea-6387b0a56cb5	\N	1937
1881	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	2022-02-28 17:19:20.764528	2022-02-28 17:19:20.764503	a92489b0-f82a-437d-8748-60affe53074b	\N	1941
1686	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	2022-02-28 17:19:18.610339	2022-02-28 17:19:18.610297	daf015d2-5a59-499a-88bd-b074ac3cf307	\N	1746
1687	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	2022-02-28 17:19:18.652965	2022-02-28 17:19:18.651746	4626444e-ad75-45ee-8365-fff0797a9466	\N	1747
1690	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	2022-02-28 17:19:18.658814	2022-02-28 17:19:18.657654	d6abdbf8-4ad9-411f-bb03-5d91b87cdbc1	\N	1750
1693	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	2022-02-28 17:19:18.667813	2022-02-28 17:19:18.667242	b6377978-3255-469b-969e-fd76b0a5a3c1	\N	1753
1697	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	Transition Programs	Transition Programs	\N	\N	\N	2022-02-28 17:19:18.720975	2022-02-28 17:19:18.719804	48e31d58-afcd-4622-8e12-aa96275b6ee4	\N	1757
1699	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-risk Indian Youth Programs	At-risk Indian Youth Programs	At-risk Indian Youth Programs	\N	\N	\N	2022-02-28 17:19:18.737744	2022-02-28 17:19:18.737512	5370f989-986e-4408-9487-9337765ae1b1	\N	1759
1705	uri://ed-fi.org/OldEthnicityDescriptor	Asian Or Pacific Islander	Asian Or Pacific Islander	Asian Or Pacific Islander	\N	\N	\N	2022-02-28 17:19:18.792835	2022-02-28 17:19:18.790884	a2b92713-3b79-4f14-bf57-5da8bfaef99a	\N	1765
1711	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	2022-02-28 17:19:19.090646	2022-02-28 17:19:19.089494	3ad46574-19b3-4539-8036-b8108d26229d	\N	1771
1716	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	2022-02-28 17:19:19.225262	2022-02-28 17:19:19.225184	afb19ec1-5c60-443c-865c-37eef79c445d	\N	1776
1718	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	2022-02-28 17:19:19.267595	2022-02-28 17:19:19.266397	42190d9a-1407-41cc-adbb-cffda7698747	\N	1778
1722	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	2022-02-28 17:19:19.322684	2022-02-28 17:19:19.3215	dc6ce6b4-297d-4dd0-89ca-6adbc318c037	\N	1782
1727	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	2022-02-28 17:19:19.378436	2022-02-28 17:19:19.377164	4ef9ef34-c842-4831-bbde-e14fbf384bba	\N	1787
1729	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	2022-02-28 17:19:19.398455	2022-02-28 17:19:19.398396	62299e4c-5845-435f-9f22-6bdcf3455404	\N	1789
1732	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-02-28 17:19:19.436401	2022-02-28 17:19:19.435039	24f7b4df-ec84-45d6-8591-1710480a6c2e	\N	1792
1734	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-02-28 17:19:19.451505	2022-02-28 17:19:19.451433	f00fd8af-bc8c-4235-81a6-b4c94ce23f11	\N	1794
1739	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-02-28 17:19:19.494583	2022-02-28 17:19:19.493431	0b4734ab-2355-48ed-b3b3-f11865b7074a	\N	1799
1741	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2022-02-28 17:19:19.504859	2022-02-28 17:19:19.504817	cbbba804-e078-4fb5-8e75-5a057faf2295	\N	1801
1742	uri://ed-fi.org/PerformanceLevelDescriptor	Did Not Meet Standard	Did Not Meet Standard	Did Not Meet Standard	\N	\N	\N	2022-02-28 17:19:19.508208	2022-02-28 17:19:19.508169	9149d261-ef68-4355-8bb5-a64b92f56e06	\N	1802
1743	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-02-28 17:19:19.512229	2022-02-28 17:19:19.512193	786718b3-7ff1-4cbe-bba9-eb711569aadd	\N	1803
1746	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	DEPRECATED: Above Benchmark	DEPRECATED: Above Benchmark	\N	\N	\N	2022-02-28 17:19:19.518302	2022-02-28 17:19:19.518264	b1f32871-3344-4017-aa2c-f0b1296c310b	\N	1806
1748	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	DEPRECATED: Minimum	DEPRECATED: Minimum	\N	\N	\N	2022-02-28 17:19:19.524453	2022-02-28 17:19:19.524439	04c7c469-dc79-4fe3-8862-cbf8dc803289	\N	1808
1749	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	DEPRECATED: Satisfactory	DEPRECATED: Satisfactory	\N	\N	\N	2022-02-28 17:19:19.529395	2022-02-28 17:19:19.529356	0dd7b6e4-3228-4882-9778-bd42b12d407f	\N	1809
1750	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	DEPRECATED: Unsatisfactory	DEPRECATED: Unsatisfactory	\N	\N	\N	2022-02-28 17:19:19.531887	2022-02-28 17:19:19.531852	1a6bf50b-a204-45c8-9091-a6c1c1be5f92	\N	1810
1754	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	2022-02-28 17:19:19.576206	2022-02-28 17:19:19.574979	2fef939c-4a3f-4dd0-871e-277b03147484	\N	1814
1755	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	2022-02-28 17:19:19.590071	2022-02-28 17:19:19.590012	2c23077d-e354-4b5b-9dc7-ebfb6dbcf3bc	\N	1815
1758	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:19.596424	2022-02-28 17:19:19.596381	a7f7e846-dde3-4985-93fe-59d10f9b1b8b	\N	1818
1759	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	2022-02-28 17:19:19.601201	2022-02-28 17:19:19.601164	d03368af-7902-40fb-9650-426e14bddc0d	\N	1819
1760	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	2022-02-28 17:19:19.605011	2022-02-28 17:19:19.604978	811d0179-9a34-4ef4-8fe1-68df754ce268	\N	1820
1762	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	2022-02-28 17:19:19.608388	2022-02-28 17:19:19.608367	5e3a5355-0893-4890-9dea-be82fa8b2c3d	\N	1822
1763	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	2022-02-28 17:19:19.610617	2022-02-28 17:19:19.610515	12610411-4f43-4a68-b302-cc8ac180f968	\N	1823
1764	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	2022-02-28 17:19:19.61376	2022-02-28 17:19:19.613725	fca33ace-9518-4cf6-867a-9d67266d410f	\N	1824
1765	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	2022-02-28 17:19:19.617953	2022-02-28 17:19:19.617916	6dbe45b7-52ea-43b8-93dd-290b9de013b2	\N	1825
1769	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	2022-02-28 17:19:19.675118	2022-02-28 17:19:19.673941	1b0dd1d5-8c6a-413a-ab15-fd1423d07abb	\N	1829
1771	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	2022-02-28 17:19:19.929483	2022-02-28 17:19:19.929438	f3026fc1-dcf7-489f-813e-e29b043e9ef1	\N	1831
1772	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	2022-02-28 17:19:19.932487	2022-02-28 17:19:19.932452	279fe19e-5b81-4a34-93c3-8ba00e8632ad	\N	1832
1774	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	2022-02-28 17:19:19.935692	2022-02-28 17:19:19.935672	54be5c65-32fe-4838-9159-097de3cf6fcd	\N	1834
1775	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	2022-02-28 17:19:19.93939	2022-02-28 17:19:19.939347	74bc3484-2e0e-43e5-87b2-c13f80355ece	\N	1835
1777	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	2022-02-28 17:19:19.944415	2022-02-28 17:19:19.944389	232fceca-5ddc-4cf6-9016-457180c822d4	\N	1837
1778	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	2022-02-28 17:19:19.948906	2022-02-28 17:19:19.948865	44831843-3692-46f8-9472-e0ba65c1cdee	\N	1838
1780	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	2022-02-28 17:19:20.001625	2022-02-28 17:19:20.000463	5d22b982-97f3-4a6c-8209-1d418dbb3728	\N	1840
1783	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	2022-02-28 17:19:20.017096	2022-02-28 17:19:20.017059	e857ab6e-57a9-4803-b325-8af609f0d6b1	\N	1843
1786	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	2022-02-28 17:19:20.020559	2022-02-28 17:19:20.020545	c7be2dd8-82d5-4261-b2ab-b07acbad0424	\N	1846
1787	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	2022-02-28 17:19:20.025238	2022-02-28 17:19:20.025193	36838efb-6073-4b11-867a-dd4abd6678b0	\N	1847
1726	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	2022-02-28 17:19:19.378416	2022-02-28 17:19:19.377172	53e516f6-94d2-4212-be4e-daeac5febdd7	\N	1786
1733	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-02-28 17:19:19.436209	2022-02-28 17:19:19.435067	4bfb2201-0146-4276-80ff-d1187ab2f0d1	\N	1793
1736	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-02-28 17:19:19.453185	2022-02-28 17:19:19.453172	40963920-82a1-4fe8-b7fd-101604890178	\N	1796
1737	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-02-28 17:19:19.494595	2022-02-28 17:19:19.493442	772e52e5-005d-46f1-b469-1731a9a26e3f	\N	1797
1744	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-02-28 17:19:19.512592	2022-02-28 17:19:19.512556	d2d904a6-28d7-4994-99f2-642a92edf8e9	\N	1804
1745	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	DEPRECATED: Commended Performance	DEPRECATED: Commended Performance	\N	\N	\N	2022-02-28 17:19:19.517575	2022-02-28 17:19:19.517537	acb38569-2e6e-422e-933f-01242c7b4a1c	\N	1805
1747	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	DEPRECATED: Proficient	DEPRECATED: Proficient	\N	\N	\N	2022-02-28 17:19:19.523323	2022-02-28 17:19:19.523127	172d959d-b830-4cfc-a165-724bcff85ed9	\N	1807
1751	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	2022-02-28 17:19:19.576209	2022-02-28 17:19:19.574994	4c274726-0fe9-4a69-8d30-d997f57671c8	\N	1811
1756	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	2022-02-28 17:19:19.590151	2022-02-28 17:19:19.590123	15423296-2aa4-402b-bdef-20e99a417fe3	\N	1816
1761	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	2022-02-28 17:19:19.605258	2022-02-28 17:19:19.605244	074ad000-4ff9-42ed-a01a-878617ecf3cb	\N	1821
1768	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	2022-02-28 17:19:19.675135	2022-02-28 17:19:19.673942	41777d4e-a734-4e68-b9f3-a017b4188ae9	\N	1828
1773	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2022-02-28 17:19:19.934054	2022-02-28 17:19:19.933795	c5fe41bb-5a0c-49b8-9d93-c8243eafc2da	\N	1833
1776	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	2022-02-28 17:19:19.943385	2022-02-28 17:19:19.943342	14d783ed-8bec-4f03-a712-2eabaea02059	\N	1836
1779	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	2022-02-28 17:19:20.001614	2022-02-28 17:19:20.000464	92822d02-5e78-4aea-88d0-16cf64ebcfcf	\N	1839
1785	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	2022-02-28 17:19:20.019547	2022-02-28 17:19:20.019513	34c30247-c7a5-4538-b1c0-1edd7610277a	\N	1845
1789	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	2022-02-28 17:19:20.041631	2022-02-28 17:19:20.041215	9ce3cd61-72ac-428e-b5a2-b68c6d615870	\N	1849
1791	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	2022-02-28 17:19:20.045796	2022-02-28 17:19:20.044834	65298b10-dde2-450d-bf19-7b7b4817d8d8	\N	1851
1793	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate College	Baccalaureate College	Includes institutions where baccalaureate or higher degrees represent at least 50 percent of all degrees but where fewer than 50 master's degrees or 20 doctoral degrees were awarded during the update year. (Some institutions above the master's degree threshold are also included.) Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.08667	2022-02-28 17:19:20.085512	c7810fe2-4f66-47d2-a28e-29baebe23a81	\N	1853
1796	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Tribal College	Tribal College	Colleges and universities that are members of the American Indian Higher Education Consortium, as identified in IPEDS Institutional Characteristics.	\N	\N	\N	2022-02-28 17:19:20.103113	2022-02-28 17:19:20.102213	d44d868b-3733-4704-a784-f0b8751f9810	\N	1856
1804	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Unknown	Unknown	It is not known whether the primary learning device is shared with another individual.	\N	\N	\N	2022-02-28 17:19:20.167857	2022-02-28 17:19:20.166459	6bd873db-2eca-41a0-82bb-d31395e1a33a	\N	1864
1808	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Chromebook	Chromebook	A Chromebook is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.180842	2022-02-28 17:19:20.180814	2c5425c3-fece-4981-b358-d7e336ee8ff8	\N	1868
1809	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Tablet	Tablet	A Tablet is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.184246	2022-02-28 17:19:20.184207	bd3bee30-cbce-4080-8dfa-8200944961ff	\N	1869
1812	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Other	Other	The type of device the student uses most often to complete learning activities away from school is not yet defined.	\N	\N	\N	2022-02-28 17:19:20.19175	2022-02-28 17:19:20.191678	fc32eb7b-7f21-4db3-9ab9-e86e80f87b69	\N	1872
1813	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Other	Other	The provider of the primary learning device is not yet defined.	\N	\N	\N	2022-02-28 17:19:20.244501	2022-02-28 17:19:20.243281	0aacb9b1-ccce-45a8-93ca-f9fe189c45ba	\N	1873
1821	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-02-28 17:19:20.303989	2022-02-28 17:19:20.302096	30b0335a-be4e-4184-a56f-d493e7e37141	\N	1881
1822	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	2022-02-28 17:19:20.320166	2022-02-28 17:19:20.320133	74cc0767-da2a-4deb-84a4-a2a16621f114	\N	1882
1825	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2022-02-28 17:19:20.372939	2022-02-28 17:19:20.371758	e0eaa383-6a15-485c-be98-982e03bcf843	\N	1885
1828	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	2022-02-28 17:19:20.378497	2022-02-28 17:19:20.378454	0730a691-23f8-496c-88d1-f1e4a3a819b7	\N	1888
1832	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:20.582556	2022-02-28 17:19:20.58248	6a8544d3-b559-4da7-a371-f31f798382f6	\N	1892
1840	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	2022-02-28 17:19:20.643496	2022-02-28 17:19:20.642307	2ddb56fa-72cc-4fdb-b137-dd019679407a	\N	1900
1846	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	2022-02-28 17:19:20.669257	2022-02-28 17:19:20.669218	1557b7f0-a1c1-430a-9828-aa378f9b7f66	\N	1906
1848	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2022-02-28 17:19:20.672843	2022-02-28 17:19:20.672825	fa056782-4e85-4a30-ba5b-829ed239a085	\N	1908
1850	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	2022-02-28 17:19:20.67853	2022-02-28 17:19:20.678511	51d5b583-12ba-4247-891e-f55da30d13f2	\N	1910
1852	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	2022-02-28 17:19:20.685322	2022-02-28 17:19:20.685291	ce12776a-94cf-4e0f-95db-7c14c3374c11	\N	1912
1854	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	2022-02-28 17:19:20.690251	2022-02-28 17:19:20.689812	02024868-b145-46a5-b48d-32d0f734e790	\N	1914
1860	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	2022-02-28 17:19:20.707072	2022-02-28 17:19:20.706947	ad44b290-89c7-4da3-ac32-ae7f9c9e3aa5	\N	1920
1862	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	2022-02-28 17:19:20.712548	2022-02-28 17:19:20.712505	10c09a25-ebce-4e02-84df-aa36e56932e2	\N	1922
1864	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	2022-02-28 17:19:20.717492	2022-02-28 17:19:20.71746	61e79151-db01-48e5-9968-a72cc3a1d184	\N	1924
1865	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	2022-02-28 17:19:20.722088	2022-02-28 17:19:20.721979	a9932f35-bd26-4dbd-aa03-33da01e0de49	\N	1925
1868	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:20.728481	2022-02-28 17:19:20.728443	14ae3be8-7c2a-435f-9f3f-b29f4182c0ea	\N	1928
1788	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	2022-02-28 17:19:20.036965	2022-02-28 17:19:20.036893	7c04718d-b819-4aac-8fba-81d854b55d93	\N	1848
1790	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	2022-02-28 17:19:20.04366	2022-02-28 17:19:20.041927	22f44f20-d76b-4886-a2e5-c51e0d257e23	\N	1850
1792	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Doctoral University	Doctoral University	Includes institutions that awarded at least 20 research/scholarship doctoral degrees during the update year and also institutions with below 20 research/scholarship doctoral degrees that awarded at least 30 professional practice doctoral degrees in at least 2 programs. Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.086669	2022-02-28 17:19:20.085502	7bd51d34-2ebc-433f-8093-eab70a0c5fba	\N	1852
1799	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Associate's College	Associate's College	Institutions at which the highest level degree awarded is an associate's degree. The institutions are sorted into nine categories based on the intersection of two factors: disciplinary focus (transfer, career and technical or mixed) and dominant student type (traditional, nontraditional or mixed). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-02-28 17:19:20.104854	2022-02-28 17:19:20.104596	caec10a7-3d98-4fd6-9731-5cba1752fc0a	\N	1859
1800	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	\N	\N	\N	2022-02-28 17:19:20.111809	2022-02-28 17:19:20.111767	a819cd5f-6e8e-45c1-b6df-68978598e847	\N	1860
1802	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	\N	\N	\N	2022-02-28 17:19:20.115961	2022-02-28 17:19:20.115767	8e2068b8-7d2f-49f7-832b-26830006393b	\N	1862
1803	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Shared	Shared	The primary learning device is shared with another individual.	\N	\N	\N	2022-02-28 17:19:20.167679	2022-02-28 17:19:20.16645	cecf5fe1-69b8-46a3-a7c6-73f0528b6405	\N	1863
1806	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Desktop Computer	Desktop Computer	A desktop computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.173579	2022-02-28 17:19:20.1724	864a3a0d-9235-4402-8514-731d7edaeb7c	\N	1866
1807	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Laptop Computer	Laptop Computer	A Laptop Computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.180371	2022-02-28 17:19:20.180188	219da080-9227-4f69-9e8a-afb6cdfccf14	\N	1867
1810	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Smartphone	Smartphone	A Smartphone is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.18524	2022-02-28 17:19:20.185196	eb3a6b9b-cec2-4916-9be7-ffcd53f32f3c	\N	1870
1811	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	None	None	There is not a device the student uses to complete learning activities away from school.	\N	\N	\N	2022-02-28 17:19:20.190082	2022-02-28 17:19:20.189996	e26953c9-1664-4cee-ae9f-f4f3ee2824d5	\N	1871
1814	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	School	School	The provider of the primary learning device is the school.	\N	\N	\N	2022-02-28 17:19:20.244457	2022-02-28 17:19:20.243278	7798a677-66f3-4bf1-85cb-d324e3c3ed87	\N	1874
1816	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-02-28 17:19:20.250024	2022-02-28 17:19:20.248695	cfafb46c-3337-4ae0-85f0-e4737fce4083	\N	1876
1817	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	2022-02-28 17:19:20.25936	2022-02-28 17:19:20.259338	00a9eb1d-e5c6-44a0-b904-0a8f19f04c3e	\N	1877
1819	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2022-02-28 17:19:20.303304	2022-02-28 17:19:20.302068	734580b6-98e2-4bf9-b8e4-4acf89356993	\N	1879
1823	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	2022-02-28 17:19:20.32093	2022-02-28 17:19:20.320879	233e51e1-8871-41f3-b65b-f1ebb12a9ce9	\N	1883
1824	uri://gbisd.edu/ProgramCharacteristicDescriptor	After School	After School	After School	\N	\N	\N	2022-02-28 17:19:20.364372	2022-02-28 17:19:20.363055	a582ba44-3168-4f2f-9116-e64839dfd093	\N	1884
1826	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	2022-02-28 17:19:20.373104	2022-02-28 17:19:20.371765	71979238-b19d-41be-b146-c3ee107accdf	\N	1886
1830	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	2022-02-28 17:19:20.577529	2022-02-28 17:19:20.577474	26815732-ddd3-4ca6-9f8a-0119a90aca41	\N	1890
1831	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	2022-02-28 17:19:20.582323	2022-02-28 17:19:20.582243	b74b3dc5-1a51-4b51-97ce-b10b3cf2be89	\N	1891
1833	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	2022-02-28 17:19:20.586217	2022-02-28 17:19:20.586183	ed3f01f1-f626-4354-9595-073833e5eaba	\N	1893
1834	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	2022-02-28 17:19:20.588669	2022-02-28 17:19:20.588651	43b7d722-da60-41b3-b0d8-45975eb907be	\N	1894
1835	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:20.592887	2022-02-28 17:19:20.592838	1a73621a-7548-47e5-b83b-5e51b7e3d220	\N	1895
1836	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2022-02-28 17:19:20.59521	2022-02-28 17:19:20.595169	34787db6-3a09-46db-b83e-134956100562	\N	1896
1838	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2022-02-28 17:19:20.643497	2022-02-28 17:19:20.642298	16b015a4-108c-4b65-a34a-a8c901f93381	\N	1898
1841	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	2022-02-28 17:19:20.655198	2022-02-28 17:19:20.655176	4f2a4a22-3f65-4398-a637-3231f167b5ae	\N	1901
1844	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	2022-02-28 17:19:20.659775	2022-02-28 17:19:20.659668	2d14d12a-b1f6-4bc8-9280-35e4d821f6d6	\N	1904
1845	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	2022-02-28 17:19:20.666823	2022-02-28 17:19:20.666783	0bb7e4ab-5b8f-4b46-8e18-11916b506256	\N	1905
1847	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	2022-02-28 17:19:20.672713	2022-02-28 17:19:20.672616	49847307-bfa7-4148-8e56-181dc48e917b	\N	1907
1849	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	2022-02-28 17:19:20.676269	2022-02-28 17:19:20.676094	6c84579f-5641-4d8b-ac25-10c0ab8344bd	\N	1909
1851	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	2022-02-28 17:19:20.683547	2022-02-28 17:19:20.683452	f7ce258a-9a1a-4135-884c-eda10e75aea1	\N	1911
1853	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	2022-02-28 17:19:20.687858	2022-02-28 17:19:20.6878	5e63f8e4-951b-4ef6-9b3e-b062a2d3cda7	\N	1913
1855	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	2022-02-28 17:19:20.692447	2022-02-28 17:19:20.692406	0edbbe5a-a85b-4ab5-973b-4c7a52105630	\N	1915
1856	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	2022-02-28 17:19:20.695331	2022-02-28 17:19:20.695297	cc79a0a3-a24e-4344-ae81-b4878f2d47c8	\N	1916
1857	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	2022-02-28 17:19:20.698334	2022-02-28 17:19:20.698278	ebb45d39-4e55-4e25-a487-f9beca7d83ee	\N	1917
1858	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2022-02-28 17:19:20.703058	2022-02-28 17:19:20.703014	b98f62e6-2a90-49f8-a48c-4f73f481b723	\N	1918
1859	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	2022-02-28 17:19:20.705983	2022-02-28 17:19:20.705871	1486539d-d29f-476f-827a-0e1b921241f4	\N	1919
1861	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	2022-02-28 17:19:20.710342	2022-02-28 17:19:20.710035	72b501e8-23f9-4f3e-9c5a-9277507753c9	\N	1921
1863	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2022-02-28 17:19:20.715563	2022-02-28 17:19:20.715525	809213db-89eb-4d33-aecd-b471d901e0cc	\N	1923
1866	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	2022-02-28 17:19:20.7236	2022-02-28 17:19:20.723555	f338841f-fe79-4d6a-84ce-4a54b5641d1f	\N	1926
1867	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	2022-02-28 17:19:20.727419	2022-02-28 17:19:20.727097	75b9e21f-178f-4018-af87-f3ab298eab68	\N	1927
1869	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	2022-02-28 17:19:20.733537	2022-02-28 17:19:20.733493	0abcbd0f-27b0-428e-9fc4-310b34a1edc5	\N	1929
1872	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	2022-02-28 17:19:20.739171	2022-02-28 17:19:20.739137	34360150-4d98-4ed5-a68b-d628fc0ae967	\N	1932
1874	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	2022-02-28 17:19:20.744731	2022-02-28 17:19:20.744505	21cbd06c-af4c-4e4a-8539-ebf9d18296a2	\N	1934
1875	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	2022-02-28 17:19:20.747293	2022-02-28 17:19:20.747206	37b52300-5838-4b0e-aaf7-75acd6fedf25	\N	1935
1876	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	2022-02-28 17:19:20.749993	2022-02-28 17:19:20.749955	99fe94db-5cda-4b89-bbaa-9c471f0b24ef	\N	1936
1878	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	2022-02-28 17:19:20.753961	2022-02-28 17:19:20.753947	874cf4eb-60e9-42b9-a860-f3d0e87ea2ee	\N	1938
1879	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	2022-02-28 17:19:20.757882	2022-02-28 17:19:20.757839	0b947b38-12be-4a61-919a-5807f44fd7b4	\N	1939
1880	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	2022-02-28 17:19:20.762243	2022-02-28 17:19:20.762206	2fb99f58-ff32-45c5-aeed-726dbc6b3e95	\N	1940
1883	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2022-02-28 17:19:20.767079	2022-02-28 17:19:20.766983	c5a51383-147a-4bdf-ab9f-8cc41d058129	\N	1943
1884	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	2022-02-28 17:19:20.775556	2022-02-28 17:19:20.775513	e0602e39-d436-4edc-8db7-a8e45027b920	\N	1944
1886	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	2022-02-28 17:19:20.780094	2022-02-28 17:19:20.78006	012de821-1fd7-413b-a2a2-cc55d65c9ddd	\N	1946
1888	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	2022-02-28 17:19:20.786737	2022-02-28 17:19:20.7867	a53ce61a-c419-47e5-a528-20bf56cf6d2b	\N	1948
1889	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	2022-02-28 17:19:20.790306	2022-02-28 17:19:20.790265	42b02ebe-673b-4e90-a91a-fc3884712c42	\N	1949
1892	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	2022-02-28 17:19:20.797596	2022-02-28 17:19:20.79751	e2d2dd3d-2d51-4365-9a4f-fea8a127dc60	\N	1952
1894	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	2022-02-28 17:19:20.801451	2022-02-28 17:19:20.801402	d1f993f2-ab31-4bd9-b5d7-f3aaf187453f	\N	1954
1895	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	2022-02-28 17:19:20.808052	2022-02-28 17:19:20.808015	40c22b3a-5251-4759-bf94-26170dc4b96e	\N	1955
1898	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	2022-02-28 17:19:20.859517	2022-02-28 17:19:20.858321	806d7e14-11a5-4e2d-9fef-45ac4c804dd4	\N	1958
1902	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	2022-02-28 17:19:20.873075	2022-02-28 17:19:20.872811	248a5ff2-1861-42b8-87fa-d4c4ecb72723	\N	1962
1903	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	2022-02-28 17:19:20.877006	2022-02-28 17:19:20.876915	88c0c676-1888-4f8a-a5bb-15fadc445946	\N	1963
1906	uri://ed-fi.org/ProviderCategoryDescriptor	Community care	Community care	Community care	\N	\N	\N	2022-02-28 17:19:20.924147	2022-02-28 17:19:20.922921	5b4802db-3c58-4e75-866a-8ec436692da6	\N	1966
1909	uri://ed-fi.org/ProviderCategoryDescriptor	Head Start and Early Head Start	Head Start and Early Head Start	Head Start and Early Head Start	\N	\N	\N	2022-02-28 17:19:20.936132	2022-02-28 17:19:20.93606	f8e77f74-568b-4509-a7e4-418c0adcdfad	\N	1969
1910	uri://ed-fi.org/ProviderCategoryDescriptor	On-premise child care	On-premise child care	On-premise child care	\N	\N	\N	2022-02-28 17:19:20.940882	2022-02-28 17:19:20.940842	b1ce2f1a-cbff-4164-ad05-732e737702e4	\N	1970
1912	uri://ed-fi.org/ProviderCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:20.946915	2022-02-28 17:19:20.946839	bb4dda5c-643c-4217-9e7f-39ccb95a493f	\N	1972
1914	uri://ed-fi.org/ProviderCategoryDescriptor	Resident camps	Resident camps	Resident camps	\N	\N	\N	2022-02-28 17:19:20.951393	2022-02-28 17:19:20.951353	eff3ae02-82c2-4944-ba11-4417c9875fea	\N	1974
1916	uri://ed-fi.org/ProviderCategoryDescriptor	School-based child care	School-based child care	School-based child care	\N	\N	\N	2022-02-28 17:19:20.957327	2022-02-28 17:19:20.957285	9bc91f8a-129c-41a3-ae9c-7e2102d6c116	\N	1976
1918	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	DEPRECATED: Center-EC	DEPRECATED: Center-EC	\N	\N	\N	2022-02-28 17:19:20.962217	2022-02-28 17:19:20.962173	ffd5ad5f-2239-4517-8347-48365eed7ae4	\N	1978
1920	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	DEPRECATED: Center-SA Only	DEPRECATED: Center-SA Only	\N	\N	\N	2022-02-28 17:19:20.9648	2022-02-28 17:19:20.964774	87c1dc03-0ceb-4ed3-a1ea-74f04190a9f6	\N	1980
1922	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	\N	\N	\N	2022-02-28 17:19:20.971385	2022-02-28 17:19:20.971343	14b05015-2a75-4cd3-b452-5a1e9e9cf0c1	\N	1982
1923	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	\N	\N	\N	2022-02-28 17:19:20.974418	2022-02-28 17:19:20.974376	a501306e-b1b9-4cf1-bb4a-777a4c55b3ae	\N	1983
1924	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	DEPRECATED: Not Applicable	DEPRECATED: Not Applicable	\N	\N	\N	2022-02-28 17:19:20.977975	2022-02-28 17:19:20.977958	09b37ce8-19ef-458b-830d-f167995df926	\N	1984
1926	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	2022-02-28 17:19:21.025132	2022-02-28 17:19:21.023812	4ef878da-ea2b-4b02-a7cf-ad0d3cc7858d	\N	1986
1928	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	2022-02-28 17:19:21.034121	2022-02-28 17:19:21.032813	bbe6647f-b3dc-43d9-81e6-ab9854a3d2ce	\N	1988
1929	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:21.040352	2022-02-28 17:19:21.040331	f3096cc7-28f7-4bfa-8da3-3dca6d24361c	\N	1989
1933	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	2022-02-28 17:19:21.290377	2022-02-28 17:19:21.290203	5fe9fd46-c346-4510-b571-11056b4f6ab8	\N	1993
1936	uri://ed-fi.org/QuestionFormDescriptor	Checkbox	Checkbox	Checkbox	\N	\N	\N	2022-02-28 17:19:21.342113	2022-02-28 17:19:21.340924	bd0325f8-344c-4fc0-91bd-3f338884beea	\N	1996
1940	uri://ed-fi.org/QuestionFormDescriptor	Matrix of dropdowns	Matrix of dropdowns	Matrix of dropdowns	\N	\N	\N	2022-02-28 17:19:21.358244	2022-02-28 17:19:21.358164	f7da7b03-9839-40e0-88a3-70803394dbd8	\N	2000
1944	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	2022-02-28 17:19:21.414954	2022-02-28 17:19:21.413808	cf7af375-dd86-4030-bb18-8d3bb12427e2	\N	2004
1950	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	2022-02-28 17:19:21.432676	2022-02-28 17:19:21.432652	9328a82b-1a3b-45ec-a527-efbfc1c270a3	\N	2010
1953	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	2022-02-28 17:19:21.475228	2022-02-28 17:19:21.474026	64f673e1-4c26-4bd0-a10a-304806f826bc	\N	2013
1870	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	2022-02-28 17:19:20.733904	2022-02-28 17:19:20.733883	b8f47d15-e16b-4b28-8626-209af3a8d97e	\N	1930
1871	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	2022-02-28 17:19:20.738482	2022-02-28 17:19:20.738438	eb0ef303-5ed4-46c8-a935-c709eb2a7780	\N	1931
1873	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	2022-02-28 17:19:20.743561	2022-02-28 17:19:20.743479	f2ee065a-ef60-4420-855c-b7d0bb42e41e	\N	1933
1882	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	2022-02-28 17:19:20.765763	2022-02-28 17:19:20.765566	f46da8cd-ac7a-4cd8-9c82-cb32f21c2c45	\N	1942
1885	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	2022-02-28 17:19:20.779368	2022-02-28 17:19:20.779316	00eda941-c1ba-4869-b327-563d669362e9	\N	1945
1887	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-02-28 17:19:20.785993	2022-02-28 17:19:20.785954	6bbff893-f60c-48d6-b9a1-af436a36794b	\N	1947
1890	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	2022-02-28 17:19:20.790509	2022-02-28 17:19:20.790468	2cfa2c57-8f7b-463a-bd6b-31c6e07d1718	\N	1950
1891	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	2022-02-28 17:19:20.797175	2022-02-28 17:19:20.797086	40621d5b-308f-4b8f-90be-695f5e4cf9aa	\N	1951
1896	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	2022-02-28 17:19:20.810444	2022-02-28 17:19:20.810422	8f8d6143-0c4c-4b02-a376-3bdd3a6859bb	\N	1956
1899	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	2022-02-28 17:19:20.859583	2022-02-28 17:19:20.858326	04d1cf36-39c6-4853-90cb-1a2486b9bea9	\N	1959
1901	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	2022-02-28 17:19:20.873162	2022-02-28 17:19:20.872946	81f99298-17c1-4672-a4ce-4382c329ae3c	\N	1961
1904	uri://ed-fi.org/ProviderCategoryDescriptor	Care in your own home	Care in your own home	Care in your own home	\N	\N	\N	2022-02-28 17:19:20.924147	2022-02-28 17:19:20.922929	9b28c1aa-bba6-4108-be0d-f0d15abbc0a6	\N	1965
1908	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home - large	Family child care home - large	Family child care home - large	\N	\N	\N	2022-02-28 17:19:20.936183	2022-02-28 17:19:20.936147	85839fb0-e811-42ba-984a-06b0639b4683	\N	1968
1911	uri://ed-fi.org/ProviderCategoryDescriptor	Ministry care	Ministry care	Ministry care	\N	\N	\N	2022-02-28 17:19:20.941232	2022-02-28 17:19:20.941201	10041991-c219-4d27-86ca-f0437a0b9767	\N	1971
1913	uri://ed-fi.org/ProviderCategoryDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	2022-02-28 17:19:20.947045	2022-02-28 17:19:20.94703	e2fb2163-f7a3-4bf3-b453-4e01599b8c08	\N	1973
1915	uri://ed-fi.org/ProviderCategoryDescriptor	Residential treatment care	Residential treatment care	Residential treatment care	\N	\N	\N	2022-02-28 17:19:20.952775	2022-02-28 17:19:20.952745	2e491b0c-31ea-4a13-a5fb-2315f9ab0b67	\N	1975
1917	uri://ed-fi.org/ProviderCategoryDescriptor	School-age child care	School-age child care	School-age child care	\N	\N	\N	2022-02-28 17:19:20.95766	2022-02-28 17:19:20.957622	76399432-177b-4362-aa79-288048a95d3c	\N	1977
1919	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	DEPRECATED: Center-EC with SA	DEPRECATED: Center-EC with SA	\N	\N	\N	2022-02-28 17:19:20.962848	2022-02-28 17:19:20.962811	7c843b0d-aa69-41d0-ad81-0d00394baf31	\N	1979
1921	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	\N	\N	\N	2022-02-28 17:19:20.966919	2022-02-28 17:19:20.966881	2edf2648-e0c8-46d4-aebc-1b43bbbaeaa8	\N	1981
1925	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	2022-02-28 17:19:21.025107	2022-02-28 17:19:21.023811	547cabe3-23f7-4d47-aca1-585d91060817	\N	1985
1930	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2022-02-28 17:19:21.041406	2022-02-28 17:19:21.041361	8d138bde-3803-4482-b040-1e9f2aa33043	\N	1990
1934	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	2022-02-28 17:19:21.292225	2022-02-28 17:19:21.292174	7fb3575e-f5c5-41c4-b7f4-08aad1337ab6	\N	1994
1937	uri://ed-fi.org/QuestionFormDescriptor	Dropdown	Dropdown	Dropdown	\N	\N	\N	2022-02-28 17:19:21.342098	2022-02-28 17:19:21.340898	5c1b7c70-8083-4c6d-b635-23df7806e731	\N	1997
1941	uri://ed-fi.org/QuestionFormDescriptor	Matrix of textboxes	Matrix of textboxes	Matrix of textboxes	\N	\N	\N	2022-02-28 17:19:21.358748	2022-02-28 17:19:21.358688	8bb2d28b-3f59-4d00-94c5-9acb37d52fd2	\N	2001
1945	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	2022-02-28 17:19:21.414944	2022-02-28 17:19:21.413787	fdf4acac-9023-41b2-90b7-b18dc6ae4093	\N	2005
1949	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	2022-02-28 17:19:21.431035	2022-02-28 17:19:21.430932	0315cbd9-14af-4b50-9dbb-9fc2c9380598	\N	2009
1952	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	2022-02-28 17:19:21.475243	2022-02-28 17:19:21.474032	cf1c6af9-682d-4abd-9867-17c4e19a1488	\N	2012
1956	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2022-02-28 17:19:21.488979	2022-02-28 17:19:21.488944	4d139d75-b198-41da-b45d-476d9b12e478	\N	2016
1957	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2022-02-28 17:19:21.493057	2022-02-28 17:19:21.493014	23505156-dce3-4ae1-bd2d-7643368f78ef	\N	2017
1961	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	2022-02-28 17:19:21.505335	2022-02-28 17:19:21.505238	3b81e3d8-91c9-42bc-8fa4-8dfa026849bc	\N	2021
1963	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	2022-02-28 17:19:21.553378	2022-02-28 17:19:21.5522	14bde266-8e03-4f76-ade7-bc38fd54ed82	\N	2023
1966	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	2022-02-28 17:19:21.56843	2022-02-28 17:19:21.568283	22e279c5-9357-4f0f-b8b1-404505d5b2a5	\N	2026
1972	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	2022-02-28 17:19:21.583762	2022-02-28 17:19:21.583683	58e0c643-1fdd-453e-9cac-21859d1b45db	\N	2032
1975	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	2022-02-28 17:19:21.593126	2022-02-28 17:19:21.593071	08953444-10dd-4fab-9f1f-cab676fc5378	\N	2035
1985	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:21.855016	2022-02-28 17:19:21.85499	7e1efe36-8a6d-42a9-9d65-779bfc4dd386	\N	2045
1989	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	2022-02-28 17:19:21.907487	2022-02-28 17:19:21.906261	3248464a-4767-4bbe-9d6a-3791b1cd96fb	\N	2049
1992	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	2022-02-28 17:19:21.923252	2022-02-28 17:19:21.923222	a6e0064b-73c3-41bc-80a7-35f99afc405e	\N	2052
1996	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	2022-02-28 17:19:21.933804	2022-02-28 17:19:21.933761	bd2eeec7-9de9-46c0-a47b-616929a5cbd9	\N	2056
1999	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	2022-02-28 17:19:21.940344	2022-02-28 17:19:21.940244	094a6d9f-eaf9-470c-803d-e65b6aa55225	\N	2059
2002	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	2022-02-28 17:19:21.952076	2022-02-28 17:19:21.952001	77f3933c-dc83-4184-a8e5-e6ac40c2ecb4	\N	2062
2003	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	2022-02-28 17:19:21.955407	2022-02-28 17:19:21.955392	be72052d-af3b-4fdb-86f7-29da7c832ac4	\N	2063
2008	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	2022-02-28 17:19:21.966748	2022-02-28 17:19:21.966734	e100a319-b02c-4c8e-accc-f36717cc1e3e	\N	2068
2009	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	2022-02-28 17:19:21.970197	2022-02-28 17:19:21.970124	68ac4fc5-13ac-4cb5-90d2-9c8fd7154fd6	\N	2069
2011	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	2022-02-28 17:19:21.975673	2022-02-28 17:19:21.975643	3c0b22b6-aead-48ff-9bd5-c7e4cd91b624	\N	2071
1893	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	2022-02-28 17:19:20.799037	2022-02-28 17:19:20.79879	4c590b9a-c811-42d0-8038-f2be6b1558b7	\N	1953
1897	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-02-28 17:19:20.859516	2022-02-28 17:19:20.858316	b2910679-8a89-4d36-92ea-6eff0b4b7e23	\N	1957
1907	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home	Family child care home	Family child care home	\N	\N	\N	2022-02-28 17:19:20.92415	2022-02-28 17:19:20.92294	2d779b20-1b55-4df2-8b51-abccd024437d	\N	1967
1927	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	2022-02-28 17:19:21.025114	2022-02-28 17:19:21.023806	36712413-6733-4627-8d26-be6978388f90	\N	1987
1931	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	2022-02-28 17:19:21.079479	2022-02-28 17:19:21.078211	4ba96d37-3148-4bfa-a513-dfab0cdf4a51	\N	1991
1935	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:21.293131	2022-02-28 17:19:21.293078	495185a8-e3e5-43bd-a58b-6f6c32a5391c	\N	1995
1938	uri://ed-fi.org/QuestionFormDescriptor	Radio box	Radio box	Radio box	\N	\N	\N	2022-02-28 17:19:21.342359	2022-02-28 17:19:21.341121	f66983b7-3506-4978-8926-6462ecd4658d	\N	1998
1943	uri://ed-fi.org/QuestionFormDescriptor	Textbox	Textbox	Textbox	\N	\N	\N	2022-02-28 17:19:21.360824	2022-02-28 17:19:21.360778	07a38fdb-a93e-4003-a21b-2545b70787f1	\N	2003
1946	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	2022-02-28 17:19:21.414951	2022-02-28 17:19:21.413809	be118ea4-c036-447a-ba6a-9495c971fdc0	\N	2006
1948	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:21.431035	2022-02-28 17:19:21.431005	25e771b3-60ca-44a2-9a8b-61daf988a1be	\N	2008
1951	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2022-02-28 17:19:21.475257	2022-02-28 17:19:21.474042	b3a8eb57-1e36-4149-9f6c-8db99227a756	\N	2011
1958	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	2022-02-28 17:19:21.493184	2022-02-28 17:19:21.493163	76f0a351-90f0-48f3-be75-78233792a0ec	\N	2018
1964	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	2022-02-28 17:19:21.553415	2022-02-28 17:19:21.552211	ecd5af37-d878-4ffe-830b-2a5827250a26	\N	2024
1968	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	2022-02-28 17:19:21.571669	2022-02-28 17:19:21.571623	35b2f8d1-8c85-4e54-8e76-e4d4214fb4c3	\N	2028
1971	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:21.582565	2022-02-28 17:19:21.582519	35f71808-c241-46b4-84f0-db177b3a3aea	\N	2031
1976	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	2022-02-28 17:19:21.640564	2022-02-28 17:19:21.639404	bbd7993c-2018-4871-8c27-64d8bebf0365	\N	2036
1981	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	2022-02-28 17:19:21.842392	2022-02-28 17:19:21.842343	ee282789-a6a7-4d09-88ae-67a5746faa41	\N	2041
1984	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	2022-02-28 17:19:21.853294	2022-02-28 17:19:21.853262	f9276d24-dbd5-4664-b262-8a02d342c899	\N	2044
1990	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	2022-02-28 17:19:21.907496	2022-02-28 17:19:21.906275	9d43cf76-32bf-4efb-b855-05177369278e	\N	2050
1994	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	2022-02-28 17:19:21.923346	2022-02-28 17:19:21.923303	ae8f57ca-ace5-40b5-a181-dfa3ecb9bbb4	\N	2054
1998	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	2022-02-28 17:19:21.938804	2022-02-28 17:19:21.938751	e7fafe59-aefd-47a0-9b69-c02ac648c3e2	\N	2058
2038	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	2022-02-28 17:19:22.085037	2022-02-28 17:19:22.083807	057fe292-299d-40dd-872c-e31cca5763f8	\N	2098
2043	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	2022-02-28 17:19:22.101041	2022-02-28 17:19:22.100968	291e8282-1734-42bf-a9e6-774e22ee4886	\N	2103
2045	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	2022-02-28 17:19:22.105133	2022-02-28 17:19:22.105098	d8ea2fad-2184-4257-a904-7100051b5b9f	\N	2105
2046	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	2022-02-28 17:19:22.158761	2022-02-28 17:19:22.157055	3bf7d2ca-81da-46fa-bb4b-ff2494c47616	\N	2106
2054	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	2022-02-28 17:19:22.224243	2022-02-28 17:19:22.222037	02edecb6-14c2-44b5-86bc-20f64766a334	\N	2114
2057	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	2022-02-28 17:19:22.283999	2022-02-28 17:19:22.282826	2a12b397-28d0-4c5c-8324-69be8ab5b17c	\N	2117
2062	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2022-02-28 17:19:22.3469	2022-02-28 17:19:22.345722	dbf2f5cb-824a-4fa0-863a-1af4bba70fdd	\N	2122
2065	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	2022-02-28 17:19:22.362736	2022-02-28 17:19:22.362687	c97aae5b-ba4f-45ed-97e0-3b7de24d4d4a	\N	2125
2070	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	2022-02-28 17:19:22.422244	2022-02-28 17:19:22.421039	7dddd96e-7842-4783-893a-6e66b53cf89e	\N	2130
2073	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	2022-02-28 17:19:22.438493	2022-02-28 17:19:22.438383	8702228c-ed26-4e12-bea6-35580dbe9070	\N	2133
2080	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	2022-02-28 17:19:22.509859	2022-02-28 17:19:22.508529	5c684955-585f-4be8-931c-9aa1acbb3603	\N	2140
2085	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	2022-02-28 17:19:22.573407	2022-02-28 17:19:22.571555	8aca5cca-8476-43c9-9136-6406779dc1b2	\N	2145
2098	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	2022-02-28 17:19:22.661282	2022-02-28 17:19:22.660019	79a07fc2-4bf6-465e-9b1a-aa40ecba4fcf	\N	2158
2103	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	2022-02-28 17:19:22.719707	2022-02-28 17:19:22.718484	5fa05cc4-3edb-46ed-8aae-486130e13258	\N	2163
2107	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	2022-02-28 17:19:22.733624	2022-02-28 17:19:22.733458	b229f954-184a-46a7-8658-e8baec7dd87e	\N	2167
2110	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	2022-02-28 17:19:22.744391	2022-02-28 17:19:22.744376	ae2dd1bf-5f1a-4cff-a3ae-7af4b9f640d4	\N	2170
2116	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	2022-02-28 17:19:22.804827	2022-02-28 17:19:22.80368	2bc28bf1-3da0-4d34-ae2a-ffee22a5b561	\N	2176
2127	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	2022-02-28 17:19:22.94235	2022-02-28 17:19:22.941127	7157a08b-4cb4-48f7-abeb-285ec9aee7da	\N	2186
2131	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.958131	2022-02-28 17:19:22.958023	b0f8a603-b2e4-4a15-842b-c08dfc613d08	\N	2191
2140	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	2022-02-28 17:19:23.029326	2022-02-28 17:19:23.026993	6e4377f0-17a2-41fe-8413-4d33d9939340	\N	2200
2143	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	2022-02-28 17:19:23.044659	2022-02-28 17:19:23.044621	f49cb37a-6c05-4f5d-8f28-3272aa9ab3be	\N	2203
2152	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	2022-02-28 17:19:23.11777	2022-02-28 17:19:23.116532	540552e6-a994-4756-8adb-1c692df40766	\N	2212
2156	uri://ed-fi.org/SourceSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-02-28 17:19:23.187398	2022-02-28 17:19:23.186192	5e30e452-68a0-46c0-8aa9-1415fd579780	\N	2216
2161	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	2022-02-28 17:19:23.251145	2022-02-28 17:19:23.249928	e37ca51b-24b0-430f-817f-b1713a8a2fee	\N	2221
2877	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	2022-02-28 17:19:27.384374	2022-02-28 17:19:27.384337	7117c100-9593-471c-9f83-5a906a325c8d	\N	2937
1942	uri://ed-fi.org/QuestionFormDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	2022-02-28 17:19:21.358838	2022-02-28 17:19:21.35877	6c23124e-7608-4789-a78f-2cc357a85ecf	\N	2002
1947	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	2022-02-28 17:19:21.415595	2022-02-28 17:19:21.413816	d14fc243-763b-4a88-a445-c5bce3fca984	\N	2007
1954	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	2022-02-28 17:19:21.475868	2022-02-28 17:19:21.474051	3bca38fe-030a-44b7-a223-9ad898f6e735	\N	2014
1965	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	2022-02-28 17:19:21.554424	2022-02-28 17:19:21.552224	5223128d-48af-42c8-a77b-1fe7a3cccfd7	\N	2025
1978	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2022-02-28 17:19:21.640542	2022-02-28 17:19:21.639391	a50a1367-de51-48a2-8a21-f751dea7224c	\N	2038
1980	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2022-02-28 17:19:21.841564	2022-02-28 17:19:21.841549	4c170a04-dd2a-45eb-a804-bbe93fc30f24	\N	2040
1991	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	2022-02-28 17:19:21.908083	2022-02-28 17:19:21.90629	b247fdee-8f99-4245-93c5-fa98bd12914f	\N	2051
2039	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	2022-02-28 17:19:22.085051	2022-02-28 17:19:22.083807	0a4dc016-979e-49c4-a995-ff401cfb7834	\N	2099
2049	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	2022-02-28 17:19:22.158904	2022-02-28 17:19:22.157074	59a7dc0d-62ad-4972-9ab6-522821b77bd1	\N	2109
2055	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	2022-02-28 17:19:22.225251	2022-02-28 17:19:22.222043	2b84776b-d6ce-4773-b9ad-960a222f8b03	\N	2115
2060	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	2022-02-28 17:19:22.284627	2022-02-28 17:19:22.282834	64f2c16d-00d4-476c-9de7-88faf0efc538	\N	2120
2064	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	2022-02-28 17:19:22.347044	2022-02-28 17:19:22.345729	93f05ed3-4b28-4d7c-9acf-d974f185e329	\N	2124
2071	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	2022-02-28 17:19:22.422917	2022-02-28 17:19:22.421061	4a242414-6943-4c99-a1c9-6b5038c2410f	\N	2131
2078	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	2022-02-28 17:19:22.509845	2022-02-28 17:19:22.508511	533b4c26-2b93-4aae-af21-bbeb8cf8a838	\N	2138
2082	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	Elementary/Secondary School	Elementary/Secondary School	\N	\N	\N	2022-02-28 17:19:22.572717	2022-02-28 17:19:22.571549	ac151576-9a76-4199-ad36-b5f4d9157234	\N	2142
2097	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	2022-02-28 17:19:22.661308	2022-02-28 17:19:22.660038	e1c61b58-5263-4f1a-b1ed-280ee24f018f	\N	2157
2104	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	2022-02-28 17:19:22.720301	2022-02-28 17:19:22.718486	0a36b917-15a0-4910-b101-72c37d8a902a	\N	2164
2119	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	2022-02-28 17:19:22.804956	2022-02-28 17:19:22.803697	fd02feda-7b50-4358-bedc-936f4b3d1d02	\N	2179
2129	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	2022-02-28 17:19:22.942987	2022-02-28 17:19:22.94113	2a67ccc0-aaed-4e92-aacd-e33b1321630d	\N	2189
2138	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	2022-02-28 17:19:23.028392	2022-02-28 17:19:23.027	5b2f3001-4ef9-49d2-b244-f0ea3a53f66f	\N	2198
2155	uri://ed-fi.org/SexDescriptor	Non-binary	Non-binary	Non-binary	\N	\N	\N	2022-02-28 17:19:23.118583	2022-02-28 17:19:23.116537	aeda1d88-264c-459e-8875-85a90e6197f8	\N	2215
2158	uri://ed-fi.org/SourceSystemDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:23.187604	2022-02-28 17:19:23.186202	682544d9-e114-4f9f-92de-38b64800d0d1	\N	2218
2162	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	2022-02-28 17:19:23.251153	2022-02-28 17:19:23.249939	a70d2dda-81d0-43d2-94fc-162f91258f2e	\N	2222
2175	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional Facilities	Correctional Facilities	Correctional Facilities	\N	\N	\N	2022-02-28 17:19:23.379133	2022-02-28 17:19:23.377849	346b85e7-44f5-410b-b1c2-4b8560903e3f	\N	2235
2183	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2022-02-28 17:19:23.456806	2022-02-28 17:19:23.455516	9234f2ac-4b7e-4c71-96b3-91305566112e	\N	2243
2219	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2022-02-28 17:19:23.604787	2022-02-28 17:19:23.603429	2ba24834-dc3d-4213-9c8e-fe978faa55ad	\N	2279
2234	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	2022-02-28 17:19:23.701504	2022-02-28 17:19:23.699629	5e22e328-6d01-49bb-9187-a8c44f525bc2	\N	2294
2252	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	2022-02-28 17:19:23.805219	2022-02-28 17:19:23.803911	6780ff08-ce0e-4234-82d0-b8ddbf654fe3	\N	2312
2304	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	2022-02-28 17:19:23.962986	2022-02-28 17:19:23.962934	29a36c6f-6d7b-4dcc-8b42-385bdbadb001	\N	2364
2313	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	2022-02-28 17:19:24.030172	2022-02-28 17:19:24.028958	7482e9d0-028a-495f-8af2-e6e5fb72488c	\N	2373
2321	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	2022-02-28 17:19:24.05941	2022-02-28 17:19:24.059325	7bb3e8c2-bb8f-4513-bac5-9ed1b6a23ef9	\N	2381
2326	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-02-28 17:19:24.127481	2022-02-28 17:19:24.126243	820e0e57-04bc-42bf-ae63-23a2e3335685	\N	2385
2340	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2022-02-28 17:19:24.213826	2022-02-28 17:19:24.21203	add5bb25-848b-4308-987b-01cc7393786a	\N	2400
2344	uri://ed-fi.org/SurveyCategoryDescriptor	District	District	District	\N	\N	\N	2022-02-28 17:19:24.279324	2022-02-28 17:19:24.278072	bdec6a15-1c6d-4851-a1af-7c5535f1850a	\N	2404
2353	uri://ed-fi.org/SurveyLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	2022-02-28 17:19:24.355682	2022-02-28 17:19:24.354336	c7d5ce5e-e7a8-42b1-9a18-304da53aeb20	\N	2413
2377	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	2022-02-28 17:19:24.464069	2022-02-28 17:19:24.46292	74cc09ae-7d22-472e-ba78-b28329506056	\N	2437
2394	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	2022-02-28 17:19:24.63521	2022-02-28 17:19:24.634921	e86bcc30-5133-4b55-b792-9d0c99bbf685	\N	2454
2405	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	2022-02-28 17:19:24.744609	2022-02-28 17:19:24.743311	eb10a53c-698a-4636-b63f-6ae79de358c0	\N	2465
2411	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	2022-02-28 17:19:24.816787	2022-02-28 17:19:24.815595	6f49fd0d-f38f-4ee2-a966-3db8a2f92f63	\N	2471
2416	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	2022-02-28 17:19:24.83101	2022-02-28 17:19:24.830953	60da931b-8fdf-4e4c-a1fd-557e8f13dbb3	\N	2476
2426	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	2022-02-28 17:19:24.902115	2022-02-28 17:19:24.900924	86ef6f19-1ddb-4be6-8e5d-57e5beb714e5	\N	2486
2433	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	2022-02-28 17:19:25.156584	2022-02-28 17:19:25.155383	f3889a7f-6720-4569-82da-065b4254c724	\N	2493
2442	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	2022-02-28 17:19:25.491143	2022-02-28 17:19:25.48975	e4c9ccbe-58e4-4517-8e55-82248fd4724f	\N	2502
1955	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:21.488903	2022-02-28 17:19:21.488865	714856fd-2331-49c9-8aa8-60514ca890fe	\N	2015
1959	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	2022-02-28 17:19:21.496715	2022-02-28 17:19:21.49662	7f55113e-9859-4342-856c-926fdd804d51	\N	2019
1960	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	2022-02-28 17:19:21.505265	2022-02-28 17:19:21.505172	ee6ddc4c-7c2d-46fb-bd79-20fb417f8b56	\N	2020
1962	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	2022-02-28 17:19:21.553377	2022-02-28 17:19:21.552193	808941d3-99a8-4cd7-a8b6-8fd1410321ea	\N	2022
1967	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	2022-02-28 17:19:21.569846	2022-02-28 17:19:21.569762	d872b3b8-3316-4fa3-b732-e21610ac44d8	\N	2027
1969	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	2022-02-28 17:19:21.573011	2022-02-28 17:19:21.572977	591a771a-1aab-4cce-94b7-a5231815d778	\N	2029
1970	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	2022-02-28 17:19:21.580564	2022-02-28 17:19:21.580194	9acf7cab-da8c-4c67-9f52-c041d8cc3ee1	\N	2030
1973	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	2022-02-28 17:19:21.585028	2022-02-28 17:19:21.585011	84e79a4a-2a09-466f-93e7-26ceaacdd3aa	\N	2033
1974	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	2022-02-28 17:19:21.591023	2022-02-28 17:19:21.590979	588d2c5b-0b7e-494a-a666-621f2606778a	\N	2034
1977	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2022-02-28 17:19:21.64057	2022-02-28 17:19:21.639401	ded2dc87-2f2b-46fe-9a6c-ae1576997289	\N	2037
1979	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2022-02-28 17:19:21.838835	2022-02-28 17:19:21.838755	63478691-cce2-4a3c-8b74-b3483bbeffda	\N	2039
1982	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2022-02-28 17:19:21.843414	2022-02-28 17:19:21.843366	8d565474-afcf-4078-b95c-9212ce2a2a7e	\N	2042
1983	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	2022-02-28 17:19:21.851456	2022-02-28 17:19:21.851366	59060cae-2ee4-456b-8d5a-a3f15c0cf12c	\N	2043
1986	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	2022-02-28 17:19:21.856094	2022-02-28 17:19:21.856016	b7d056ec-1a7c-4cd8-b700-bc45c27a337f	\N	2046
1987	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2022-02-28 17:19:21.863556	2022-02-28 17:19:21.863411	d999679a-55be-4f36-b0fa-be05303fd41a	\N	2047
1988	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	2022-02-28 17:19:21.907476	2022-02-28 17:19:21.906256	08993df5-dece-40ad-9f35-a00760839c52	\N	2048
1993	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	2022-02-28 17:19:21.923211	2022-02-28 17:19:21.923054	3f6de32b-3e4a-4e71-91db-ace664e7bca9	\N	2053
1995	uri://ed-fi.org/RelationDescriptor	Emergency	DEPRECATED: Emergency	DEPRECATED: Emergency	\N	\N	\N	2022-02-28 17:19:21.927602	2022-02-28 17:19:21.927549	4b02bab0-bb75-4385-81c3-915cca0f9641	\N	2055
1997	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	2022-02-28 17:19:21.934646	2022-02-28 17:19:21.934574	ebbefdef-02e5-47d4-b101-dccc425532eb	\N	2057
2000	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	2022-02-28 17:19:21.943126	2022-02-28 17:19:21.94309	60f0babc-3d0a-4405-949e-b2a9bf4121a2	\N	2060
2001	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	2022-02-28 17:19:21.948206	2022-02-28 17:19:21.948166	e02f35ca-bceb-4697-8cd9-d4f4fd5fc35c	\N	2061
2004	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	2022-02-28 17:19:21.955355	2022-02-28 17:19:21.955223	11a60111-afe2-41de-a9e8-879472e234a7	\N	2064
2005	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	2022-02-28 17:19:21.960751	2022-02-28 17:19:21.960707	09839981-0653-4fd2-a19b-7feb8d426549	\N	2065
2006	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	2022-02-28 17:19:21.963585	2022-02-28 17:19:21.963554	1e2708b5-5162-415b-8880-ee9f2f636241	\N	2066
2007	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	2022-02-28 17:19:21.966337	2022-02-28 17:19:21.966281	9e40d87a-5722-4fb1-8e61-d1281b7aabc5	\N	2067
2010	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	2022-02-28 17:19:21.971702	2022-02-28 17:19:21.971671	6c04a630-ed0a-4f77-a87a-00ccf26f109c	\N	2070
2012	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	2022-02-28 17:19:21.97715	2022-02-28 17:19:21.977115	a3e3f838-8dba-4949-92bf-f517cca34e20	\N	2072
2013	uri://ed-fi.org/RelationDescriptor	Guardian	DEPRECATED: Guardian	DEPRECATED: Guardian	\N	\N	\N	2022-02-28 17:19:21.979906	2022-02-28 17:19:21.979881	c494453a-68e2-4d89-82db-5d2f39cbc728	\N	2073
2014	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	2022-02-28 17:19:21.982636	2022-02-28 17:19:21.982605	41fb7110-9893-47a1-86e1-49724fc6da61	\N	2074
2015	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	2022-02-28 17:19:21.985472	2022-02-28 17:19:21.985458	0d2c2b2b-ae4a-4422-86a3-11602cbf962e	\N	2075
2017	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	2022-02-28 17:19:21.989057	2022-02-28 17:19:21.989023	d2d23181-4c55-4bfe-b8aa-105e33e1f1e5	\N	2077
2019	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	2022-02-28 17:19:21.993767	2022-02-28 17:19:21.993733	0ad67c9a-4b3a-4f6e-9bed-6979c5cc179e	\N	2079
2020	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	2022-02-28 17:19:21.996827	2022-02-28 17:19:21.996784	5f14d3ea-12dc-4063-9192-8436a597e872	\N	2080
2021	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	2022-02-28 17:19:22.000684	2022-02-28 17:19:22.000647	fc4b47a5-ab80-4e4d-bf64-53636875ed6e	\N	2081
2024	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	2022-02-28 17:19:22.005896	2022-02-28 17:19:22.005885	2646febc-bf4b-48ec-994f-ac57cd68f54e	\N	2084
2025	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	2022-02-28 17:19:22.009965	2022-02-28 17:19:22.009929	32bd69cd-cd4c-4ea2-8c5a-1a8fb3748174	\N	2085
2028	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	2022-02-28 17:19:22.015366	2022-02-28 17:19:22.015333	1b1b4337-126e-44b1-b455-84dd0154acf1	\N	2088
2029	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	2022-02-28 17:19:22.019295	2022-02-28 17:19:22.01928	87ff2726-be07-4930-be5d-1e6ce7adb106	\N	2089
2032	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	2022-02-28 17:19:22.02483	2022-02-28 17:19:22.024799	8ba9f143-1218-408c-8a47-5d9cb29b16ad	\N	2092
2034	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	2022-02-28 17:19:22.02985	2022-02-28 17:19:22.029812	062849c6-55f2-4725-80ad-5c82bf221fcf	\N	2094
2036	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	2022-02-28 17:19:22.034878	2022-02-28 17:19:22.034843	348b2c16-9810-4f87-85c5-f6b00f173295	\N	2096
2037	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	2022-02-28 17:19:22.037998	2022-02-28 17:19:22.037968	1ce6d74e-64a7-45eb-b91d-f72bcf1de012	\N	2097
2041	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	2022-02-28 17:19:22.085737	2022-02-28 17:19:22.083773	a9f75518-c995-48ae-89f4-17fb2ed4e546	\N	2101
2044	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	2022-02-28 17:19:22.10256	2022-02-28 17:19:22.102402	8bceb283-96bb-480b-a3eb-e847d084c170	\N	2104
2047	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	2022-02-28 17:19:22.15876	2022-02-28 17:19:22.157042	dbf99162-2c94-49e7-a1c9-8c39148a78c7	\N	2107
2050	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	2022-02-28 17:19:22.174048	2022-02-28 17:19:22.173549	103ea295-9821-4702-9467-d6f03a8e0f9d	\N	2110
2775	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2022-02-28 17:19:26.880261	2022-02-28 17:19:26.880228	b0855872-96ce-48ae-a580-a5f940f7cb1e	\N	2835
2016	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	2022-02-28 17:19:21.986593	2022-02-28 17:19:21.986558	90de7838-6d4e-4652-9d01-ecfbca244bdb	\N	2076
2018	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	2022-02-28 17:19:21.992136	2022-02-28 17:19:21.992103	b6f88f97-400b-4871-9181-c5dc1ce117c6	\N	2078
2022	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	2022-02-28 17:19:22.001218	2022-02-28 17:19:22.001183	bc35fb04-abd4-4798-8d91-0829135da377	\N	2082
2023	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.005242	2022-02-28 17:19:22.005182	03df2cfd-e698-4cc4-9f05-966916cc7e34	\N	2083
2026	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	2022-02-28 17:19:22.010254	2022-02-28 17:19:22.010237	8138b0a8-88ba-4e5b-86ef-7945336a6351	\N	2086
2027	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	2022-02-28 17:19:22.014668	2022-02-28 17:19:22.014621	abf4d629-6154-427a-b9cb-c538aabd3a56	\N	2087
2030	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	2022-02-28 17:19:22.020568	2022-02-28 17:19:22.020538	e86a9b7d-aa83-4fb2-adb5-08faf5e994cc	\N	2090
2031	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	2022-02-28 17:19:22.024186	2022-02-28 17:19:22.024144	8605736a-a0dd-40b6-9595-f339696b79b1	\N	2091
2033	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	2022-02-28 17:19:22.028055	2022-02-28 17:19:22.028022	b6045928-bc38-4483-91bc-42c953e4295e	\N	2093
2035	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:22.033939	2022-02-28 17:19:22.033876	f22f9213-9036-4a71-b48c-9d905a7c7044	\N	2095
2040	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.085052	2022-02-28 17:19:22.083792	56aac195-09e5-425b-a51d-721cf950ad9a	\N	2100
2042	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	2022-02-28 17:19:22.100902	2022-02-28 17:19:22.10081	4df4f442-20e4-4953-b226-8f1bfc96a12e	\N	2102
2048	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.158945	2022-02-28 17:19:22.157045	acc85c82-d680-4d4a-827e-9d64dff9a7c5	\N	2108
2051	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	2022-02-28 17:19:22.17407	2022-02-28 17:19:22.174001	3e6313bb-99d7-488c-90d3-77c5ff251791	\N	2111
2053	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	2022-02-28 17:19:22.223707	2022-02-28 17:19:22.222027	30225f35-2fe5-4683-bab1-0cd450e90e6b	\N	2113
2058	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	2022-02-28 17:19:22.283992	2022-02-28 17:19:22.282815	8820ae14-114b-4032-bc5c-534b84c22f9b	\N	2118
2063	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	2022-02-28 17:19:22.346891	2022-02-28 17:19:22.345709	6522afaa-687b-4da5-a728-5fb7a84c90a0	\N	2123
2066	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	2022-02-28 17:19:22.362723	2022-02-28 17:19:22.362622	8f2b427f-4233-4499-9606-129d9e4c3f82	\N	2126
2068	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	2022-02-28 17:19:22.366423	2022-02-28 17:19:22.366382	aa11b47a-9e51-4d28-844a-a7b9d8b535e3	\N	2128
2069	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	2022-02-28 17:19:22.422249	2022-02-28 17:19:22.421044	0f478295-3dfb-460b-a957-bc4cda37d63a	\N	2129
2075	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	2022-02-28 17:19:22.439382	2022-02-28 17:19:22.439235	634277b7-b6c2-45e2-b7da-c68113295acc	\N	2135
2081	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	2022-02-28 17:19:22.509989	2022-02-28 17:19:22.508551	498694bd-c0c0-4ee1-bee5-0311ff93242b	\N	2141
2084	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	2022-02-28 17:19:22.57271	2022-02-28 17:19:22.571538	1bf2f170-74f4-46cf-8ceb-ddbbfca1d4c8	\N	2144
2088	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	2022-02-28 17:19:22.58884	2022-02-28 17:19:22.588772	96649dca-6259-408c-97a9-8a6227a986a3	\N	2148
2093	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	2022-02-28 17:19:22.601389	2022-02-28 17:19:22.60135	8d055885-502b-4e32-a488-51ce13d7542e	\N	2153
2099	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	2022-02-28 17:19:22.661283	2022-02-28 17:19:22.660029	7336136d-e320-44be-b57b-d45570c70022	\N	2159
2102	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	2022-02-28 17:19:22.71969	2022-02-28 17:19:22.718464	445ba4d9-1a3b-407a-bfc5-f8017f8abe6b	\N	2162
2106	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	2022-02-28 17:19:22.733513	2022-02-28 17:19:22.733181	ebc97a1f-3965-4d64-aef7-f353360f1efc	\N	2166
2114	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	2022-02-28 17:19:22.752991	2022-02-28 17:19:22.752954	542cc6fe-7c94-42fc-971f-18d072c97193	\N	2174
2118	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-02-28 17:19:22.804829	2022-02-28 17:19:22.803674	9ba67095-e6e5-4ded-b4a4-5702c1384916	\N	2178
2120	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	2022-02-28 17:19:22.869234	2022-02-28 17:19:22.867871	ef4b194a-88ed-4676-af0f-fc53faa13aac	\N	2180
2122	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	2022-02-28 17:19:22.878322	2022-02-28 17:19:22.87651	66a4e0db-5776-4689-9011-ad0370256ec3	\N	2182
2124	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.884507	2022-02-28 17:19:22.884489	0bf39caf-50e0-4be6-9783-84d1071e1655	\N	2184
2126	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	2022-02-28 17:19:22.942349	2022-02-28 17:19:22.941114	d480e765-e90f-40de-9853-1ba988b3e24c	\N	2188
2130	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	2022-02-28 17:19:22.958064	2022-02-28 17:19:22.957953	f0e9ddc6-0c2a-4aad-917c-4601ffbe4d84	\N	2190
2133	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	2022-02-28 17:19:22.96128	2022-02-28 17:19:22.961238	463f1585-cafd-4fae-894c-690ccb5fbfa7	\N	2193
2135	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:22.967958	2022-02-28 17:19:22.967889	b42bc5a4-b7e9-4b33-9788-a03d4be637b0	\N	2195
2137	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	2022-02-28 17:19:23.028177	2022-02-28 17:19:23.026982	f0c9f776-f61d-4cae-be80-e1d1cfb47f54	\N	2197
2142	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	2022-02-28 17:19:23.041521	2022-02-28 17:19:23.041475	69867e7c-8827-4c43-b569-4af695ca41ad	\N	2202
2146	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	2022-02-28 17:19:23.05339	2022-02-28 17:19:23.053353	9df2350d-3045-4255-82e6-2fdee918a061	\N	2206
2148	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	2022-02-28 17:19:23.057199	2022-02-28 17:19:23.057097	f50ed7f8-e502-46cf-8e4d-d3d98d84de6d	\N	2208
2153	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	2022-02-28 17:19:23.117757	2022-02-28 17:19:23.116525	80d2dbec-2ab0-4a7a-af89-a304666b8159	\N	2213
2157	uri://ed-fi.org/SourceSystemDescriptor	State	State	State	\N	\N	\N	2022-02-28 17:19:23.187384	2022-02-28 17:19:23.186169	5956d2f7-939a-44d2-bf9f-fc564720ecf9	\N	2217
2163	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	2022-02-28 17:19:23.251277	2022-02-28 17:19:23.249944	bbcda57f-59b6-443a-94fa-13d26538733c	\N	2223
2165	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	2022-02-28 17:19:23.309796	2022-02-28 17:19:23.309461	afb550cd-f9d4-4ebf-a55d-0a31372c46a9	\N	2225
2169	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	2022-02-28 17:19:23.323246	2022-02-28 17:19:23.323153	9c8eda37-640a-4294-9a97-3d514be4a7d1	\N	2229
2150	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	2022-02-28 17:19:23.063772	2022-02-28 17:19:23.063739	92bef5f1-95fe-4d1e-b287-48d25ae478de	\N	2210
2052	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	2022-02-28 17:19:22.223228	2022-02-28 17:19:22.222017	d0fee065-8f37-4868-b033-aa8051ceef37	\N	2112
2056	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	2022-02-28 17:19:22.240384	2022-02-28 17:19:22.24034	858c6ca6-3132-4377-94c2-fad1859fa26d	\N	2116
2059	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	2022-02-28 17:19:22.283987	2022-02-28 17:19:22.282809	5bee9e73-72b3-43f1-ac65-b527f4ef7dd9	\N	2119
2061	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	2022-02-28 17:19:22.346891	2022-02-28 17:19:22.345704	3908ed29-86a3-4cab-bf84-777df48ed718	\N	2121
2067	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	2022-02-28 17:19:22.363669	2022-02-28 17:19:22.363619	25d1579f-1581-40cc-a1eb-71a65d1e4fe6	\N	2127
2072	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	2022-02-28 17:19:22.426309	2022-02-28 17:19:22.425097	7efea9bb-53c5-44c5-9d23-5ddea27b5a54	\N	2132
2074	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	2022-02-28 17:19:22.439273	2022-02-28 17:19:22.439102	4ed2a576-1663-4038-9c30-d8425e7806f6	\N	2134
2076	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2022-02-28 17:19:22.443282	2022-02-28 17:19:22.443243	fab731f3-29aa-4e73-a9e2-c6e35f470872	\N	2136
2077	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	2022-02-28 17:19:22.461466	2022-02-28 17:19:22.461328	96c73f0f-b927-4cbc-925f-2408e1da04fd	\N	2137
2079	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	2022-02-28 17:19:22.509852	2022-02-28 17:19:22.508525	ffbcf609-a939-4b77-b3cc-b9a42d4637b0	\N	2139
2083	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	2022-02-28 17:19:22.572707	2022-02-28 17:19:22.571531	f8054de4-8a59-4279-b6c4-98d26f8dd8f8	\N	2143
2086	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	2022-02-28 17:19:22.583773	2022-02-28 17:19:22.583728	bbba1032-6e0a-4f7c-a9e4-0f5e4b7ee9f6	\N	2146
2087	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	2022-02-28 17:19:22.587543	2022-02-28 17:19:22.587505	cef6bf8e-91fb-401c-a230-d845834db036	\N	2147
2089	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	2022-02-28 17:19:22.590913	2022-02-28 17:19:22.590897	facc91ec-ca72-4ee0-9ee8-d794f5394295	\N	2149
2090	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	2022-02-28 17:19:22.593761	2022-02-28 17:19:22.593722	87dbc35b-c10e-4fae-b6d7-83f21b586068	\N	2150
2091	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	2022-02-28 17:19:22.596425	2022-02-28 17:19:22.596408	24db3f3f-9e1c-4fcb-b097-a36280b21a85	\N	2151
2092	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	2022-02-28 17:19:22.59921	2022-02-28 17:19:22.599092	543eaf1e-e2ea-4875-9b49-4fe011f582b5	\N	2152
2094	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	2022-02-28 17:19:22.604304	2022-02-28 17:19:22.604279	182ecda0-b887-4055-8a7a-6f949816861c	\N	2154
2095	uri://ed-fi.org/SchoolCategoryDescriptor	SecondarySchool	SecondarySchool	SecondarySchool	\N	\N	\N	2022-02-28 17:19:22.607641	2022-02-28 17:19:22.607601	fdf7c50c-c3df-47cd-a671-d934f03afd9c	\N	2155
2096	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-02-28 17:19:22.610647	2022-02-28 17:19:22.610579	fe72c127-de57-4076-831b-7266e2376554	\N	2156
2100	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	2022-02-28 17:19:22.66128	2022-02-28 17:19:22.660015	efc554b8-4b5d-4bc0-a073-0f9490c4d120	\N	2160
2101	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	2022-02-28 17:19:22.719705	2022-02-28 17:19:22.718465	2ebd572a-4731-44d3-a7bc-fe6389e33546	\N	2161
2105	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	2022-02-28 17:19:22.733132	2022-02-28 17:19:22.733094	3ba2019d-a638-44e2-9d3d-0fb8dcbf6e31	\N	2165
2108	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	2022-02-28 17:19:22.736867	2022-02-28 17:19:22.73682	1848e430-95a6-49ec-94a1-6436d764cce3	\N	2168
2109	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	2022-02-28 17:19:22.742191	2022-02-28 17:19:22.741892	c18bfa35-4a92-466e-9bd0-2e1dcb2b340d	\N	2169
2111	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	2022-02-28 17:19:22.745251	2022-02-28 17:19:22.745219	8b16c9c9-5b5b-4150-b4b3-da0e7eb0f40d	\N	2171
2112	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	2022-02-28 17:19:22.748366	2022-02-28 17:19:22.748331	d031f60d-faaa-48ff-b37f-32a3ef5af072	\N	2172
2113	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	2022-02-28 17:19:22.752666	2022-02-28 17:19:22.75263	fec295d0-c68f-4b93-bcf6-c3be8149ffdf	\N	2173
2115	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:22.756368	2022-02-28 17:19:22.756337	88be666a-4297-4bb9-84f8-4bf24d20e932	\N	2175
2117	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-02-28 17:19:22.80483	2022-02-28 17:19:22.80369	6315fb1e-fa1b-47c9-bd6f-9696a7eaeb9a	\N	2177
2121	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	2022-02-28 17:19:22.869467	2022-02-28 17:19:22.86787	254c8097-fae2-4b8d-b118-9a68b932c94e	\N	2181
2123	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	2022-02-28 17:19:22.878296	2022-02-28 17:19:22.876519	671bd2a4-578c-4f3a-ad37-7ee68de27339	\N	2183
2125	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	2022-02-28 17:19:22.885609	2022-02-28 17:19:22.885565	c50a4fba-d081-412a-9325-dbe023528fbe	\N	2185
2128	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	2022-02-28 17:19:22.942349	2022-02-28 17:19:22.941096	1c664c2b-15d6-4c1a-a00a-74e8ceab7450	\N	2187
2132	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	2022-02-28 17:19:22.959159	2022-02-28 17:19:22.959107	fe37d9e1-1798-4345-a4f5-442ec37dd692	\N	2192
2134	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	2022-02-28 17:19:22.967422	2022-02-28 17:19:22.96738	88498916-92c7-4343-ae99-5793c04534a1	\N	2194
2136	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	2022-02-28 17:19:22.972252	2022-02-28 17:19:22.972186	cca7cf52-310e-403b-ab73-012c28128ca1	\N	2196
2139	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	2022-02-28 17:19:23.028684	2022-02-28 17:19:23.02697	20905e73-0fd7-4e9a-93a0-a6cecb41e86b	\N	2199
2141	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	2022-02-28 17:19:23.041406	2022-02-28 17:19:23.041344	9e038d9c-83c7-4823-a270-d80e301d9753	\N	2201
2144	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	2022-02-28 17:19:23.045933	2022-02-28 17:19:23.045899	82b2aa9a-5af0-44d4-9124-07cc9f58a806	\N	2204
2145	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	2022-02-28 17:19:23.051426	2022-02-28 17:19:23.051387	2a15cb2c-5d84-43cb-8101-bba8264bab43	\N	2205
2147	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	2022-02-28 17:19:23.05697	2022-02-28 17:19:23.056928	3c317f42-2cc6-4a7b-8e0b-4830bbe18ebe	\N	2207
2149	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	2022-02-28 17:19:23.06038	2022-02-28 17:19:23.060339	f98bc5ac-82c8-4e68-b7e3-61b2d6890d99	\N	2209
2151	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	2022-02-28 17:19:23.069242	2022-02-28 17:19:23.069198	ace34b15-0e69-4f40-a090-835905903d7d	\N	2211
2154	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	2022-02-28 17:19:23.117756	2022-02-28 17:19:23.116509	e20e1b13-c969-4688-8998-2260c056b46e	\N	2214
2159	uri://ed-fi.org/SourceSystemDescriptor	District	District	District	\N	\N	\N	2022-02-28 17:19:23.187384	2022-02-28 17:19:23.186177	022e2124-1960-49f7-88bd-1a71a31bf863	\N	2219
2160	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	2022-02-28 17:19:23.25115	2022-02-28 17:19:23.249923	356466cd-747e-47e4-9d88-99ed5565ab05	\N	2220
2164	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	2022-02-28 17:19:23.308113	2022-02-28 17:19:23.307955	5d192b45-0a98-4e56-b2f2-fa805ea7149e	\N	2224
2167	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	2022-02-28 17:19:23.312413	2022-02-28 17:19:23.312343	296e0dc5-30cc-41a6-ac98-1c6b93ba0b01	\N	2227
2168	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	2022-02-28 17:19:23.318906	2022-02-28 17:19:23.318856	4dea7bb7-0977-4a86-99c9-c59992cc53c9	\N	2228
2170	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	2022-02-28 17:19:23.323808	2022-02-28 17:19:23.323594	14a70a4e-3af8-4ba2-8af0-7b1e1007c8b2	\N	2230
2174	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	2022-02-28 17:19:23.378986	2022-02-28 17:19:23.377825	e0535832-dcc0-4626-b831-3844331d97fd	\N	2234
2177	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	Inside reg class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	2022-02-28 17:19:23.392407	2022-02-28 17:19:23.392364	b2ddc776-82a5-4f8e-9e28-7d8e2f3bcf6e	\N	2237
2178	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in Private Schools	Parentally-placed in Private Schools	Parentally-placed in Private Schools	\N	\N	\N	2022-02-28 17:19:23.396245	2022-02-28 17:19:23.396226	90ce0bb7-29c4-497f-8053-4266fbdddcd0	\N	2238
2179	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate School	Separate School	Separate School	\N	\N	\N	2022-02-28 17:19:23.400316	2022-02-28 17:19:23.400267	c79569cb-7de5-4125-9151-c234dc542168	\N	2239
2182	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	2022-02-28 17:19:23.456657	2022-02-28 17:19:23.45548	8f440474-d108-48cc-88f4-8b494b1ab096	\N	2242
2186	uri://ed-fi.org/StaffClassificationDescriptor	Elementary School Counselors	Elementary School Counselors	Elementary School Counselors	\N	\N	\N	2022-02-28 17:19:23.472335	2022-02-28 17:19:23.472305	367f59f9-1cae-4db8-9454-3b72ae1f9fad	\N	2246
2187	uri://ed-fi.org/StaffClassificationDescriptor	Instr Coordinators and Supervisors to the Staff	Instructional Coordinators and Supervisors to the Staff	Instructional Coordinators and Supervisors to the Staff	\N	\N	\N	2022-02-28 17:19:23.47549	2022-02-28 17:19:23.475448	5e8e8139-4754-4950-ad2a-14115b772f8a	\N	2247
2188	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	Instructional Coordinator	Instructional Coordinator	\N	\N	\N	2022-02-28 17:19:23.481366	2022-02-28 17:19:23.481189	8c27976d-abc8-4ee9-9f6c-b1c3671d5886	\N	2248
2191	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrative Support Staff	LEA Administrative Support Staff	LEA Administrative Support Staff	\N	\N	\N	2022-02-28 17:19:23.486101	2022-02-28 17:19:23.486086	781dbd48-ce44-489a-82fb-6434f6fb022d	\N	2251
2193	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	LEA System Administrator	LEA System Administrator	\N	\N	\N	2022-02-28 17:19:23.492464	2022-02-28 17:19:23.492431	30dd6370-2722-478d-8245-194b095d5407	\N	2253
2194	uri://ed-fi.org/StaffClassificationDescriptor	Librarians/Media Specialists	Librarians/Media Specialists	Librarians/Media Specialists	\N	\N	\N	2022-02-28 17:19:23.497122	2022-02-28 17:19:23.497042	c81ccc11-44eb-46bc-bbfa-9ff7eee6cec9	\N	2254
2197	uri://ed-fi.org/StaffClassificationDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:23.503236	2022-02-28 17:19:23.503196	b0a283e4-9e31-4070-b6db-be6d0add4694	\N	2257
2199	uri://ed-fi.org/StaffClassificationDescriptor	Pre-Kindergarten Teachers	Pre-Kindergarten Teachers	Pre-Kindergarten Teachers	\N	\N	\N	2022-02-28 17:19:23.508035	2022-02-28 17:19:23.508006	daf90a91-17fd-4ad5-b7d1-be073b432923	\N	2259
2201	uri://ed-fi.org/StaffClassificationDescriptor	School Administrative Support Staff	School Administrative Support Staff	School Administrative Support Staff	\N	\N	\N	2022-02-28 17:19:23.513044	2022-02-28 17:19:23.513007	d5886557-86d0-4e90-badd-d3ae32e10159	\N	2261
2202	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	2022-02-28 17:19:23.516966	2022-02-28 17:19:23.516908	c9c0decf-40d7-4f37-87e5-55d18f12f407	\N	2262
2204	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	School Leader	School Leader	\N	\N	\N	2022-02-28 17:19:23.520357	2022-02-28 17:19:23.520317	c9fa9fb9-d755-437b-89c8-124c271c2e99	\N	2264
2205	uri://ed-fi.org/StaffClassificationDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	2022-02-28 17:19:23.523917	2022-02-28 17:19:23.523877	06a33280-5553-4386-be5e-3578f6497d6d	\N	2265
2206	uri://ed-fi.org/StaffClassificationDescriptor	Secondary School Counselors	Secondary School Counselors	Secondary School Counselors	\N	\N	\N	2022-02-28 17:19:23.527295	2022-02-28 17:19:23.527159	28bb09e4-f386-4e47-ba5d-6efc3943d664	\N	2266
2209	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	State Administrator	State Administrator	\N	\N	\N	2022-02-28 17:19:23.532363	2022-02-28 17:19:23.532331	7388e76a-5c80-426f-807d-80a3aee6cd43	\N	2269
2210	uri://ed-fi.org/StaffClassificationDescriptor	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	\N	\N	\N	2022-02-28 17:19:23.536134	2022-02-28 17:19:23.536095	a966512e-3ad2-431e-9a1a-3a8d920e4982	\N	2270
2212	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	2022-02-28 17:19:23.540582	2022-02-28 17:19:23.540555	292dc6d5-e92c-45c9-9416-f77764b03184	\N	2272
2213	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	Support Services Staff	Support Services Staff	\N	\N	\N	2022-02-28 17:19:23.543002	2022-02-28 17:19:23.542967	e0ed12e8-8582-4659-b88f-ea53e2ad37d8	\N	2273
2214	uri://ed-fi.org/StaffClassificationDescriptor	Ungraded Teachers	Ungraded Teachers	Ungraded Teachers	\N	\N	\N	2022-02-28 17:19:23.54617	2022-02-28 17:19:23.546137	65c52420-5d7d-4b8e-91c5-d0d6d563b4af	\N	2274
2216	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2022-02-28 17:19:23.604628	2022-02-28 17:19:23.603393	83bf32ad-e50d-4dca-9e9a-67c2a804be7c	\N	2276
2220	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:23.620219	2022-02-28 17:19:23.620177	15a5722a-5ca0-4ad7-8044-885bf5137abe	\N	2280
2222	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-02-28 17:19:23.623743	2022-02-28 17:19:23.623692	88037f33-0d7c-4cb5-9660-77f4b8fa5873	\N	2282
2224	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	2022-02-28 17:19:23.629438	2022-02-28 17:19:23.62942	ce445ca7-5b92-4a59-b422-4026c82b37a8	\N	2284
2226	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:23.634202	2022-02-28 17:19:23.634185	0c09e9a5-2381-4a91-be0b-ad406e02a5bf	\N	2286
2227	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	2022-02-28 17:19:23.637165	2022-02-28 17:19:23.637119	775d3e1d-ff9c-40a2-8d1a-4bad28e04f49	\N	2287
2228	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2022-02-28 17:19:23.643019	2022-02-28 17:19:23.642964	e5ea9e84-cb67-4677-8b37-6090eb366f8f	\N	2288
2230	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	2022-02-28 17:19:23.648031	2022-02-28 17:19:23.647989	be16f045-ee93-4b0a-917e-f6c99ede2310	\N	2290
2166	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	2022-02-28 17:19:23.311747	2022-02-28 17:19:23.311626	5f5ecae9-c96e-4cc0-8d78-e492d9843882	\N	2226
2171	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	2022-02-28 17:19:23.324478	2022-02-28 17:19:23.323931	5a0ff619-4a6c-4d75-bdd5-5588ff70e63c	\N	2231
2173	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	2022-02-28 17:19:23.378992	2022-02-28 17:19:23.377843	a2410645-de80-4e4a-9cbb-aed64d427fe8	\N	2232
2181	uri://ed-fi.org/StaffClassificationDescriptor	All Other Support Staff	All Other Support Staff	All Other Support Staff	\N	\N	\N	2022-02-28 17:19:23.45667	2022-02-28 17:19:23.455492	981e1a6a-e763-49ef-ba6c-585d0b2388da	\N	2241
2185	uri://ed-fi.org/StaffClassificationDescriptor	Elementary Teachers	Elementary Teachers	Elementary Teachers	\N	\N	\N	2022-02-28 17:19:23.470675	2022-02-28 17:19:23.470612	8e78a622-aece-4378-8d5f-5551e6b18b31	\N	2245
2217	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-02-28 17:19:23.604655	2022-02-28 17:19:23.603411	0a15f46b-2eaa-44cd-a1df-b32cb01bbb9e	\N	2277
2232	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2022-02-28 17:19:23.700849	2022-02-28 17:19:23.699585	5cdaceae-19c7-4c46-869d-c3003e0eb7a7	\N	2292
2237	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2022-02-28 17:19:23.718039	2022-02-28 17:19:23.71799	062df9a3-0f4a-4750-93e0-5ed6c51591b0	\N	2297
2245	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2022-02-28 17:19:23.742257	2022-02-28 17:19:23.742218	d4c00982-0ca3-4caa-b425-77a70fc61cb1	\N	2305
2250	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	2022-02-28 17:19:23.805076	2022-02-28 17:19:23.803897	6f189d3d-1604-41fb-8670-3e8a73a290e4	\N	2310
2254	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	2022-02-28 17:19:23.82094	2022-02-28 17:19:23.820851	7d9c4166-7a4f-4bab-b36c-5c58fe6e91a5	\N	2314
2287	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	2022-02-28 17:19:23.908963	2022-02-28 17:19:23.908933	0b551ca4-5185-400d-8599-6e303f9f7187	\N	2347
2300	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	2022-02-28 17:19:23.950639	2022-02-28 17:19:23.950606	361cf6ef-2142-49b2-b1d6-997e14d4340f	\N	2360
2303	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	2022-02-28 17:19:23.96169	2022-02-28 17:19:23.961647	c1895ece-1b9a-4abd-ab45-cd905a11eb12	\N	2363
2308	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	2022-02-28 17:19:23.973195	2022-02-28 17:19:23.97311	d9f4f123-c697-4fb6-9481-b41ccd7057af	\N	2368
2312	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	2022-02-28 17:19:24.030183	2022-02-28 17:19:24.028987	ffc1c26f-d63f-449d-8b9f-ec49f72800f2	\N	2372
2318	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	2022-02-28 17:19:24.048448	2022-02-28 17:19:24.048411	e4d1658f-b6bb-4524-84ea-ed5716d792a0	\N	2378
2320	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	2022-02-28 17:19:24.058358	2022-02-28 17:19:24.057939	77affaa9-d6ce-44de-ba08-5236b74f5a85	\N	2380
2328	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	2022-02-28 17:19:24.12746	2022-02-28 17:19:24.126221	9ff3e944-ee25-4780-9602-b062306f179a	\N	2388
2330	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	2022-02-28 17:19:24.142844	2022-02-28 17:19:24.142745	93cbe58a-09fe-441f-853a-aadfd012ef10	\N	2390
2332	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-02-28 17:19:24.147346	2022-02-28 17:19:24.147331	81e204e5-f198-4e87-afa2-e90938702d5d	\N	2392
2336	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	2022-02-28 17:19:24.162263	2022-02-28 17:19:24.162216	0b30bf6d-75c5-4d5c-b3fa-71cf6a16b5d8	\N	2396
2337	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2022-02-28 17:19:24.213271	2022-02-28 17:19:24.212039	cb0c3580-c5cf-49c2-a28d-1693bea682a8	\N	2397
2342	uri://ed-fi.org/SurveyCategoryDescriptor	Administrator	Administrator	Administrator	\N	\N	\N	2022-02-28 17:19:24.279209	2022-02-28 17:19:24.278066	c654fdcc-599d-47c8-b53d-8270dffa215c	\N	2402
2352	uri://ed-fi.org/SurveyLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	2022-02-28 17:19:24.355492	2022-02-28 17:19:24.354315	3999f367-f2e9-4f5c-ab04-0476bb543443	\N	2412
2378	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	2022-02-28 17:19:24.464069	2022-02-28 17:19:24.462914	392191e9-9785-4ecd-803f-6bd3eaf48f8d	\N	2438
2382	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	2022-02-28 17:19:24.478645	2022-02-28 17:19:24.478601	95321afb-ee34-48d4-acb6-97a52610e67e	\N	2442
2387	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	2022-02-28 17:19:24.607835	2022-02-28 17:19:24.606463	ecaf1bc1-bd0e-47b9-8503-5a3219738488	\N	2447
2388	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	2022-02-28 17:19:24.620679	2022-02-28 17:19:24.619654	8d2931e1-f01f-47dc-be11-ade464a2349b	\N	2448
2391	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.623613	2022-02-28 17:19:24.623567	5f9e3dbd-663d-4397-9915-34fc76d867de	\N	2451
2392	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	2022-02-28 17:19:24.631971	2022-02-28 17:19:24.631887	c8b02b88-8cdb-4521-8580-b44fcc45c895	\N	2452
2401	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2022-02-28 17:19:24.70086	2022-02-28 17:19:24.700293	46f2be01-d15b-4558-a872-c680a8f8d601	\N	2461
2402	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	2022-02-28 17:19:24.744494	2022-02-28 17:19:24.743287	b2a1ad35-ab00-4d02-b103-a6893cc52743	\N	2462
2407	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	2022-02-28 17:19:24.758186	2022-02-28 17:19:24.758153	353adec7-c598-4746-8c77-652530c635b1	\N	2467
2412	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	2022-02-28 17:19:24.816786	2022-02-28 17:19:24.815592	d30af676-d4d3-4b8e-874f-27827d071977	\N	2472
2415	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	2022-02-28 17:19:24.830915	2022-02-28 17:19:24.830425	3df6a879-a2e5-41e2-9675-0d125153683f	\N	2475
2427	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	2022-02-28 17:19:24.902116	2022-02-28 17:19:24.900924	34603859-01e4-4c3c-816e-41ec2cc891c8	\N	2487
2430	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	2022-02-28 17:19:25.100439	2022-02-28 17:19:25.099411	0dee3b0f-a3c2-40ab-9bf6-fd674351e70d	\N	2490
2434	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	2022-02-28 17:19:25.157316	2022-02-28 17:19:25.155391	b04942b2-f6b5-4f8d-b805-c84b7282fe23	\N	2494
2437	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	2022-02-28 17:19:25.170092	2022-02-28 17:19:25.170038	242fe86b-9d4e-4081-b6a0-de386ad585bc	\N	2497
2440	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	2022-02-28 17:19:25.491003	2022-02-28 17:19:25.489741	c6395b11-4633-4592-b743-28dfe82bd728	\N	2500
2445	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	2022-02-28 17:19:25.507555	2022-02-28 17:19:25.507507	f12cd8a0-a0cb-47a2-8f1e-92444ad532d6	\N	2505
2449	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	2022-02-28 17:19:25.558695	2022-02-28 17:19:25.557515	295638fa-43c2-4b8c-80aa-4a2b197569e7	\N	2509
2172	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	2022-02-28 17:19:23.378986	2022-02-28 17:19:23.37783	e020adcc-0868-4346-b953-20748042e2ac	\N	2233
2176	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential Facility	Residential Facility	Residential Facility	\N	\N	\N	2022-02-28 17:19:23.392488	2022-02-28 17:19:23.392451	693fb10d-ef9d-4186-abd4-b78ffedbb582	\N	2236
2180	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	Assistant Superintendent	Assistant Superintendent	\N	\N	\N	2022-02-28 17:19:23.456659	2022-02-28 17:19:23.455497	182ac115-0b40-4d26-a681-e3c1bff7ed9d	\N	2240
2184	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	Instructional Aide	Instructional Aide	\N	\N	\N	2022-02-28 17:19:23.47065	2022-02-28 17:19:23.470444	6717b6c9-0a3f-4423-a98f-b3a022e251ab	\N	2244
2189	uri://ed-fi.org/StaffClassificationDescriptor	Kindergarten Teachers	Kindergarten Teachers	Kindergarten Teachers	\N	\N	\N	2022-02-28 17:19:23.481413	2022-02-28 17:19:23.481373	572de8a7-5686-49e9-b32f-958bbb26f8b4	\N	2249
2190	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	2022-02-28 17:19:23.484506	2022-02-28 17:19:23.484449	3020ff7a-c391-42c2-a950-e4f382edcfd6	\N	2250
2192	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	LEA Specialist	LEA Specialist	\N	\N	\N	2022-02-28 17:19:23.491757	2022-02-28 17:19:23.491684	6b936e44-6a15-4d17-b663-c525c4a21ae2	\N	2252
2195	uri://ed-fi.org/StaffClassificationDescriptor	Library/Media Support Staff	Library/Media Support Staff	Library/Media Support Staff	\N	\N	\N	2022-02-28 17:19:23.498507	2022-02-28 17:19:23.498444	5a94f375-e6c8-4eb0-927a-95f4b5d768b0	\N	2255
2196	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	Operational Support	Operational Support	\N	\N	\N	2022-02-28 17:19:23.501602	2022-02-28 17:19:23.50157	258602c3-2724-4f63-8739-fba836743754	\N	2256
2198	uri://ed-fi.org/StaffClassificationDescriptor	Paraprofessionals/Instructional Aides	Paraprofessionals/Instructional Aides	Paraprofessionals/Instructional Aides	\N	\N	\N	2022-02-28 17:19:23.507223	2022-02-28 17:19:23.50719	5ae4459a-1095-4d19-b6ae-b3718347fa9d	\N	2258
2200	uri://ed-fi.org/StaffClassificationDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-02-28 17:19:23.511532	2022-02-28 17:19:23.511517	6009cc2e-88bf-400a-b7b4-5abd6bfe4954	\N	2260
2203	uri://ed-fi.org/StaffClassificationDescriptor	School Counselors	School Counselors	School Counselors	\N	\N	\N	2022-02-28 17:19:23.517264	2022-02-28 17:19:23.517234	23139727-fb66-4107-8894-8bb64f055a63	\N	2263
2207	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	School Specialist	School Specialist	\N	\N	\N	2022-02-28 17:19:23.527449	2022-02-28 17:19:23.527417	de023ea6-7b4b-4fbe-a289-140a6bd5b5cf	\N	2267
2208	uri://ed-fi.org/StaffClassificationDescriptor	Secondary Teachers	Secondary Teachers	Secondary Teachers	\N	\N	\N	2022-02-28 17:19:23.531087	2022-02-28 17:19:23.531067	7298162e-fd35-4144-b954-b6494f2dbed1	\N	2268
2211	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	2022-02-28 17:19:23.536638	2022-02-28 17:19:23.536597	f273abef-d578-4e13-b39a-5dfa8af0f9a4	\N	2271
2215	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-02-28 17:19:23.546529	2022-02-28 17:19:23.546497	43bb944d-c44b-4d8e-84bc-9a90e9e1fce2	\N	2275
2218	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	2022-02-28 17:19:23.604628	2022-02-28 17:19:23.603402	2380b6bf-a021-4451-9964-0dcd146c9ea5	\N	2278
2221	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	2022-02-28 17:19:23.620328	2022-02-28 17:19:23.620268	225f6e54-3aed-4691-8c8e-adfc7af16d32	\N	2281
2223	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	2022-02-28 17:19:23.623756	2022-02-28 17:19:23.62371	c04f0cd2-5b50-4e18-8fa1-8db36c33f8d1	\N	2283
2225	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	2022-02-28 17:19:23.632345	2022-02-28 17:19:23.632303	b2ce7f63-ac46-46be-82ee-b40da61b845a	\N	2285
2229	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2022-02-28 17:19:23.643834	2022-02-28 17:19:23.643764	71f59284-0cb9-41a4-b201-f0326fd29bcd	\N	2289
2231	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2022-02-28 17:19:23.700777	2022-02-28 17:19:23.699572	4ac63db8-1c3a-4fde-9a5f-2ebcfb55870e	\N	2291
2235	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	2022-02-28 17:19:23.717199	2022-02-28 17:19:23.717147	b441adde-452e-43a8-8d1c-2e5e483cf03a	\N	2295
2239	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	2022-02-28 17:19:23.727572	2022-02-28 17:19:23.727532	45be9eb7-22e8-454e-bb5d-56bdd71d58b6	\N	2299
2241	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2022-02-28 17:19:23.73095	2022-02-28 17:19:23.730932	21674df1-2804-46d0-b298-b40363008fcb	\N	2301
2243	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	2022-02-28 17:19:23.741416	2022-02-28 17:19:23.741374	9ed45cb6-c9b9-479f-9a58-34d74fe1ef3f	\N	2303
2247	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2022-02-28 17:19:23.753865	2022-02-28 17:19:23.753805	5e7e73f4-e50f-4b30-8a4e-bc2e716e504c	\N	2307
2251	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	2022-02-28 17:19:23.805063	2022-02-28 17:19:23.803884	34e88a1c-8b82-4968-93a4-73922cd17d63	\N	2311
2253	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	2022-02-28 17:19:23.819629	2022-02-28 17:19:23.81929	004c5e8e-b6c7-496d-813f-5c1073f8398c	\N	2313
2256	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	2022-02-28 17:19:23.824127	2022-02-28 17:19:23.824033	e22a35d1-54c1-4941-ae00-d7368f3c55a6	\N	2316
2257	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	2022-02-28 17:19:23.830143	2022-02-28 17:19:23.830102	5a023297-2b61-4c32-b527-74264d38589c	\N	2317
2260	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	2022-02-28 17:19:23.836071	2022-02-28 17:19:23.836049	50ddeea5-3efe-4a59-b68d-117a1e9c75a3	\N	2320
2261	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	2022-02-28 17:19:23.84032	2022-02-28 17:19:23.840283	aa228260-055d-49d9-814c-3132674a92be	\N	2321
2264	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	2022-02-28 17:19:23.848114	2022-02-28 17:19:23.848072	6edd5d38-1a29-4266-ac35-2388305448df	\N	2324
2267	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	2022-02-28 17:19:23.859013	2022-02-28 17:19:23.858938	358e6a1a-a1ce-4ae7-ac27-6203b7949bbc	\N	2327
2269	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	2022-02-28 17:19:23.862433	2022-02-28 17:19:23.86237	34d44416-fd43-4cb5-bbeb-ae0ddaf4673f	\N	2329
2272	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	2022-02-28 17:19:23.869582	2022-02-28 17:19:23.869541	f33af3e6-fc8c-47a2-9503-f38ee3d7123c	\N	2332
2273	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	2022-02-28 17:19:23.874215	2022-02-28 17:19:23.874175	00f64ec1-9b30-40d5-9f2e-a88cd7479601	\N	2333
2276	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	2022-02-28 17:19:23.879785	2022-02-28 17:19:23.879756	ed03d00d-19a8-4874-b3a5-eaa191417160	\N	2336
2277	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	2022-02-28 17:19:23.883769	2022-02-28 17:19:23.883623	7f844495-167e-48b6-8b59-3b4e713b385c	\N	2337
2279	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	2022-02-28 17:19:23.890386	2022-02-28 17:19:23.890067	182aa86a-0121-41a5-8210-4c4ffb3dc8e3	\N	2339
2281	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	2022-02-28 17:19:23.894624	2022-02-28 17:19:23.894592	aaae05c6-0534-4378-b575-5f9f9aa4d4ff	\N	2341
2284	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	2022-02-28 17:19:23.902616	2022-02-28 17:19:23.902554	ec48a8d5-c302-490d-b5de-8cb0370b26bb	\N	2344
2285	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	2022-02-28 17:19:23.904984	2022-02-28 17:19:23.904888	a9a75a7b-105d-4b0f-886c-fcf1ebe34097	\N	2345
2290	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	2022-02-28 17:19:23.918499	2022-02-28 17:19:23.918446	14980bad-729a-420a-8284-2f842abc70ee	\N	2350
2292	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	2022-02-28 17:19:23.922467	2022-02-28 17:19:23.922454	002b6fcf-fffc-4090-ada6-fd3a0ca12b7e	\N	2352
2293	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	2022-02-28 17:19:23.92615	2022-02-28 17:19:23.926118	e0bf8f03-3f45-4cb8-892a-4ef99ad27a90	\N	2353
2295	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	2022-02-28 17:19:23.931453	2022-02-28 17:19:23.931415	3e040cdb-1b21-4866-a639-229b174f53fb	\N	2355
2298	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	2022-02-28 17:19:23.938324	2022-02-28 17:19:23.938274	e555669d-b453-45ca-90de-022430a4454d	\N	2358
2233	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2022-02-28 17:19:23.700776	2022-02-28 17:19:23.699568	6689d411-9c29-4c35-aa47-16e2ae72fab4	\N	2293
2236	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	2022-02-28 17:19:23.717184	2022-02-28 17:19:23.717116	8c2f9c3e-6060-4abe-a4f3-f5e878a175f0	\N	2296
2238	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2022-02-28 17:19:23.721118	2022-02-28 17:19:23.721067	2eaf713a-3179-494b-9d0e-686ec0fdf118	\N	2298
2240	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:23.728319	2022-02-28 17:19:23.728285	f0855b26-6f27-4885-9cd3-a639e11b6f3b	\N	2300
2242	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2022-02-28 17:19:23.733799	2022-02-28 17:19:23.733757	11532076-15ff-4489-a501-7eda5bbfaa3f	\N	2302
2244	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2022-02-28 17:19:23.741858	2022-02-28 17:19:23.741811	c0cf1dbb-562b-44f6-8898-89a2e10fa5b6	\N	2304
2246	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2022-02-28 17:19:23.74563	2022-02-28 17:19:23.745587	87061b65-4308-4284-b5f9-948ee0e6c6a6	\N	2306
2248	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2022-02-28 17:19:23.754665	2022-02-28 17:19:23.754615	f1335e7b-6f05-4cf0-8794-f65c72579d1d	\N	2308
2249	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	2022-02-28 17:19:23.805057	2022-02-28 17:19:23.803877	65e24fc3-5f7c-4b63-86a2-6b56e6292e1b	\N	2309
2255	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	2022-02-28 17:19:23.822785	2022-02-28 17:19:23.822635	1f764f61-3d89-4c80-85d9-dc6b2379413e	\N	2315
2258	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	2022-02-28 17:19:23.83114	2022-02-28 17:19:23.831115	91310626-306b-4713-ac8c-904660ee1943	\N	2318
2259	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	2022-02-28 17:19:23.835939	2022-02-28 17:19:23.835902	9336e50a-d190-41dd-b9c6-21dd2b80691b	\N	2319
2262	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	2022-02-28 17:19:23.842435	2022-02-28 17:19:23.842396	10bc1399-3479-49c6-aa1a-a1d899ed0792	\N	2322
2263	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	2022-02-28 17:19:23.846711	2022-02-28 17:19:23.846665	c6495733-45dc-4ed1-9770-6236a955b625	\N	2323
2265	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	2022-02-28 17:19:23.851673	2022-02-28 17:19:23.851622	9995f141-c444-46e5-ade0-b76e2c34029d	\N	2325
2266	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	2022-02-28 17:19:23.854903	2022-02-28 17:19:23.854858	bd6c9943-15e4-4afa-a674-b08a2b7521a8	\N	2326
2268	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	2022-02-28 17:19:23.859863	2022-02-28 17:19:23.859746	64e6b859-44b6-4ad4-902c-1d95e1bc076b	\N	2328
2270	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	2022-02-28 17:19:23.863684	2022-02-28 17:19:23.863649	695c45bb-eaf6-42bf-9b85-4270fa3e1bf7	\N	2330
2271	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	2022-02-28 17:19:23.86901	2022-02-28 17:19:23.868965	d34a5194-b136-4502-9bd7-f97ec529421b	\N	2331
2274	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	2022-02-28 17:19:23.875173	2022-02-28 17:19:23.875128	1c3c7044-eb5b-45ae-a524-228a8c2cb691	\N	2334
2275	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	2022-02-28 17:19:23.879439	2022-02-28 17:19:23.879402	601e3827-0b09-41f9-bf8a-39842a19a37a	\N	2335
2278	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	2022-02-28 17:19:23.885354	2022-02-28 17:19:23.885317	e7f2f386-4170-4b88-b3e5-6a7a82e3794d	\N	2338
2280	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	2022-02-28 17:19:23.89094	2022-02-28 17:19:23.890904	d9aa76fc-b3a1-44c8-ac0c-a6fa1d1df80c	\N	2340
2282	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	2022-02-28 17:19:23.895304	2022-02-28 17:19:23.895271	0ca34b5e-2af3-463a-9d08-3d894be0c4f6	\N	2342
2283	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	2022-02-28 17:19:23.900378	2022-02-28 17:19:23.900341	75ca7214-1347-4b91-8390-3f652cf9c097	\N	2343
2286	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	2022-02-28 17:19:23.906394	2022-02-28 17:19:23.906367	e4685059-95a7-4d4f-92e9-b34561f07fb2	\N	2346
2288	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	2022-02-28 17:19:23.911304	2022-02-28 17:19:23.911267	726a7797-6b5b-44d9-b068-7eef3460f899	\N	2348
2289	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	2022-02-28 17:19:23.916645	2022-02-28 17:19:23.916467	f0d7df97-490c-44e4-9c6e-c615845497d4	\N	2349
2291	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	2022-02-28 17:19:23.922188	2022-02-28 17:19:23.922149	eced99e2-47b5-4651-a69c-9b13d18595ac	\N	2351
2294	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	2022-02-28 17:19:23.92767	2022-02-28 17:19:23.92763	fd5abc08-912f-498f-a836-2cb6d7608025	\N	2354
2296	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	2022-02-28 17:19:23.932241	2022-02-28 17:19:23.932184	e7b906fc-42fa-4530-a197-5a79dfa9a7b0	\N	2356
2297	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	2022-02-28 17:19:23.936028	2022-02-28 17:19:23.935995	cc0c4873-78e2-48d9-bb14-15d4f3462ecd	\N	2357
2299	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	2022-02-28 17:19:23.95022	2022-02-28 17:19:23.950158	3106b0e7-fbaa-4c0a-be7f-8369939ef43d	\N	2359
2302	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	2022-02-28 17:19:23.955055	2022-02-28 17:19:23.955022	5e7d00c6-e2f6-4da4-a6b1-d663fe93050f	\N	2362
2306	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	2022-02-28 17:19:23.964639	2022-02-28 17:19:23.964626	fd4b220f-8ffa-4e71-acf1-46bbe3796ece	\N	2366
2307	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	2022-02-28 17:19:23.96983	2022-02-28 17:19:23.96979	0a24e493-8a9d-4a33-9e94-f95ca2a09371	\N	2367
2309	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	2022-02-28 17:19:23.97507	2022-02-28 17:19:23.974723	1d9dea41-d8e0-4007-9289-2fc87efa55f3	\N	2369
2314	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2022-02-28 17:19:24.030306	2022-02-28 17:19:24.029008	57749eed-909f-42a1-bb4b-c46d6637d2d5	\N	2374
2316	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	2022-02-28 17:19:24.04674	2022-02-28 17:19:24.046648	95cb4dc7-7890-4981-8599-a7d1cf3c8894	\N	2376
2319	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	2022-02-28 17:19:24.055977	2022-02-28 17:19:24.055937	78cc9da6-7f15-4199-939e-b82cd535fdab	\N	2379
2322	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.060648	2022-02-28 17:19:24.060607	baaab252-27a5-4cc1-8489-258900d30a47	\N	2382
2324	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2022-02-28 17:19:24.071109	2022-02-28 17:19:24.071065	f16bf5d0-fa6f-4eac-8e18-8810a059d52b	\N	2384
2325	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	2022-02-28 17:19:24.12748	2022-02-28 17:19:24.126232	5795bac9-1878-449e-b3b4-5a9d8f2c2444	\N	2386
2329	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	2022-02-28 17:19:24.142505	2022-02-28 17:19:24.142236	9cd3e0b8-5cc9-4187-88ba-d1f92b1b42e9	\N	2389
2333	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2022-02-28 17:19:24.154905	2022-02-28 17:19:24.154864	74a0fe78-ee94-491e-abf3-10e4da420d51	\N	2393
2335	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	2022-02-28 17:19:24.159729	2022-02-28 17:19:24.159694	afdf7362-e227-4e1e-9d22-4cc8b76f489c	\N	2395
2338	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2022-02-28 17:19:24.213249	2022-02-28 17:19:24.212014	2b3b6f49-7691-4879-b769-72d25f9530b6	\N	2398
2341	uri://ed-fi.org/SurveyCategoryDescriptor	Applicant	Applicant	Applicant	\N	\N	\N	2022-02-28 17:19:24.279207	2022-02-28 17:19:24.278051	28f55e75-2cb8-4ec5-8e38-c666267ef4a7	\N	2401
2345	uri://ed-fi.org/SurveyCategoryDescriptor	Exit	Exit	Exiting staff	\N	\N	\N	2022-02-28 17:19:24.291679	2022-02-28 17:19:24.291638	0bd1e451-c8a7-4cee-a9a9-aae171d600ee	\N	2405
2347	uri://ed-fi.org/SurveyCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.295436	2022-02-28 17:19:24.295253	b26df874-31c7-466c-a300-d6c418f379e2	\N	2407
2349	uri://ed-fi.org/SurveyCategoryDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-02-28 17:19:24.300685	2022-02-28 17:19:24.300653	760b087e-8ba1-422b-95ae-7ba4189470d1	\N	2409
2301	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	2022-02-28 17:19:23.952295	2022-02-28 17:19:23.952262	a0832326-b22d-459b-97bc-8a26ccda6c29	\N	2361
2305	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	2022-02-28 17:19:23.963737	2022-02-28 17:19:23.963724	19351504-8942-474f-be89-69bd06c8ae15	\N	2365
2310	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	2022-02-28 17:19:23.975686	2022-02-28 17:19:23.97565	880c8de7-aaba-4e7d-8440-315add3ceb73	\N	2370
2311	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	2022-02-28 17:19:24.03016	2022-02-28 17:19:24.028949	5b1ac7f7-8388-4cf5-8da0-c35069ae77e6	\N	2371
2315	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	2022-02-28 17:19:24.045044	2022-02-28 17:19:24.044957	c0a53668-7ffa-4e03-9e91-7d31033eb712	\N	2375
2317	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2022-02-28 17:19:24.048095	2022-02-28 17:19:24.048063	c216279c-f218-41f0-9e67-1307335ccadc	\N	2377
2323	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	2022-02-28 17:19:24.069598	2022-02-28 17:19:24.069564	01a32ac1-832f-4779-ba93-6b2d7f06b241	\N	2383
2327	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2022-02-28 17:19:24.127456	2022-02-28 17:19:24.126221	5a3678dd-cded-48ca-b836-c5858af0152a	\N	2387
2331	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.143976	2022-02-28 17:19:24.143886	51b7e61e-0da1-4549-9b02-625a67ae84d7	\N	2391
2334	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	2022-02-28 17:19:24.158925	2022-02-28 17:19:24.158878	ed72e8e8-98ca-4caf-bb31-fcee3fa6fa94	\N	2394
2339	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2022-02-28 17:19:24.213245	2022-02-28 17:19:24.21202	187da017-1be4-423d-92d8-a1ef4f712857	\N	2399
2343	uri://ed-fi.org/SurveyCategoryDescriptor	Community	Community	Community	\N	\N	\N	2022-02-28 17:19:24.279207	2022-02-28 17:19:24.278054	fa877921-08af-467d-8d66-bb797c4b1688	\N	2403
2346	uri://ed-fi.org/SurveyCategoryDescriptor	Parent	Parent	Parent	\N	\N	\N	2022-02-28 17:19:24.291909	2022-02-28 17:19:24.291837	28f541f3-227b-427f-8a8e-aa6109b04d34	\N	2406
2348	uri://ed-fi.org/SurveyCategoryDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-02-28 17:19:24.29595	2022-02-28 17:19:24.295907	55c55e25-2b2a-4b94-9153-47e0ec61731a	\N	2408
2350	uri://ed-fi.org/SurveyCategoryDescriptor	Student	Student	Student	\N	\N	\N	2022-02-28 17:19:24.301157	2022-02-28 17:19:24.301123	fc045d41-ceaf-4205-b836-d57a4c468e65	\N	2410
2351	uri://ed-fi.org/SurveyLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	2022-02-28 17:19:24.355541	2022-02-28 17:19:24.354327	d86b0f9e-b368-418d-b5a9-791ace65273a	\N	2411
2356	uri://ed-fi.org/SurveyLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-02-28 17:19:24.367607	2022-02-28 17:19:24.367577	4982ccf0-a312-4471-b4ca-0ef560ee07bc	\N	2416
2358	uri://ed-fi.org/SurveyLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-02-28 17:19:24.371808	2022-02-28 17:19:24.371774	4463fb48-fb1b-4e43-bb2c-11babf27fc16	\N	2418
2359	uri://ed-fi.org/SurveyLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-02-28 17:19:24.375236	2022-02-28 17:19:24.375154	0c61e5e5-62e1-4d7f-8e01-51619cc5b635	\N	2419
2361	uri://ed-fi.org/SurveyLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-02-28 17:19:24.378507	2022-02-28 17:19:24.378493	d0d7b3e6-40d9-4547-9e59-3ceceea2232a	\N	2421
2366	uri://ed-fi.org/SurveyLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-02-28 17:19:24.39123	2022-02-28 17:19:24.391194	0ca17d59-e3ae-42de-be10-9d4c2767f807	\N	2426
2368	uri://ed-fi.org/SurveyLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	2022-02-28 17:19:24.396503	2022-02-28 17:19:24.396474	c9f93a94-fb86-4f9b-b601-d07511425812	\N	2428
2370	uri://ed-fi.org/SurveyLevelDescriptor	Master's	Master's	Master's	\N	\N	\N	2022-02-28 17:19:24.402124	2022-02-28 17:19:24.402089	074d27d0-3656-4a98-aae9-7eb9c6a31cd8	\N	2430
2371	uri://ed-fi.org/SurveyLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	2022-02-28 17:19:24.405928	2022-02-28 17:19:24.405893	3a9e16ba-6ee9-4fd9-b2f6-185060398bc1	\N	2431
2373	uri://ed-fi.org/SurveyLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	2022-02-28 17:19:24.408772	2022-02-28 17:19:24.408741	888267c7-b9db-4410-94b0-dafafd8a8c1c	\N	2433
2379	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	2022-02-28 17:19:24.46419	2022-02-28 17:19:24.462904	6092320b-11b4-4d56-a7b0-7381e77101bd	\N	2439
2381	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	2022-02-28 17:19:24.477688	2022-02-28 17:19:24.477653	7e887db5-5a0e-443f-8176-564d7faf2e99	\N	2441
2385	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	2022-02-28 17:19:24.603114	2022-02-28 17:19:24.602998	ed13551b-b61f-4f79-800e-f583441f4647	\N	2445
2390	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	2022-02-28 17:19:24.622452	2022-02-28 17:19:24.622411	263717c3-38df-4f16-b3e6-2801fa8d0416	\N	2450
2395	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	2022-02-28 17:19:24.636478	2022-02-28 17:19:24.636442	257e31b6-eafb-40d5-af23-b3e7d62e0608	\N	2455
2398	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2022-02-28 17:19:24.648561	2022-02-28 17:19:24.648521	c49847a8-9633-43a2-abc6-5040de223aa6	\N	2458
2400	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	2022-02-28 17:19:24.699075	2022-02-28 17:19:24.696616	bcce9ab8-699d-4969-b176-41df828ea175	\N	2460
2404	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	2022-02-28 17:19:24.744505	2022-02-28 17:19:24.7433	abccb6e0-c7ad-4849-88f2-a08ce6c4b20d	\N	2464
2406	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	2022-02-28 17:19:24.758125	2022-02-28 17:19:24.758065	90642309-4a34-49e1-91d7-dea9dd1358b5	\N	2466
2410	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2022-02-28 17:19:24.816786	2022-02-28 17:19:24.815581	ea8e8de2-9501-4a98-8e81-1427ab73747d	\N	2470
2414	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	2022-02-28 17:19:24.830456	2022-02-28 17:19:24.83034	5a46c6cc-0238-4b87-8b10-07e04e41e456	\N	2474
2420	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2022-02-28 17:19:24.842399	2022-02-28 17:19:24.842362	2cb1fdf8-7b34-4277-9fcf-2dd105eaad43	\N	2480
2422	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2022-02-28 17:19:24.848046	2022-02-28 17:19:24.848009	b301f776-7111-48fa-8b0f-42c531aea565	\N	2482
2423	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	2022-02-28 17:19:24.85215	2022-02-28 17:19:24.852116	991d759e-218e-4427-ba05-a22309ac69d5	\N	2483
2425	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.859158	2022-02-28 17:19:24.85913	abb84513-e210-4723-b2ba-b6fe8a3f4795	\N	2485
2429	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	2022-02-28 17:19:25.099153	2022-02-28 17:19:25.099074	fac6d19f-9488-46fd-913d-021a760bf702	\N	2489
2432	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	2022-02-28 17:19:25.15658	2022-02-28 17:19:25.155375	5816c7f0-714e-461d-9e50-c941850ab02e	\N	2492
2436	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	2022-02-28 17:19:25.169937	2022-02-28 17:19:25.169902	ba3f2aed-fe28-440c-86e8-5352c68055f3	\N	2496
2438	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	2022-02-28 17:19:25.440795	2022-02-28 17:19:25.440663	19bc72a2-c015-4ff0-957c-420b8073cdd4	\N	2498
2443	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	2022-02-28 17:19:25.490996	2022-02-28 17:19:25.48973	ac9d7d5f-fc2c-4491-9e8a-359490463b88	\N	2503
2450	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	2022-02-28 17:19:25.55925	2022-02-28 17:19:25.557548	86d1c371-5b7c-47a3-8150-f9a70d5411c3	\N	2510
2458	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	2022-02-28 17:19:25.588838	2022-02-28 17:19:25.588783	838acec2-e55e-4484-b940-2695f0498448	\N	2518
2461	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	2022-02-28 17:19:25.59856	2022-02-28 17:19:25.598526	f42a69f8-f0c9-4e0c-a909-87073a88b0dc	\N	2521
2463	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	2022-02-28 17:19:25.60239	2022-02-28 17:19:25.602362	617c51a4-54e4-48ec-8206-445f8244a099	\N	2523
2354	uri://ed-fi.org/SurveyLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	2022-02-28 17:19:24.355476	2022-02-28 17:19:24.354311	4204c5d2-ed25-4350-ad23-5b7885985cc6	\N	2414
2355	uri://ed-fi.org/SurveyLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-02-28 17:19:24.367541	2022-02-28 17:19:24.367505	1e8d51b7-86e5-4c0f-a3c3-e87f5674a9e8	\N	2415
2357	uri://ed-fi.org/SurveyLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-02-28 17:19:24.371351	2022-02-28 17:19:24.37128	06c96bd7-88ee-4e4f-9410-00f90d0a3fe3	\N	2417
2360	uri://ed-fi.org/SurveyLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-02-28 17:19:24.376451	2022-02-28 17:19:24.376419	c96e6bce-cbd7-4dbb-bfd9-41ec8a310c59	\N	2420
2362	uri://ed-fi.org/SurveyLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-02-28 17:19:24.380849	2022-02-28 17:19:24.380837	74d0b502-9d57-465f-8916-b79b3397fc80	\N	2422
2363	uri://ed-fi.org/SurveyLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-02-28 17:19:24.384415	2022-02-28 17:19:24.384379	9d9e0dcb-c247-40ae-9d61-11ea92bfb024	\N	2423
2364	uri://ed-fi.org/SurveyLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-02-28 17:19:24.387601	2022-02-28 17:19:24.387563	2e9d9479-feb8-4b13-8d8e-ef4b33af871b	\N	2424
2365	uri://ed-fi.org/SurveyLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-02-28 17:19:24.390781	2022-02-28 17:19:24.390747	82642e12-be21-496f-921e-e2d6464b81ad	\N	2425
2367	uri://ed-fi.org/SurveyLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	2022-02-28 17:19:24.396127	2022-02-28 17:19:24.39609	c79c2248-31e4-4c95-b4b9-1e88fed2ced3	\N	2427
2369	uri://ed-fi.org/SurveyLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	2022-02-28 17:19:24.400412	2022-02-28 17:19:24.400384	b9a13918-c62d-4b99-be52-a8c4f2862e34	\N	2429
2372	uri://ed-fi.org/SurveyLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	2022-02-28 17:19:24.406902	2022-02-28 17:19:24.406781	a5d75e18-1dfc-4d33-9565-863be34a61e5	\N	2432
2374	uri://ed-fi.org/SurveyLevelDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.411292	2022-02-28 17:19:24.411251	8a934852-295e-4270-a271-5f6509de1ade	\N	2434
2375	uri://ed-fi.org/SurveyLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-02-28 17:19:24.416622	2022-02-28 17:19:24.416578	5e22cac2-dfc0-4a8c-b48d-073b23427516	\N	2435
2376	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	2022-02-28 17:19:24.464066	2022-02-28 17:19:24.462899	c49f763f-c561-4d45-9f25-28ba99844e16	\N	2436
2380	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	2022-02-28 17:19:24.477659	2022-02-28 17:19:24.477558	5f7916b4-6590-4c2d-ad13-547029944ec5	\N	2440
2383	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	2022-02-28 17:19:24.482067	2022-02-28 17:19:24.48203	5c62c59f-8b09-4a4a-a8b2-a24cb6069caa	\N	2443
2384	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	2022-02-28 17:19:24.601325	2022-02-28 17:19:24.583593	cb382975-c50e-45c0-8721-d1395d39838a	\N	2444
2386	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	2022-02-28 17:19:24.606502	2022-02-28 17:19:24.606094	a4031875-5508-4033-8765-c28d0c7cd058	\N	2446
2389	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	2022-02-28 17:19:24.621414	2022-02-28 17:19:24.621248	cdf2adac-abff-45cd-a9eb-a2808e19d0ca	\N	2449
2393	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	2022-02-28 17:19:24.635086	2022-02-28 17:19:24.633485	e14ec6b5-9489-42e1-a5de-58cdfbf9c183	\N	2453
2396	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	2022-02-28 17:19:24.64333	2022-02-28 17:19:24.643177	0aa97580-a7a1-4813-89fe-52d30ebb2554	\N	2456
2397	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	2022-02-28 17:19:24.645971	2022-02-28 17:19:24.645884	9c518e93-14a0-441b-ac69-e81f68e1dd11	\N	2457
2399	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	2022-02-28 17:19:24.698891	2022-02-28 17:19:24.696619	503f85c0-906a-4894-886f-544086453fd5	\N	2459
2403	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2022-02-28 17:19:24.744504	2022-02-28 17:19:24.743288	66da3e0f-ecda-4923-bffb-3042d84678fc	\N	2463
2408	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:24.758918	2022-02-28 17:19:24.75889	42493483-7c7d-4b49-ac20-6ff9a122d9c4	\N	2468
2409	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-02-28 17:19:24.762434	2022-02-28 17:19:24.762396	dce63429-1537-4a71-a8d1-35f5934ab828	\N	2469
2413	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	2022-02-28 17:19:24.817396	2022-02-28 17:19:24.815577	5f5e1e3d-1d05-49f3-bbe7-f069f4256476	\N	2473
2417	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	2022-02-28 17:19:24.832479	2022-02-28 17:19:24.832376	46a424b8-1516-4eca-81c2-d616a3cbb60b	\N	2477
2418	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	2022-02-28 17:19:24.839325	2022-02-28 17:19:24.839239	d7bb9ade-9e7a-4969-b97f-9d8d79ea82a0	\N	2478
2419	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	2022-02-28 17:19:24.842117	2022-02-28 17:19:24.8421	5c72c9c8-b8b6-4ba2-9652-861f075d05b8	\N	2479
2421	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2022-02-28 17:19:24.84582	2022-02-28 17:19:24.845801	901eb2f2-6fb1-449a-8ecf-a79d6afb999e	\N	2481
2424	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	2022-02-28 17:19:24.852911	2022-02-28 17:19:24.852859	b0eb018e-db31-4ed2-88bf-abe1a99ae278	\N	2484
2428	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	2022-02-28 17:19:25.098803	2022-02-28 17:19:25.098666	7693c6d4-3b1d-4ee7-82e9-e34a71cf5ee7	\N	2488
2431	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	2022-02-28 17:19:25.156572	2022-02-28 17:19:25.155363	976a72ab-3a90-4b2e-ba65-9c08ca506f88	\N	2491
2435	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	2022-02-28 17:19:25.169819	2022-02-28 17:19:25.169781	338f595d-6a36-4da1-b4e8-dbdc90cf0176	\N	2495
2439	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	2022-02-28 17:19:25.4415	2022-02-28 17:19:25.441475	cef4a5bf-7175-4efb-945c-78603c08dd5d	\N	2499
2441	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	2022-02-28 17:19:25.490994	2022-02-28 17:19:25.489724	1fe74b1c-c7ec-47fa-8ac9-0257bd2d4ead	\N	2501
2444	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	2022-02-28 17:19:25.505329	2022-02-28 17:19:25.505118	026f7334-2ec0-4d6b-b34a-f6072ed631b9	\N	2504
2446	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	2022-02-28 17:19:25.5085	2022-02-28 17:19:25.508464	f60335c4-bda7-49b9-9aba-16a8cb5c781f	\N	2506
2448	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.558687	2022-02-28 17:19:25.557505	ed02c7f0-b61d-4cdf-88a0-ff518517d391	\N	2508
2451	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	2022-02-28 17:19:25.573618	2022-02-28 17:19:25.573544	7a03a6bd-20a6-4843-bb70-408766562a49	\N	2511
2454	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	2022-02-28 17:19:25.576284	2022-02-28 17:19:25.57627	5917edf4-1588-42d0-a737-019d860f587e	\N	2514
2455	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	2022-02-28 17:19:25.582083	2022-02-28 17:19:25.582042	95608810-ff18-4864-8038-817b5d142dcb	\N	2515
2457	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	2022-02-28 17:19:25.588471	2022-02-28 17:19:25.588403	0e593dff-b528-4c99-8fc0-ca5d9d6059cd	\N	2517
2459	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	2022-02-28 17:19:25.591701	2022-02-28 17:19:25.591622	bc8644c7-2a21-4303-8edb-afa1e7032916	\N	2519
2447	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	2022-02-28 17:19:25.558694	2022-02-28 17:19:25.557537	547a6b96-3ec9-479f-8b99-5d51929056f0	\N	2507
2453	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	2022-02-28 17:19:25.575601	2022-02-28 17:19:25.575563	ddf93005-cb22-4ff9-a4a6-3df41d99316c	\N	2513
2583	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	2022-02-28 17:19:25.912725	2022-02-28 17:19:25.912517	98a9ac5c-8f53-475e-9632-6775b3773342	\N	2643
2705	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	2022-02-28 17:19:26.222544	2022-02-28 17:19:26.222515	e27c5e46-8691-420c-8094-7e4298d00775	\N	2765
2709	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	2022-02-28 17:19:26.473086	2022-02-28 17:19:26.473052	f377ee7b-f806-4d99-b38d-845d43547d1d	\N	2769
2776	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	Northfork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	2022-02-28 17:19:26.884205	2022-02-28 17:19:26.884169	8f7ad025-1f27-4f5e-9fbd-c1d379f7f641	\N	2836
2778	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	2022-02-28 17:19:26.887609	2022-02-28 17:19:26.887577	0063cbe2-4c70-450c-8ded-9532b652ceb7	\N	2838
2779	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of Shoshone Nation	\N	\N	\N	2022-02-28 17:19:26.890887	2022-02-28 17:19:26.890855	741610cd-fced-4885-a92a-674987ed8cd6	\N	2839
2780	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, MI	\N	\N	\N	2022-02-28 17:19:26.893192	2022-02-28 17:19:26.893156	f22df740-0970-47a0-a57e-f82093290a8f	\N	2840
2782	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	2022-02-28 17:19:26.898353	2022-02-28 17:19:26.898315	33c07ed8-b45d-4b6f-9266-a6ea9f9cf65c	\N	2842
2783	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	2022-02-28 17:19:26.90263	2022-02-28 17:19:26.902598	56031eab-93d6-4018-95e7-695d8f331d1f	\N	2843
2785	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	2022-02-28 17:19:26.906614	2022-02-28 17:19:26.906578	a81070a2-66c8-498c-b545-f6a6ead39d02	\N	2845
2787	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	Ohkay	Ohkay Owingeh	\N	\N	\N	2022-02-28 17:19:26.911119	2022-02-28 17:19:26.911088	05047dcb-fe14-4abc-bde4-7a67e3cf1b2e	\N	2847
2789	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	2022-02-28 17:19:26.914677	2022-02-28 17:19:26.914662	a1c8df61-6da0-44ef-a4cb-42b7c6a1012d	\N	2849
2790	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	Oneida  Nation of New York	Oneida  Nation of New York	\N	\N	\N	2022-02-28 17:19:26.918106	2022-02-28 17:19:26.918079	fb3fa4db-1e2d-411b-a562-62abb403df4b	\N	2850
2791	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	2022-02-28 17:19:26.920403	2022-02-28 17:19:26.920371	3e4bc8ee-6f90-4b31-9ad2-e8d02e149449	\N	2851
2793	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	2022-02-28 17:19:26.9249	2022-02-28 17:19:26.92487	a2b939e1-ba5e-4973-939c-12e7dc1b000f	\N	2853
2794	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	Osage	The Osage Nation	\N	\N	\N	2022-02-28 17:19:26.927557	2022-02-28 17:19:26.927495	ab8b902f-adc1-4fc1-b551-d7bcbe27da69	\N	2854
2796	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	2022-02-28 17:19:26.931712	2022-02-28 17:19:26.931682	fb950a18-da06-470c-bef7-6d4034c610fb	\N	2856
2797	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	Ottawa of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.934585	2022-02-28 17:19:26.934552	87394c70-8d7f-409c-b56b-fe795f751aa5	\N	2857
2798	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	2022-02-28 17:19:26.936933	2022-02-28 17:19:26.936899	81dac418-7a68-48c6-8248-74d9f85f384c	\N	2858
2799	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	2022-02-28 17:19:26.939535	2022-02-28 17:19:26.939511	2efbcf1b-0119-42ed-87d4-04bbaff23ac0	\N	2859
2802	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	2022-02-28 17:19:26.946403	2022-02-28 17:19:26.946369	645741b9-0530-43fe-9e4f-65eebc32d05a	\N	2862
2804	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	2022-02-28 17:19:26.950214	2022-02-28 17:19:26.950173	8daadd0c-1250-4a8e-b228-13942cebab41	\N	2864
2805	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	2022-02-28 17:19:26.959791	2022-02-28 17:19:26.959715	28d973f4-c442-41a5-8692-967ad73b41f6	\N	2865
2807	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	2022-02-28 17:19:26.964244	2022-02-28 17:19:26.964107	3b6fb615-2cf1-4400-b1d6-87d45cb79ad7	\N	2867
2809	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	2022-02-28 17:19:26.973975	2022-02-28 17:19:26.973945	c646d61d-5a66-44af-9290-0b5b1a65ddd2	\N	2869
2811	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	2022-02-28 17:19:26.979446	2022-02-28 17:19:26.979419	27e5108c-28e8-4ea4-8b7f-29379c1010e0	\N	2871
2814	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	Peoria	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.984927	2022-02-28 17:19:26.984891	fe8737da-ef1f-49c7-bbb0-fcc72ffeb826	\N	2874
2815	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	2022-02-28 17:19:26.987547	2022-02-28 17:19:26.987512	0e89319a-b7c6-4364-b0d5-6bd6827e116e	\N	2875
2817	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	2022-02-28 17:19:26.992946	2022-02-28 17:19:26.992909	153a5b68-2600-414c-9efb-e66734073ed1	\N	2877
2818	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	2022-02-28 17:19:26.996475	2022-02-28 17:19:26.996386	2f5fe227-126c-4821-b8dd-86f51679e1c5	\N	2878
2820	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	2022-02-28 17:19:27.001308	2022-02-28 17:19:27.001206	552974cf-c8b1-44a7-ad46-0eab683a3259	\N	2880
2822	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Native Village of Pitka's Point	\N	\N	\N	2022-02-28 17:19:27.004661	2022-02-28 17:19:27.004648	1663d916-a35b-4d69-a156-7957e747dded	\N	2882
2824	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creeks	\N	\N	\N	2022-02-28 17:19:27.010542	2022-02-28 17:19:27.010507	2ab94bd3-5882-4282-8eb4-ccb1b206e558	\N	2884
2827	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan & Indiana	\N	\N	\N	2022-02-28 17:19:27.016047	2022-02-28 17:19:27.016009	38c8ce0b-2df6-4cbc-8f17-951876907ca7	\N	2887
2828	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	2022-02-28 17:19:27.019292	2022-02-28 17:19:27.019256	6eb3b649-4b31-43e2-ad60-4acb0e1eb6b2	\N	2888
2830	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	2022-02-28 17:19:27.024048	2022-02-28 17:19:27.023975	25a65bfe-39a8-4722-8dcd-140419ba7c16	\N	2890
2831	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	2022-02-28 17:19:27.026983	2022-02-28 17:19:27.026951	595a63e8-3a9b-4f5d-958a-084c0457a708	\N	2891
2834	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	2022-02-28 17:19:27.034552	2022-02-28 17:19:27.034515	6c78de8b-e7cf-4f88-a0ad-2347d6ecaf2d	\N	2894
2836	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band of Potawatomi Nation	\N	\N	\N	2022-02-28 17:19:27.039187	2022-02-28 17:19:27.039144	eef4b151-70c2-436f-a088-92793d1aa01e	\N	2896
2838	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma	\N	\N	\N	2022-02-28 17:19:27.044186	2022-02-28 17:19:27.044147	033f48ab-83cc-4957-a78f-a96f911dd1bb	\N	2898
2840	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta	\N	\N	\N	2022-02-28 17:19:27.048373	2022-02-28 17:19:27.048356	e4961fb6-a335-46af-ab28-14b5dfd4f4fd	\N	2900
2841	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez	\N	\N	\N	2022-02-28 17:19:27.051167	2022-02-28 17:19:27.051151	e8969a26-ae62-470f-a53f-a60db5d0474a	\N	2901
2452	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community of the Maricopa (Ak Chin) Indian Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:25.574035	2022-02-28 17:19:25.573767	f59e33ac-87fc-47da-8b66-d01738658ee9	\N	2512
2456	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	2022-02-28 17:19:25.587795	2022-02-28 17:19:25.587683	9dcc1094-1ce5-478e-ab0d-65f6cf9f4bed	\N	2516
2507	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.721659	2022-02-28 17:19:25.721632	b59ea8d7-3cf6-4472-b71e-6b64f4df7b65	\N	2567
2521	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	2022-02-28 17:19:25.757056	2022-02-28 17:19:25.756844	91a3f2c3-d9c7-4b49-af4b-cde4e82a7a52	\N	2581
2546	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	2022-02-28 17:19:25.820037	2022-02-28 17:19:25.819931	ebc398e3-5990-4e13-9b55-33fe5c88b997	\N	2606
2552	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	2022-02-28 17:19:25.833124	2022-02-28 17:19:25.833108	f5fe513a-32ed-42c6-a167-de2a2fc6a95b	\N	2612
2566	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	2022-02-28 17:19:25.870129	2022-02-28 17:19:25.870087	32038996-db97-4090-9516-60c7feb2bf72	\N	2626
2579	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	2022-02-28 17:19:25.900895	2022-02-28 17:19:25.900795	26b3cf06-f72e-48d4-99d5-1a5492df5018	\N	2639
2582	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	2022-02-28 17:19:25.911161	2022-02-28 17:19:25.911025	26c8e7dc-aeb9-424a-a94b-e486807b73b0	\N	2642
2628	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.027421	2022-02-28 17:19:26.027355	c2247047-d6b2-4167-8179-c9f07d290de5	\N	2688
2639	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	2022-02-28 17:19:26.058604	2022-02-28 17:19:26.058572	f5fc3940-fe11-4089-885a-b4accc85d013	\N	2699
2671	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	2022-02-28 17:19:26.137959	2022-02-28 17:19:26.137932	518b68ec-fa1b-40aa-81c3-0812051536e0	\N	2731
2703	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	2022-02-28 17:19:26.219673	2022-02-28 17:19:26.219617	dfc88857-3ba2-4dcb-a0b6-7aeb92b3e1e7	\N	2763
2708	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	2022-02-28 17:19:26.471313	2022-02-28 17:19:26.471241	4238eae9-74c2-48a8-8272-7a24e3eb727c	\N	2768
2712	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla & Cupeno Indians, California	\N	\N	\N	2022-02-28 17:19:26.482768	2022-02-28 17:19:26.482735	de001da5-cc8b-43ee-9d28-fbae6c27cb98	\N	2772
2715	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	2022-02-28 17:19:26.722858	2022-02-28 17:19:26.722663	be41cdc5-54cb-46f7-ad4b-73216df8e81e	\N	2775
2762	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	2022-02-28 17:19:26.847041	2022-02-28 17:19:26.847006	4b36130e-3679-4e7d-821d-d97cb92f078d	\N	2822
2808	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	Passamaquaddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	2022-02-28 17:19:26.965595	2022-02-28 17:19:26.96532	38e45843-fdf0-42fe-b1ab-31ad77823230	\N	2868
2812	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	Pechanga	Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	2022-02-28 17:19:26.979706	2022-02-28 17:19:26.979676	272e75e0-edd4-4305-a9e2-27234a910a8f	\N	2872
2813	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	2022-02-28 17:19:26.983409	2022-02-28 17:19:26.983367	1ae90826-f964-4b19-a73a-3d2ad30360f3	\N	2873
2816	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	2022-02-28 17:19:26.989235	2022-02-28 17:19:26.989184	281aa464-7a48-416e-aa98-bd9ce38917b5	\N	2876
2819	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	2022-02-28 17:19:26.997842	2022-02-28 17:19:26.997814	567bf1d2-a748-4192-bd1a-2b6b780fe91e	\N	2879
2821	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	2022-02-28 17:19:27.001419	2022-02-28 17:19:27.001402	3c60c8be-e62c-4d7c-a981-ce50dff5961a	\N	2881
2823	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	2022-02-28 17:19:27.006632	2022-02-28 17:19:27.006595	49c846f0-f976-418b-b785-21b4a0ef7a6c	\N	2883
2825	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	2022-02-28 17:19:27.012956	2022-02-28 17:19:27.012944	72caf056-91d0-4fa3-b734-7fe0e095793a	\N	2885
2826	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	2022-02-28 17:19:27.014455	2022-02-28 17:19:27.014443	10554229-6fc5-46b6-a1b0-232b00ddd6f1	\N	2886
2829	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	2022-02-28 17:19:27.023255	2022-02-28 17:19:27.023211	b0124a9d-1e13-4000-b935-c85afc5ac561	\N	2889
2832	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	2022-02-28 17:19:27.028393	2022-02-28 17:19:27.028347	a256c623-4b20-4043-b536-149c295ec546	\N	2892
2833	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	2022-02-28 17:19:27.033106	2022-02-28 17:19:27.033077	2c81b4d1-2db4-4755-a643-1458690b958c	\N	2893
2835	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	2022-02-28 17:19:27.037777	2022-02-28 17:19:27.037698	ba319d4e-cdc5-4344-b3a8-8eb6accfa6a9	\N	2895
2837	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of MN	\N	\N	\N	2022-02-28 17:19:27.043214	2022-02-28 17:19:27.043172	dec5e541-9dcf-40ad-84e6-4ed65b1e9066	\N	2897
2839	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti	\N	\N	\N	2022-02-28 17:19:27.047708	2022-02-28 17:19:27.047672	66784cc8-0eaf-4839-a356-4c8a82de7734	\N	2899
2842	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna	\N	\N	\N	2022-02-28 17:19:27.052973	2022-02-28 17:19:27.052936	34732c22-0d69-401c-be72-df06d1568e91	\N	2902
2844	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe	\N	\N	\N	2022-02-28 17:19:27.058197	2022-02-28 17:19:27.058166	157735cf-ffd5-45ca-ba3c-8ade8e6a2676	\N	2904
2845	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque	\N	\N	\N	2022-02-28 17:19:27.062046	2022-02-28 17:19:27.061985	7be4b47f-91d9-4bef-a3c9-3fa75bf5c16f	\N	2905
2846	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe	\N	\N	\N	2022-02-28 17:19:27.062598	2022-02-28 17:19:27.062546	ee81ba23-027c-4758-abbc-2c2c25de5f88	\N	2906
2847	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso	\N	\N	\N	2022-02-28 17:19:27.066053	2022-02-28 17:19:27.066016	cdbfb257-7597-493c-9499-774c97e10762	\N	2907
2848	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia	\N	\N	\N	2022-02-28 17:19:27.069583	2022-02-28 17:19:27.069546	316756a5-9e48-46e2-a26f-f7ca68f8daa7	\N	2908
2849	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana	\N	\N	\N	2022-02-28 17:19:27.073822	2022-02-28 17:19:27.073293	ceba6656-58f9-4c7a-8eb1-74871339faad	\N	2909
2850	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos	\N	\N	\N	2022-02-28 17:19:27.074507	2022-02-28 17:19:27.074452	c72304cd-b8f6-4779-a2d7-d6cc30b6150c	\N	2910
2851	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara	\N	\N	\N	2022-02-28 17:19:27.074865	2022-02-28 17:19:27.074765	c9d22bbf-4cbb-4e32-b896-7409d28906d7	\N	2911
2852	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque	\N	\N	\N	2022-02-28 17:19:27.078808	2022-02-28 17:19:27.078776	ca38b108-7a56-47ea-8b2b-a256208a0a05	\N	2912
2853	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia	\N	\N	\N	2022-02-28 17:19:27.082083	2022-02-28 17:19:27.082049	ab8af9f3-bbaa-443f-953c-f385bafa5976	\N	2913
2856	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	2022-02-28 17:19:27.328433	2022-02-28 17:19:27.328417	f9fb22e2-855a-48bd-8e1c-08ec74902729	\N	2916
2460	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	2022-02-28 17:19:25.598129	2022-02-28 17:19:25.598067	53fb162d-87a4-4e45-812d-7e5395477dc9	\N	2520
2462	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, CA	\N	\N	\N	2022-02-28 17:19:25.602359	2022-02-28 17:19:25.602264	20bc51e6-0a89-4968-b4ee-a10191d912d1	\N	2522
2464	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	2022-02-28 17:19:25.60791	2022-02-28 17:19:25.607873	a171662c-1f60-487d-a4f4-d5e472f6c14e	\N	2524
2466	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	2022-02-28 17:19:25.613702	2022-02-28 17:19:25.61365	388051e6-01d6-46ac-a83f-333988302193	\N	2526
2469	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	2022-02-28 17:19:25.619574	2022-02-28 17:19:25.619559	450ffd5e-5f7e-429a-811a-c136dec2b047	\N	2529
2470	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	2022-02-28 17:19:25.622945	2022-02-28 17:19:25.622911	14e1bf0b-49e9-44da-b17d-96ca43257a3c	\N	2530
2472	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	2022-02-28 17:19:25.627206	2022-02-28 17:19:25.627164	ca2e9152-9acd-479e-bee2-4f55da21b23d	\N	2532
2473	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	2022-02-28 17:19:25.629839	2022-02-28 17:19:25.629758	3be2746c-0f03-49ae-9023-48c62e9dbb6c	\N	2533
2475	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	2022-02-28 17:19:25.63549	2022-02-28 17:19:25.635447	7df3260a-ee5b-40ba-822d-a16386d70f7e	\N	2535
2478	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	2022-02-28 17:19:25.642135	2022-02-28 17:19:25.642119	131bc9bd-0d93-4f61-8af3-7d49792e86e5	\N	2538
2479	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	2022-02-28 17:19:25.644654	2022-02-28 17:19:25.64464	881fe56e-2a5e-4d28-89ac-6a6885415ef3	\N	2539
2480	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	Atqasuk	Atqasuk Village (Atkasook)	\N	\N	\N	2022-02-28 17:19:25.648146	2022-02-28 17:19:25.648112	adcc6a10-2273-4687-a020-8b93621d9ccf	\N	2540
2481	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	2022-02-28 17:19:25.650992	2022-02-28 17:19:25.650972	9b0263bb-2166-41df-8552-4e9ff40971f4	\N	2541
2483	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	2022-02-28 17:19:25.655091	2022-02-28 17:19:25.655032	6a438f6a-cc3e-4f32-9898-8b37906e9c38	\N	2543
2484	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	2022-02-28 17:19:25.657942	2022-02-28 17:19:25.657816	6f5234e1-d4ff-4e68-9775-02fd55965865	\N	2544
2486	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	2022-02-28 17:19:25.66354	2022-02-28 17:19:25.663499	01fcefa2-4031-43a8-9058-9f56966496ee	\N	2546
2487	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	2022-02-28 17:19:25.666566	2022-02-28 17:19:25.666524	d271db14-a210-4311-9889-ef7ff51cd05d	\N	2547
2489	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	2022-02-28 17:19:25.669511	2022-02-28 17:19:25.669427	365504de-a292-465e-855e-b446f9fd8190	\N	2549
2490	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.671925	2022-02-28 17:19:25.671905	2e64ac4f-b383-46b8-9ddd-0f31441dc2a1	\N	2550
2492	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	2022-02-28 17:19:25.677311	2022-02-28 17:19:25.677289	0ec8b9c9-2f4f-4b96-a8e5-bb9481d30116	\N	2552
2493	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.680828	2022-02-28 17:19:25.680808	62220476-2f0d-4b8e-b58a-3d795ca523ae	\N	2553
2495	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	2022-02-28 17:19:25.684356	2022-02-28 17:19:25.684305	bb9f699e-7312-488e-92a8-ff9c55ab427e	\N	2555
2496	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	2022-02-28 17:19:25.689112	2022-02-28 17:19:25.689086	e1383f19-ba56-45f4-94bb-7ffade4b0678	\N	2556
2498	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.700826	2022-02-28 17:19:25.700778	d043e144-e749-46b0-968a-1647ab8e243d	\N	2558
2500	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	2022-02-28 17:19:25.705186	2022-02-28 17:19:25.705153	0a8a3bdf-7806-45de-a361-ddf2c042c8ca	\N	2560
2503	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-wuk Indians of California	\N	\N	\N	2022-02-28 17:19:25.711253	2022-02-28 17:19:25.711223	da5868ef-28e4-40f6-bfbc-0930e338a9fb	\N	2563
2504	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	2022-02-28 17:19:25.714661	2022-02-28 17:19:25.714632	a006583c-5525-4e7e-8494-f656582432ff	\N	2564
2506	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.719162	2022-02-28 17:19:25.71915	5ca66e61-1960-4e7c-93ad-c0a8d6740017	\N	2566
2508	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	2022-02-28 17:19:25.723197	2022-02-28 17:19:25.723161	4e2796cd-3271-4d32-b1cf-4064baa30e4f	\N	2568
2509	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Mission Indians of the Cahuilla Reservation, California	\N	\N	\N	2022-02-28 17:19:25.726837	2022-02-28 17:19:25.726801	83f88f11-4cfe-4da0-8b03-0684215085ea	\N	2569
2511	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	2022-02-28 17:19:25.73095	2022-02-28 17:19:25.730682	9ee533b4-7643-4497-b056-fcd1613c5010	\N	2571
2512	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	2022-02-28 17:19:25.734233	2022-02-28 17:19:25.734193	861b4cd2-79ea-474d-874b-aec2b08840da	\N	2572
2513	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	2022-02-28 17:19:25.736837	2022-02-28 17:19:25.736801	ce411ce4-2814-487a-b009-163a8a4d5c2f	\N	2573
2515	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation	\N	\N	\N	2022-02-28 17:19:25.741757	2022-02-28 17:19:25.74172	25bc0bf5-cc5f-42a5-bde6-f9a668a7de38	\N	2575
2517	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	2022-02-28 17:19:25.746118	2022-02-28 17:19:25.746081	b0eaef84-f49f-4cc7-bcd0-499b1c656388	\N	2577
2518	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	2022-02-28 17:19:25.749405	2022-02-28 17:19:25.749369	f3d1177a-05d0-4174-97d4-7ce4bad15686	\N	2578
2519	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	2022-02-28 17:19:25.752055	2022-02-28 17:19:25.752018	40f5bddc-770a-4520-8376-b885de2a6b7e	\N	2579
2520	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	2022-02-28 17:19:25.756844	2022-02-28 17:19:25.756766	2893743e-4ac3-4ea3-bf9d-4af2878ea91a	\N	2580
2523	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.761566	2022-02-28 17:19:25.761525	e30ddc3b-4b8f-4575-bb82-c476646be557	\N	2583
2524	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	2022-02-28 17:19:25.764666	2022-02-28 17:19:25.764631	49f9caf2-10c6-4d79-bd7f-e2dac838e07b	\N	2584
2525	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	2022-02-28 17:19:25.768957	2022-02-28 17:19:25.768942	bc4c3c4b-a826-4de6-91de-c833caeb6408	\N	2585
2526	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	2022-02-28 17:19:25.771504	2022-02-28 17:19:25.771469	66684573-8342-49b8-8b4a-eae9615e3a88	\N	2586
2528	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	Inc.	Chickahominy Indian Tribe, Inc.	\N	\N	\N	2022-02-28 17:19:25.776216	2022-02-28 17:19:25.776193	27a8f0d0-b73e-4d84-ae88-cbebb22463fb	\N	2588
2465	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	2022-02-28 17:19:25.608443	2022-02-28 17:19:25.608408	3f97da1e-3dae-47eb-831e-68ef19da22df	\N	2525
2467	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	2022-02-28 17:19:25.614015	2022-02-28 17:19:25.613883	43e402b1-6bb0-40b3-aa1a-e6d33e19e522	\N	2527
2468	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	2022-02-28 17:19:25.618613	2022-02-28 17:19:25.618597	7017879c-fbf0-4c2e-852e-f48b149a67e9	\N	2528
2471	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.625002	2022-02-28 17:19:25.624974	41cbd192-2e77-49a7-9a76-93be532bda8d	\N	2531
2474	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	Aroostok	Aroostook Band of Micmacs	\N	\N	\N	2022-02-28 17:19:25.631716	2022-02-28 17:19:25.631667	11df06e1-0f42-444a-8cc1-91ad618de50d	\N	2534
2476	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community	\N	\N	\N	2022-02-28 17:19:25.63581	2022-02-28 17:19:25.635783	4e3bef2b-e593-4ac8-a178-f6e4051d37a5	\N	2536
2477	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, MT	\N	\N	\N	2022-02-28 17:19:25.640476	2022-02-28 17:19:25.640396	1516826b-0fae-43c4-8796-64f88dc98aa1	\N	2537
2482	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of Lake Superior Tribe of Chippewa Indians	\N	\N	\N	2022-02-28 17:19:25.653448	2022-02-28 17:19:25.653428	2289963b-ab77-4588-9a2a-a8310b11a052	\N	2542
2485	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.658996	2022-02-28 17:19:25.658909	c1c8a9b5-4b29-454e-b270-23f25e83c40f	\N	2545
2488	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	2022-02-28 17:19:25.667809	2022-02-28 17:19:25.667616	7aca7fc0-1685-4c73-a65b-06b7d83d8341	\N	2548
2491	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	2022-02-28 17:19:25.67666	2022-02-28 17:19:25.676622	d467434b-288b-4a37-8163-d48edacf3d62	\N	2551
2494	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	2022-02-28 17:19:25.68124	2022-02-28 17:19:25.681228	f91f4f7f-c788-4754-b94b-5cceaaeb8429	\N	2554
2497	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of MT	\N	\N	\N	2022-02-28 17:19:25.690345	2022-02-28 17:19:25.690311	0e2897e0-b0c2-4458-aa2a-b578c261e60f	\N	2557
2499	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	2022-02-28 17:19:25.70112	2022-02-28 17:19:25.701089	0212616a-d9bb-4214-8ca0-9e1ea31e8c68	\N	2559
2501	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	2022-02-28 17:19:25.705643	2022-02-28 17:19:25.70561	e6b29f2a-21e9-45e8-a8d7-b648607acf25	\N	2561
2502	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	2022-02-28 17:19:25.70988	2022-02-28 17:19:25.709849	3202ac83-fa1c-4291-a583-5a90eb457f51	\N	2562
2505	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	2022-02-28 17:19:25.716634	2022-02-28 17:19:25.716621	fc110392-2fa3-4ebb-85b6-5b52c8d4ad0e	\N	2565
2510	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	2022-02-28 17:19:25.729903	2022-02-28 17:19:25.729785	b4ecb068-a419-4ac9-aea8-b939ed2f2c06	\N	2570
2514	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	2022-02-28 17:19:25.74089	2022-02-28 17:19:25.740856	626b2d48-b496-4bf8-92fc-6cc6da6ae325	\N	2574
2516	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.744548	2022-02-28 17:19:25.744516	2168fc61-e729-46bd-9bee-1587293bec0c	\N	2576
2522	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	2022-02-28 17:19:25.758568	2022-02-28 17:19:25.75855	a3b28786-d680-44a4-9b9b-9dab98bf3e38	\N	2582
2527	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	Cheyenne-Arapaho	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	2022-02-28 17:19:25.773581	2022-02-28 17:19:25.773549	4de23f50-e5fa-46e9-b577-bbfad019da76	\N	2587
2529	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	2022-02-28 17:19:25.779485	2022-02-28 17:19:25.779449	70614090-8cbf-43de-87bb-8beded0b6755	\N	2589
2532	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	2022-02-28 17:19:25.785911	2022-02-28 17:19:25.785882	258d62af-67ef-42fb-b9c2-c21d445deb86	\N	2592
2534	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	2022-02-28 17:19:25.790533	2022-02-28 17:19:25.790497	5f61fe09-a330-4456-bc24-11ff04debb17	\N	2594
2536	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	2022-02-28 17:19:25.795104	2022-02-28 17:19:25.795072	d505fe82-7084-4d89-9e15-3adc39953dc8	\N	2596
2537	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, MT	\N	\N	\N	2022-02-28 17:19:25.798988	2022-02-28 17:19:25.798958	09044131-7755-4ab3-a8d3-afaf0924feec	\N	2597
2540	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	2022-02-28 17:19:25.804506	2022-02-28 17:19:25.80449	caaa41d7-11f2-41dd-a64c-143c4a6c11c4	\N	2600
2542	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	2022-02-28 17:19:25.80925	2022-02-28 17:19:25.809217	2a39d406-bfc2-46aa-88a7-14d302f10278	\N	2602
2544	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	2022-02-28 17:19:25.813722	2022-02-28 17:19:25.813688	4a4e1579-b80c-498c-9db3-065e498564f7	\N	2604
2547	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	2022-02-28 17:19:25.821707	2022-02-28 17:19:25.821676	6a75d461-4abd-48e9-ac80-f4399381afd8	\N	2607
2550	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	2022-02-28 17:19:25.830509	2022-02-28 17:19:25.830464	e665da43-2479-42f5-afe1-4f6154f48bff	\N	2610
2554	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	2022-02-28 17:19:25.84073	2022-02-28 17:19:25.840707	ce3d6e91-0082-4277-a4a8-d46d50f4223c	\N	2614
2557	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	2022-02-28 17:19:25.847189	2022-02-28 17:19:25.847176	d159c11c-960b-4bad-a0a2-62678ba6b4ed	\N	2617
2558	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	2022-02-28 17:19:25.850856	2022-02-28 17:19:25.850822	622b232b-45b9-438c-a31b-3a901f86c844	\N	2618
2560	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	2022-02-28 17:19:25.856359	2022-02-28 17:19:25.856326	572b9c8a-693b-4e84-a74e-51030af8a9b0	\N	2620
2562	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	2022-02-28 17:19:25.86035	2022-02-28 17:19:25.860332	38c79f02-69f3-4d71-89b2-fff5ff0c7a98	\N	2622
2564	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	2022-02-28 17:19:25.865972	2022-02-28 17:19:25.865942	e3f83306-6db8-4870-bade-68c208c83279	\N	2624
2567	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	2022-02-28 17:19:25.871056	2022-02-28 17:19:25.871035	83968d7f-f1ae-487f-babc-f1534b9e62cf	\N	2627
2569	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	2022-02-28 17:19:25.878442	2022-02-28 17:19:25.878395	e3034110-dc19-4409-be30-852e89d5974d	\N	2629
2571	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	2022-02-28 17:19:25.882439	2022-02-28 17:19:25.882401	0c7c893e-11ec-4a98-ae66-cb6db5fd337e	\N	2631
2575	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	2022-02-28 17:19:25.890851	2022-02-28 17:19:25.890819	cf87af01-56fb-4337-aceb-ea7a4fa9ea49	\N	2635
2843	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris	\N	\N	\N	2022-02-28 17:19:27.058119	2022-02-28 17:19:27.058081	5282d318-4491-4638-8aba-2e8ed97de5a3	\N	2903
2530	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	2022-02-28 17:19:25.78075	2022-02-28 17:19:25.78072	756ec7aa-8365-4122-8dc4-aacd1435750e	\N	2590
2531	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-wuk Indians of California	\N	\N	\N	2022-02-28 17:19:25.784255	2022-02-28 17:19:25.784224	528e7e35-eead-426d-bcab-dd214094d476	\N	2591
2533	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	2022-02-28 17:19:25.788442	2022-02-28 17:19:25.788411	b5e3afe1-940e-4866-b93b-f3c9b13d6eb1	\N	2593
2535	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	2022-02-28 17:19:25.793917	2022-02-28 17:19:25.793882	8b705334-cf9e-410f-837d-d7416fbb61b9	\N	2595
2538	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	2022-02-28 17:19:25.799678	2022-02-28 17:19:25.799643	1da5bd1f-192f-453a-a31d-4190f45147fe	\N	2598
2539	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	2022-02-28 17:19:25.803453	2022-02-28 17:19:25.803344	d8743859-bc83-4576-9012-cfcbc93d3076	\N	2599
2541	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.809085	2022-02-28 17:19:25.809049	789d3e1c-dde4-4d23-8285-ba150175b2ba	\N	2601
2543	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	2022-02-28 17:19:25.812063	2022-02-28 17:19:25.811878	3de50c85-10de-4388-b5d2-a01f669d63d1	\N	2603
2545	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation (Oklahoma)	\N	\N	\N	2022-02-28 17:19:25.819727	2022-02-28 17:19:25.819679	157229fc-39b4-4130-967a-26a410d13066	\N	2605
2548	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	2022-02-28 17:19:25.824498	2022-02-28 17:19:25.824468	4856197a-369d-403a-94ed-f616ec3876c3	\N	2608
2549	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	2022-02-28 17:19:25.827745	2022-02-28 17:19:25.827716	069e0d84-7cf8-46ab-b385-8da5a5667275	\N	2609
2551	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado Indian Reservation, Arizona and California	\N	\N	\N	2022-02-28 17:19:25.831998	2022-02-28 17:19:25.83186	5a32b5c3-78ce-4a17-b2f7-957169883119	\N	2611
2553	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	2022-02-28 17:19:25.837061	2022-02-28 17:19:25.837003	7e0da0d2-0bfd-415b-bde3-68b8e01042ae	\N	2613
2555	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	2022-02-28 17:19:25.841996	2022-02-28 17:19:25.841969	56c44b30-64ad-4eae-adb4-752fc41b5426	\N	2615
2556	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish & Kootenai Tribes of the Flathead Reservation	\N	\N	\N	2022-02-28 17:19:25.846734	2022-02-28 17:19:25.846697	a86b3d38-524a-4718-a559-b66055309889	\N	2616
2559	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	2022-02-28 17:19:25.852385	2022-02-28 17:19:25.852344	dcd7efc3-8de6-4818-9592-90903a2268af	\N	2619
2561	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	2022-02-28 17:19:25.857255	2022-02-28 17:19:25.857222	376707a9-110e-4a0e-a710-5ce199053080	\N	2621
2563	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	2022-02-28 17:19:25.862055	2022-02-28 17:19:25.862015	2fc9fcc7-6325-4a3a-8565-059a838f3e22	\N	2623
2565	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	2022-02-28 17:19:25.866881	2022-02-28 17:19:25.866842	d7697afa-07f2-42e2-a9ba-d5a7a45f0d34	\N	2625
2568	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, SD	\N	\N	\N	2022-02-28 17:19:25.873035	2022-02-28 17:19:25.872931	c1ec2e06-d897-4664-9327-6d6c9e430a4c	\N	2628
2570	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	2022-02-28 17:19:25.879438	2022-02-28 17:19:25.879402	5be932fb-b501-429c-a8bc-6b05bf557513	\N	2630
2572	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	2022-02-28 17:19:25.883758	2022-02-28 17:19:25.883711	7992b36a-5f51-42ed-9663-1cff976f9df8	\N	2632
2573	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	2022-02-28 17:19:25.886293	2022-02-28 17:19:25.886255	ba1705a1-3c67-40c3-8a5e-ed519620c587	\N	2633
2574	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	2022-02-28 17:19:25.890461	2022-02-28 17:19:25.890428	3d2762c6-1bcd-4472-a4f1-68b425b15f44	\N	2634
2576	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	2022-02-28 17:19:25.894912	2022-02-28 17:19:25.894874	9e78621b-bd0e-45f4-a95a-735d0718e715	\N	2636
2578	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	2022-02-28 17:19:25.89965	2022-02-28 17:19:25.899586	288a15be-d0a8-463c-9c06-263daf43e872	\N	2638
2580	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.903285	2022-02-28 17:19:25.903255	8f78f4ee-fe68-4d8c-befa-825402a8c3ef	\N	2640
2581	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2022-02-28 17:19:25.911058	2022-02-28 17:19:25.910916	4e95d2dc-a800-4ed5-83aa-dcb32e995227	\N	2641
2586	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	2022-02-28 17:19:25.922162	2022-02-28 17:19:25.922122	375a53a2-64a6-4588-b685-a24c883e0b76	\N	2646
2588	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	2022-02-28 17:19:25.926007	2022-02-28 17:19:25.925911	a8c4db7f-02a7-48c0-8d5a-36ac006654dc	\N	2648
2590	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	2022-02-28 17:19:25.932256	2022-02-28 17:19:25.932193	c00e8039-1486-4207-a882-f574384bef48	\N	2650
2592	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	2022-02-28 17:19:25.936052	2022-02-28 17:19:25.936001	a1c9e80c-7803-4661-93b3-b7c620bed513	\N	2652
2593	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	2022-02-28 17:19:25.939426	2022-02-28 17:19:25.939387	8bc3d833-bf24-4452-a0e2-7a5a6933eb5f	\N	2653
2594	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	2022-02-28 17:19:25.943224	2022-02-28 17:19:25.943189	38f5d858-269f-4060-9d8b-ddf65599700e	\N	2654
2597	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.949487	2022-02-28 17:19:25.949447	15e06dbc-89b9-4e06-bf96-edd51a4a8479	\N	2657
2599	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	2022-02-28 17:19:25.953787	2022-02-28 17:19:25.953752	b261348d-b327-4843-8d22-efba29494037	\N	2659
2600	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	2022-02-28 17:19:25.958613	2022-02-28 17:19:25.958573	a6528ab2-2545-41d7-aecc-f9236be5c44a	\N	2660
2601	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	2022-02-28 17:19:25.961341	2022-02-28 17:19:25.961311	b3219d34-e62c-49e4-82f4-8b9c4020af63	\N	2661
2603	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	2022-02-28 17:19:25.964288	2022-02-28 17:19:25.964236	e327565b-717a-4c7b-83c9-dc755e43fefa	\N	2663
2605	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	2022-02-28 17:19:25.969075	2022-02-28 17:19:25.969039	3d37ec52-5d80-4003-becd-ca325515dcc0	\N	2665
2606	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:25.973712	2022-02-28 17:19:25.973677	abd8f78c-41a9-41ae-9b1c-26ec9a74c892	\N	2666
2577	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:25.89945	2022-02-28 17:19:25.899329	91d8096f-aafa-429d-b17e-b5c0429a1d0a	\N	2637
2584	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	2022-02-28 17:19:25.914173	2022-02-28 17:19:25.91416	577e3fb7-65f0-450f-9ac8-c6f745bb87ed	\N	2644
2585	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	2022-02-28 17:19:25.921057	2022-02-28 17:19:25.921026	929f8b9a-fbc0-4a9f-8a9d-54d183d081d4	\N	2645
2587	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.925094	2022-02-28 17:19:25.92508	0408d6ef-7f44-44a8-8fa7-3ec7464670e7	\N	2647
2589	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	2022-02-28 17:19:25.931188	2022-02-28 17:19:25.931156	fe199a63-cbb5-40b8-a255-fa6a35f4a1ff	\N	2649
2591	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	2022-02-28 17:19:25.934123	2022-02-28 17:19:25.934086	58aa1271-ae5f-490d-9b58-52122f1ce771	\N	2651
2595	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	2022-02-28 17:19:25.944356	2022-02-28 17:19:25.944332	505531a9-810a-46dd-a307-05f38896e5b0	\N	2655
2596	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	2022-02-28 17:19:25.948858	2022-02-28 17:19:25.948805	928cd5f6-efe6-4e27-9a1e-1d3e74c17b7a	\N	2656
2598	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	2022-02-28 17:19:25.951847	2022-02-28 17:19:25.951749	468743e8-5207-45fc-a5ee-23ccab6dae17	\N	2658
2602	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	2022-02-28 17:19:25.962464	2022-02-28 17:19:25.962415	c65c51a5-41a7-4d6f-9564-10e2bd307ac0	\N	2662
2604	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	2022-02-28 17:19:25.966205	2022-02-28 17:19:25.966172	e2a9cb71-2c43-4e75-a072-9ccbe273c2ae	\N	2664
2607	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	2022-02-28 17:19:25.9741	2022-02-28 17:19:25.974031	dba05895-295a-4e12-8532-8fb2e84381b4	\N	2667
2609	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	2022-02-28 17:19:25.978542	2022-02-28 17:19:25.978511	64ffe9fc-316b-496e-b85c-bc0e44cfd546	\N	2669
2612	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:25.987104	2022-02-28 17:19:25.987089	704b67c7-b7c6-4256-9f2b-d4ec6bcc7f07	\N	2672
2614	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	2022-02-28 17:19:25.99101	2022-02-28 17:19:25.990942	9c38347f-ddc8-48fc-8c1b-32778ed57b8c	\N	2674
2615	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	2022-02-28 17:19:25.995655	2022-02-28 17:19:25.995621	041ddabf-cf8c-4386-8b59-9a98a5890a1f	\N	2675
2617	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	2022-02-28 17:19:25.999687	2022-02-28 17:19:25.99963	5f59e96e-4888-4dc6-9cec-6dce4cd9f817	\N	2677
2619	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	2022-02-28 17:19:26.004371	2022-02-28 17:19:26.004341	0fba81bc-fef4-4d01-b877-73b379330258	\N	2679
2621	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village	\N	\N	\N	2022-02-28 17:19:26.009457	2022-02-28 17:19:26.009419	83b9f756-9502-40aa-9e4f-8af480ba922c	\N	2681
2624	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	2022-02-28 17:19:26.015408	2022-02-28 17:19:26.015381	222d4d51-9353-4ae4-82b5-eb5edf07ba5f	\N	2684
2626	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	2022-02-28 17:19:26.022722	2022-02-28 17:19:26.022698	1bfb3969-9065-43d0-a1f2-5ac3d7109c23	\N	2686
2631	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	2022-02-28 17:19:26.03999	2022-02-28 17:19:26.039959	b9da96f0-db87-46e8-96bd-c81325bb4651	\N	2691
2633	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	2022-02-28 17:19:26.04467	2022-02-28 17:19:26.044637	df60adfc-8028-4247-aaa2-5fd03acf6d42	\N	2693
2635	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	2022-02-28 17:19:26.049299	2022-02-28 17:19:26.049269	110eeda4-fcc7-416d-81d5-1feef13898da	\N	2695
2638	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	2022-02-28 17:19:26.057155	2022-02-28 17:19:26.05711	c568e0f1-1522-4103-84d7-b925eb94338d	\N	2698
2642	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	2022-02-28 17:19:26.067	2022-02-28 17:19:26.066972	77f83952-1012-4095-a559-87d54cca5188	\N	2702
2645	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	2022-02-28 17:19:26.07332	2022-02-28 17:19:26.073204	aa7c7556-8dc3-44c8-b5be-05fc43faae7d	\N	2705
2649	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	2022-02-28 17:19:26.081883	2022-02-28 17:19:26.081869	27e29918-3caa-47cb-a04f-2c0ea1fabd40	\N	2709
2651	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	2022-02-28 17:19:26.089876	2022-02-28 17:19:26.089842	312b81e0-41fc-47b1-b723-459d680e8d6e	\N	2711
2653	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	2022-02-28 17:19:26.093963	2022-02-28 17:19:26.093897	bd6b4b20-1f81-457a-b266-a3541ed25ed1	\N	2713
2656	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	2022-02-28 17:19:26.10107	2022-02-28 17:19:26.101036	d071ec07-fe3e-4085-b148-d8666dc44e16	\N	2716
2658	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	2022-02-28 17:19:26.106239	2022-02-28 17:19:26.106212	9b77acb7-f167-4661-b730-076a28214da3	\N	2718
2660	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	2022-02-28 17:19:26.110135	2022-02-28 17:19:26.109935	9cc52a2e-f1c1-4e66-8819-5256505495cb	\N	2720
2662	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	2022-02-28 17:19:26.114942	2022-02-28 17:19:26.1149	24d4db69-72ed-48d3-b6c3-9596f3eeec07	\N	2722
2665	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	2022-02-28 17:19:26.12287	2022-02-28 17:19:26.12275	8273fd04-15e8-4690-b310-b48964472cb0	\N	2725
2666	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	2022-02-28 17:19:26.126399	2022-02-28 17:19:26.126345	0ae42168-ce8f-4f19-bde7-614eb3d49dd0	\N	2726
2670	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	Kewa Pueblo	Kewa Pueblo	\N	\N	\N	2022-02-28 17:19:26.135892	2022-02-28 17:19:26.13581	f7ef85bd-d658-4b50-bda9-5ec65221f031	\N	2730
2675	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.147997	2022-02-28 17:19:26.147964	050ef114-998f-446b-9d29-1d9f96aad3f8	\N	2735
2676	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	2022-02-28 17:19:26.152052	2022-02-28 17:19:26.152018	8bc03b2b-7941-4bf2-999d-23eaee47001e	\N	2736
2678	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Tribe	\N	\N	\N	2022-02-28 17:19:26.158498	2022-02-28 17:19:26.158466	c22a6ca7-e316-4218-bd6d-cf48d0a1ff02	\N	2738
2681	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	2022-02-28 17:19:26.162989	2022-02-28 17:19:26.162953	87111bad-5fcb-4aa2-934a-8490ea75ae32	\N	2741
2684	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	Kluti-Kaah	Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	2022-02-28 17:19:26.171017	2022-02-28 17:19:26.170983	b529bf61-be6b-479d-998c-97e24c00eb16	\N	2744
2686	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	2022-02-28 17:19:26.175791	2022-02-28 17:19:26.175751	aa2dfaf0-f6d9-4359-9d93-5fff46871a5a	\N	2746
2687	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	2022-02-28 17:19:26.17848	2022-02-28 17:19:26.178452	cb471c3c-c153-4039-b070-a9253a4612e3	\N	2747
2690	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	2022-02-28 17:19:26.185256	2022-02-28 17:19:26.185221	ea64dd31-778c-4d0b-b1b9-f6904238bfe2	\N	2750
2608	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	2022-02-28 17:19:25.978215	2022-02-28 17:19:25.97819	8d3cb341-1863-47f1-a63d-17514086a41c	\N	2668
2610	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	2022-02-28 17:19:25.982732	2022-02-28 17:19:25.982702	4e554120-6b08-41de-9c4d-2da61eb1507b	\N	2670
2611	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	2022-02-28 17:19:25.984976	2022-02-28 17:19:25.98489	5a27a2f5-f140-4fbb-abee-05055b0f8774	\N	2671
2613	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	2022-02-28 17:19:25.989051	2022-02-28 17:19:25.988975	8e517467-3c81-4b5b-8878-26392d925253	\N	2673
2616	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa & Chippewa Indians, Michigan	\N	\N	\N	2022-02-28 17:19:25.99632	2022-02-28 17:19:25.996286	f8c3f0cc-1977-400d-ac10-33db9ae0ae8c	\N	2676
2618	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	2022-02-28 17:19:26.000681	2022-02-28 17:19:26.000643	c420e9d6-92ed-4630-8142-00f6c7227df8	\N	2678
2620	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	2022-02-28 17:19:26.005238	2022-02-28 17:19:26.005205	835441f3-bed6-40e7-bd15-e2b9520fe2cc	\N	2680
2622	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	2022-02-28 17:19:26.01018	2022-02-28 17:19:26.010119	e9303ad2-0ab9-42b0-92e0-519de9068f5f	\N	2682
2623	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	2022-02-28 17:19:26.015324	2022-02-28 17:19:26.015288	f45392e8-5cff-4f3a-8e38-5e8e9d628dac	\N	2683
2625	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:26.021385	2022-02-28 17:19:26.020803	d10b2471-9a7b-4cfe-8bda-ee85886cbd67	\N	2685
2627	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	2022-02-28 17:19:26.02739	2022-02-28 17:19:26.027321	70b7bd06-86c0-42cc-982d-beaa32eb087c	\N	2687
2629	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Village	\N	\N	\N	2022-02-28 17:19:26.033095	2022-02-28 17:19:26.033048	ab279f55-278c-422a-a561-7ef5a08af347	\N	2689
2630	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	2022-02-28 17:19:26.03567	2022-02-28 17:19:26.035633	af4cd8a1-a07a-4e96-acea-a35aeec02f67	\N	2690
2632	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	2022-02-28 17:19:26.040862	2022-02-28 17:19:26.04082	790e97bd-f711-4703-88ad-7303c1306ca0	\N	2692
2634	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	2022-02-28 17:19:26.045461	2022-02-28 17:19:26.045425	4a9e1dd3-3ad6-4c86-a970-8c2a3b1df6db	\N	2694
2636	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:26.050064	2022-02-28 17:19:26.050031	635e7408-4d9c-4693-9a8d-f506a3ba0217	\N	2696
2637	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	2022-02-28 17:19:26.053513	2022-02-28 17:19:26.053475	145d5676-d918-4f02-bc6a-7846932188a7	\N	2697
2640	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	2022-02-28 17:19:26.060154	2022-02-28 17:19:26.060123	87f4d2bc-3d3e-402a-a26c-470c50fa9151	\N	2700
2641	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	2022-02-28 17:19:26.062487	2022-02-28 17:19:26.062458	6e16d8d6-fa51-4114-899e-3e466c854831	\N	2701
2643	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	2022-02-28 17:19:26.067803	2022-02-28 17:19:26.067763	273e8987-ce02-49e3-9215-1ff6e1fa648b	\N	2703
2644	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas & Nebraska	\N	\N	\N	2022-02-28 17:19:26.072886	2022-02-28 17:19:26.072845	bc35351d-3112-4a80-917a-6efb08fcbfdd	\N	2704
2646	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.075259	2022-02-28 17:19:26.075243	2adc9477-7d48-48d2-a905-7ed9011538d7	\N	2706
2647	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	Iqurmuit	Iqurmuit Traditional Council	\N	\N	\N	2022-02-28 17:19:26.078312	2022-02-28 17:19:26.078278	238bb589-45ee-4411-8c7f-6bd90fde427b	\N	2707
2648	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	2022-02-28 17:19:26.081394	2022-02-28 17:19:26.081359	4bcf5486-6a26-47c4-bf46-8ec8bc3a833a	\N	2708
2650	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	2022-02-28 17:19:26.086815	2022-02-28 17:19:26.086778	30219bde-f4ed-41ce-93cc-f9e4c4bcd999	\N	2710
2652	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	2022-02-28 17:19:26.091353	2022-02-28 17:19:26.091318	9b9905a7-9d77-480f-aca4-a0562579b563	\N	2712
2654	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	2022-02-28 17:19:26.095477	2022-02-28 17:19:26.095441	0a6a6bda-000d-4ff4-925c-86aa4607ef8b	\N	2714
2655	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:26.098765	2022-02-28 17:19:26.098722	557bcd4e-457b-4dd5-a182-18f7afa611e7	\N	2715
2657	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	2022-02-28 17:19:26.104943	2022-02-28 17:19:26.104884	04ecd85f-0b94-4849-8c64-0ac001cf6738	\N	2717
2659	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	2022-02-28 17:19:26.109619	2022-02-28 17:19:26.109584	62f6a97a-cf80-465f-8eb7-7ac449f851f2	\N	2719
2661	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	2022-02-28 17:19:26.11304	2022-02-28 17:19:26.11301	1dcc4094-2a5e-4cbe-a34f-0ed9a4b5c4a5	\N	2721
2663	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	2022-02-28 17:19:26.117754	2022-02-28 17:19:26.117723	9fc11e6b-c887-44fb-92ff-9ac81a2e7faf	\N	2723
2664	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	2022-02-28 17:19:26.122619	2022-02-28 17:19:26.122581	08c3d92a-4627-4357-9a5d-808d29c9ab25	\N	2724
2667	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	2022-02-28 17:19:26.127218	2022-02-28 17:19:26.127047	c7abfda4-8a33-451a-b145-dd375378cf85	\N	2727
2668	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.132081	2022-02-28 17:19:26.132043	be1b51ca-f44b-4df2-b957-1f83536a70d5	\N	2728
2669	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Corporation	\N	\N	\N	2022-02-28 17:19:26.135876	2022-02-28 17:19:26.135611	be0a3604-3e9a-4d82-b8a2-393d385a89c7	\N	2729
2672	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	2022-02-28 17:19:26.14022	2022-02-28 17:19:26.140185	5caa1bcd-4c84-47cd-bea9-143276c027d8	\N	2732
2673	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	2022-02-28 17:19:26.143634	2022-02-28 17:19:26.1436	a08a2c09-7ce1-40dd-abb6-fcc6e9fcb30d	\N	2733
2674	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe in Kansas	\N	\N	\N	2022-02-28 17:19:26.147715	2022-02-28 17:19:26.147682	f1b46356-06e6-44d7-88d7-31c1f717fb86	\N	2734
2677	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	2022-02-28 17:19:26.153472	2022-02-28 17:19:26.153442	07a9e2cc-877b-44d0-865a-80264ad1d162	\N	2737
2679	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	2022-02-28 17:19:26.159243	2022-02-28 17:19:26.159189	ad1a19bf-8e7e-4968-842e-0ed211f5ddc7	\N	2739
2680	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	2022-02-28 17:19:26.161869	2022-02-28 17:19:26.161857	d3992d0f-eb0d-4939-b53b-c43cd2459bf7	\N	2740
2682	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	2022-02-28 17:19:26.165855	2022-02-28 17:19:26.165819	1486ad6a-a0d4-4129-8eca-03370d2a7aff	\N	2742
2683	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	2022-02-28 17:19:26.168978	2022-02-28 17:19:26.168952	2194a8bf-7064-468a-a584-59089c5b5c83	\N	2743
2685	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	2022-02-28 17:19:26.174695	2022-02-28 17:19:26.17466	9d4e4a4c-4dc5-4a77-9c04-ac0102c99afa	\N	2745
2688	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	2022-02-28 17:19:26.180061	2022-02-28 17:19:26.180037	7a1b816d-a9e1-4efc-8eb5-70a05c2ff1ae	\N	2748
2689	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	2022-02-28 17:19:26.184101	2022-02-28 17:19:26.184063	d0cb6095-d7d6-44a0-97c0-8c3f923769d2	\N	2749
2691	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	2022-02-28 17:19:26.188264	2022-02-28 17:19:26.188226	2affcb99-f535-42f5-b710-2d8e99c5bbbc	\N	2751
2692	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	2022-02-28 17:19:26.19251	2022-02-28 17:19:26.192475	66799e63-fd90-401b-9a7c-bd094e6d0645	\N	2752
2694	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	2022-02-28 17:19:26.195352	2022-02-28 17:19:26.195336	38261cce-eb4c-4136-bb2d-5847526ece6d	\N	2754
2696	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	2022-02-28 17:19:26.200726	2022-02-28 17:19:26.200687	33ddcb86-17bf-477a-be38-3dd878742d69	\N	2756
2698	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	2022-02-28 17:19:26.20534	2022-02-28 17:19:26.205304	5ddda0ac-459a-458f-9042-923f17fba090	\N	2758
2700	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2022-02-28 17:19:26.209833	2022-02-28 17:19:26.209813	85ae135a-e1d0-4ad8-874a-c3d6029ac7f2	\N	2760
2702	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of MI	\N	\N	\N	2022-02-28 17:19:26.215844	2022-02-28 17:19:26.215809	ed602f5c-bc14-4ee1-b655-4a4c997b58f9	\N	2762
2707	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	2022-02-28 17:19:26.470418	2022-02-28 17:19:26.470296	754b5b65-62d9-49dd-af27-fc67112aa8c6	\N	2767
2711	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	2022-02-28 17:19:26.479629	2022-02-28 17:19:26.479596	1ce3ae26-2f90-42c1-8066-697407deb949	\N	2771
2713	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, SD	\N	\N	\N	2022-02-28 17:19:26.719132	2022-02-28 17:19:26.719113	0b4dabfe-bd9a-4d0b-8a9b-2c279b00fc6e	\N	2773
2716	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	2022-02-28 17:19:26.723949	2022-02-28 17:19:26.723755	6e2b7b6c-4ce9-4eef-b757-5e229e27879e	\N	2776
2717	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	2022-02-28 17:19:26.728469	2022-02-28 17:19:26.728426	9819f074-6f86-4f32-a784-9f294200b88f	\N	2777
2718	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	2022-02-28 17:19:26.732749	2022-02-28 17:19:26.732713	67ed7370-b96a-40ff-93c4-5fff85141cab	\N	2778
2720	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	2022-02-28 17:19:26.737455	2022-02-28 17:19:26.737202	de9dcabe-2583-4aee-9fe4-32d157fe421c	\N	2780
2722	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	2022-02-28 17:19:26.742664	2022-02-28 17:19:26.742625	96e5c0f9-73b5-4e4e-b7c4-02c0bbf0d4f0	\N	2782
2723	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, Califonria	\N	\N	\N	2022-02-28 17:19:26.746914	2022-02-28 17:19:26.746876	a1a28a4c-00db-4195-8eb7-5b01112bc533	\N	2783
2724	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	2022-02-28 17:19:26.749348	2022-02-28 17:19:26.749329	46e28b6d-6b05-4888-8640-905e6d3235e1	\N	2784
2726	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.754054	2022-02-28 17:19:26.753992	6347b9b1-22bd-4fd5-af6f-15d8ca703816	\N	2786
2727	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	2022-02-28 17:19:26.757084	2022-02-28 17:19:26.7568	46a9b97d-4431-42cc-85da-029b0f131bba	\N	2787
2728	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	2022-02-28 17:19:26.759787	2022-02-28 17:19:26.759754	063fa602-5bdd-4667-b4d4-3115320b2d82	\N	2788
2730	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	2022-02-28 17:19:26.765413	2022-02-28 17:19:26.765299	33ac8958-4598-4144-a101-3d474dc923c4	\N	2790
2731	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	2022-02-28 17:19:26.769674	2022-02-28 17:19:26.769614	c54c9085-f704-4139-be72-ea95aa2b31a3	\N	2791
2733	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	2022-02-28 17:19:26.775352	2022-02-28 17:19:26.775322	4938a5f9-329e-4e1b-b658-a1c48466552a	\N	2793
2735	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	Mescalero	Mescalero Apache Tribe	\N	\N	\N	2022-02-28 17:19:26.781425	2022-02-28 17:19:26.781315	333180c9-c19f-449c-95a0-68b5d0f16ddb	\N	2795
2736	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	2022-02-28 17:19:26.784889	2022-02-28 17:19:26.784676	1f3007ef-54ba-4374-b74e-1c228393ed35	\N	2796
2739	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	2022-02-28 17:19:26.79005	2022-02-28 17:19:26.790025	f230c7ff-62c1-4713-8abf-c302dd63d1ff	\N	2799
2741	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe	\N	\N	\N	2022-02-28 17:19:26.79556	2022-02-28 17:19:26.795524	19a22cc6-28b5-4cfa-9e7a-8e62adf27ab0	\N	2801
2743	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	2022-02-28 17:19:26.799125	2022-02-28 17:19:26.799105	181577e2-7d78-45ca-b839-59beaae4d135	\N	2803
2746	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	2022-02-28 17:19:26.806756	2022-02-28 17:19:26.806719	b813c1b4-1910-4d1a-945a-aaa031552ac6	\N	2806
2748	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	2022-02-28 17:19:26.811623	2022-02-28 17:19:26.81159	b4b309c9-3d1c-4859-8d48-e39336a60b08	\N	2808
2750	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.816801	2022-02-28 17:19:26.81676	dc757202-0425-42fe-adc3-9e8223a5179d	\N	2810
2751	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	2022-02-28 17:19:26.819313	2022-02-28 17:19:26.819299	47a37609-3315-4973-987e-f6ead3d0f101	\N	2811
2752	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	2022-02-28 17:19:26.82158	2022-02-28 17:19:26.821522	5bc523aa-2a5e-4683-ae30-c1e12e749aac	\N	2812
2753	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	2022-02-28 17:19:26.824175	2022-02-28 17:19:26.82414	e7c16673-b102-4e41-b5c1-d1f43a385937	\N	2813
2755	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	2022-02-28 17:19:26.829598	2022-02-28 17:19:26.829559	e39e5bf5-2b76-47ca-8f38-10b6f2375fec	\N	2815
2757	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.833947	2022-02-28 17:19:26.833889	d2296521-fb43-4d71-b4a2-4fd041033337	\N	2817
2758	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	2022-02-28 17:19:26.83638	2022-02-28 17:19:26.836323	feb5d535-8cbf-4054-80a6-25d56e1f63ec	\N	2818
2759	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	2022-02-28 17:19:26.838681	2022-02-28 17:19:26.838641	fe8d4a2e-0829-4051-bbe9-27ba167574ce	\N	2819
2761	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	2022-02-28 17:19:26.844234	2022-02-28 17:19:26.844203	a5f3e952-ee17-4de8-8c3d-346f9aa4c3fc	\N	2821
2763	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	2022-02-28 17:19:26.848243	2022-02-28 17:19:26.84821	4f45d7b9-f903-4184-b474-cf0a9da3ca51	\N	2823
2765	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	2022-02-28 17:19:26.854611	2022-02-28 17:19:26.854584	ef5b59a5-98c6-487e-af2a-b2f55f00c7fd	\N	2825
2693	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	2022-02-28 17:19:26.192925	2022-02-28 17:19:26.19289	1399b32a-11d7-48ed-93e9-0c6b2ba2cc50	\N	2753
2695	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	2022-02-28 17:19:26.196511	2022-02-28 17:19:26.196497	18d90c04-bd3b-48d8-a095-203810c68075	\N	2755
2697	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	2022-02-28 17:19:26.204288	2022-02-28 17:19:26.204252	6f439e23-b92a-4f43-bda1-650c493ce43e	\N	2757
2699	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	2022-02-28 17:19:26.208979	2022-02-28 17:19:26.208927	24cc4b47-abf1-4bdd-9c88-b05ec978d732	\N	2759
2701	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2022-02-28 17:19:26.214487	2022-02-28 17:19:26.214451	66e004bb-d3aa-480c-a7b5-30f340b92999	\N	2761
2704	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	2022-02-28 17:19:26.220404	2022-02-28 17:19:26.220374	049a1413-1970-4c16-9396-7479bcb8ead1	\N	2764
2706	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	2022-02-28 17:19:26.470346	2022-02-28 17:19:26.470093	d1e283a3-4417-49bb-b78f-2d8b76d649a4	\N	2766
2710	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	2022-02-28 17:19:26.478931	2022-02-28 17:19:26.478902	57005f28-7dd2-44e2-939f-9b6964918812	\N	2770
2714	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	2022-02-28 17:19:26.722436	2022-02-28 17:19:26.722307	46c23447-0192-491f-b1bc-fcb16d397dd6	\N	2774
2719	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	2022-02-28 17:19:26.737487	2022-02-28 17:19:26.73745	97fafd0f-c576-459a-b9b0-b265b6f5804b	\N	2779
2721	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	2022-02-28 17:19:26.740634	2022-02-28 17:19:26.740546	109a4df7-51f1-4f64-b5c1-e1f4d7a3b1c7	\N	2781
2725	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	2022-02-28 17:19:26.752184	2022-02-28 17:19:26.752141	a7e240ee-0c88-445e-a62c-7ab6ae3a13c5	\N	2785
2729	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	2022-02-28 17:19:26.764954	2022-02-28 17:19:26.764652	247a2b7b-266a-4fba-9664-db9290315d3a	\N	2789
2732	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	2022-02-28 17:19:26.770002	2022-02-28 17:19:26.769933	2a42db53-3518-476a-a8cc-5d26b5171fc6	\N	2792
2734	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	2022-02-28 17:19:26.77737	2022-02-28 17:19:26.777335	759f62aa-4e80-4754-a7d4-b5a40543f4cb	\N	2794
2737	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.785931	2022-02-28 17:19:26.785899	aa93a8d8-306e-4af9-a632-d1681451d56e	\N	2797
2738	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	2022-02-28 17:19:26.789006	2022-02-28 17:19:26.788984	e756bf23-846f-41d7-a678-fc8b985b2b25	\N	2798
2740	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	2022-02-28 17:19:26.793986	2022-02-28 17:19:26.793954	58dd5e14-c4f0-4a90-8aa7-fde374245dc9	\N	2800
2742	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	2022-02-28 17:19:26.798425	2022-02-28 17:19:26.798413	334d8b7c-6ab8-45f8-b3d6-d74632be8a76	\N	2802
2744	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:26.80272	2022-02-28 17:19:26.802686	11563eb5-fbf2-4465-814c-9b81d6ac36a8	\N	2804
2745	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	The Modoc Tribe of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.805947	2022-02-28 17:19:26.805932	955c3f5f-ee7a-47ed-b90c-7c7ffa870b58	\N	2805
2747	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	2022-02-28 17:19:26.810668	2022-02-28 17:19:26.810645	c24693e7-2108-4b2b-ad58-a52f77b73af2	\N	2807
2749	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	Muscogee	The Muscogee (Creek) Nation	\N	\N	\N	2022-02-28 17:19:26.815783	2022-02-28 17:19:26.815758	7522a796-a0b8-4e4f-9ddd-5183edd67a3b	\N	2809
2754	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	2022-02-28 17:19:26.824983	2022-02-28 17:19:26.824972	60266833-c93d-4834-b0d3-2afe26821587	\N	2814
2756	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	2022-02-28 17:19:26.833015	2022-02-28 17:19:26.832978	66569a00-c40f-47d0-8928-35d088b8e1fd	\N	2816
2760	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	2022-02-28 17:19:26.843202	2022-02-28 17:19:26.843169	8eec11d4-2949-4e5c-b556-80c7947d150a	\N	2820
2764	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	2022-02-28 17:19:26.853373	2022-02-28 17:19:26.853292	b6ab1604-601a-40a5-9065-459539994ac0	\N	2824
2767	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	2022-02-28 17:19:26.860262	2022-02-28 17:19:26.86023	e6817126-ef84-4e64-a8b6-cd4704797624	\N	2827
2768	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	2022-02-28 17:19:26.863179	2022-02-28 17:19:26.863141	7ed00f3d-3ee8-42eb-bf65-8c45009051b9	\N	2828
2772	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	2022-02-28 17:19:26.873762	2022-02-28 17:19:26.873667	fc088835-6d6d-44e9-a5d4-e95ff3ba74b5	\N	2832
2774	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	2022-02-28 17:19:26.879271	2022-02-28 17:19:26.879237	e61512eb-51d6-4c83-9993-79483852d2d0	\N	2834
2777	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe	\N	\N	\N	2022-02-28 17:19:26.884409	2022-02-28 17:19:26.884378	d534c815-7847-4930-894f-831a17dac4cd	\N	2837
2781	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	2022-02-28 17:19:26.897663	2022-02-28 17:19:26.897622	441e14ed-0c02-42b0-8aa5-670172f35dfe	\N	2841
2784	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	2022-02-28 17:19:26.902905	2022-02-28 17:19:26.902872	d64a2400-b4bb-4440-8721-b34b0d721f61	\N	2844
2786	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	2022-02-28 17:19:26.907735	2022-02-28 17:19:26.9077	fbe76101-c583-46eb-8f18-a13a3c83e45e	\N	2846
2788	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	Ohogamuit	Village of Ohogamiut	\N	\N	\N	2022-02-28 17:19:26.914083	2022-02-28 17:19:26.91405	9f16cb1f-5d2b-45f7-ba49-db30feb8870e	\N	2848
2792	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	2022-02-28 17:19:26.924186	2022-02-28 17:19:26.924153	5f208714-e395-4cd8-95d1-acb4d1a398be	\N	2852
2795	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	2022-02-28 17:19:26.929002	2022-02-28 17:19:26.928963	fe75b064-3966-41e0-81ef-3f0df9a1a85d	\N	2855
2800	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	2022-02-28 17:19:26.940643	2022-02-28 17:19:26.940618	0621b6a3-89fb-4696-8c67-016653c3046c	\N	2860
2801	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	2022-02-28 17:19:26.945017	2022-02-28 17:19:26.94498	4579687e-d506-4c4a-bf2c-160658af66eb	\N	2861
2803	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	2022-02-28 17:19:26.949407	2022-02-28 17:19:26.949373	9fc75394-0d53-4de2-ade2-cec713179758	\N	2863
2806	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	2022-02-28 17:19:26.963187	2022-02-28 17:19:26.963129	299d2227-097f-4d10-b5fd-fefaaba50d18	\N	2866
2810	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	2022-02-28 17:19:26.975861	2022-02-28 17:19:26.975822	53902266-dea7-4436-9846-786339e8f68e	\N	2870
2	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2022-02-28 17:19:06.560088	2022-02-28 17:19:06.545184	093a7c6d-a506-4fe8-bd9c-60ab59e11cbc	\N	62
7	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:06.692098	2022-02-28 17:19:06.691911	524e69e3-8ad0-443f-b27c-b4497186a532	\N	67
15	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2022-02-28 17:19:06.751031	2022-02-28 17:19:06.749722	99ea8d52-0fa8-4486-abfb-27fbc1738fa2	\N	75
20	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	2022-02-28 17:19:06.770142	2022-02-28 17:19:06.770098	446d7e45-be00-4759-8b19-a507d71b2ad6	\N	80
23	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	2022-02-28 17:19:06.784473	2022-02-28 17:19:06.784433	d5e65645-c60a-4318-b836-e79065b27c55	\N	83
31	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	2022-02-28 17:19:06.836005	2022-02-28 17:19:06.834615	83585fa3-e0d6-4182-ad22-dd6a02da2f59	\N	92
50	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	2022-02-28 17:19:06.919709	2022-02-28 17:19:06.9183	e3b102db-9989-4d3e-9863-82093518d002	\N	110
62	uri://ed-fi.org/AccountClassificationDescriptor	Function	Function	Function	\N	\N	\N	2022-02-28 17:19:06.981172	2022-02-28 17:19:06.979534	7e69527c-128f-4cac-ae1f-5474add6c741	\N	122
65	uri://ed-fi.org/AccountClassificationDescriptor	Operational Unit	Operational Unit	Operational Unit	\N	\N	\N	2022-02-28 17:19:06.997472	2022-02-28 17:19:06.997401	8df0c16d-9f61-462d-a0dd-934500b419ec	\N	125
70	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	2022-02-28 17:19:07.039169	2022-02-28 17:19:07.03766	de96f18f-5d51-4af3-ad36-e6d4efbf0f19	\N	130
75	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	2022-02-28 17:19:07.061075	2022-02-28 17:19:07.058862	de463f06-aa04-4b03-94c8-487f62ea282a	\N	135
81	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-02-28 17:19:07.109685	2022-02-28 17:19:07.108293	b103efb6-3181-40b3-a33b-54df0c8f16e4	\N	141
88	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	2022-02-28 17:19:07.154897	2022-02-28 17:19:07.1535	3b032480-cd76-4c3d-bc9e-b628ce9a76c1	\N	148
90	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	2022-02-28 17:19:07.170228	2022-02-28 17:19:07.170135	9234acb5-5929-496f-a358-1be1d930f265	\N	150
93	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	2022-02-28 17:19:07.183489	2022-02-28 17:19:07.183402	fc258538-f45b-40b2-be63-d4bc0b486a96	\N	153
96	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	2022-02-28 17:19:07.428393	2022-02-28 17:19:07.428284	bae0f63b-dfe0-48f2-86e1-1e9c286b446d	\N	156
101	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	2022-02-28 17:19:07.467136	2022-02-28 17:19:07.465745	35621f21-ab7e-4890-8fca-ff7a2c3c1bb6	\N	161
107	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Guatemalan	Guatemalan	Guatemalan	\N	\N	\N	2022-02-28 17:19:07.518339	2022-02-28 17:19:07.516832	19d35f9c-2ad5-4dbb-bd94-2e615407e253	\N	169
112	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Spaniard/Spanish/Spanish-American	Spaniard/Spanish/Spanish-American	Spaniard/Spanish/Spanish-American	\N	\N	\N	2022-02-28 17:19:07.542432	2022-02-28 17:19:07.542354	fc6013d1-eef2-4355-9005-d3e3749440d3	\N	172
116	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	2022-02-28 17:19:07.588586	2022-02-28 17:19:07.587161	891ca8df-d251-4498-81c7-80e9f56d5529	\N	175
122	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	2022-02-28 17:19:07.609994	2022-02-28 17:19:07.609768	accb6e14-f7d6-4492-8294-21be46e14d1f	\N	182
125	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	2022-02-28 17:19:07.625673	2022-02-28 17:19:07.625542	3f59d735-e52d-41bf-b5cc-5b429dca9740	\N	185
159	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:07.767772	2022-02-28 17:19:07.766356	cf8a5d61-3bc9-4676-a866-a048649ea253	\N	219
170	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	2022-02-28 17:19:07.821662	2022-02-28 17:19:07.820253	9f25da97-273d-475c-b9ff-83df02c46dc6	\N	230
172	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	2022-02-28 17:19:07.839678	2022-02-28 17:19:07.83939	4f89261c-4b5e-4a63-8f70-c0e7efcae8b7	\N	232
192	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	2022-02-28 17:19:07.9194	2022-02-28 17:19:07.917916	014eebf1-89f4-4936-8a30-48e7c1fbee69	\N	252
197	uri://ed-fi.org/AssessmentPeriodDescriptor	BOY	BOY	Beginning of Year	\N	\N	\N	2022-02-28 17:19:07.968689	2022-02-28 17:19:07.967281	f1b6dbf8-715a-4cbc-b3cd-2312a3617ab3	\N	257
221	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	2022-02-28 17:19:08.057661	2022-02-28 17:19:08.057451	a45ccf3c-ee97-4ff5-ad80-cb0c51e6a1ac	\N	281
245	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2022-02-28 17:19:08.154649	2022-02-28 17:19:08.153464	7ab1cb2d-425f-4f81-93e3-dc5ea6627501	\N	305
261	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	2022-02-28 17:19:08.235151	2022-02-28 17:19:08.233808	b2ee129c-a877-413f-9d4d-530400a91acf	\N	321
267	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Affordable	Not Affordable	The student cannot access the internet in their primary place of residence because internet service is not affordable.	\N	\N	\N	2022-02-28 17:19:08.282579	2022-02-28 17:19:08.281112	41f62d90-0974-474b-8102-cb5ecaed0e36	\N	327
270	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	2022-02-28 17:19:08.325094	2022-02-28 17:19:08.323644	4c33ae19-8c56-4175-bfef-8ca316f9da8d	\N	331
275	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	2022-02-28 17:19:08.581957	2022-02-28 17:19:08.58188	57b2bb87-ef9b-4e3e-b332-f03da6897d7f	\N	335
282	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	2022-02-28 17:19:08.634945	2022-02-28 17:19:08.633547	76989bb2-794b-466a-a2de-c8a445506513	\N	342
289	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2022-02-28 17:19:08.680883	2022-02-28 17:19:08.679365	7762063c-7a4c-416c-bb5e-07f5d282e4a2	\N	349
292	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2022-02-28 17:19:08.69891	2022-02-28 17:19:08.698699	f2fe425d-e437-4a92-bb0e-6622ad5a48de	\N	352
307	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	2022-02-28 17:19:09.006324	2022-02-28 17:19:09.004947	d0c5f638-679c-44e5-8e09-54d1461d9a1b	\N	366
310	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	2022-02-28 17:19:09.045111	2022-02-28 17:19:09.043707	fdbe9db2-2b53-4b2c-9846-a8ab8023aed6	\N	370
314	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	2022-02-28 17:19:09.08599	2022-02-28 17:19:09.084608	60f1fd39-8b51-4c2f-a99e-7db38fe51f68	\N	374
319	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	2022-02-28 17:19:09.247021	2022-02-28 17:19:09.245772	11342200-aabc-4c96-ae63-90704a116567	\N	379
324	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	2022-02-28 17:19:09.285662	2022-02-28 17:19:09.284495	a6624eed-6e28-4646-948e-d0cd1ac96ca6	\N	384
332	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	2022-02-28 17:19:09.339704	2022-02-28 17:19:09.338551	820e97bd-5b85-419f-a6c3-e629c51cb6ba	\N	392
343	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-02-28 17:19:09.399053	2022-02-28 17:19:09.397721	752c289a-f2fc-4e11-972b-5cecd0a80594	\N	403
353	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-02-28 17:19:09.463722	2022-02-28 17:19:09.462508	78dfe263-2301-46ed-97b3-81b0754509f2	\N	413
2854	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	2022-02-28 17:19:27.32614	2022-02-28 17:19:27.326032	0093de94-da2b-41f2-b800-3dcb2b4734a0	\N	2914
2857	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:27.330427	2022-02-28 17:19:27.330406	8254f59a-28fb-41cb-9938-f8d9777e974b	\N	2917
2860	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	2022-02-28 17:19:27.339242	2022-02-28 17:19:27.339129	9fe885de-5a79-454a-b0dc-fc5eee3c6e81	\N	2920
2862	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	2022-02-28 17:19:27.347027	2022-02-28 17:19:27.34698	cb1ae0b2-0cbb-49d9-8fc9-893ab06cc647	\N	2922
2865	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	2022-02-28 17:19:27.352479	2022-02-28 17:19:27.352466	15ddac8a-9338-4100-a162-13aff7115f59	\N	2925
2870	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	2022-02-28 17:19:27.365322	2022-02-28 17:19:27.365309	3cdf78a9-9598-46f6-9710-4b88093838a3	\N	2930
2871	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	2022-02-28 17:19:27.3696	2022-02-28 17:19:27.369563	bf9f0502-3e31-4a32-8538-086a79be6f41	\N	2931
2872	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	2022-02-28 17:19:27.372231	2022-02-28 17:19:27.372212	5bb322ef-0a03-4d95-8506-dc394217c4bf	\N	2932
2874	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria Band of Pomo Indians, CA	\N	\N	\N	2022-02-28 17:19:27.376728	2022-02-28 17:19:27.376693	b266c6d9-fb9b-4a0f-a208-8a48bac188db	\N	2934
2875	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, SD	\N	\N	\N	2022-02-28 17:19:27.380541	2022-02-28 17:19:27.380514	5d938ba0-0089-49c8-bd41-244c3120f89b	\N	2935
2878	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	2022-02-28 17:19:27.385873	2022-02-28 17:19:27.385842	06f3b727-2a71-48ae-a2f3-119e371694be	\N	2938
2880	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	Oklahoma	Sac and Fox Nation, Oklahoma	\N	\N	\N	2022-02-28 17:19:27.404696	2022-02-28 17:19:27.404658	5f82c593-9cb5-49bd-8f23-3946bf50c590	\N	2940
2882	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	2022-02-28 17:19:27.410845	2022-02-28 17:19:27.410735	29c8f46f-7eae-46ff-bc68-db83a3f40ff4	\N	2942
2884	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	Salamatoff	Village of Salamatoff	\N	\N	\N	2022-02-28 17:19:27.414254	2022-02-28 17:19:27.414226	06b69893-40a9-480d-b7a6-6ffc0a86d612	\N	2944
2885	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:27.417273	2022-02-28 17:19:27.417236	091830ad-bb2b-4592-8327-ac383d20d643	\N	2945
2886	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	2022-02-28 17:19:27.420086	2022-02-28 17:19:27.420068	a1ccb8ec-c190-425b-bb63-7e48bc3cad79	\N	2946
2887	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:27.42351	2022-02-28 17:19:27.423469	1e67e23a-b417-4a0c-85aa-5df0e1d3473a	\N	2947
2889	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	San Manuel	San Manuel Band of Mission Indians, California	\N	\N	\N	2022-02-28 17:19:27.428049	2022-02-28 17:19:27.428008	03ac47f2-037e-4541-89cf-bafbf3030353	\N	2949
2890	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	2022-02-28 17:19:27.430355	2022-02-28 17:19:27.430287	481ae591-c6ac-464c-a4d2-81f9addf071b	\N	2950
2892	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	Santa Rosa of Chuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	2022-02-28 17:19:27.437304	2022-02-28 17:19:27.437269	177ffcbc-062a-4f42-a4bd-ce1c504468de	\N	2952
2894	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	2022-02-28 17:19:27.441026	2022-02-28 17:19:27.441012	8188f22c-dd95-462b-b393-1507f185bc34	\N	2954
2896	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	2022-02-28 17:19:27.44762	2022-02-28 17:19:27.44758	0942a3d7-2b88-49e0-959b-4aba3b94040c	\N	2956
2898	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	2022-02-28 17:19:27.450136	2022-02-28 17:19:27.450107	ba1e12ec-8589-4b8b-a805-9bdb414c2def	\N	2958
2900	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	2022-02-28 17:19:27.456694	2022-02-28 17:19:27.456664	1b935cad-2475-4468-920d-035d54cd98ec	\N	2960
2902	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	2022-02-28 17:19:27.461143	2022-02-28 17:19:27.461085	d81b60aa-7dba-4499-8e79-b365b3c79c63	\N	2962
2904	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	Seminole of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	2022-02-28 17:19:27.465723	2022-02-28 17:19:27.465689	6688b2c0-bd4d-48d6-be61-a36256de0fff	\N	2964
2905	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	Seneca-Cayuga	Seneca-Cayuga Nation	\N	\N	\N	2022-02-28 17:19:27.471315	2022-02-28 17:19:27.471275	cab29a86-a094-454f-90cc-6b9fe1adf65d	\N	2965
2907	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	2022-02-28 17:19:27.474465	2022-02-28 17:19:27.474434	97943f9d-5f95-435a-a145-d41ce64737bc	\N	2967
2910	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	Shawnee	Shawnee Tribe	\N	\N	\N	2022-02-28 17:19:27.482212	2022-02-28 17:19:27.482196	40b40290-8182-44d5-8e61-b1ba494559a6	\N	2970
2912	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	2022-02-28 17:19:27.487393	2022-02-28 17:19:27.487336	6554bac1-f911-4717-b23c-ea6de8798b36	\N	2972
2915	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.494121	2022-02-28 17:19:27.494068	2a71784e-8629-4e1d-8802-6330e6c8bb77	\N	2975
2917	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:27.500212	2022-02-28 17:19:27.500164	349e0fc9-cf38-4395-a4a2-0ef37a7f0bc0	\N	2977
2919	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	2022-02-28 17:19:27.504457	2022-02-28 17:19:27.504426	7a862ad8-6213-4c74-9f1c-7d85cd99c744	\N	2979
2920	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, SD	\N	\N	\N	2022-02-28 17:19:27.507176	2022-02-28 17:19:27.507141	9b44b63c-0732-44e4-98b2-952dc3580bd1	\N	2980
2921	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	2022-02-28 17:19:27.512768	2022-02-28 17:19:27.512617	bdd7dd79-b272-495f-b49e-4a6b275653b6	\N	2981
2924	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	2022-02-28 17:19:27.516897	2022-02-28 17:19:27.516886	3bf93fab-e210-4707-9726-e345495313bb	\N	2984
2925	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	2022-02-28 17:19:27.520542	2022-02-28 17:19:27.520506	5850a5da-0f65-44cf-b686-b66cd0a9be83	\N	2985
2926	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	2022-02-28 17:19:27.523031	2022-02-28 17:19:27.522999	178c986c-fe2e-457d-9a0c-573e32e57fee	\N	2986
2928	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa  Community, Wisconsin	\N	\N	\N	2022-02-28 17:19:27.526785	2022-02-28 17:19:27.526755	c2950626-5c88-41a8-b508-537e0e026655	\N	2988
2929	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	2022-02-28 17:19:27.5308	2022-02-28 17:19:27.530756	11a23b4f-d8ea-43aa-a6af-152168a87969	\N	2989
2932	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	2022-02-28 17:19:27.53585	2022-02-28 17:19:27.535821	d7718681-9f8f-4f0e-8509-a3599c7870a7	\N	2992
2933	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	2022-02-28 17:19:27.541387	2022-02-28 17:19:27.541349	04741ec8-064f-4f0b-94ee-b1dc8c2213db	\N	2993
2855	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point Village	\N	\N	\N	2022-02-28 17:19:27.326268	2022-02-28 17:19:27.326127	c5563197-6af6-4ec3-8711-29ea35fefdae	\N	2915
2858	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	Quapaw	The Quapaw Tribe of Indians	\N	\N	\N	2022-02-28 17:19:27.337657	2022-02-28 17:19:27.337561	f0bfd530-d676-430a-b774-5e16ee4fb0e4	\N	2918
2861	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	2022-02-28 17:19:27.341628	2022-02-28 17:19:27.34161	1859cbac-8821-45d3-a1ec-05a2f81226a3	\N	2921
2863	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	Ramah	Ramah Navajo Chapter	\N	\N	\N	2022-02-28 17:19:27.350295	2022-02-28 17:19:27.350264	4d5ce749-f7f9-4139-a4ef-5279d7120b6e	\N	2923
2866	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2022-02-28 17:19:27.354733	2022-02-28 17:19:27.3547	6ad15e2c-ef3c-4172-98ab-71cb4759e80d	\N	2926
2867	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	2022-02-28 17:19:27.361134	2022-02-28 17:19:27.361094	279d7d97-c8d7-4f61-a3a5-4fdf8963602f	\N	2927
2869	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	2022-02-28 17:19:27.363952	2022-02-28 17:19:27.363941	c680d5a8-504d-4bff-95d1-8f5483e014b6	\N	2929
2873	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	2022-02-28 17:19:27.375303	2022-02-28 17:19:27.375286	14c9d8ad-98fb-4baf-a525-60a5040c28f9	\N	2933
2876	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	2022-02-28 17:19:27.381093	2022-02-28 17:19:27.381057	2aa7694e-2285-46ee-8d5f-a65e57ee8414	\N	2936
2879	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	Sac and Fox Nation of Missouri in Kansas and Nebraska	Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	2022-02-28 17:19:27.391802	2022-02-28 17:19:27.391762	693eb483-70d9-4395-8174-239787361f51	\N	2939
2881	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	2022-02-28 17:19:27.409817	2022-02-28 17:19:27.409777	b6ec9127-9b6d-40b7-8130-f3ab1db9e4a0	\N	2941
2888	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	2022-02-28 17:19:27.427336	2022-02-28 17:19:27.427302	79aad39c-d298-431f-8f97-b6970ec8a3bb	\N	2948
2891	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	2022-02-28 17:19:27.431614	2022-02-28 17:19:27.431581	391f6803-b035-4540-90de-fe28ffdbce47	\N	2951
2893	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	2022-02-28 17:19:27.437856	2022-02-28 17:19:27.437822	e0c557b3-1118-485c-b4c3-9554d47764ea	\N	2953
2895	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.442084	2022-02-28 17:19:27.442067	e0422bca-0be2-4c40-a761-d1edf369ad59	\N	2955
2897	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	2022-02-28 17:19:27.447809	2022-02-28 17:19:27.447745	80773ee4-a2ec-44a0-9b8b-baed88154105	\N	2957
2899	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	2022-02-28 17:19:27.452061	2022-02-28 17:19:27.452025	82c1f207-b92c-4eaf-a0ce-fa986a579ad2	\N	2959
2901	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	2022-02-28 17:19:27.460228	2022-02-28 17:19:27.46019	94216fbf-bbda-4bf9-852e-06da8f2896e2	\N	2961
2903	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	2022-02-28 17:19:27.463955	2022-02-28 17:19:27.463937	14ce26f1-4398-439e-98f7-b520ab1c1607	\N	2963
2906	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	2022-02-28 17:19:27.471538	2022-02-28 17:19:27.471509	f7e9355e-0302-4802-b804-4b506d7149af	\N	2966
2908	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	2022-02-28 17:19:27.475646	2022-02-28 17:19:27.475615	dd1a3756-02a8-4409-a568-23e8f60ff43a	\N	2968
2909	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	2022-02-28 17:19:27.480812	2022-02-28 17:19:27.480788	751495ff-d006-4773-9518-e7cbd6942ce3	\N	2969
2911	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	2022-02-28 17:19:27.48662	2022-02-28 17:19:27.486596	899bb708-a31f-493b-ad02-978759e0b472	\N	2971
2914	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	2022-02-28 17:19:27.491737	2022-02-28 17:19:27.491727	aec645fe-dacd-4f07-9dee-03c385c173b5	\N	2974
2916	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	2022-02-28 17:19:27.499552	2022-02-28 17:19:27.499474	88344eda-63fc-4b05-9ac6-d9699f13eefb	\N	2976
2918	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	2022-02-28 17:19:27.502404	2022-02-28 17:19:27.502374	515e7a17-5e2d-4fd3-900d-f63fe40e8c29	\N	2978
2923	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.514046	2022-02-28 17:19:27.51393	259c84e0-5526-4549-a3eb-fe10417ac602	\N	2983
2927	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.525757	2022-02-28 17:19:27.525727	31170756-02ff-4372-9441-9b5fe5e1a65e	\N	2987
2930	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	2022-02-28 17:19:27.531311	2022-02-28 17:19:27.531282	9f3359a4-f84e-482d-8972-707b7de4bfc8	\N	2990
2931	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.534624	2022-02-28 17:19:27.53461	af54dce3-2f02-467d-a4a4-1eb3438292bd	\N	2991
2934	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	2022-02-28 17:19:27.541656	2022-02-28 17:19:27.541644	16e2148c-c2cf-4378-8151-545243a4e59d	\N	2994
2939	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	2022-02-28 17:19:27.554693	2022-02-28 17:19:27.554637	64fdc979-4225-4f32-91bd-7beccfb1e4fc	\N	2999
2944	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	2022-02-28 17:19:27.567095	2022-02-28 17:19:27.56706	2a6326db-03bc-4f0e-973b-55aa103abdcb	\N	3004
2946	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	2022-02-28 17:19:27.571676	2022-02-28 17:19:27.571642	6a9dd675-b29c-4ecc-9b38-9e0d9f78e4f2	\N	3006
2947	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	2022-02-28 17:19:27.575151	2022-02-28 17:19:27.575126	d1045425-5f3c-4f1e-854d-82ce766427ef	\N	3007
2950	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria of California	\N	\N	\N	2022-02-28 17:19:27.581193	2022-02-28 17:19:27.581164	6cf5f674-21d7-4819-a89d-65de0459e9ab	\N	3010
2954	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village (aka Woody Island)	\N	\N	\N	2022-02-28 17:19:27.827547	2022-02-28 17:19:27.827513	10fb798c-1d06-4672-bfa1-42fc62c852c4	\N	3014
2958	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.839651	2022-02-28 17:19:27.839615	9c2d5802-01e2-4d6b-b5af-acf1b61fbd06	\N	3018
2960	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band; Elko Band; South Fork Band and Wells Band)	\N	\N	\N	2022-02-28 17:19:27.843657	2022-02-28 17:19:27.843613	c076117b-0e1b-4455-afdb-4b5283a0bcf2	\N	3020
2964	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Death Valley Timbi-sha Shoshone Tribe	\N	\N	\N	2022-02-28 17:19:27.855055	2022-02-28 17:19:27.855044	596d901d-b218-4efd-a9db-7a3428941130	\N	3024
2967	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	2022-02-28 17:19:27.861039	2022-02-28 17:19:27.860985	1e3d7652-935b-4ab6-8bcb-4f28b8b67ba5	\N	3027
2969	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	2022-02-28 17:19:27.868709	2022-02-28 17:19:27.868675	d4e50234-6015-4b5a-972a-bd2697e8b856	\N	3029
2859	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	2022-02-28 17:19:27.337759	2022-02-28 17:19:27.337715	b442ae8d-e100-433f-902b-078ff8dd9ee6	\N	2919
2864	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	2022-02-28 17:19:27.351055	2022-02-28 17:19:27.351027	7066182a-9fd0-4094-aad1-f08f2dee9368	\N	2924
2868	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	2022-02-28 17:19:27.36245	2022-02-28 17:19:27.362422	82743e16-39fd-44c0-b03b-344465a03ad0	\N	2928
2883	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	2022-02-28 17:19:27.412859	2022-02-28 17:19:27.412822	2383fdda-154a-4267-b80e-36a77f052d0c	\N	2943
2913	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	2022-02-28 17:19:27.490545	2022-02-28 17:19:27.490519	ae916280-0021-488b-9f67-b1b0ff888a12	\N	2973
2922	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	2022-02-28 17:19:27.513315	2022-02-28 17:19:27.513283	a783d9ee-94a6-4b49-a10e-4769abc29ca0	\N	2982
2935	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	2022-02-28 17:19:27.544968	2022-02-28 17:19:27.544917	82dde073-7b0a-4344-88a0-0d68a055edd9	\N	2995
2949	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	2022-02-28 17:19:27.580336	2022-02-28 17:19:27.580315	fa50460f-5824-40f5-90c6-60b03f47ddd1	\N	3009
2952	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	2022-02-28 17:19:27.826161	2022-02-28 17:19:27.826059	dadc1875-c0cf-4011-ac8f-3b987e0a87af	\N	3012
2985	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	2022-02-28 17:19:27.904822	2022-02-28 17:19:27.904811	47bedaea-a04e-48fd-82b2-dbc50420d54a	\N	3045
3004	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	2022-02-28 17:19:27.949413	2022-02-28 17:19:27.949383	b3c4ea0d-feff-4654-b14d-f52047d38c11	\N	3064
3007	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:28.18879	2022-02-28 17:19:28.188737	90cf45d0-69f5-46ea-a00c-080b803b326f	\N	3067
3010	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	2022-02-28 17:19:28.198294	2022-02-28 17:19:28.19819	bd76fbc7-d318-4bdc-9994-15085df262d0	\N	3070
3015	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	2022-02-28 17:19:28.212074	2022-02-28 17:19:28.211997	058a045f-9191-4014-9523-49205273cd17	\N	3075
3028	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	2022-02-28 17:19:28.289312	2022-02-28 17:19:28.288046	5300556e-1493-4675-ba38-81f67fe5e9ca	\N	3088
3031	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	2022-02-28 17:19:28.305534	2022-02-28 17:19:28.305468	7a856de4-8e5e-4b8e-8c06-ac5bca531dd4	\N	3091
3033	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	2022-02-28 17:19:28.360517	2022-02-28 17:19:28.35934	1c5f9374-4425-449d-a49b-6ce57a4e44e8	\N	3093
3036	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	2022-02-28 17:19:28.375162	2022-02-28 17:19:28.374894	9d462eff-4765-49d6-9aeb-15a5a014fe0d	\N	3096
3039	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	2022-02-28 17:19:28.377852	2022-02-28 17:19:28.37784	42863eb2-8043-4c33-a980-c1c7a304182d	\N	3099
2936	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	2022-02-28 17:19:27.545927	2022-02-28 17:19:27.545915	4b7f9e4b-490e-46d6-b682-462b3a4a87fa	\N	2996
2937	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	2022-02-28 17:19:27.550851	2022-02-28 17:19:27.550811	a898785c-a771-473d-b849-195eaddc9fd2	\N	2997
2938	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	2022-02-28 17:19:27.553562	2022-02-28 17:19:27.553532	1fb97c21-b17e-497d-a387-402646f646c4	\N	2998
2940	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	2022-02-28 17:19:27.557099	2022-02-28 17:19:27.55707	3b5f64ac-6b9b-4b90-b860-f4d12f88e184	\N	3000
2941	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	2022-02-28 17:19:27.560055	2022-02-28 17:19:27.560026	23549620-e817-4f98-aac1-f3ab4cc8f5a4	\N	3001
2942	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	2022-02-28 17:19:27.562727	2022-02-28 17:19:27.562688	92804f66-037c-4924-8b0c-661a4c4b9f10	\N	3002
2943	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	2022-02-28 17:19:27.565146	2022-02-28 17:19:27.565115	91c64562-0f1a-4dfa-8e68-d25b725e51bd	\N	3003
2945	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	2022-02-28 17:19:27.570486	2022-02-28 17:19:27.570464	6b49023a-d8f5-4d8d-b427-032101f5210b	\N	3005
2948	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	2022-02-28 17:19:27.576775	2022-02-28 17:19:27.576737	4f90ea5a-325b-4301-bf1f-2b6742905e4f	\N	3008
2953	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	2022-02-28 17:19:27.827291	2022-02-28 17:19:27.827174	4a15da85-4821-47d5-8c1c-eee236dd56bb	\N	3013
2955	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	2022-02-28 17:19:27.831309	2022-02-28 17:19:27.831273	cbc53795-5bd2-4aef-a49b-5f6c37184324	\N	3015
2956	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	2022-02-28 17:19:27.835114	2022-02-28 17:19:27.835079	47352e3b-a91c-4c27-9b28-b841a1a8c6af	\N	3016
2957	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	2022-02-28 17:19:27.839224	2022-02-28 17:19:27.839189	199675b1-75e0-4231-8f11-94e9a5e2be84	\N	3017
2959	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	2022-02-28 17:19:27.842462	2022-02-28 17:19:27.842432	1646ce68-435d-4354-aa27-ea65fe415232	\N	3019
2961	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	2022-02-28 17:19:27.846033	2022-02-28 17:19:27.845992	03726a4d-659e-4c71-aa2d-37dda3e1e95a	\N	3021
2962	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	Thlopthlocco	Thlopthlocco Tribal Town	\N	\N	\N	2022-02-28 17:19:27.850169	2022-02-28 17:19:27.850133	148a595e-c161-437c-8a2a-a46144dc197a	\N	3022
2963	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, ND	\N	\N	\N	2022-02-28 17:19:27.852381	2022-02-28 17:19:27.852348	f8f9fb74-5382-43aa-a57e-84cffda92a8a	\N	3023
2965	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes of Alaska	\N	\N	\N	2022-02-28 17:19:27.85612	2022-02-28 17:19:27.856106	1a997254-1583-4b44-9016-ab28648367e1	\N	3025
2966	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	2022-02-28 17:19:27.860377	2022-02-28 17:19:27.860344	dae2b7a4-62ec-4d4a-bbb5-e3191921fc4f	\N	3026
2968	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-Ni'	Tolowa Dee-Ni'	Tolowa Dee-Ni' Nation	\N	\N	\N	2022-02-28 17:19:27.865747	2022-02-28 17:19:27.865714	b853abcd-711e-49e5-be69-8b00db6005e1	\N	3028
2970	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	2022-02-28 17:19:27.869798	2022-02-28 17:19:27.869653	3597fb65-bba6-4b64-b555-459d95ce8654	\N	3030
2972	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	2022-02-28 17:19:27.87407	2022-02-28 17:19:27.874035	34aefaaa-8064-4239-b93e-e3d278cb973c	\N	3032
2973	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	2022-02-28 17:19:27.878544	2022-02-28 17:19:27.878511	2bef5314-33ec-4e3b-90a8-51b02fd84406	\N	3033
2975	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	2022-02-28 17:19:27.882159	2022-02-28 17:19:27.88209	ebc6dd1e-0be9-4283-9376-674065614375	\N	3035
2978	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	2022-02-28 17:19:27.888664	2022-02-28 17:19:27.888638	931346df-156c-418a-92b0-cab91e2b6a62	\N	3038
2980	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	2022-02-28 17:19:27.892979	2022-02-28 17:19:27.892914	4dc96b68-52a3-438a-8ae0-d330ffb501af	\N	3040
2982	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	2022-02-28 17:19:27.89744	2022-02-28 17:19:27.897414	3114d4ae-9aa0-4d54-9fef-dbfab01f3b4b	\N	3042
2983	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	2022-02-28 17:19:27.901879	2022-02-28 17:19:27.901845	df887d8d-55ff-44e0-b4e9-3c91576dc3c1	\N	3043
2986	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	2022-02-28 17:19:27.906333	2022-02-28 17:19:27.906297	fdc127a7-73af-49e8-84a7-018804499459	\N	3046
2988	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	2022-02-28 17:19:27.911947	2022-02-28 17:19:27.911916	e23e0602-f170-4eda-ae14-0e952dd28d43	\N	3048
2989	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	2022-02-28 17:19:27.914769	2022-02-28 17:19:27.914758	074043cd-a5d9-4322-9bd2-494e715c1d6b	\N	3049
2992	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	2022-02-28 17:19:27.92117	2022-02-28 17:19:27.921141	8d3bb0dc-4273-4c8c-b1dc-f97af426ec99	\N	3052
2993	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.924135	2022-02-28 17:19:27.924107	844e59b4-214c-40a6-bbfd-a6443c2d335a	\N	3053
2994	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	2022-02-28 17:19:27.926776	2022-02-28 17:19:27.926747	41302900-08a7-4a75-90a6-73e96e2a416c	\N	3054
2995	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	Ute Mountain	Ute Mountain Ute Tribe	\N	\N	\N	2022-02-28 17:19:27.929071	2022-02-28 17:19:27.929035	29d168d4-03f7-4ebe-b8c7-beca5b9ded4c	\N	3055
2997	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government	\N	\N	\N	2022-02-28 17:19:27.933459	2022-02-28 17:19:27.933428	ccee6f44-08c8-4f8c-bb50-d210ccfc17a1	\N	3057
2999	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	2022-02-28 17:19:27.937946	2022-02-28 17:19:27.937916	ae1b087d-c6d0-4c3f-b2f6-e75e987f3852	\N	3059
3001	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	2022-02-28 17:19:27.943686	2022-02-28 17:19:27.943642	f9f561a0-12d8-42a9-9aa2-21011dc3e096	\N	3061
3005	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes	\N	\N	\N	2022-02-28 17:19:28.188516	2022-02-28 17:19:28.1884	ab9adc86-dcd6-4099-9530-284d68e0470e	\N	3065
3008	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	2022-02-28 17:19:28.1919	2022-02-28 17:19:28.191812	2004dcfa-dc13-41df-b912-550c3c70d9e8	\N	3068
3011	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	2022-02-28 17:19:28.200101	2022-02-28 17:19:28.199819	45b1db2a-d759-4c85-b41b-295432f4dc37	\N	3071
3014	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	2022-02-28 17:19:28.210725	2022-02-28 17:19:28.210687	a58e084d-ecd0-4ef9-8ecc-fe103979bc12	\N	3074
3016	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	2022-02-28 17:19:28.213775	2022-02-28 17:19:28.213737	1dd70335-a571-4db2-9c78-f36b2ee93674	\N	3076
3017	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	2022-02-28 17:19:28.217486	2022-02-28 17:19:28.21747	540379b9-347d-40be-b041-64932254a43c	\N	3077
2951	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	2022-02-28 17:19:27.583674	2022-02-28 17:19:27.583643	f54c9e8d-d2c2-4276-ad3d-c93cd1ab0547	\N	3011
3003	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	2022-02-28 17:19:27.947848	2022-02-28 17:19:27.947817	a47505c2-bb8d-4a62-a661-4671a2d06df2	\N	3063
3026	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	2022-02-28 17:19:28.289189	2022-02-28 17:19:28.288027	15995665-af2d-4341-8f73-9597c363a2d5	\N	3085
3035	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	2022-02-28 17:19:28.360497	2022-02-28 17:19:28.35933	911e2f31-5236-4a7b-8a6b-8f146ad70823	\N	3095
2971	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	2022-02-28 17:19:27.871451	2022-02-28 17:19:27.871439	e4e96031-e74b-4768-8a85-ccc687dfe8e0	\N	3031
2974	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	2022-02-28 17:19:27.879698	2022-02-28 17:19:27.879665	d716e3d6-b5d8-459e-bb65-1c6850ec185b	\N	3034
2976	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	2022-02-28 17:19:27.883737	2022-02-28 17:19:27.8837	213c31d2-8cfc-48ae-b644-f19f569a488a	\N	3036
2977	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	2022-02-28 17:19:27.887823	2022-02-28 17:19:27.887788	4557af3f-2998-4612-8390-4eaa5445f2b9	\N	3037
2979	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	2022-02-28 17:19:27.892032	2022-02-28 17:19:27.892	05b65058-4e71-485d-858b-8f1fc403e61c	\N	3039
2981	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	2022-02-28 17:19:27.896649	2022-02-28 17:19:27.896626	3a1bade1-0fdc-4225-b70b-fb56e7df021b	\N	3041
2984	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	2022-02-28 17:19:27.903113	2022-02-28 17:19:27.903015	c006e7cf-3c67-43f8-908c-91cef457b8ec	\N	3044
2987	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	2022-02-28 17:19:27.911192	2022-02-28 17:19:27.911146	e8cbaa36-45cd-4669-ad65-be39bda45a2c	\N	3047
2990	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	2022-02-28 17:19:27.915805	2022-02-28 17:19:27.915782	9c63c4f9-4249-4c0b-853e-ab19e6b7567f	\N	3050
2991	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	United Keetoowah	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	2022-02-28 17:19:27.920298	2022-02-28 17:19:27.92027	1ed994db-979e-4843-b328-f5b5100019b6	\N	3051
2996	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	2022-02-28 17:19:27.932144	2022-02-28 17:19:27.932112	591bf03e-6951-4426-880c-39052d4f8d44	\N	3056
2998	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Barona Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	2022-02-28 17:19:27.937117	2022-02-28 17:19:27.937086	cb65f1b8-3bcd-4dae-b433-9e64e416f69e	\N	3058
3000	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:27.942645	2022-02-28 17:19:27.942603	15163f6f-d065-4452-a9e7-893a68f7e3a8	\N	3060
3002	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	2022-02-28 17:19:27.947433	2022-02-28 17:19:27.947402	0d1e3888-5768-4285-b210-54d5c5d74b07	\N	3062
3006	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	2022-02-28 17:19:28.188524	2022-02-28 17:19:28.188493	e0bbe49a-510f-45e6-9d7c-2c4779af761c	\N	3066
3009	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria	\N	\N	\N	2022-02-28 17:19:28.197552	2022-02-28 17:19:28.197437	ac32a566-8759-4292-be53-dd50a0405883	\N	3069
3012	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	2022-02-28 17:19:28.202351	2022-02-28 17:19:28.202335	e1c0c4f9-e348-48db-92b7-549ecdf0428f	\N	3072
3013	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	2022-02-28 17:19:28.209101	2022-02-28 17:19:28.209014	ef5fb918-ec2c-4acb-b410-c749ce5ba2dc	\N	3073
3018	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	2022-02-28 17:19:28.219588	2022-02-28 17:19:28.219552	3587896a-f528-4309-8b84-926a518112fb	\N	3078
3020	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	2022-02-28 17:19:28.224337	2022-02-28 17:19:28.224303	0f0e0fd4-eaee-4966-a10a-6420d3a6c826	\N	3080
3021	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	2022-02-28 17:19:28.228642	2022-02-28 17:19:28.228566	dea32207-e6f5-4506-a712-b8e82d2aafe0	\N	3081
3024	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	2022-02-28 17:19:28.233723	2022-02-28 17:19:28.233676	11c2c173-078f-42f3-9f27-3bfc7ab49a8a	\N	3084
3025	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	2022-02-28 17:19:28.289196	2022-02-28 17:19:28.288038	e84bc6e2-21ff-45f5-ad2f-9fddf5fe5353	\N	3086
3030	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	2022-02-28 17:19:28.304943	2022-02-28 17:19:28.304905	59b54ea3-f4c7-4caf-8595-1e05039747b3	\N	3090
3034	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	2022-02-28 17:19:28.36049	2022-02-28 17:19:28.359316	cece59a5-4da1-47f6-b2f2-b1d2a21b8583	\N	3094
3038	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	2022-02-28 17:19:28.377554	2022-02-28 17:19:28.377519	80c6aa25-09de-4428-87f7-0fc13da7bea7	\N	3098
3040	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	2022-02-28 17:19:28.38317	2022-02-28 17:19:28.383146	16392c26-e81f-4c92-905c-130039268995	\N	3100
3019	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony & Campbell Ranch, Nevada	\N	\N	\N	2022-02-28 17:19:28.223112	2022-02-28 17:19:28.223098	b0df224e-fec1-48a4-a7a1-98016ba73f11	\N	3079
3022	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	2022-02-28 17:19:28.2296	2022-02-28 17:19:28.229567	6a8f6cc9-0df0-44bb-9d74-f9dea8a08ee0	\N	3082
3023	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	Zuni	Zuni Tribe of the Zuni Reservation	\N	\N	\N	2022-02-28 17:19:28.233501	2022-02-28 17:19:28.233483	8a05e0a6-64be-4fdb-82d4-ead455d5ca72	\N	3083
3027	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	2022-02-28 17:19:28.289179	2022-02-28 17:19:28.288022	49b3afea-9e23-42dd-9189-ecf503adbe7f	\N	3087
3029	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	2022-02-28 17:19:28.304481	2022-02-28 17:19:28.304395	f2cac2e0-7814-4766-a427-35d3aa71d4d8	\N	3089
3032	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	2022-02-28 17:19:28.360491	2022-02-28 17:19:28.359314	9abff420-dd08-4b2f-b959-55e1908d363b	\N	3092
3037	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	2022-02-28 17:19:28.375889	2022-02-28 17:19:28.375848	a4ffa47c-ce17-423c-9e56-7cd61575e304	\N	3097
3041	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-02-28 17:19:28.383936	2022-02-28 17:19:28.383906	cab3a450-9f96-4a5a-8efc-88a4f638e422	\N	3101
3042	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2022-03-08 00:13:21.236084	2022-03-08 00:13:21.221054	2ac05f85-27b4-45f0-850e-80b6959e930f	\N	3102
3043	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	English Language Learners	English Language Learners	English Language Learners	\N	\N	\N	2022-03-08 00:13:21.363243	2022-03-08 00:13:21.363059	0b599656-7ff8-498b-98ac-e7dc0bfc5bec	\N	3103
3044	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Multiple Subjects	Multiple Subjects	Multiple Subjects	\N	\N	\N	2022-03-08 00:13:21.377688	2022-03-08 00:13:21.377611	84f60093-c684-4501-bec6-6275af220f64	\N	3104
3045	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-03-08 00:13:21.387815	2022-03-08 00:13:21.387739	12cd70ef-81f1-4543-baab-3f2b591a0db8	\N	3105
3046	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Rated	Not Rated	Not Rated	\N	\N	\N	2022-03-08 00:13:21.430139	2022-03-08 00:13:21.437005	9160a78e-ddef-45e8-9cd4-281e356b340a	\N	3107
3047	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited	Accredited	Accredited	\N	\N	\N	2022-03-08 00:13:21.491271	2022-03-08 00:13:21.493055	d826acd5-b4da-4708-a31b-b6f42421cff0	\N	3109
3048	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Warned	Accredited - Warned	Accredited - Warned	\N	\N	\N	2022-03-08 00:13:21.504605	2022-03-08 00:13:21.506145	d33c6f29-68fe-488f-997e-032c929480cf	\N	3111
3049	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Probation	Accredited - Probation	Accredited - Probation	\N	\N	\N	2022-03-08 00:13:21.51648	2022-03-08 00:13:21.517917	99f249c8-6858-461a-806a-720ed239b9fa	\N	3113
3050	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Accredited	Not Accredited	Not Accredited	\N	\N	\N	2022-03-08 00:13:21.527419	2022-03-08 00:13:21.528827	b0fe7f4f-8270-43d0-ab91-92809741e50b	\N	3115
3051	uri://tpdm.ed-fi.org/AidTypeDescriptor	Assistantship	Assistantship	Assistantship	\N	\N	\N	2022-03-08 00:13:21.567039	2022-03-08 00:13:21.569316	19ba7e66-2f0f-4b5f-a094-e3de80f541a6	\N	3117
3052	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Scholarships	Federal Scholarships	Federal Scholarships	\N	\N	\N	2022-03-08 00:13:21.582438	2022-03-08 00:13:21.584072	6a28a430-28ef-49d9-a473-82a948245144	\N	3119
3053	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Subsidized Loans	Federal Subsidized Loans	Federal Subsidized Loans	\N	\N	\N	2022-03-08 00:13:21.593642	2022-03-08 00:13:21.59504	a7f69a67-721e-49c4-ae50-92ea94496dbb	\N	3121
3054	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Unsubsidized Loans	Federal Unsubsidized Loans	Federal Unsubsidized Loans	\N	\N	\N	2022-03-08 00:13:21.604168	2022-03-08 00:13:21.605639	22876be6-fc3f-4687-bf80-5f42513a6c67	\N	3123
3055	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Work Study	Federal Work Study	Federal Work Study	\N	\N	\N	2022-03-08 00:13:21.615327	2022-03-08 00:13:21.616693	63ceac53-dd69-4004-bf9f-5327b864df2d	\N	3125
3056	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Grants	Institutional Grants	Institutional Grants	\N	\N	\N	2022-03-08 00:13:21.625817	2022-03-08 00:13:21.627203	032157fb-5a2a-4eab-8566-7aef6b15993f	\N	3127
3057	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Loans	Institutional Loans	Institutional Loans	\N	\N	\N	2022-03-08 00:13:21.636776	2022-03-08 00:13:21.63823	c008f08f-293f-4428-8452-d97c5ea66420	\N	3129
3058	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Scholarships	Institutional Scholarships	Institutional Scholarships	\N	\N	\N	2022-03-08 00:13:21.647696	2022-03-08 00:13:21.649106	5c6bfdcc-0436-48ea-a597-7b4085a21c28	\N	3131
3059	uri://tpdm.ed-fi.org/AidTypeDescriptor	Loan Forgiveness	Loan Forgiveness	Loan Forgiveness	\N	\N	\N	2022-03-08 00:13:21.658214	2022-03-08 00:13:21.659598	158c4375-164b-4fef-a88e-4b978d463008	\N	3133
3060	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Federal Grants	Other Federal Grants	Other Federal Grants	\N	\N	\N	2022-03-08 00:13:21.669295	2022-03-08 00:13:21.670643	61381cd0-d558-423f-bcd8-727c43e19482	\N	3135
3061	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Grants	Other Grants	Other Grants	\N	\N	\N	2022-03-08 00:13:21.680012	2022-03-08 00:13:21.681502	ad72d7f6-61ab-4a38-b272-43dfc0542b90	\N	3137
3062	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other On-Campus Work	Other On-Campus Work	Other On-Campus Work	\N	\N	\N	2022-03-08 00:13:21.6911	2022-03-08 00:13:21.692431	cf5b1ddd-d85f-4ae2-929f-5a03aef1792f	\N	3139
3063	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Scholarships	Other Scholarships	Other Scholarships	\N	\N	\N	2022-03-08 00:13:21.701933	2022-03-08 00:13:21.703327	5cc4a845-90c2-4972-9657-5999fa144830	\N	3141
3064	uri://tpdm.ed-fi.org/AidTypeDescriptor	Parent PLUS Loans	Parent PLUS Loans	Parent PLUS Loans	\N	\N	\N	2022-03-08 00:13:21.712648	2022-03-08 00:13:21.714009	b2d8c0a9-7403-45c1-b959-607218259e2e	\N	3143
3065	uri://tpdm.ed-fi.org/AidTypeDescriptor	Pell Grants	Pell Grants	Pell Grants	\N	\N	\N	2022-03-08 00:13:21.723478	2022-03-08 00:13:21.724813	a75e65ec-8fa2-4ae2-8d84-0cd795e10d0f	\N	3145
3066	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Grants	Private Grants	Private Grants	\N	\N	\N	2022-03-08 00:13:21.734224	2022-03-08 00:13:21.735928	5b6c2a2d-9a6f-44cf-856f-b3e65135d27c	\N	3147
3067	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Loans	Private Loans	Private Loans	\N	\N	\N	2022-03-08 00:13:21.749814	2022-03-08 00:13:21.75168	af02f73b-2b77-479c-b155-a6efac008463	\N	3149
3068	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Scholarships	Private Scholarships	Private Scholarships	\N	\N	\N	2022-03-08 00:13:21.762042	2022-03-08 00:13:21.763553	c62e7ca1-1f02-427b-9855-f7890de76e57	\N	3151
3069	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Grants	State and Local Grants	State and Local Grants	\N	\N	\N	2022-03-08 00:13:21.773709	2022-03-08 00:13:21.775391	ace77427-b899-4400-8f74-eb394efce88e	\N	3153
3070	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Scholarships	State and Local Scholarships	State and Local Scholarships	\N	\N	\N	2022-03-08 00:13:21.78511	2022-03-08 00:13:21.786485	5702bf59-ee0f-4857-90ea-a908b4034061	\N	3155
3071	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Loans	State Loans	State Loans	\N	\N	\N	2022-03-08 00:13:21.796171	2022-03-08 00:13:21.797579	4da3c34e-9500-488c-a19e-1fde0bd6a23a	\N	3157
3072	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Work	State Work	State Work	\N	\N	\N	2022-03-08 00:13:21.807031	2022-03-08 00:13:21.808612	c0e8933e-7621-4832-b47c-8909a79b502c	\N	3159
3073	uri://tpdm.ed-fi.org/AidTypeDescriptor	Teach Grants	Teach Grants	Teach Grants	\N	\N	\N	2022-03-08 00:13:21.818709	2022-03-08 00:13:21.820089	ebc89942-f955-41fa-a1b5-b13b710f8ff3	\N	3161
3074	uri://tpdm.ed-fi.org/AidTypeDescriptor	Tuition Reimbursements	Tuition Reimbursements	Tuition Reimbursements	\N	\N	\N	2022-03-08 00:13:21.82921	2022-03-08 00:13:21.830652	9e40ec4b-eabf-4a52-803b-ea4b8c12be2b	\N	3163
3075	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Alternative Program	Alternative Program	Alternative Program	\N	\N	\N	2022-03-08 00:13:21.868871	2022-03-08 00:13:21.871094	89029ce8-f9be-4016-b765-ca58e2adfa47	\N	3165
3076	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Center for Professional Development	Center for Professional Development	Center for Professional Development	\N	\N	\N	2022-03-08 00:13:21.882702	2022-03-08 00:13:21.884298	7387b521-f0f5-4b50-a825-b97137809331	\N	3167
3077	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Vocational Experience	Vocational Experience	Vocational Experience	\N	\N	\N	2022-03-08 00:13:21.895056	2022-03-08 00:13:21.896527	4b2180b0-155b-4d18-bc84-8548f80505be	\N	3169
3078	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Certification by Exam	Certification by Exam	Certification by Exam	\N	\N	\N	2022-03-08 00:13:21.906732	2022-03-08 00:13:21.908299	fde50c94-42fe-4f70-9f3c-82586fd3bdf6	\N	3171
3079	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Out of State	Out of State	Out of State	\N	\N	\N	2022-03-08 00:13:21.918498	2022-03-08 00:13:21.920202	b96d1975-23a5-4031-9f15-d699656c81dc	\N	3173
3080	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Paraprofessional Program	Paraprofessional Program	Paraprofessional Program	\N	\N	\N	2022-03-08 00:13:21.929957	2022-03-08 00:13:21.931425	864acdf6-ef33-4a98-85a7-4ec98514f891	\N	3175
3081	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Post-Baccalaureate	Post-Baccalaureate	Post-Baccalaureate	\N	\N	\N	2022-03-08 00:13:21.945019	2022-03-08 00:13:21.946506	57f2d3f5-c080-4c7a-977f-53d46fd01bdf	\N	3177
3082	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Permit Program	Permit Program	Permit Program	\N	\N	\N	2022-03-08 00:13:21.957783	2022-03-08 00:13:21.959145	89d9954c-228c-4923-8d94-8fd16b361d89	\N	3179
3083	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Standard Program	Standard Program	Standard Program	\N	\N	\N	2022-03-08 00:13:21.968416	2022-03-08 00:13:21.969818	6b3d9a3c-f1fa-4c2b-b6ab-aded3371adc6	\N	3181
3084	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-03-08 00:13:21.979315	2022-03-08 00:13:21.980762	1a61f2f9-1c4e-44a1-998e-7360a50bd029	\N	3183
3085	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Temporary Teaching Certificate	Temporary Teaching Certificate	Temporary Teaching Certificate	\N	\N	\N	2022-03-08 00:13:21.990074	2022-03-08 00:13:21.991454	38289708-c94c-4916-93c1-8d7aedef383a	\N	3185
3086	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Completion	Completion	A cohort year based on the candidate's scheduled completion	\N	\N	\N	2022-03-08 00:13:22.031693	2022-03-08 00:13:22.030279	6d921327-9594-4a57-8f54-acd09ffb14a2	\N	3186
3087	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Entry	Entry	A cohort year based on the entry of candidate into the Eucator Preparation Provider	\N	\N	\N	2022-03-08 00:13:22.043884	2022-03-08 00:13:22.04381	930d34c2-3311-414f-88e1-5ae71fb2dd4b	\N	3187
3088	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Assist	One Teach, One Assist	One Teach, One Assist	\N	\N	\N	2022-03-08 00:13:22.083014	2022-03-08 00:13:22.085321	ad0a06cf-201c-4187-850f-66336b70fa05	\N	3189
3089	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Observe	One Teach, One Observe	One Teach, One Observe	\N	\N	\N	2022-03-08 00:13:22.097275	2022-03-08 00:13:22.098759	6e98d612-ca91-4d2d-b6c8-31aaf87cefac	\N	3191
3090	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Parallel Teaching	Parallel Teaching	Parallel Teaching	\N	\N	\N	2022-03-08 00:13:22.109241	2022-03-08 00:13:22.110981	d656d805-084e-4a1a-b2d5-6bcb56d898ba	\N	3193
3091	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Station Teaching	Station Teaching	Station Teaching	\N	\N	\N	2022-03-08 00:13:22.121917	2022-03-08 00:13:22.123399	e2679e9b-48d0-4782-8c29-0fab87b47250	\N	3195
3092	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Other	Other	Other	\N	\N	\N	2022-03-08 00:13:22.13297	2022-03-08 00:13:22.13438	9f41ac97-be6f-493d-8414-6212495a57fb	\N	3197
3093	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Team Teaching	Team Teaching	Team Teaching	\N	\N	\N	2022-03-08 00:13:22.144231	2022-03-08 00:13:22.145662	d56f2086-9677-4c90-9883-bd5dd34c038d	\N	3199
3094	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Alternative Teaching	Alternative Teaching	Alternative Teaching	\N	\N	\N	2022-03-08 00:13:22.15522	2022-03-08 00:13:22.156624	ec6528b9-6ff9-436a-96c0-cfaf646a0478	\N	3201
3095	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Renewed	Renewed	Renewed	\N	\N	\N	2022-03-08 00:13:22.194739	2022-03-08 00:13:22.196995	4393e59d-83a6-4bc8-8d8f-60b71d0e31b4	\N	3203
3096	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Revoked	Revoked	Revoked	\N	\N	\N	2022-03-08 00:13:22.207968	2022-03-08 00:13:22.209447	12cc4770-251c-4ee2-ae1a-cb1e65144107	\N	3205
3097	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Suspended	Suspended	Suspended	\N	\N	\N	2022-03-08 00:13:22.219426	2022-03-08 00:13:22.22101	6f37402b-f81d-47d4-892f-0e0cd197d06d	\N	3207
3098	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Retired	Retired	Retired	\N	\N	\N	2022-03-08 00:13:22.230228	2022-03-08 00:13:22.231742	3f0e88aa-df8b-4c2a-a4c9-756e964a698a	\N	3209
3099	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Voluntary Surrender	Voluntary Surrender	Voluntary Surrender	\N	\N	\N	2022-03-08 00:13:22.241887	2022-03-08 00:13:22.24361	6739764f-49d3-4d76-98f4-f49a98a04939	\N	3211
3100	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Expired	Expired	Expired	\N	\N	\N	2022-03-08 00:13:22.253409	2022-03-08 00:13:22.255041	51bf3970-4ed7-4b5f-9108-0f08fe6c68fe	\N	3213
3101	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	2022-03-08 00:13:22.265175	2022-03-08 00:13:22.266648	baa004c6-aa24-4d33-83c6-37412fd33961	\N	3215
3102	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Active	Active	Active	\N	\N	\N	2022-03-08 00:13:22.277298	2022-03-08 00:13:22.278945	9d602206-dc97-4469-92c1-16156fe7480f	\N	3217
3103	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	Educator Preparation Provider	Educator Preparation Provider	Educator Preparation Provider	\N	\N	\N	2022-03-08 00:13:22.319753	2022-03-08 00:13:22.318382	5d179797-4d06-4d61-bf68-20a670511819	\N	3218
3104	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	University	University	University	\N	\N	\N	2022-03-08 00:13:22.332285	2022-03-08 00:13:22.332219	07d301c7-d34e-4154-bc66-de7e01cfa9ab	\N	3219
3105	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2022-03-08 00:13:22.370576	2022-03-08 00:13:22.37294	89838e58-3423-45cc-97e8-4c535385f538	\N	3221
3106	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	2022-03-08 00:13:22.384474	2022-03-08 00:13:22.385853	40eb0cf0-a964-4892-b3fa-69ad2b1e2193	\N	3223
3107	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Associate School Psychologist	Associate School Psychologist	Associate School Psychologist	\N	\N	\N	2022-03-08 00:13:22.394978	2022-03-08 00:13:22.396369	d818a66b-90e0-4859-b69f-20cc7a43a90b	\N	3225
3108	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2022-03-08 00:13:22.405795	2022-03-08 00:13:22.407094	30aa0654-7167-492b-a786-2d8a62b21412	\N	3227
3109	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Diagnostician	Educational Diagnostician	Educational Diagnostician	\N	\N	\N	2022-03-08 00:13:22.415864	2022-03-08 00:13:22.417155	42fecfad-e094-4db6-8767-f3da476d4fb2	\N	3229
3110	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Instructional Officer	Instructional Officer	Instructional Officer	\N	\N	\N	2022-03-08 00:13:22.425885	2022-03-08 00:13:22.427141	c0ee0330-f376-498f-ac1d-0b92afed05b4	\N	3231
3111	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Librarian	Librarian	Librarian	\N	\N	\N	2022-03-08 00:13:22.436221	2022-03-08 00:13:22.437613	2a3b8d3c-e4f5-4468-8d6e-f1076717bdee	\N	3233
3112	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Physician	Physician	Physician	\N	\N	\N	2022-03-08 00:13:22.44635	2022-03-08 00:13:22.447638	cce529a8-fda7-4789-9a53-e0352dca5589	\N	3235
3113	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-03-08 00:13:22.457028	2022-03-08 00:13:22.458474	8d775a79-f9c3-49c2-83d0-89e9dc39d170	\N	3237
3114	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Nurse	School Nurse	School Nurse	\N	\N	\N	2022-03-08 00:13:22.468666	2022-03-08 00:13:22.470275	eab417c4-50df-4522-b7b9-a3c481b2e02a	\N	3239
3115	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	2022-03-08 00:13:22.479406	2022-03-08 00:13:22.480778	023aecf9-8978-4cf6-aa6a-798dbd476932	\N	3241
3116	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	2022-03-08 00:13:22.489958	2022-03-08 00:13:22.491243	18b23e8c-f259-4fb0-b6e4-41ce2a337dba	\N	3243
3117	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher Supervisor	Teacher Supervisor	Teacher Supervisor	\N	\N	\N	2022-03-08 00:13:22.501066	2022-03-08 00:13:22.502417	783112c4-b21b-46f4-9572-6697d56a9bb4	\N	3245
3118	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-03-08 00:13:22.511785	2022-03-08 00:13:22.513191	b795b017-00be-43fb-986e-26a3c75fc506	\N	3247
3119	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Visiting Teacher	Visiting Teacher	Visiting Teacher	\N	\N	\N	2022-03-08 00:13:22.5223	2022-03-08 00:13:22.523739	eaa83ac8-186e-42e8-8b12-eaca3412e8f9	\N	3249
3120	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Secretary	Educational Secretary	Educational Secretary	\N	\N	\N	2022-03-08 00:13:22.533178	2022-03-08 00:13:22.534592	c913c57d-1721-46f1-9d46-6b7b878be08a	\N	3251
3121	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Aide	Educational Aide	Educational Aide	\N	\N	\N	2022-03-08 00:13:22.544004	2022-03-08 00:13:22.545304	7be2ee98-0daa-4648-a2b3-fc76ab0f66cb	\N	3253
3122	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-03-08 00:13:22.554213	2022-03-08 00:13:22.555574	af1eac50-4970-49e9-8f7c-9228a139a999	\N	3255
3123	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	2022-03-08 00:13:22.564194	2022-03-08 00:13:22.565588	9ada0621-670c-47ee-bcfd-45497f471918	\N	3257
3124	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-03-08 00:13:22.604082	2022-03-08 00:13:22.606251	4bb0b33e-38a2-44bd-9091-7233331ad7cb	\N	3259
3125	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	2022-03-08 00:13:22.618152	2022-03-08 00:13:22.619647	9e7e4794-8858-4979-89df-0fe593f48290	\N	3261
3126	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-03-08 00:13:22.630171	2022-03-08 00:13:22.631806	b68e9632-6c69-4db1-bf22-a9fe84a6181e	\N	3263
3127	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Other	Other	Other	\N	\N	\N	2022-03-08 00:13:22.641988	2022-03-08 00:13:22.643558	0370cf5c-a92a-4498-b668-193e28bf42e3	\N	3265
3128	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Fellowship	Fellowship	Fellowship	\N	\N	\N	2022-03-08 00:13:22.685273	2022-03-08 00:13:22.687636	9f1a78bc-8240-4267-af7d-b6d4bf5bd63d	\N	3267
3129	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Internship	Internship	Internship	\N	\N	\N	2022-03-08 00:13:22.699946	2022-03-08 00:13:22.701388	1b62829c-202d-4164-88ac-a91262163c47	\N	3269
3130	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Residency	Residency	Residency	\N	\N	\N	2022-03-08 00:13:22.712212	2022-03-08 00:13:22.713972	cda4d1f0-8579-4795-9ce7-bb21dc944fca	\N	3271
3131	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Traditional	Traditional	Traditional	\N	\N	\N	2022-03-08 00:13:22.723092	2022-03-08 00:13:22.724469	42acff92-b9c0-458d-bdc4-5f28ad78f525	\N	3273
3132	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Other	Other	Other	\N	\N	\N	2022-03-08 00:13:22.733741	2022-03-08 00:13:22.735103	84ebe384-ecd7-4e71-b47c-f2edbbd5aa35	\N	3275
3133	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	2022-03-08 00:13:22.772536	2022-03-08 00:13:22.774758	25fe22d7-3415-4844-a110-f1b30a072497	\N	3277
3134	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	2022-03-08 00:13:22.7859	2022-03-08 00:13:22.78728	21184961-b274-4c40-a9ad-563f9e468939	\N	3279
3135	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	2022-03-08 00:13:22.797468	2022-03-08 00:13:22.798998	414cca10-fef0-4186-ac89-21d46f0ae442	\N	3281
3136	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	2022-03-08 00:13:22.808454	2022-03-08 00:13:22.80983	413698c9-d105-4674-9cb5-35f216a43e7d	\N	3283
3137	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	2022-03-08 00:13:22.819606	2022-03-08 00:13:22.82091	18751de8-ab84-47c1-9fad-bb31c9ed4b59	\N	3285
3138	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	2022-03-08 00:13:22.830345	2022-03-08 00:13:22.831626	c2205df6-79c9-44ef-a02b-2f79cadce740	\N	3287
3139	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	2022-03-08 00:13:22.841119	2022-03-08 00:13:22.842481	4983132d-d6e2-455e-a542-9708e9ee5d0f	\N	3289
3140	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	2022-03-08 00:13:22.852236	2022-03-08 00:13:22.853673	25ea8c4d-55f7-4d7b-9463-3a3b36e9cd85	\N	3291
3141	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	2022-03-08 00:13:22.863296	2022-03-08 00:13:22.864666	1afe14fa-2b03-4be1-b570-1f4784e7f154	\N	3293
3142	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	MOY	MOY	Mid-Year	\N	\N	\N	2022-03-08 00:13:22.902868	2022-03-08 00:13:22.905018	b3435bd0-e01b-4b61-89fa-3afc4f81f190	\N	3295
3143	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	BOY	BOY	Beginning of year	\N	\N	\N	2022-03-08 00:13:22.916745	2022-03-08 00:13:22.91815	0eb7a84d-ba31-4b7c-8ac8-73d07230e501	\N	3297
3144	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	2022-03-08 00:13:22.929496	2022-03-08 00:13:22.930862	84ff0cc0-271a-441c-b393-c34342a21779	\N	3299
3145	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	2022-03-08 00:13:22.939906	2022-03-08 00:13:22.941205	3fe26f70-b542-4aa6-9036-f0bb3c84a393	\N	3301
3146	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	2022-03-08 00:13:22.950377	2022-03-08 00:13:22.951822	be9809d6-39a1-4298-bd69-ab70ba820789	\N	3303
3147	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	2022-03-08 00:13:22.96084	2022-03-08 00:13:22.962525	f1f6e489-235a-40d3-a67b-12710de9d43b	\N	3305
3148	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	2022-03-08 00:13:22.971672	2022-03-08 00:13:22.973017	97fea7e1-68ff-427f-b90c-c811eee7a9d0	\N	3307
3149	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	2022-03-08 00:13:22.982009	2022-03-08 00:13:22.983346	0f6511af-80f9-487e-8ff6-67ce6559c14f	\N	3309
3150	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	2022-03-08 00:13:22.992467	2022-03-08 00:13:22.993775	77cbb87d-89e3-417d-b702-778450934cc6	\N	3311
3151	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2022-03-08 00:13:23.00206	2022-03-08 00:13:23.003336	ad080284-60e3-43a1-bc4d-94642fa499ae	\N	3313
3152	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	2022-03-08 00:13:23.011615	2022-03-08 00:13:23.012851	6fcafe86-fc0a-4a8f-b973-e52a2cfd7cdd	\N	3315
3153	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	2022-03-08 00:13:23.051373	2022-03-08 00:13:23.053462	9020110e-9185-4fd6-9771-a3c09a5a6128	\N	3317
3154	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	2022-03-08 00:13:23.065024	2022-03-08 00:13:23.066552	0ecd09f9-988c-4289-a4a6-b2a4aa2974e9	\N	3319
3155	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	2022-03-08 00:13:23.075888	2022-03-08 00:13:23.07735	7bc2b136-478a-47f5-9a3e-23ca57fff0ce	\N	3321
3156	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	2022-03-08 00:13:23.086583	2022-03-08 00:13:23.087964	2406b152-ab4a-4a64-8961-1b39853991aa	\N	3323
3157	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	2022-03-08 00:13:23.096772	2022-03-08 00:13:23.098179	0a01756f-329d-4724-8d01-1f1d6a718a0a	\N	3325
3158	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	2022-03-08 00:13:23.11146	2022-03-08 00:13:23.113121	bfe0ec0f-59cc-4b5f-9a66-c2c9abcbd9e5	\N	3327
3159	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	2022-03-08 00:13:23.122984	2022-03-08 00:13:23.124391	d56c34b5-4b83-4d46-bad6-f9487300f0cd	\N	3329
3160	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	2022-03-08 00:13:23.133253	2022-03-08 00:13:23.134518	701124df-59d8-4378-a7b8-aeb1cfc5e828	\N	3331
3161	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	2022-03-08 00:13:23.143363	2022-03-08 00:13:23.144856	ea4a298b-2b81-47ac-a09e-bcede5b9db94	\N	3333
3162	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Not Started	Not Started	Not Started	\N	\N	\N	2022-03-08 00:13:23.183657	2022-03-08 00:13:23.186055	914eb282-5d3b-4101-91b6-1c564782e9ad	\N	3335
3163	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	In Progress	In Progress	In Progress	\N	\N	\N	2022-03-08 00:13:23.197702	2022-03-08 00:13:23.199113	1614e63d-6ef1-4809-b6c4-3b9b4fa53f0c	\N	3337
3164	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	2022-03-08 00:13:23.208763	2022-03-08 00:13:23.210072	30d55f03-e1e3-43e6-b4f6-58ddefbe16db	\N	3339
3165	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Queued	Queued	Queued	\N	\N	\N	2022-03-08 00:13:23.221913	2022-03-08 00:13:23.223269	7da7f8f4-2c2e-4a5e-b231-298061ce770e	\N	3341
3166	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-03-08 00:13:23.232534	2022-03-08 00:13:23.233854	e662f99d-e76e-4188-97a1-408ccb606894	\N	3343
3167	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2022-03-08 00:13:23.243902	2022-03-08 00:13:23.245309	bc5eacf1-383c-4660-98bc-245add504dc0	\N	3345
3168	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	2022-03-08 00:13:23.285219	2022-03-08 00:13:23.287649	e0a56433-4d8b-45d6-bc00-7e0dfe740b2f	\N	3347
3169	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	2022-03-08 00:13:23.299722	2022-03-08 00:13:23.301221	bd561f7a-74de-43f1-b1c9-48d89e705ffc	\N	3349
3170	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	2022-03-08 00:13:23.311212	2022-03-08 00:13:23.313006	4aaff31c-6080-4f97-83bd-001d3477dff3	\N	3351
3171	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	2022-03-08 00:13:23.323894	2022-03-08 00:13:23.325572	c3c34763-8079-45af-a8be-824895bfe17c	\N	3353
3172	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	2022-03-08 00:13:23.33542	2022-03-08 00:13:23.33688	678d055d-d683-4c4c-ae8f-9e50950b4e89	\N	3355
3173	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	2022-03-08 00:13:23.348253	2022-03-08 00:13:23.350039	9a0564e8-97a2-4e9b-885a-308fa2efe0b7	\N	3357
3174	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	2022-03-08 00:13:23.362306	2022-03-08 00:13:23.363896	842f4f67-591f-432f-9a58-ec8515be961a	\N	3359
3175	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	2022-03-08 00:13:23.374133	2022-03-08 00:13:23.375593	ce9d02fc-74e0-41ca-a1ed-37a429d7f9be	\N	3361
3176	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	2022-03-08 00:13:23.386368	2022-03-08 00:13:23.388134	a3faaae0-ab1f-4ae9-aea9-e47bcd203bbe	\N	3363
3177	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	2022-03-08 00:13:23.399169	2022-03-08 00:13:23.400646	fb7ddc3b-ad75-4062-8e76-4b56867fe338	\N	3365
3178	uri://tpdm.ed-fi.org/GenderDescriptor	Female	Female	Female	\N	\N	\N	2022-03-08 00:13:23.441657	2022-03-08 00:13:23.444052	1915ee13-357e-4824-b1f1-fde11a6febc8	\N	3367
3179	uri://tpdm.ed-fi.org/GenderDescriptor	Male	Male	Male	\N	\N	\N	2022-03-08 00:13:23.455786	2022-03-08 00:13:23.457247	2aa9c503-c6a9-4a5d-b898-82306e4a827b	\N	3369
3180	uri://tpdm.ed-fi.org/GenderDescriptor	Other	Other	Other	\N	\N	\N	2022-03-08 00:13:23.471542	2022-03-08 00:13:23.47318	b621f85c-9f36-4782-8309-c63a55c2488b	\N	3371
3181	uri://tpdm.ed-fi.org/GenderDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	2022-03-08 00:13:23.484356	2022-03-08 00:13:23.486213	a2c1073d-811f-4d43-9593-a69fcd62c5a0	\N	3373
3182	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Master's Program	Master's Program	Master's Program	\N	\N	\N	2022-03-08 00:13:23.530665	2022-03-08 00:13:23.529276	3a69bbc7-15a3-4bcc-8730-4b4fa49d316d	\N	3374
3183	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	2022-03-08 00:13:23.544069	2022-03-08 00:13:23.543998	866c9bdf-3fcf-4c5a-98ae-8aad4cb2c4b8	\N	3375
3184	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	2022-03-08 00:13:23.555189	2022-03-08 00:13:23.555114	18ee74d2-75dd-4076-a15b-5136a8607919	\N	3376
3185	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Freshman	Freshman	Freshman	\N	\N	\N	2022-03-08 00:13:23.565768	2022-03-08 00:13:23.565659	efb8009f-ecb1-442f-b3ee-e36e7659f9a6	\N	3377
3186	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Sophomore	Sophomore	Sophomore	\N	\N	\N	2022-03-08 00:13:23.576256	2022-03-08 00:13:23.576185	6e54a4f5-6174-4935-ba76-4c2866dc1c52	\N	3378
3187	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Junior	Junior	Junior	\N	\N	\N	2022-03-08 00:13:23.586772	2022-03-08 00:13:23.586695	2eac901a-0a69-4a1d-9a45-cb65bfb4d948	\N	3379
3188	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Senior	Senior	Senior	\N	\N	\N	2022-03-08 00:13:23.596112	2022-03-08 00:13:23.596033	bce1ffec-a29b-46f0-992b-e4d787f8d8c0	\N	3380
3189	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Postbaccalaureate	Postbaccalaureate	Postbaccalaureate	\N	\N	\N	2022-03-08 00:13:23.607019	2022-03-08 00:13:23.60694	f3b69f04-4d92-4f2e-a76c-03363ac1637a	\N	3381
3190	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Doctoral Program	Doctoral Program	Doctoral Program	\N	\N	\N	2022-03-08 00:13:23.617722	2022-03-08 00:13:23.617642	016c6e24-c6f6-4cac-826d-33c30dcbcfc5	\N	3382
3191	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	2022-03-08 00:13:23.662295	2022-03-08 00:13:23.665074	db3caef0-c6d8-4795-b18a-2208eb56410e	\N	3384
3192	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	2022-03-08 00:13:23.677087	2022-03-08 00:13:23.678654	aeefc4ff-55ba-4e7d-a2a1-97bbb84b0c5a	\N	3386
3193	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	2022-03-08 00:13:23.6899	2022-03-08 00:13:23.691495	f8371b79-c9b0-437c-b871-f58edb736be8	\N	3388
3194	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	2022-03-08 00:13:23.702365	2022-03-08 00:13:23.703947	2b8e5561-c5e7-4b49-92ae-f48bc65228eb	\N	3390
3195	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	2022-03-08 00:13:23.716929	2022-03-08 00:13:23.718831	172ab6e5-85e1-47ed-bb25-9db1f4e2812f	\N	3392
3196	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	2022-03-08 00:13:23.729854	2022-03-08 00:13:23.731533	2aea8290-a5fe-46a0-a49f-eb82e3536e37	\N	3394
3197	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	2022-03-08 00:13:23.743215	2022-03-08 00:13:23.744848	d6fd92d6-bb32-4af8-8b1b-956a74f3028e	\N	3396
3198	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	2022-03-08 00:13:23.755945	2022-03-08 00:13:23.757387	abdd11c1-d9f0-4d4f-b65d-9d20c9078891	\N	3398
3199	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	2022-03-08 00:13:23.766868	2022-03-08 00:13:23.768453	227efd12-a290-4e6b-97b0-8336c065e803	\N	3400
3200	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	2022-03-08 00:13:23.812148	2022-03-08 00:13:23.815247	65ea623e-82ff-43fd-a888-b4ef7eb60b69	\N	3402
3201	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	2022-03-08 00:13:23.828113	2022-03-08 00:13:23.829572	ea770281-f8a7-4639-bcc0-1b0294f29563	\N	3404
3202	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	2022-03-08 00:13:23.840636	2022-03-08 00:13:23.842375	addd2008-87bf-44c8-be83-00f05173977b	\N	3406
3203	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	2022-03-08 00:13:23.852765	2022-03-08 00:13:23.854449	7db3cede-e5a6-4ba8-a254-e13971518a24	\N	3408
3204	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	2022-03-08 00:13:23.864468	2022-03-08 00:13:23.865911	6b99a52e-3de7-473e-a5ef-767daab7e67e	\N	3410
3205	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	2022-03-08 00:13:23.879841	2022-03-08 00:13:23.881245	9f4b4ef5-710d-4b9a-b29f-2caa9aa2363c	\N	3412
3206	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	2022-03-08 00:13:23.890817	2022-03-08 00:13:23.892316	f9bb3fec-7f34-48c3-91cf-cb63758e3812	\N	3414
3207	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	2022-03-08 00:13:23.902932	2022-03-08 00:13:23.904554	703fbd0a-dbf3-43e9-ba8c-6f0747afcc4f	\N	3416
3208	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	2022-03-08 00:13:23.915888	2022-03-08 00:13:23.917664	3dbbd1d8-86ae-48ee-aa88-5513b60267db	\N	3418
3209	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	2022-03-08 00:13:23.961213	2022-03-08 00:13:23.964269	8b1bc7e6-efe4-48f0-aa60-dca0af35a81d	\N	3420
3210	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	2022-03-08 00:13:23.979069	2022-03-08 00:13:23.980795	4f390b1c-715a-4c84-8778-99d767942adc	\N	3422
3211	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	2022-03-08 00:13:23.992239	2022-03-08 00:13:23.993895	5a8dd812-9b94-4a2e-962a-357ea3e8b536	\N	3424
3212	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	2022-03-08 00:13:24.004491	2022-03-08 00:13:24.005862	7d309cb4-1a7a-4853-aed0-267ef87c4c01	\N	3426
3213	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Growth Measures	Student Growth Measures	Student Growth Measures	\N	\N	\N	2022-03-08 00:13:24.017179	2022-03-08 00:13:24.018627	798d001d-cb0e-47bc-9da5-6b616d9b1337	\N	3428
3214	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	2022-03-08 00:13:24.028864	2022-03-08 00:13:24.030383	57510769-60e7-41ef-a6a2-0b1eae85190b	\N	3430
3215	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	2022-03-08 00:13:24.040803	2022-03-08 00:13:24.042227	0559c51f-d534-4d08-a4b8-871906093dd6	\N	3432
3216	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	2022-03-08 00:13:24.053367	2022-03-08 00:13:24.054802	7238cd0f-513a-4b84-bbe2-c95fa15df0fe	\N	3434
3217	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	2022-03-08 00:13:24.065651	2022-03-08 00:13:24.067218	d1a99cef-2d31-4570-99f8-0770d70b9c57	\N	3436
3218	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	2022-03-08 00:13:24.078353	2022-03-08 00:13:24.079887	0e10b1f7-d77d-46a5-8dd4-7dce0ee70b7c	\N	3438
3219	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Traditional Certification Program	Traditional Certification Program	Traditional Certification Program	\N	\N	\N	2022-03-08 00:13:24.121444	2022-03-08 00:13:24.120067	953e189c-4acc-4d4f-ba1c-50043db1a788	\N	3439
3220	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Post-Baccalaureate	Post-Baccalaureate	Master's + Teaching certificate	\N	\N	\N	2022-03-08 00:13:24.134839	2022-03-08 00:13:24.134763	a650558d-5123-4c88-b2ca-76f2eec020f8	\N	3440
3221	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Continuing Education Certificate	Continuing Education Certificate	Certificates offered by education institution	\N	\N	\N	2022-03-08 00:13:24.144718	2022-03-08 00:13:24.144625	a126ae38-812f-4d45-bf48-90305af1047c	\N	3441
3222	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Alternative	Alternative	Training offered in ESC's, community colleges, private vendors, etc.	\N	\N	\N	2022-03-08 00:13:24.154373	2022-03-08 00:13:24.154301	ac9f0e3b-5be6-40d8-84ea-c1b56f8b39fd	\N	3442
3223	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-03-08 00:13:24.196692	2022-03-08 00:13:24.194952	8990dbe4-1963-4b06-bb51-c45c5eb5bbdd	\N	3443
3224	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Received Degree	Received Degree	Received Degree	\N	\N	\N	2022-03-08 00:13:24.209442	2022-03-08 00:13:24.209373	2901e235-5d1c-4532-88d8-1497d2cfea23	\N	3444
3225	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	2022-03-08 00:13:24.24931	2022-03-08 00:13:24.251782	538cef22-93cd-4f7d-938d-766972e708e1	\N	3446
3226	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	2022-03-08 00:13:24.264695	2022-03-08 00:13:24.26672	17d2259d-5735-4b54-8f9e-8fc0416288bd	\N	3448
3227	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	2022-03-08 00:13:24.277808	2022-03-08 00:13:24.279389	846e7160-2866-4b3b-a377-2a8d3611145f	\N	3450
3228	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	2022-03-08 00:13:24.291649	2022-03-08 00:13:24.293348	68d0d729-95d8-426c-8fb9-4541beffe465	\N	3452
3229	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	2022-03-08 00:13:24.302004	2022-03-08 00:13:24.30349	e7114b70-de9e-4edd-bf53-15427d26d5ce	\N	3454
3230	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	2022-03-08 00:13:24.312112	2022-03-08 00:13:24.313382	2ede3f58-c433-4099-9e70-29e08bfe5182	\N	3456
3231	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	2022-03-08 00:13:24.32249	2022-03-08 00:13:24.32376	a4b9bbad-d3ff-40e5-814a-ec7842f42d0a	\N	3458
3232	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	2022-03-08 00:13:24.332623	2022-03-08 00:13:24.333925	028ce703-ff0c-4e6e-9609-09c96d8d8f84	\N	3460
3233	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	2022-03-08 00:13:24.343484	2022-03-08 00:13:24.344912	ffffb545-1e9d-4da8-9b54-6dc2130c31ac	\N	3462
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
742
743
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
741
740
745
744
746
747
748
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
750
751
752
753
754
756
757
758
759
760
761
762
763
764
765
749
755
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
766
767
769
768
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
786
787
788
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
789
790
791
792
793
794
795
796
797
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, disciplineactionlength, actualdisciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, relatedtozerotolerancepolicy, responsibilityschoolid, assignmentschoolid, receivededucationservicesduringexpulsion, iepplacementmeetingindicator, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
798
800
805
809
799
802
804
808
801
803
806
807
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, staffusi, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentassociation (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (behaviordescriptorid, disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
810
814
815
818
819
812
817
813
811
816
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, incidentdate, incidenttime, incidentlocationdescriptorid, incidentdescription, reporterdescriptiondescriptorid, reportername, reportedtolawenforcement, casenumber, incidentcost, staffusi, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (behaviordescriptorid, incidentidentifier, schoolid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
820
822
823
821
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
824
826
830
833
835
827
828
829
831
832
834
836
825
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, learningresourcemetadatauri, shortdescription, description, additionalauthorsindicator, publisher, timerequired, interactivitystyledescriptorid, contentclassdescriptorid, userightsurl, publicationdate, publicationyear, version, learningstandardid, cost, costratedescriptorid, namespace, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (author, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, shortnameofinstitution, website, operationalstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationcategorydescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
838
839
840
841
842
843
844
837
3103
3104
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
846
847
848
849
850
851
852
854
855
845
853
\.


--
-- Data for Name: educationorganizationindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicator (educationorganizationid, indicatordescriptorid, designatedby, indicatorvalue, indicatorleveldescriptorid, indicatorgroupdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicatorperiod (begindate, educationorganizationid, indicatordescriptorid, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (addresstypedescriptorid, educationorganizationid, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
856
857
858
859
861
860
862
863
864
865
866
867
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
869
870
871
868
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
873
874
875
877
878
879
880
881
872
876
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
882
884
888
890
893
885
886
889
891
892
894
883
887
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
895
897
899
898
896
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
902
905
903
900
906
907
909
910
911
912
913
914
916
918
919
920
923
924
927
928
929
931
901
904
908
915
917
921
922
925
926
930
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
932
934
937
938
939
940
942
943
944
945
946
935
936
941
933
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, statusenddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationprogramparticipationstatus (begindate, educationorganizationid, participationstatusdescriptorid, programeducationorganizationid, programname, programtypedescriptorid, statusbegindate, studentusi, statusenddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradebookentrytypedescriptorid, description, gradingperioddescriptorid, periodsequence, duedate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningobjective (dateassigned, gradebookentrytitle, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (dateassigned, gradebookentrytitle, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
948
949
951
954
950
947
952
953
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
957
956
955
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
3182
3183
3184
3185
3186
3187
3188
3189
3190
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
977
978
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
979
982
983
980
981
984
985
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
988
989
992
995
998
1000
1002
1003
1005
987
990
997
1001
986
991
993
994
996
999
1004
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcredits, totalrequiredcredittypedescriptorid, totalrequiredcreditconversion, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, performanceleveldescriptorid, assessmentreportingmethoddescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
1007
1006
1008
1009
1010
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
1011
1014
1013
1012
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
1015
1016
1017
1018
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
1019
1020
1021
1022
1023
1024
1025
1026
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
1027
1028
1029
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatordescriptor (indicatordescriptorid) FROM stdin;
1055
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid) FROM stdin;
1056
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorleveldescriptor (indicatorleveldescriptorid) FROM stdin;
1057
1058
1059
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
1060
1061
1062
1063
1064
1065
1066
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
1069
1070
1068
1067
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
1072
1071
1073
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid) FROM stdin;
1074
1075
1076
1077
1078
1079
1080
1081
1082
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid) FROM stdin;
1084
1085
1083
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, begindate, enddate, mindosage, maxdosage, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
1086
1088
1087
1089
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (contentidentifier, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
1090
1093
1092
1094
1095
1096
1091
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, endtime, interventionidentificationcode, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, mindosage, maxdosage, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, deliverymethoddescriptorid, interventionclassdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (contentidentifier, educationorganizationid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
1098
1100
1101
1103
1104
1105
1107
1108
1109
1110
1112
1113
1116
1117
1119
1120
1122
1123
1124
1126
1127
1128
1131
1132
1134
1136
1138
1141
1142
1144
1146
1148
1151
1154
1156
1157
1160
1162
1163
1165
1167
1170
1171
1173
1174
1175
1177
1178
1179
1181
1183
1186
1187
1188
1189
1191
1192
1193
1194
1197
1198
1199
1201
1202
1203
1205
1206
1207
1208
1210
1211
1213
1214
1215
1218
1219
1222
1223
1224
1227
1228
1229
1232
1233
1236
1237
1240
1242
1243
1246
1247
1251
1252
1254
1256
1257
1258
1259
1261
1262
1264
1265
1266
1267
1269
1271
1273
1276
1277
1278
1281
1282
1283
1285
1286
1288
1289
1292
1293
1295
1297
1300
1302
1304
1305
1307
1308
1309
1311
1314
1315
1318
1320
1321
1324
1326
1329
1330
1331
1334
1336
1337
1340
1342
1343
1345
1346
1347
1348
1350
1351
1353
1355
1356
1357
1358
1360
1361
1362
1363
1364
1365
1368
1370
1371
1372
1373
1375
1376
1377
1380
1382
1383
1387
1388
1390
1392
1393
1395
1396
1397
1399
1400
1401
1403
1404
1405
1407
1409
1410
1412
1413
1415
1417
1418
1419
1421
1422
1423
1424
1426
1428
1429
1430
1431
1432
1435
1437
1438
1440
1442
1443
1444
1445
1447
1448
1450
1451
1453
1456
1458
1460
1462
1464
1466
1468
1097
1152
1155
1166
1168
1172
1185
1196
1212
1220
1226
1230
1234
1239
1244
1248
1250
1279
1323
1328
1332
1386
1398
1452
1455
1473
1478
1480
1484
1488
1513
1520
1469
1472
1475
1476
1479
1485
1487
1489
1491
1493
1495
1496
1498
1499
1501
1502
1503
1504
1506
1507
1508
1510
1511
1514
1515
1517
1519
1521
1523
1524
1527
1528
1530
1533
1534
1536
1539
1541
1542
1545
1547
1548
1549
1551
1553
1554
1555
1557
1559
1561
1563
1564
1567
1569
1570
1571
1572
1574
1575
1578
1580
1482
1526
1099
1102
1106
1111
1114
1115
1118
1121
1125
1129
1130
1133
1135
1137
1139
1140
1143
1145
1147
1149
1150
1153
1158
1159
1161
1164
1169
1176
1180
1182
1184
1190
1195
1200
1204
1209
1216
1217
1221
1225
1231
1235
1238
1241
1245
1249
1253
1255
1260
1263
1268
1270
1272
1274
1275
1280
1284
1287
1290
1291
1294
1296
1298
1299
1301
1303
1306
1310
1312
1313
1316
1317
1319
1322
1325
1327
1333
1335
1338
1339
1341
1344
1349
1352
1354
1359
1366
1367
1369
1374
1378
1379
1381
1384
1385
1389
1391
1394
1402
1406
1408
1411
1414
1416
1420
1425
1427
1433
1434
1436
1439
1441
1446
1449
1454
1457
1459
1461
1463
1465
1467
1470
1471
1474
1477
1481
1483
1486
1490
1492
1494
1497
1500
1505
1509
1512
1516
1518
1522
1525
1529
1531
1532
1535
1537
1538
1540
1543
1544
1546
1550
1552
1556
1558
1560
1562
1565
1566
1568
1573
1576
1577
1579
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
1581
1583
1585
1587
1588
1590
1584
1582
1586
1589
1591
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
1593
1592
1594
1595
1596
1597
1598
1599
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjective (learningobjectiveid, namespace, objective, description, nomenclature, successcriteria, parentlearningobjectiveid, parentnamespace, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: learningobjectiveacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectiveacademicsubject (academicsubjectdescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandard (learningobjectiveid, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandardauthor (author, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivegradelevel (gradeleveldescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivelearningstandard (learningobjectiveid, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, description, learningstandarditemcode, uri, coursetitle, successcriteria, parentlearningstandardid, namespace, learningstandardcategorydescriptorid, learningstandardscopedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (academicsubjectdescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
1601
1600
1602
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (author, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescriptorid, learningstandardequivalencestrengthdescription, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
1603
1604
1605
1606
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (gradeleveldescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (contentstandardname, identificationcode, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardprerequisitelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardprerequisitelearningstandard (learningstandardid, prerequisitelearningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
1607
1610
1611
1608
1609
1612
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
1614
1617
1616
1615
1613
1618
1619
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
1620
1622
1621
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
1638
1640
1641
1639
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1642
1644
1646
1647
1649
1650
1651
1652
1653
1645
1643
1648
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, localeducationagencycategorydescriptorid, charterstatusdescriptorid, parentlocaleducationagencyid, educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
1654
1655
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (fiscalyear, localeducationagencyid, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, stateassessmentadministrationfunding, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
1656
1657
1658
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
1659
1661
1663
1664
1667
1669
1670
1671
1660
1665
1668
1662
1666
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
1672
1673
1676
1678
1679
1675
1677
1674
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1681
1684
1686
1683
1682
1680
1685
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
1687
1688
1689
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
1690
1691
1692
1693
1694
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
1697
1695
1699
1701
1698
1696
1700
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
1702
1703
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, maxrawscore, percentofassessment, nomenclature, description, parentidentificationcode, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningobjective (assessmentidentifier, identificationcode, learningobjectiveid, learningobjectivenamespace, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: oldethnicitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.oldethnicitydescriptor (oldethnicitydescriptorid) FROM stdin;
1704
1705
1706
1707
1708
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, employmentstatusdescriptorid, staffclassificationdescriptorid, positiontitle, programassignmentdescriptorid, dateposted, datepostingremoved, postingresultdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (academicsubjectdescriptorid, educationorganizationid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, gradeleveldescriptorid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
1709
1714
1712
1710
1713
1715
1711
1716
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.organizationdepartment (organizationdepartmentid, academicsubjectdescriptorid, parenteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
1717
1718
1720
1719
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parent (parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, loginid, personid, sourcesystemdescriptorid, highestcompletedlevelofeducationdescriptorid, parentuniqueid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: parentaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddress (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parentaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddressperiod (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, parentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: parentinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentinternationaladdress (addresstypedescriptorid, parentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguage (languagedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguageuse (languagedescriptorid, languageusedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentothername (othernametypedescriptorid, parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: parentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentpersonalidentificationdocument (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parenttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parenttelephone (parentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
1721
1723
1724
1722
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
1727
1726
1729
1728
1725
\.


--
-- Data for Name: payroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.payroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amounttodate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
1731
1732
1730
1733
1734
1735
1736
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
1739
1741
1742
1743
1746
1748
1749
1750
1740
1737
1744
1745
1747
1738
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.person (personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
1752
1751
1756
1757
1761
1754
1755
1758
1759
1760
1762
1763
1764
1765
1753
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
1766
1767
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
1768
1769
1770
1771
1772
1773
1774
1775
1776
1777
1778
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
1779
1780
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
1781
1782
1783
1784
1785
1786
1787
1788
1789
1790
1791
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, postsecondaryinstitutionleveldescriptorid, administrativefundingcontroldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
1792
1793
1794
1795
1797
1798
1796
1799
1800
1801
1802
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (mediumofinstructiondescriptorid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid) FROM stdin;
1803
1804
1805
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid) FROM stdin;
1806
1807
1808
1809
1810
1811
1812
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid) FROM stdin;
1814
1815
1813
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
1816
1817
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
1820
1818
1821
1822
1819
1823
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
1824
\.


--
-- Data for Name: programlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningobjective (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, learningstandardid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programservice (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
1825
1828
1832
1826
1830
1831
1833
1834
1835
1836
1829
1827
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
1838
1841
1844
1845
1847
1849
1851
1853
1855
1856
1857
1858
1859
1861
1863
1866
1867
1869
1872
1874
1875
1876
1878
1879
1880
1883
1884
1886
1888
1889
1892
1894
1895
1840
1837
1843
1846
1848
1850
1852
1854
1860
1862
1864
1865
1868
1870
1871
1873
1877
1881
1882
1885
1887
1890
1891
1893
1896
1839
1842
3219
3220
3221
3222
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
1897
1899
1898
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
1900
1902
1901
1903
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
1906
1909
1910
1912
1914
1916
1918
1920
1922
1923
1924
1907
1905
1904
1908
1911
1913
1915
1917
1919
1921
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
1925
1927
1926
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
1928
1929
1930
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
1931
1935
1933
1934
1932
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.questionformdescriptor (questionformdescriptorid) FROM stdin;
1937
1936
1940
1941
1939
1942
1938
1943
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
1945
1947
1946
1949
1948
1944
1950
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
1952
1951
1954
1956
1957
1958
1961
1953
1955
1959
1960
3223
3224
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
1963
1966
1972
1975
1965
1962
1967
1969
1970
1973
1974
1964
1968
1971
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
1978
1980
1976
1981
1984
1985
1977
1979
1982
1983
1986
1987
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
1990
1988
1991
1993
1994
1995
1997
1998
2000
2001
2004
2005
2006
2007
2010
2012
2013
2014
2015
2017
2019
2020
2021
2024
2025
2028
2029
2032
2034
2036
2037
1989
1992
1996
1999
2002
2003
2008
2009
2011
2016
2018
2022
2023
2026
2027
2030
2031
2033
2035
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
2039
2041
2040
2042
2044
2038
2043
2045
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, gpagivengradingperiod, gpacumulative, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentlearningobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
2046
2049
2048
2051
2047
2050
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
2052
2053
2054
2055
2056
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
2058
2057
2060
2059
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
2063
2062
2066
2065
2068
2064
2061
2067
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, eventdate, educationalenvironmentdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
2069
2071
2070
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
2072
2073
2074
2075
2076
2077
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
2078
2080
2081
2079
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, schooltypedescriptorid, charterstatusdescriptorid, titleipartaschooldesignationdescriptorid, magnetspecialprogramemphasisschooldescriptorid, administrativefundingcontroldescriptorid, internetaccessdescriptorid, localeducationagencyid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolcategorydescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
2083
2082
2084
2085
2086
2087
2088
2089
2090
2091
2092
2093
2094
2095
2096
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
2099
2098
2100
2097
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
2102
2104
2106
2114
2103
2107
2110
2101
2105
2108
2109
2111
2112
2113
2115
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
2116
2117
2119
2118
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
2022	2021-2022	t	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	2441983e-001b-41dc-a8c6-0797c3a03a5a	\N	1
1991	1990-1991	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	9db45a9f-3f7c-4e7e-ac2d-8c001898e845	\N	2
1992	1991-1992	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	429c9c29-c794-41a7-b2d1-8bb0f347a264	\N	3
1993	1992-1993	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	7219eba9-8663-4094-8ef1-d34454eb3244	\N	4
1994	1993-1994	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f45474f3-1a10-4658-83a2-6a28cd3e6a5e	\N	5
1995	1994-1995	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	b9107517-7d59-4ef5-a693-1f7470876f86	\N	6
1996	1995-1996	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	b4bf4c3a-f8b7-434f-893e-d1107c138d39	\N	7
1997	1996-1997	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	60a9b981-82c0-4b6a-a767-bf1a816cc5da	\N	8
1998	1997-1998	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	a03e9038-a422-4849-b990-17e28939fbeb	\N	9
1999	1998-1999	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	82cd7232-550c-404d-a517-313bacaf928d	\N	10
2000	1999-2000	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	62663502-52b7-4c52-a20e-fa782302fcc8	\N	11
2001	2000-2001	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	3a73e1c6-d38c-42f0-b10c-cd1914ab91d6	\N	12
2002	2001-2002	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	010c07bd-6c32-4e7e-97c0-c2af44b2d891	\N	13
2003	2002-2003	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	efa0f2cc-d423-49b7-82a1-db8d59d1ba4f	\N	14
2004	2003-2004	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	baeac7ba-9e85-4280-a160-84cba880467d	\N	15
2005	2004-2005	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	14d0397f-c7cf-405d-948d-099efd663b04	\N	16
2006	2005-2006	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	42be0623-99ea-42af-aa69-bc03cbdcb3bb	\N	17
2007	2006-2007	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	b0dab938-4582-4394-81b2-3bfff7e7048f	\N	18
2008	2007-2008	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	66deda96-6ac3-4e85-bc21-93a92cee7a99	\N	19
2009	2008-2009	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	1ec0682e-7605-4453-91e9-8d461cf148cd	\N	20
2010	2009-2010	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	092edcd5-4009-464e-b7ec-eb5113c549f4	\N	21
2011	2010-2011	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	63edd3dd-2ead-4697-a95d-6b7d0c435773	\N	22
2012	2011-2012	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	bdc85b6d-39bd-4904-bbc0-60ccecdf974d	\N	23
2013	2012-2013	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	af7d8117-3c6f-4791-a7f1-8dea1124017d	\N	24
2014	2013-2014	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	3c22554f-a98b-41be-8bb4-d25eed248b24	\N	25
2015	2014-2015	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	ac2f061c-7b1e-4ca6-badc-8a9d2ede9a6a	\N	26
2016	2015-2016	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	265f2eef-7ed4-42da-88a9-31d983f53186	\N	27
2017	2016-2017	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	48f724fb-1043-4a71-8003-2a600e3699ee	\N	28
2018	2017-2018	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	1ce3d4c5-8268-48b5-950f-692d49aadd47	\N	29
2019	2018-2019	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	117df018-7c7d-4353-8e3d-dbfcb5767652	\N	30
2020	2019-2020	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f8384256-89e6-4bbc-9777-73fc08e585dd	\N	31
2021	2020-2021	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	9460a957-ce08-4ca8-9e55-8264f1e7edd7	\N	32
2023	2022-2023	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	0986582d-5067-4def-9b48-4af53540af0c	\N	33
2024	2023-2024	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	5478bbd4-3804-4b63-8d60-b2cb26f3be6d	\N	34
2025	2024-2025	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	a5e43b34-62c1-481c-9d12-f54220ee0fcb	\N	35
2026	2025-2026	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f80c653c-33a2-49d5-ab08-e33dcaccbafd	\N	36
2027	2026-2027	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	0573ff27-f793-4c67-b3a0-fe2d22732e54	\N	37
2028	2027-2028	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	137a811b-cdd4-4642-9e9e-b2965cf5fa47	\N	38
2029	2028-2029	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	cb390116-bed3-4163-a55f-ca1eb8bf2225	\N	39
2030	2029-2030	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	a7a473e0-2663-49ad-8966-4898b71aaf40	\N	40
2031	2030-2031	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	a5143e43-a567-476b-b197-0d3f0506413b	\N	41
2032	2031-2032	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f882cb96-6f80-4ffa-b26d-bbefd9723d4e	\N	42
2033	2032-2033	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	fed4c87e-78ed-4db1-9dc7-395e3fbca873	\N	43
2034	2033-2034	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f2885b36-2a1b-45ab-9718-77e0ae686686	\N	44
2035	2034-2035	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	d856e3d7-08f2-49c8-966b-503e02d7977d	\N	45
2036	2035-2036	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	beb46d29-2d70-4db1-97ad-9725bad08431	\N	46
2037	2036-2037	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	b0e47339-48b4-4f27-91b0-ce5b10b47ac4	\N	47
2038	2037-2038	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	c6caa7c1-0425-4a61-947c-e570f32d497c	\N	48
2039	2038-2039	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	3ee38d57-a285-48c4-8b50-f174c0ae4297	\N	49
2040	2039-2040	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	67d970b0-a039-48cc-bdac-a9739b53857d	\N	50
2041	2040-2041	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	11feca71-8cc4-4c97-8642-4c79d77eb67b	\N	51
2042	2041-2042	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	71453cef-2bfd-4140-a72d-f9b3641ba6b7	\N	52
2043	2042-2043	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	05b6ef9b-f93b-4668-bceb-88ed8c83d56c	\N	53
2044	2043-2044	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	5ba1e1b7-2d49-49a2-9c7f-2a7822d54fb6	\N	54
2045	2044-2045	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	50421bff-b8e4-404d-831e-540b765cc151	\N	55
2046	2045-2046	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	3e2dc16d-08c0-483f-9d4f-a2262139040a	\N	56
2047	2046-2047	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	997cfd4c-422e-4774-8f3e-d7b9e6a74818	\N	57
2048	2047-2048	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	33866b62-6c33-43ed-a847-2c0cfb4b6eb7	\N	58
2049	2048-2049	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	f4e39b24-399c-4bd5-a18c-33c5b664e333	\N	59
2050	2049-2050	f	2022-02-28 11:18:42.720281	2022-02-28 11:18:42.720281	66242b11-1b26-4cc8-81a1-fbbae6a283d0	\N	60
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sequenceofcourse, educationalenvironmentdescriptorid, mediumofinstructiondescriptorid, populationserveddescriptorid, availablecredits, availablecredittypedescriptorid, availablecreditconversion, instructionlanguagedescriptorid, locationschoolid, locationclassroomidentificationcode, officialattendanceperiod, sectionname, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
2120
2121
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
2123
2125
2122
2124
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2126
2130
2133
2135
2129
2127
2131
2128
2132
2134
2136
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
2138
2137
2140
2139
2141
2142
2143
2144
2145
2146
2147
2148
2149
2150
2151
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
2153
2152
2155
2154
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcesystemdescriptor (sourcesystemdescriptorid) FROM stdin;
2156
2157
2158
2159
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
2160
2162
2164
2167
2168
2170
2163
2165
2169
2161
2166
2171
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
2173
2175
2172
2176
2174
2177
2178
2179
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, birthdate, hispaniclatinoethnicity, oldethnicitydescriptorid, citizenshipstatusdescriptorid, highestcompletedlevelofeducationdescriptorid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, loginid, highlyqualifiedteacher, personid, sourcesystemdescriptorid, staffuniqueid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffancestryethnicorigin (ancestryethnicorigindescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
2182
2183
2186
2187
2188
2191
2193
2194
2197
2199
2201
2202
2204
2205
2206
2209
2210
2212
2213
2214
2181
2185
2180
2184
2189
2190
2192
2195
2196
2198
2200
2203
2207
2208
2211
2215
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, positiontitle, enddate, orderofassignment, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, credentialidentifier, stateofissuestateabbreviationdescriptorid, fulltimeequivalency, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, city, stateabbreviationdescriptorid, postalcode, nameofcounty, countyfipscode, latitude, longitude, addresstypedescriptorid, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (begindate, contacttitle, educationorganizationid, staffusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, enddate, separationdescriptorid, separationreasondescriptorid, department, fulltimeequivalency, offerdate, hourlywage, credentialidentifier, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, staffusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffidentificationsystemdescriptorid, staffusi, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
2218
2219
2217
2221
2223
2225
2229
2216
2220
2222
2224
2226
2227
2228
2230
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (addresstypedescriptorid, staffusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (languagedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (languagedescriptorid, languageusedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
2231
2234
2235
2239
2241
2243
2247
2233
2236
2238
2240
2242
2244
2246
2248
2232
2237
2245
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (othernametypedescriptorid, staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (racedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (recognitiontypedescriptorid, staffusi, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, classroompositiondescriptorid, begindate, enddate, highlyqualifiedteacher, teacherstudentdatalinkexclusion, percentagecontribution, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
2250
2251
2253
2254
2256
2257
2260
2261
2264
2267
2269
2272
2273
2276
2277
2279
2281
2284
2285
2287
2290
2292
2293
2295
2298
2300
2301
2303
2305
2308
2310
2252
2304
2249
2255
2258
2259
2262
2263
2265
2266
2268
2270
2271
2274
2275
2278
2280
2282
2283
2286
2288
2289
2291
2294
2296
2297
2299
2302
2306
2307
2309
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (schoolyear, stateeducationagencyid, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (fiscalyear, stateeducationagencyid, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, birthdate, birthcity, birthstateabbreviationdescriptorid, birthinternationalprovince, birthcountrydescriptorid, dateenteredus, multiplebirthstatus, birthsexdescriptorid, citizenshipstatusdescriptorid, personid, sourcesystemdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeattemptedcreditconversion, cumulativegradepointsearned, cumulativegradepointaverage, gradevaluequalifier, projectedgraduationdate, sessionearnedcredits, sessionearnedcredittypedescriptorid, sessionearnedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionattemptedcreditconversion, sessiongradepointsearned, sessiongradepointaverage, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, honorawarddate, honorawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, totalnumberinclass, percentageranking, classrankingdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, diplomaleveldescriptorid, ctecompleter, diplomadescription, diplomaawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, serialnumber, administrationlanguagedescriptorid, administrationenvironmentdescriptorid, retestindicatordescriptorid, reasonnottesteddescriptorid, whenassessedgradeleveldescriptorid, eventcircumstancedescriptorid, eventdescription, schoolyear, platformtypedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, assessmentresponse, descriptivefeedback, responseindicatordescriptorid, assessmentitemresultdescriptorid, rawscoreresult, timeassessed, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelmet, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelmet, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
2312
2314
2316
2318
2319
2320
2322
2324
2313
2321
2311
2315
2317
2323
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogram (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cipcode, primarycteprogramindicator, cteprogramcompletionindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, cipcode, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociation (incidentidentifier, schoolid, studentusi, studentparticipationcodedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociationbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociationbehavior (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (behaviordescriptorid, disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, sexdescriptorid, profilethumbnail, hispaniclatinoethnicity, oldethnicitydescriptorid, limitedenglishproficiencydescriptorid, loginid, primarylearningdeviceawayfromschooldescriptorid, primarylearningdeviceaccessdescriptorid, primarylearningdeviceproviderdescriptorid, internetaccessinresidence, barriertointernetaccessinresidencedescriptorid, internetaccesstypeinresidencedescriptorid, internetperformanceinresidencedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationancestryethnicorigin (ancestryethnicorigindescriptorid, educationorganizationid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (disabilitydescriptorid, educationorganizationid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (addresstypedescriptorid, educationorganizationid, studentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, languagedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipat_810575 (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipation (educationorganizationid, programtypedescriptorid, studentusi, begindate, enddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, racedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentcharacteristicdescriptorid, studentusi, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, indicatorname, studentusi, indicatorgroup, indicator, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (begindate, educationorganizationid, indicatorname, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (begindate, dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, datefulfilled, lettergradeearned, numericgradeearned, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprimarynighttimeresidencedescriptorid, awaitingfostercare, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
2326
2328
2325
2330
2329
2332
2333
2335
2336
2327
2331
2334
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, englishlearnerparticipation, dosage) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, monitoreddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, priorityforservices, lastqualifyingmove, continuationofservicesreasondescriptorid, usinitialentry, usmostrecententry, usinitialschoolentry, qualifyingarrivaldate, stateresidencydate, eligibilityexpirationdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramdescriptorid, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (othernametypedescriptorid, studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparentassociation (parentusi, studentusi, relationdescriptorid, primarycontactstatus, liveswith, emergencycontactstatus, contactpriority, contactrestrictions, legalguardian, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
2338
2337
2340
2339
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, primaryschool, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, repeatgradeindicator, classofschoolyear, schoolchoicetransfer, exitwithdrawdate, exitwithdrawtypedescriptorid, residencystatusdescriptorid, graduationplantypedescriptorid, educationorganizationid, graduationschoolyear, employedwhileenrolled, calendarcode, schoolyear, fulltimeequivalency, termcompletionindicator, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (educationplandescriptorid, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, attemptstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceeventclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceeventclassperiod (attendanceeventcategorydescriptorid, classperiodname, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, specialeducationsettingdescriptorid, specialeducationhoursperweek, schoolhoursperweek, multiplydisabled, medicallyfragile, lastevaluationdate, iepreviewdate, iepbegindate, iependdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.survey (namespace, surveyidentifier, educationorganizationid, surveytitle, sessionname, schoolyear, schoolid, surveycategorydescriptorid, numberadministered, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycategorydescriptor (surveycategorydescriptorid) FROM stdin;
2341
2344
2345
2347
2349
2343
2346
2348
2350
2342
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyleveldescriptor (surveyleveldescriptorid) FROM stdin;
2351
2353
2354
2352
2355
2356
2357
2358
2359
2360
2361
2362
2363
2364
2365
2366
2367
2368
2369
2370
2371
2372
2373
2374
2375
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestion (namespace, questioncode, surveyidentifier, questionformdescriptorid, questiontext, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionmatrix; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionmatrix (matrixelement, namespace, questioncode, surveyidentifier, minrawscore, maxrawscore, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, noresponse, comment, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsechoice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsechoice (namespace, questioncode, sortorder, surveyidentifier, numericvalue, textvalue, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (matrixelement, namespace, questioncode, surveyidentifier, surveyresponseidentifier, numericresponse, textresponse, noresponse, minnumericresponse, maxnumericresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsevalue; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsevalue (namespace, questioncode, surveyidentifier, surveyquestionresponsevalueidentifier, surveyresponseidentifier, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, responsedate, responsetime, electronicmailaddress, fullname, location, studentusi, parentusi, staffusi, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsesurveylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsesurveylevel (namespace, surveyidentifier, surveyleveldescriptorid, surveyresponseidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, sectionrating, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
2378
2379
2381
2382
2377
2376
2380
2383
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
2384
2385
2386
2387
2388
2389
2390
2391
2392
2393
2394
2395
2396
2397
2398
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
2399
2401
2400
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
2403
2404
2406
2408
2409
2405
2402
2407
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
2412
2410
2413
2411
2415
2416
2414
2417
2418
2419
2420
2421
2422
2423
2424
2425
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
2427
2430
2428
2429
2426
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
2431
2433
2434
2435
2437
2439
2432
2436
2438
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
2441
2444
2446
2443
2440
2445
2442
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
2448
2450
2447
2449
2451
2452
2453
2454
2455
2456
2457
2458
2459
2460
2461
2462
2463
2464
2465
2466
2467
2468
2469
2470
2471
2472
2473
2474
2475
2476
2477
2478
2479
2480
2481
2482
2483
2484
2485
2486
2487
2488
2489
2490
2491
2492
2493
2494
2495
2496
2497
2498
2499
2500
2501
2502
2503
2504
2505
2506
2507
2508
2509
2510
2511
2512
2513
2514
2515
2516
2517
2518
2519
2520
2521
2522
2523
2524
2525
2526
2527
2528
2529
2530
2531
2532
2533
2534
2535
2536
2537
2538
2539
2540
2541
2542
2543
2544
2545
2546
2547
2548
2549
2550
2551
2552
2553
2554
2555
2556
2557
2558
2559
2560
2561
2562
2563
2564
2565
2566
2567
2568
2569
2570
2571
2572
2573
2574
2575
2576
2577
2578
2579
2580
2582
2581
2583
2584
2585
2586
2587
2588
2589
2590
2591
2592
2593
2594
2595
2596
2597
2598
2599
2600
2601
2602
2603
2604
2605
2606
2607
2608
2609
2610
2611
2612
2613
2614
2615
2616
2617
2618
2619
2620
2621
2622
2623
2624
2625
2626
2627
2628
2629
2630
2631
2632
2633
2634
2635
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2651
2652
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2667
2668
2669
2670
2671
2672
2673
2674
2677
2679
2680
2682
2683
2685
2688
2689
2691
2692
2694
2696
2698
2700
2702
2707
2711
2713
2716
2717
2718
2720
2722
2723
2724
2726
2727
2728
2730
2731
2733
2735
2736
2739
2741
2743
2746
2748
2750
2751
2752
2753
2755
2757
2758
2759
2761
2763
2765
2766
2769
2770
2771
2773
2775
2776
2778
2779
2780
2782
2783
2785
2787
2789
2790
2791
2793
2794
2796
2797
2798
2799
2802
2804
2805
2807
2809
2811
2814
2815
2817
2818
2820
2822
2824
2827
2828
2830
2831
2834
2836
2838
2840
2841
2843
2845
2847
2848
2850
2854
2857
2860
2862
2865
2870
2871
2872
2874
2875
2878
2880
2882
2884
2885
2886
2887
2889
2890
2892
2894
2896
2898
2900
2902
2904
2905
2907
2910
2912
2915
2917
2919
2920
2921
2924
2925
2926
2928
2929
2932
2933
2936
2937
2938
2940
2941
2942
2943
2945
2948
2953
2955
2956
2957
2959
2961
2962
2963
2965
2966
2968
2970
2972
2973
2975
2978
2980
2982
2983
2986
2988
2989
2992
2993
2994
2995
2997
2999
3001
3005
3008
3011
3014
3016
3017
3019
3022
3023
2675
2676
2678
2681
2684
2686
2687
2690
2693
2695
2697
2699
2701
2704
2706
2710
2714
2719
2721
2725
2729
2732
2734
2737
2738
2740
2742
2744
2745
2747
2749
2754
2756
2760
2764
2767
2768
2772
2774
2777
2781
2784
2786
2788
2792
2795
2800
2801
2803
2806
2810
2812
2813
2816
2819
2821
2823
2825
2829
2832
2833
2835
2837
2839
2842
2844
2846
2849
2852
2855
2858
2861
2863
2866
2867
2869
2873
2876
2879
2881
2888
2891
2893
2895
2897
2899
2901
2903
2906
2908
2909
2911
2914
2916
2918
2923
2927
2930
2931
2934
2939
2944
2946
2947
2950
2954
2958
2960
2964
2967
2969
2971
2974
2976
2977
2979
2981
2984
2987
2990
2991
2996
2998
3000
3002
3006
3009
3012
3013
3018
3020
3021
3024
2703
2708
2712
2715
2762
2808
2826
2851
2856
2859
2864
2868
2883
2913
2922
2935
2949
2952
2985
3004
3007
3010
3015
2705
2709
2853
2877
2951
3003
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
3025
3028
3030
3031
3026
3027
3029
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
3032
3035
3037
3041
3034
3038
3040
3033
3036
3039
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2022-02-28 11:18:42.727155	2022-02-28 11:18:42.727155	112231d6-7b64-4c8f-a44a-33799021a001
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2022-02-28 11:18:30.487544
2	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2022-02-28 11:18:30.518845
3	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2022-02-28 11:18:32.998075
4	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2022-02-28 11:18:41.575161
5	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2022-02-28 11:18:42.123717
6	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2022-02-28 11:18:42.432501
7	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2022-02-28 11:18:42.46025
8	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2022-02-28 11:18:42.472715
9	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2022-02-28 11:18:42.506013
10	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2022-02-28 11:18:42.514742
11	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2022-02-28 11:18:42.519886
12	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2022-02-28 11:18:42.53532
13	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2022-02-28 11:18:42.539075
14	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1040-MissingSecurityViews.sql	2022-02-28 11:18:42.543927
15	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1100-AddMoreContextToEducationIdentifiersView.sql	2022-02-28 11:18:42.55369
16	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1100-CorrectCommunityOrganizationAuthViews.sql	2022-02-28 11:18:42.557735
17	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1120-RemoveCompositesHierarchicalViews.sql	2022-02-28 11:18:42.562761
18	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1150-UpdatedAuthViewsToPreventDuplicatesFromStaffEdOrgAssignmentsAndEmployments.sql	2022-02-28 11:18:42.571979
19	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1160-UpdateVersionTo510.sql	2022-02-28 11:18:42.574319
20	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1170-UpdatedAuthViewsToRemoveJoin.sql	2022-02-28 11:18:42.578569
21	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1180-Add-OrgDeptId-to-EdOrgIdentifiers.sql	2022-02-28 11:18:42.588294
22	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1190-UpdateVersionTo520.sql	2022-02-28 11:18:42.590889
23	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1200-AuthViewsSupportOrgDeptId.sql	2022-02-28 11:18:42.608602
24	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1290-RemoveAllUnusedAuthorizationViews.sql	2022-02-28 11:18:42.622938
25	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1300-CreateEdOrgToEdOrgTable.sql	2022-02-28 11:18:42.629183
26	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1302-CreateEdOrgToEdOrgTriggers.sql	2022-02-28 11:18:42.647149
27	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1303-AuthViewEducationOrganizationIdToStudentUSI.sql	2022-02-28 11:18:42.650646
28	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1304-AuthViewEducationOrganizationIdToParentUSI.sql	2022-02-28 11:18:42.654759
29	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1305-AuthViewsEducationOrganizationIdToStaffUSI.sql	2022-02-28 11:18:42.658168
30	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1306-AuthViewEducationOrganizationIdToStudentUSIThroughResponsibility.sql	2022-02-28 11:18:42.661147
31	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1320-UpdateVersionTo53.sql	2022-02-28 11:18:42.663116
32	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1330-UpdateVersionTo54.sql	2022-02-28 11:18:42.665554
33	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2022-02-28 11:18:42.725554
34	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2022-02-28 11:18:42.728905
35	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2022-02-28 11:18:42.734861
36	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.RecordOwnership.0010-AddColumnOwnershipTokenForTable.sql	2022-02-28 11:18:42.779228
37	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2022-02-28 11:18:42.812968
38	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2022-02-28 11:18:42.817056
39	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2022-02-28 11:18:45.67809
40	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0040-CreateTriggerUpdateChangeVersionGenerator.sql	2022-02-28 11:18:45.705519
41	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0045-CreateTrackedDeleteSchema.sql	2022-02-28 11:18:45.709651
42	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0050-CreateTrackedDeleteTables.sql	2022-02-28 11:18:47.151506
43	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0060-CreateDeletedForTrackingTriggers.sql	2022-02-28 11:18:47.229618
44	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2022-02-28 11:18:47.589246
45	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0110-AddSnapshot-Tables.sql	2022-02-28 11:18:47.834812
46	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0120-AddSnapshotIdColumnUniqueIndexes.sql	2022-02-28 11:18:47.841033
47	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0130-AddSnapshotExtendedProperties.sql	2022-02-28 11:18:47.843889
48	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.1010-CreateGetMaxChangeVersionFunction.sql	2022-02-28 11:18:47.846723
49	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0001-EXTENSION-TPDM-SchemasValidation.sql	2022-03-07 18:12:57.870281
50	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0010-EXTENSION-TPDM-Schemas.sql	2022-03-07 18:12:57.884956
51	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0020-EXTENSION-TPDM-Tables.sql	2022-03-07 18:12:58.25447
52	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0030-EXTENSION-TPDM-ForeignKeys.sql	2022-03-07 18:12:59.273281
53	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0040-EXTENSION-TPDM-IdColumnUniqueIndexes.sql	2022-03-07 18:12:59.313347
54	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.0050-EXTENSION-TPDM-ExtendedProperties.sql	2022-03-07 18:12:59.330263
55	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.RecordOwnership.0010-AddColumnOwnershipTokenForTable.sql	2022-03-07 18:12:59.463354
56	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2022-03-07 18:12:59.474754
57	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2022-03-07 18:12:59.479779
58	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2022-03-07 18:12:59.800819
59	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0040-CreateTriggerUpdateChangeVersionGenerator.sql	2022-03-07 18:12:59.806517
60	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0045-CreateTrackedDeleteSchema.sql	2022-03-07 18:12:59.812876
61	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0050-CreateTrackedDeleteTables.sql	2022-03-07 18:12:59.950234
62	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0060-CreateDeletedForTrackingTriggers.sql	2022-03-07 18:12:59.962001
63	EdFi.Suite3.Ods.Extensions.TPDM.Core.1.1.0.5.4.19.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2022-03-07 18:13:00.002549
\.


--
-- Data for Name: accreditationstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.accreditationstatusdescriptor (accreditationstatusdescriptorid) FROM stdin;
3046
3047
3048
3049
3050
\.


--
-- Data for Name: aidtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.aidtypedescriptor (aidtypedescriptorid) FROM stdin;
3051
3052
3053
3054
3055
3056
3057
3058
3059
3060
3061
3062
3063
3064
3065
3066
3067
3068
3069
3070
3071
3072
3073
3074
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidate (candidateidentifier, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, birthdate, birthcity, birthstateabbreviationdescriptorid, birthinternationalprovince, birthcountrydescriptorid, dateenteredus, multiplebirthstatus, birthsexdescriptorid, hispaniclatinoethnicity, economicdisadvantaged, limitedenglishproficiencydescriptorid, displacementstatus, genderdescriptorid, englishlanguageexamdescriptorid, firstgenerationstudent, personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateaddress; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddress (addresstypedescriptorid, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateaddressperiod; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddressperiod (addresstypedescriptorid, begindate, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisability; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisability (candidateidentifier, disabilitydescriptorid, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisabilitydesignation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisabilitydesignation (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociation (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, enddate, reasonexiteddescriptorid, eppprogrampathwaydescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationcohortyear (begindate, candidateidentifier, cohortyeartypedescriptorid, educationorganizationid, programname, programtypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (begindate, candidateidentifier, educationorganizationid, majorspecialization, programname, programtypedescriptorid, minorspecialization, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: candidateelectronicmail; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateelectronicmail (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguage; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguage (candidateidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguageuse; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguageuse (candidateidentifier, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateothername; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateothername (candidateidentifier, othernametypedescriptorid, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: candidatepersonalidentificationdocument; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatepersonalidentificationdocument (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidaterace; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidaterace (candidateidentifier, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatetelephone; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatetelephone (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: certificationroutedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.certificationroutedescriptor (certificationroutedescriptorid) FROM stdin;
3075
3076
3077
3078
3079
3080
3081
3082
3083
3084
3085
\.


--
-- Data for Name: coteachingstyleobserveddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.coteachingstyleobserveddescriptor (coteachingstyleobserveddescriptorid) FROM stdin;
3088
3089
3090
3091
3092
3093
3094
\.


--
-- Data for Name: credentialextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialextension (credentialidentifier, stateofissuestateabbreviationdescriptorid, personid, sourcesystemdescriptorid, certificationtitle, certificationroutedescriptorid, boardcertificationindicator, credentialstatusdescriptorid, credentialstatusdate, educatorroledescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstatusdescriptor (credentialstatusdescriptorid) FROM stdin;
3095
3096
3097
3098
3099
3100
3101
3102
\.


--
-- Data for Name: credentialstudentacademicrecord; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstudentacademicrecord (credentialidentifier, educationorganizationid, schoolyear, stateofissuestateabbreviationdescriptorid, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogram (educationorganizationid, programname, programtypedescriptorid, programid, accreditationstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogramgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogramgradelevel (educationorganizationid, gradeleveldescriptorid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorroledescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorroledescriptor (educatorroledescriptorid) FROM stdin;
3105
3106
3107
3108
3109
3110
3111
3112
3113
3114
3115
3116
3117
3118
3119
3120
3121
3122
3123
\.


--
-- Data for Name: englishlanguageexamdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.englishlanguageexamdescriptor (englishlanguageexamdescriptorid) FROM stdin;
3124
3125
3126
3127
\.


--
-- Data for Name: eppprogrampathwaydescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.eppprogrampathwaydescriptor (eppprogrampathwaydescriptorid) FROM stdin;
3128
3129
3130
3131
3132
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluation (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationdescription, minrating, maxrating, evaluationtypedescriptorid, interraterreliabilityscore, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelement (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, sortorder, minrating, maxrating, evaluationtypedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementrating (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, evaluationelementratingleveldescriptorid, areaofrefinement, areaofreinforcement, comments, feedback, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratinglevel (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, minrating, maxrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingleveldescriptor (evaluationelementratingleveldescriptorid) FROM stdin;
3133
3134
3135
3136
3137
3138
3139
3140
3141
\.


--
-- Data for Name: evaluationelementratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingresult (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjective (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationobjectivedescription, sortorder, minrating, maxrating, evaluationtypedescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiverating (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, objectiveratingleveldescriptorid, comments, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratinglevel (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, minrating, maxrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratingresult (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationperioddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationperioddescriptor (evaluationperioddescriptorid) FROM stdin;
3142
3143
3144
3145
3146
3147
3148
3149
3150
3151
3152
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationrating (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, evaluationratingleveldescriptorid, sectionidentifier, localcoursecode, sessionname, schoolid, evaluationratingstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, minrating, maxrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingleveldescriptor (evaluationratingleveldescriptorid) FROM stdin;
3153
3154
3155
3156
3157
3158
3159
3160
3161
\.


--
-- Data for Name: evaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingresult (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewer (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewerreceivedtraining (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, receivedtrainingdate, interraterreliabilityscore, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingstatusdescriptor (evaluationratingstatusdescriptorid) FROM stdin;
3162
3163
3164
3165
3166
3167
\.


--
-- Data for Name: evaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationtypedescriptor (evaluationtypedescriptorid) FROM stdin;
3168
3169
3170
3171
3172
3173
3174
3175
3176
3177
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.financialaid (aidtypedescriptorid, begindate, studentusi, enddate, aidconditiondescription, aidamount, pellgrantrecipient, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: genderdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.genderdescriptor (genderdescriptorid) FROM stdin;
3178
3179
3180
3181
\.


--
-- Data for Name: objectiveratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.objectiveratingleveldescriptor (objectiveratingleveldescriptorid) FROM stdin;
3191
3192
3193
3194
3195
3196
3197
3198
3199
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluation (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, performanceevaluationdescription, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationgradelevel (educationorganizationid, evaluationperioddescriptorid, gradeleveldescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationrating (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, actualdate, announced, comments, coteachingstyleobserveddescriptorid, actualduration, performanceevaluationratingleveldescriptorid, scheduledate, actualtime, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, evaluationratingleveldescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, minrating, maxrating, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingleveldescriptor (performanceevaluationratingleveldescriptorid) FROM stdin;
3200
3201
3202
3203
3204
3205
3206
3207
3208
\.


--
-- Data for Name: performanceevaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingresult (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewer (educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewerreceivedtraining (educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, receivedtrainingdate, interraterreliabilityscore, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationtypedescriptor (performanceevaluationtypedescriptorid) FROM stdin;
3209
3210
3211
3212
3213
3214
3215
3216
3217
3218
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricdimension (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid, rubricratingleveldescriptorid, criteriondescription, dimensionorder, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricratingleveldescriptor (rubricratingleveldescriptorid) FROM stdin;
3225
3226
3227
3228
3229
3230
3231
3232
3233
\.


--
-- Data for Name: schoolextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.schoolextension (schoolid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponseextension (namespace, surveyidentifier, surveyresponseidentifier, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveysectionresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, createdbyownershiptokenid, changeversion) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.academicsubjectdescriptor (academicsubjectdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.academicweek (schoolid, weekidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.accommodationdescriptor (accommodationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: account; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.account (accountidentifier, educationorganizationid, fiscalyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accountclassificationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.accountclassificationdescriptor (accountclassificationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accountcode; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.accountcode (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.achievementcategorydescriptor (achievementcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: actual; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.actual (accountidentifier, asofdate, educationorganizationid, fiscalyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.addresstypedescriptor (addresstypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessment (assessmentidentifier, namespace, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentperioddescriptor (assessmentperioddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.attemptstatusdescriptor (attemptstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.behaviordescriptor (behaviordescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.bellschedule (bellschedulename, schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: budget; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.budget (accountidentifier, asofdate, educationorganizationid, fiscalyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.calendar (calendarcode, schoolid, schoolyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.calendardate (calendarcode, date, schoolid, schoolyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.calendareventdescriptor (calendareventdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.calendartypedescriptor (calendartypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.careerpathwaydescriptor (careerpathwaydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.charterstatusdescriptor (charterstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.classperiod (classperiodname, schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.classroompositiondescriptor (classroompositiondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.cohort (cohortidentifier, educationorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.cohortscopedescriptor (cohortscopedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.cohorttypedescriptor (cohorttypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.communityorganization (communityorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.communityprovider (communityproviderid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.competencyleveldescriptor (competencyleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.contacttypedescriptor (contacttypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.contentclassdescriptor (contentclassdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contractedstaff; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.contractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.costratedescriptor (costratedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.countrydescriptor (countrydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.course (coursecode, educationorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.credentialfielddescriptor (credentialfielddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.credentialtypedescriptor (credentialtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.creditcategorydescriptor (creditcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.credittypedescriptor (credittypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.curriculumuseddescriptor (curriculumuseddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.deliverymethoddescriptor (deliverymethoddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.descriptor (descriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.diagnosisdescriptor (diagnosisdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.diplomaleveldescriptor (diplomaleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.diplomatypedescriptor (diplomatypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disabilitydescriptor (disabilitydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disciplinedescriptor (disciplinedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disciplineincident (incidentidentifier, schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationcontent (contentidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganization (educationorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationnetwork (educationorganizationnetworkid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationplandescriptor (educationplandescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.educationservicecenter (educationservicecenterid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.employmentstatusdescriptor (employmentstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.entrytypedescriptor (entrytypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.feederschoolassociation (begindate, feederschoolid, schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradebookentry (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradeleveldescriptor (gradeleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradetypedescriptor (gradetypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gradingperioddescriptor (gradingperioddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.graduationplantypedescriptor (graduationplantypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.incidentlocationdescriptor (incidentlocationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.indicatordescriptor (indicatordescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.indicatorleveldescriptor (indicatorleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.interactivitystyledescriptor (interactivitystyledescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.internetaccessdescriptor (internetaccessdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.intervention (educationorganizationid, interventionidentificationcode, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.interventionclassdescriptor (interventionclassdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, id, changeversion) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.languagedescriptor (languagedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.languageusedescriptor (languageusedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningobjective (learningobjectiveid, namespace, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningstandard (learningstandardid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.levelofeducationdescriptor (levelofeducationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.licensestatusdescriptor (licensestatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.licensetypedescriptor (licensetypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.localedescriptor (localedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.localeducationagency (localeducationagencyid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.location (classroomidentificationcode, schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.monitoreddescriptor (monitoreddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.networkpurposedescriptor (networkpurposedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, id, changeversion) FROM stdin;
\.


--
-- Data for Name: oldethnicitydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.oldethnicitydescriptor (oldethnicitydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.openstaffposition (educationorganizationid, requisitionnumber, id, changeversion) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.operationalstatusdescriptor (operationalstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.organizationdepartment (organizationdepartmentid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.othernametypedescriptor (othernametypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.parent (parentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.participationdescriptor (participationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.participationstatusdescriptor (participationstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: payroll; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.payroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.performanceleveldescriptor (performanceleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.person (personid, sourcesystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.platformtypedescriptor (platformtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.populationserveddescriptor (populationserveddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.postingresultdescriptor (postingresultdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.postsecondaryinstitution (postsecondaryinstitutionid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.proficiencydescriptor (proficiencydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.program (educationorganizationid, programname, programtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.programassignmentdescriptor (programassignmentdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.programsponsordescriptor (programsponsordescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.programtypedescriptor (programtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.progressdescriptor (progressdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.progressleveldescriptor (progressleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.providercategorydescriptor (providercategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.providerstatusdescriptor (providerstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.publicationstatusdescriptor (publicationstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.questionformdescriptor (questionformdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.racedescriptor (racedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.reasonexiteddescriptor (reasonexiteddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.recognitiontypedescriptor (recognitiontypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.relationdescriptor (relationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.residencystatusdescriptor (residencystatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.responseindicatordescriptor (responseindicatordescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.responsibilitydescriptor (responsibilitydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.retestindicatordescriptor (retestindicatordescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.school (schoolid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.schoolcategorydescriptor (schoolcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.schooltypedescriptor (schooltypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.separationdescriptor (separationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.separationreasondescriptor (separationreasondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.servicedescriptor (servicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.session (schoolid, schoolyear, sessionname, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.sexdescriptor (sexdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.sourcesystemdescriptor (sourcesystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staff (staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffclassificationdescriptor (staffclassificationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.stateeducationagency (stateeducationagencyid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.student (studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentdisciplineincidentassociation (incidentidentifier, schoolid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentgradebookentry (begindate, dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentlearningobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentparentassociation (parentusi, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentschoolassociation (entrydate, schoolid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.survey (namespace, surveyidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveycategorydescriptor (surveycategorydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyleveldescriptor (surveyleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyquestion (namespace, questioncode, surveyidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.termdescriptor (termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.visadescriptor (visadescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: tracked_deletes_edfi; Owner: postgres
--

COPY tracked_deletes_edfi.weapondescriptor (weapondescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accreditationstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.accreditationstatusdescriptor (accreditationstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: aidtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.aidtypedescriptor (aidtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.candidate (candidateidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: certificationroutedescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.certificationroutedescriptor (certificationroutedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coteachingstyleobserveddescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.coteachingstyleobserveddescriptor (coteachingstyleobserveddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.credentialstatusdescriptor (credentialstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.educatorpreparationprogram (educationorganizationid, programname, programtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorroledescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.educatorroledescriptor (educatorroledescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: englishlanguageexamdescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.englishlanguageexamdescriptor (englishlanguageexamdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: eppprogrampathwaydescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.eppprogrampathwaydescriptor (eppprogrampathwaydescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluation (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationelement (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationelementrating (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementratingleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationelementratingleveldescriptor (evaluationelementratingleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationobjective (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationobjectiverating (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationperioddescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationperioddescriptor (evaluationperioddescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationrating (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratingleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationratingleveldescriptor (evaluationratingleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratingstatusdescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationratingstatusdescriptor (evaluationratingstatusdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.evaluationtypedescriptor (evaluationtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.financialaid (aidtypedescriptorid, begindate, studentusi, id, changeversion) FROM stdin;
\.


--
-- Data for Name: genderdescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.genderdescriptor (genderdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveratingleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.objectiveratingleveldescriptor (objectiveratingleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.performanceevaluation (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.performanceevaluationrating (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.performanceevaluationratingleveldescriptor (performanceevaluationratingleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationtypedescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.performanceevaluationtypedescriptor (performanceevaluationtypedescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.rubricdimension (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricratingleveldescriptor; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.rubricratingleveldescriptor (rubricratingleveldescriptorid, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.surveyresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_deletes_tpdm; Owner: postgres
--

COPY tracked_deletes_tpdm.surveysectionresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle, id, changeversion) FROM stdin;
\.


--
-- Name: changeversionsequence; Type: SEQUENCE SET; Schema: changes; Owner: postgres
--

SELECT pg_catalog.setval('changes.changeversionsequence', 3462, true);


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 3233, true);


--
-- Name: parent_parentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.parent_parentusi_seq', 1, false);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 63, true);


--
-- Name: educationorganizationidtoeducationorganizationid educationorganizationidtoeducationorganizationid_pk; Type: CONSTRAINT; Schema: auth; Owner: postgres
--

ALTER TABLE ONLY auth.educationorganizationidtoeducationorganizationid
    ADD CONSTRAINT educationorganizationidtoeducationorganizationid_pk PRIMARY KEY (sourceeducationorganizationid, targeteducationorganizationid);


--
-- Name: snapshot snapshot_pk; Type: CONSTRAINT; Schema: changes; Owner: postgres
--

ALTER TABLE ONLY changes.snapshot
    ADD CONSTRAINT snapshot_pk PRIMARY KEY (snapshotidentifier);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: account account_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.account
    ADD CONSTRAINT account_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accountaccountcode accountaccountcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT accountaccountcode_pk PRIMARY KEY (accountclassificationdescriptorid, accountcodenumber, accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: accountclassificationdescriptor accountclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountclassificationdescriptor
    ADD CONSTRAINT accountclassificationdescriptor_pk PRIMARY KEY (accountclassificationdescriptorid);


--
-- Name: accountcode accountcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT accountcode_pk PRIMARY KEY (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: actual actual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.actual
    ADD CONSTRAINT actual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (ancestryethnicorigindescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, gradeleveldescriptorid, namespace);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, author, namespace);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, languagedescriptorid, namespace);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid);


--
-- Name: assessmentscorerangelearningstandardlearningstandard assessmentscorerangelearningstandardlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandardlearningstandard_pk PRIMARY KEY (assessmentidentifier, learningstandardid, namespace, scorerangeid);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (barriertointernetaccessinresidencedescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, classperiodname, schoolid);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, date, schoolid);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, gradeleveldescriptorid, schoolid);


--
-- Name: budget budget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.budget
    ADD CONSTRAINT budget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, gradeleveldescriptorid, schoolid, schoolyear);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, endtime, schoolid, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: contractedstaff contractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT contractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (competencyleveldescriptorid, coursecode, educationorganizationid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, courseidentificationsystemdescriptorid, educationorganizationid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningobjective courselearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT courselearningobjective_pk PRIMARY KEY (coursecode, educationorganizationid, learningobjectiveid, namespace);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptpartialcoursetranscriptawards coursetranscriptpartialcoursetranscriptawards_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT coursetranscriptpartialcoursetranscriptawards_pk PRIMARY KEY (awarddate, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (codevalue, namespace);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, staffusi, studentusi);


--
-- Name: disciplineactionstudentdisciplineincidentassociation disciplineactionstudentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi);


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation disciplineactionstudentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (author, contentidentifier);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationcategorydescriptorid, educationorganizationid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationindicator educationorganizationindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT educationorganizationindicator_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationindicatorperiod educationorganizationindicatorperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT educationorganizationindicatorperiod_pk PRIMARY KEY (begindate, educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationparticipationstatus generalstudentprogramassociationparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus generalstudentprogramassociationprogramparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationprogramparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, participationstatusdescriptorid, programeducationorganizationid, programname, programtypedescriptorid, statusbegindate, studentusi);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrylearningobjective gradebookentrylearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT gradebookentrylearningobjective_pk PRIMARY KEY (dateassigned, gradebookentrytitle, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (dateassigned, gradebookentrytitle, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (indicatordescriptorid);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (indicatorgroupdescriptorid);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (indicatorleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (internetaccesstypeinresidencedescriptorid);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (internetperformanceinresidencedescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, endtime, interventionidentificationcode, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectiveacademicsubject learningobjectiveacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT learningobjectiveacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandard learningobjectivecontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT learningobjectivecontentstandard_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandardauthor learningobjectivecontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT learningobjectivecontentstandardauthor_pk PRIMARY KEY (author, learningobjectiveid, namespace);


--
-- Name: learningobjectivegradelevel learningobjectivegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT learningobjectivegradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivelearningstandard learningobjectivelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT learningobjectivelearningstandard_pk PRIMARY KEY (learningobjectiveid, learningstandardid, namespace);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningstandardid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (author, learningstandardid);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningstandardid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (contentstandardname, identificationcode, learningstandardid);


--
-- Name: learningstandardprerequisitelearningstandard learningstandardprerequisitelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT learningstandardprerequisitelearningstandard_pk PRIMARY KEY (learningstandardid, prerequisitelearningstandardid);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, localeducationagencyid);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace);


--
-- Name: objectiveassessmentlearningobjective objectiveassessmentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT objectiveassessmentlearningobjective_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningobjectiveid, learningobjectivenamespace, namespace);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace);


--
-- Name: oldethnicitydescriptor oldethnicitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT oldethnicitydescriptor_pk PRIMARY KEY (oldethnicitydescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, requisitionnumber);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (organizationdepartmentid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (parentusi);


--
-- Name: parentaddress parentaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT parentaddress_pk PRIMARY KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentaddressperiod parentaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT parentaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentelectronicmail parentelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT parentelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, parentusi);


--
-- Name: parentinternationaladdress parentinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT parentinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, parentusi);


--
-- Name: parentlanguage parentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT parentlanguage_pk PRIMARY KEY (languagedescriptorid, parentusi);


--
-- Name: parentlanguageuse parentlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT parentlanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, parentusi);


--
-- Name: parentothername parentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT parentothername_pk PRIMARY KEY (othernametypedescriptorid, parentusi);


--
-- Name: parentpersonalidentificationdocument parentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT parentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid);


--
-- Name: parenttelephone parenttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT parenttelephone_pk PRIMARY KEY (parentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: payroll payroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT payroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (personid, sourcesystemdescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (mediumofinstructiondescriptorid, postsecondaryinstitutionid);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (primarylearningdeviceaccessdescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (primarylearningdeviceproviderdescriptorid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programlearningobjective programlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT programlearningobjective_pk PRIMARY KEY (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, learningstandardid, programname, programtypedescriptorid);


--
-- Name: programservice programservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT programservice_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (questionformdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: reportcardstudentlearningobjective reportcardstudentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT reportcardstudentlearningobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolcategorydescriptorid, schoolid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, schoolid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (sourcesystemdescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffancestryethnicorigin staffancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT staffancestryethnicorigin_pk PRIMARY KEY (ancestryethnicorigindescriptorid, staffusi);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (begindate, contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, staffusi);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffidentificationsystemdescriptorid, staffusi);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, staffusi);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (languagedescriptorid, staffusi);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, staffusi);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (othernametypedescriptorid, staffusi);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (racedescriptorid, staffusi);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (recognitiontypedescriptorid, staffusi);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (schoolyear, stateeducationagencyid);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, stateeducationagencyid);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogram studentcteprogramassociationcteprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT studentcteprogramassociationcteprogram_pk PRIMARY KEY (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationservice studentcteprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT studentcteprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentassociationbehavior studentdisciplineincidentassociationbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT studentdisciplineincidentassociationbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk PRIMARY KEY (behaviordescriptorid, disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a studentdisciplineincidentnonoffenderassociationdis_4c979a_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociationdis_4c979a_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin studenteducationorganizationassociationancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT studenteducationorganizationassociationancestryethnicorigin_pk PRIMARY KEY (ancestryethnicorigindescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 studenteducationorganizationassociationprogrampart_810575_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT studenteducationorganizationassociationprogrampart_810575_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipation studenteducationorganizationassociationprogramparticipation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT studenteducationorganizationassociationprogramparticipation_pk PRIMARY KEY (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, racedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (begindate, educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (begindate, dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation studentlearningobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentlearningobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivestudentsectionassociation studentlearningobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT studentlearningobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (othernametypedescriptorid, studentusi);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (parentusi, studentusi);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (educationplandescriptorid, entrydate, schoolid, studentusi);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceeventclassperiod studentsectionattendanceeventclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT studentsectionattendanceeventclassperiod_pk PRIMARY KEY (attendanceeventcategorydescriptorid, classperiodname, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationservice studenttitleipartaprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT studenttitleipartaprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (namespace, surveyidentifier);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (surveycategorydescriptorid);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (coursecode, educationorganizationid, namespace, surveyidentifier);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (surveyleveldescriptorid);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionmatrix surveyquestionmatrix_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT surveyquestionmatrix_pk PRIMARY KEY (matrixelement, namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsechoice surveyquestionresponsechoice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT surveyquestionresponsechoice_pk PRIMARY KEY (namespace, questioncode, sortorder, surveyidentifier);


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse surveyquestionresponsesurveyquestionmatrixelementresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT surveyquestionresponsesurveyquestionmatrixelementresponse_pk PRIMARY KEY (matrixelement, namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsevalue surveyquestionresponsevalue_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT surveyquestionresponsevalue_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyquestionresponsevalueidentifier, surveyresponseidentifier);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsesurveylevel surveyresponsesurveylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT surveyresponsesurveylevel_pk PRIMARY KEY (namespace, surveyidentifier, surveyleveldescriptorid, surveyresponseidentifier);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: accreditationstatusdescriptor accreditationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT accreditationstatusdescriptor_pk PRIMARY KEY (accreditationstatusdescriptorid);


--
-- Name: aidtypedescriptor aidtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT aidtypedescriptor_pk PRIMARY KEY (aidtypedescriptorid);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (candidateidentifier);


--
-- Name: candidateaddress candidateaddress_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT candidateaddress_pk PRIMARY KEY (addresstypedescriptorid, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: candidateaddressperiod candidateaddressperiod_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT candidateaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: candidatedisability candidatedisability_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT candidatedisability_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid);


--
-- Name: candidatedisabilitydesignation candidatedisabilitydesignation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT candidatedisabilitydesignation_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear candidateeducatorpreparationprogramassociationcohortyear_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationcohortyear_pk PRIMARY KEY (begindate, candidateidentifier, cohortyeartypedescriptorid, educationorganizationid, programname, programtypedescriptorid, schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 candidateeducatorpreparationprogramassociationdegr_2501c4_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationdegr_2501c4_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, majorspecialization, programname, programtypedescriptorid);


--
-- Name: candidateelectronicmail candidateelectronicmail_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT candidateelectronicmail_pk PRIMARY KEY (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: candidatelanguage candidatelanguage_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT candidatelanguage_pk PRIMARY KEY (candidateidentifier, languagedescriptorid);


--
-- Name: candidatelanguageuse candidatelanguageuse_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT candidatelanguageuse_pk PRIMARY KEY (candidateidentifier, languagedescriptorid, languageusedescriptorid);


--
-- Name: candidateothername candidateothername_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT candidateothername_pk PRIMARY KEY (candidateidentifier, othernametypedescriptorid);


--
-- Name: candidatepersonalidentificationdocument candidatepersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT candidatepersonalidentificationdocument_pk PRIMARY KEY (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: candidaterace candidaterace_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT candidaterace_pk PRIMARY KEY (candidateidentifier, racedescriptorid);


--
-- Name: candidatetelephone candidatetelephone_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT candidatetelephone_pk PRIMARY KEY (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: certificationroutedescriptor certificationroutedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT certificationroutedescriptor_pk PRIMARY KEY (certificationroutedescriptorid);


--
-- Name: coteachingstyleobserveddescriptor coteachingstyleobserveddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT coteachingstyleobserveddescriptor_pk PRIMARY KEY (coteachingstyleobserveddescriptorid);


--
-- Name: credentialextension credentialextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT credentialextension_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialstatusdescriptor credentialstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT credentialstatusdescriptor_pk PRIMARY KEY (credentialstatusdescriptorid);


--
-- Name: credentialstudentacademicrecord credentialstudentacademicrecord_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT credentialstudentacademicrecord_pk PRIMARY KEY (credentialidentifier, educationorganizationid, schoolyear, stateofissuestateabbreviationdescriptorid, studentusi, termdescriptorid);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: educatorpreparationprogramgradelevel educatorpreparationprogramgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT educatorpreparationprogramgradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, programname, programtypedescriptorid);


--
-- Name: educatorroledescriptor educatorroledescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT educatorroledescriptor_pk PRIMARY KEY (educatorroledescriptorid);


--
-- Name: englishlanguageexamdescriptor englishlanguageexamdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT englishlanguageexamdescriptor_pk PRIMARY KEY (englishlanguageexamdescriptorid);


--
-- Name: eppprogrampathwaydescriptor eppprogrampathwaydescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT eppprogrampathwaydescriptor_pk PRIMARY KEY (eppprogrampathwaydescriptorid);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationelementratinglevel evaluationelementratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT evaluationelementratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementratingleveldescriptor evaluationelementratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT evaluationelementratingleveldescriptor_pk PRIMARY KEY (evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementratingresult evaluationelementratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT evaluationelementratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiveratinglevel evaluationobjectiveratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT evaluationobjectiveratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiveratingresult evaluationobjectiveratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT evaluationobjectiveratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationperioddescriptor evaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT evaluationperioddescriptor_pk PRIMARY KEY (evaluationperioddescriptorid);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratinglevel evaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT evaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationratingleveldescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationratingleveldescriptor evaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT evaluationratingleveldescriptor_pk PRIMARY KEY (evaluationratingleveldescriptorid);


--
-- Name: evaluationratingresult evaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT evaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratingreviewer evaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT evaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratingreviewerreceivedtraining evaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT evaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratingstatusdescriptor evaluationratingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT evaluationratingstatusdescriptor_pk PRIMARY KEY (evaluationratingstatusdescriptorid);


--
-- Name: evaluationtypedescriptor evaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT evaluationtypedescriptor_pk PRIMARY KEY (evaluationtypedescriptorid);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (aidtypedescriptorid, begindate, studentusi);


--
-- Name: genderdescriptor genderdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT genderdescriptor_pk PRIMARY KEY (genderdescriptorid);


--
-- Name: objectiveratingleveldescriptor objectiveratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT objectiveratingleveldescriptor_pk PRIMARY KEY (objectiveratingleveldescriptorid);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationgradelevel performanceevaluationgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT performanceevaluationgradelevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, gradeleveldescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratinglevel performanceevaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT performanceevaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationratingleveldescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor performanceevaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT performanceevaluationratingleveldescriptor_pk PRIMARY KEY (performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingresult performanceevaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT performanceevaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, rating, ratingresulttitle, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratingreviewer performanceevaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT performanceevaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratingreviewerreceivedtraining performanceevaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT performanceevaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationtypedescriptor performanceevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT performanceevaluationtypedescriptor_pk PRIMARY KEY (performanceevaluationtypedescriptorid);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid);


--
-- Name: rubricratingleveldescriptor rubricratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT rubricratingleveldescriptor_pk PRIMARY KEY (rubricratingleveldescriptorid);


--
-- Name: schoolextension schoolextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT schoolextension_pk PRIMARY KEY (schoolid);


--
-- Name: surveyresponseextension surveyresponseextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT surveyresponseextension_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (changeversion);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: account account_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.account
    ADD CONSTRAINT account_pk PRIMARY KEY (changeversion);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (changeversion);


--
-- Name: accountclassificationdescriptor accountclassificationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.accountclassificationdescriptor
    ADD CONSTRAINT accountclassificationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: accountcode accountcode_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.accountcode
    ADD CONSTRAINT accountcode_pk PRIMARY KEY (changeversion);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: actual actual_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.actual
    ADD CONSTRAINT actual_pk PRIMARY KEY (changeversion);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (changeversion);


--
-- Name: budget budget_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.budget
    ADD CONSTRAINT budget_pk PRIMARY KEY (changeversion);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (changeversion);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (changeversion);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (changeversion);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (changeversion);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (changeversion);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (changeversion);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (changeversion);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: contractedstaff contractedstaff_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.contractedstaff
    ADD CONSTRAINT contractedstaff_pk PRIMARY KEY (changeversion);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (changeversion);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (changeversion);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (changeversion);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (changeversion);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (changeversion);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (changeversion);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (changeversion);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (changeversion);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (changeversion);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (changeversion);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (changeversion);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (changeversion);


--
-- Name: oldethnicitydescriptor oldethnicitydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.oldethnicitydescriptor
    ADD CONSTRAINT oldethnicitydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (changeversion);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (changeversion);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (changeversion);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: payroll payroll_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.payroll
    ADD CONSTRAINT payroll_pk PRIMARY KEY (changeversion);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (changeversion);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (changeversion);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (changeversion);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (changeversion);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (changeversion);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (changeversion);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (changeversion);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (changeversion);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (changeversion);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (changeversion);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (changeversion);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (changeversion);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (changeversion);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (changeversion);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (changeversion);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: accreditationstatusdescriptor accreditationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT accreditationstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: aidtypedescriptor aidtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.aidtypedescriptor
    ADD CONSTRAINT aidtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (changeversion);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: certificationroutedescriptor certificationroutedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.certificationroutedescriptor
    ADD CONSTRAINT certificationroutedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: coteachingstyleobserveddescriptor coteachingstyleobserveddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT coteachingstyleobserveddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: credentialstatusdescriptor credentialstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.credentialstatusdescriptor
    ADD CONSTRAINT credentialstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (changeversion);


--
-- Name: educatorroledescriptor educatorroledescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.educatorroledescriptor
    ADD CONSTRAINT educatorroledescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: englishlanguageexamdescriptor englishlanguageexamdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT englishlanguageexamdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: eppprogrampathwaydescriptor eppprogrampathwaydescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT eppprogrampathwaydescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelementratingleveldescriptor evaluationelementratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT evaluationelementratingleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationperioddescriptor evaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationperioddescriptor
    ADD CONSTRAINT evaluationperioddescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationratingleveldescriptor evaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT evaluationratingleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationratingstatusdescriptor evaluationratingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT evaluationratingstatusdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationtypedescriptor evaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.evaluationtypedescriptor
    ADD CONSTRAINT evaluationtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (changeversion);


--
-- Name: genderdescriptor genderdescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.genderdescriptor
    ADD CONSTRAINT genderdescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveratingleveldescriptor objectiveratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT objectiveratingleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationratingleveldescriptor performanceevaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT performanceevaluationratingleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationtypedescriptor performanceevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT performanceevaluationtypedescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: rubricratingleveldescriptor rubricratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT rubricratingleveldescriptor_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_deletes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_deletes_tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: ux_6ad27b_id; Type: INDEX; Schema: changes; Owner: postgres
--

CREATE UNIQUE INDEX ux_6ad27b_id ON changes.snapshot USING btree (id);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_005337_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_studentcompetencyobjective ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_014e05_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_interventionstudy ON edfi.interventionstudyeducationcontent USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_01fe80_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_01fe80_school ON edfi.classperiod USING btree (schoolid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_school ON edfi.courseoffering USING btree (schoolid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_03f044_surveyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyleveldescriptor ON edfi.surveyresponsesurveylevel USING btree (surveyleveldescriptorid);


--
-- Name: fk_03f044_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyresponse ON edfi.surveyresponsesurveylevel USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_047c7a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_047c7a_educationcontent ON edfi.educationcontentderivativesourceuri USING btree (contentidentifier);


--
-- Name: fk_048797_surveyquestionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_048797_surveyquestionresponse ON edfi.surveyquestionresponsesurveyquestionmatrixelementresponse USING btree (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_0516f9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_educationorganization ON edfi.generalstudentprogramassociation USING btree (educationorganizationid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_calendar ON edfi.calendargradelevel USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendardate ON edfi.calendardatecalendarevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_0855d2_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_generalstudentprogramassociation ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_0855d2_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_participationstatusdescriptor ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_09668f_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_stateeducationagency ON edfi.stateeducationagencyaccountability USING btree (stateeducationagencyid);


--
-- Name: fk_0a2145_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_educationcontent ON edfi.educationcontentappropriategradelevel USING btree (contentidentifier);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0c9651_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0d16f7_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincident ON edfi.disciplineincidentexternalparticipant USING btree (incidentidentifier, schoolid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0e0a11_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_othernametypedescriptor ON edfi.parentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_0e0a11_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_parent ON edfi.parentothername USING btree (parentusi);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0ee746_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_educationorganization ON edfi.educationorganizationinternationaladdress USING btree (educationorganizationid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_educationorganization ON edfi.intervention USING btree (educationorganizationid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0fceba_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_studentassessment ON edfi.studentassessmentscoreresult USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_educationorganization ON edfi.studentacademicrecord USING btree (educationorganizationid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_1141c9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_credential ON edfi.credentialacademicsubject USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_11bd42_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessment ON edfi.assessmentperformancelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_11f7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school1 ON edfi.feederschoolassociation USING btree (schoolid);


--
-- Name: fk_123e27_parentaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_123e27_parentaddress ON edfi.parentaddressperiod USING btree (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_13b924_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_academicsubjectdescriptor ON edfi.organizationdepartment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_13b924_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_educationorganization1 ON edfi.organizationdepartment USING btree (parenteducationorganizationid);


--
-- Name: fk_151580_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_assessmentitem ON edfi.assessmentitemlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_section ON edfi.sectioncharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_15b619_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_15b619_school ON edfi.location USING btree (schoolid);


--
-- Name: fk_16896e_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_program ON edfi.programcharacteristic USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_course ON edfi.courseofferedgradelevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_course ON edfi.courseidentificationcode USING btree (coursecode, educationorganizationid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_19c6d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_educationorganization ON edfi.cohort USING btree (educationorganizationid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1a4369_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_graduationplan ON edfi.graduationplanrequiredassessment USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1ac620_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_objectiveassessment ON edfi.objectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_localeducationagency ON edfi.localeducationagencyaccountability USING btree (localeducationagencyid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bab8a_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1bb88c_questionformdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_questionformdescriptor ON edfi.surveyquestion USING btree (questionformdescriptorid);


--
-- Name: fk_1bb88c_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_survey ON edfi.surveyquestion USING btree (namespace, surveyidentifier);


--
-- Name: fk_1bb88c_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_surveysection ON edfi.surveyquestion USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_1c30e0_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_generalstudentprogramassociation ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1c30e0_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_studentlearningobjective ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_1c6225_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c6225_account ON edfi.budget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_1c624b_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c624b_surveyquestion ON edfi.surveyquestionresponsechoice USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1c8d3f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_staff ON edfi.stafflanguage USING btree (staffusi);


--
-- Name: fk_1dcb14_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1dcb14_interventionstudy ON edfi.interventionstudylearningresourcemetadatauri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1ee70e_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_objectiveassessment ON edfi.objectiveassessmentlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2096ce_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_academicsubjectdescriptor ON edfi.course USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_educationorganization ON edfi.course USING btree (educationorganizationid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_210b6b_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courseoffering ON edfi.courseofferingcourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_educationorganization ON edfi.survey USING btree (educationorganizationid);


--
-- Name: fk_211bb3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_schoolyeartype ON edfi.survey USING btree (schoolyear);


--
-- Name: fk_211bb3_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_session ON edfi.survey USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_surveycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_surveycategorydescriptor ON edfi.survey USING btree (surveycategorydescriptorid);


--
-- Name: fk_2189c3_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveyresponse ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_2189c3_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveysection ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_21acd5_assessmentcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_21acd5_assessmentcontentstandard ON edfi.assessmentcontentstandardauthor USING btree (assessmentidentifier, namespace);


--
-- Name: fk_226b3d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_bellschedule ON edfi.bellschedulegradelevel USING btree (bellschedulename, schoolid);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_assessment ON edfi.assessmentsection USING btree (assessmentidentifier, namespace);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_23fa0f_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_academicsubjectdescriptor ON edfi.learningobjectiveacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_23fa0f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_learningobjective ON edfi.learningobjectiveacademicsubject USING btree (learningobjectiveid, namespace);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_252151_educationorganizationnetwork; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganizationnetwork ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_268e07_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_285d36_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_openstaffposition ON edfi.openstaffpositionacademicsubject USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_29e870_studentinterventionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_studentinterventionassociation ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_person ON edfi.student USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2a4725_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationlanguage USING btree (educationorganizationid, studentusi);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2b286a_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_studentacademicrecord ON edfi.studentacademicrecordacademichonor USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_2c2b13_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_ancestryethnicorigindescriptor ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_2c2b13_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (educationorganizationid, studentusi);


--
-- Name: fk_2c4cdb_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_disciplineaction ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_studentdisciplineincidentbehaviorassociation ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_objectiveassessment ON edfi.objectiveassessmentscore USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_educationorganization ON edfi.accountabilityrating USING btree (educationorganizationid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2d57be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_student ON edfi.studentidentificationdocument USING btree (studentusi);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_2e333a_studenteducationorganizationassociationlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_studenteducationorganizationassociationlanguage ON edfi.studenteducationorganizationassociationlanguageuse USING btree (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_309217_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_section ON edfi.sectionprogram USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_30e866_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_disciplineaction ON edfi.disciplineactionstaff USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_31779a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_staff ON edfi.staffidentificationdocument USING btree (staffusi);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationorganization ON edfi.studentprogramattendanceevent USING btree (educationorganizationid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_courseoffering ON edfi.courseofferingcurriculumused USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32920f_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationdisability USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_34f9df_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_languagedescriptor ON edfi.parentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_34f9df_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_parent ON edfi.parentlanguage USING btree (parentusi);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_354642_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_coursetranscript ON edfi.coursetranscriptacademicsubject USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_35afab_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_35afab_intervention ON edfi.interventionuri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_school ON edfi.restraintevent USING btree (schoolid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_38677c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_learningstandard ON edfi.learningstandardgradelevel USING btree (learningstandardid);


--
-- Name: fk_39073d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_staff ON edfi.surveysectionresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_39073d_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_surveysectionresponse ON edfi.surveysectionresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3ab5d4_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_interventionprescription ON edfi.interventionprescriptioneducationcontent USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_3af731_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessment ON edfi.assessmentidentificationcode USING btree (assessmentidentifier, namespace);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3b5b30_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_graduationplan ON edfi.graduationplancreditsbysubject USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_3c7e00_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c7e00_stateeducationagency ON edfi.stateeducationagencyfederalfunds USING btree (stateeducationagencyid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3c823d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_intervention ON edfi.interventioneducationcontent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3cc1d4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_educationorganization ON edfi.openstaffposition USING btree (educationorganizationid);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3d5433_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_intervention ON edfi.interventionappropriategradelevel USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_staffschoolassociation ON edfi.staffschoolassociationgradelevel USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_3e8699_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e8699_learningobjective ON edfi.objectiveassessmentlearningobjective USING btree (learningobjectiveid, learningobjectivenamespace);


--
-- Name: fk_3e8699_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e8699_objectiveassessment ON edfi.objectiveassessmentlearningobjective USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_400d06_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_assessment ON edfi.assessmentacademicsubject USING btree (assessmentidentifier, namespace);


--
-- Name: fk_421bfa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_421bfa_educationcontent ON edfi.educationcontentderivativesourcelearningresourcemetadatauri USING btree (contentidentifier);


--
-- Name: fk_427110_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganization ON edfi.educationorganizationcategory USING btree (educationorganizationid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_educationorganization ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_435263_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_435263_classperiod ON edfi.classperiodmeetingtime USING btree (classperiodname, schoolid);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44e78d_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_graduationplan ON edfi.graduationplancreditsbycourse USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_44f909_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_program ON edfi.programlearningstandard USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_453ba8_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_parent ON edfi.parenttelephone USING btree (parentusi);


--
-- Name: fk_453ba8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_telephonenumbertypedescriptor ON edfi.parenttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_465c76_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_section ON edfi.sectionclassperiod USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4736c7_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_interventionprescription ON edfi.interventionprescriptionappropriategradelevel USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_educationorganization ON edfi.educationorganizationaddress USING btree (educationorganizationid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_interventionprescription ON edfi.interventionprescriptionappropriatesex USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganization ON edfi.educationorganizationidentificationcode USING btree (educationorganizationid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4acf8e_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4acf8e_interventionprescription ON edfi.interventionprescriptionuri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4b43da_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_disciplineincident ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_4b43da_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_student ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (studentusi);


--
-- Name: fk_4c38bb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_program ON edfi.programsponsor USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_studentdisciplineincidentnonoffenderassociation ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_4c9e40_learningstandardcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c9e40_learningstandardcontentstandard ON edfi.learningstandardcontentstandardauthor USING btree (learningstandardid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4ca65b_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationdisability USING btree (educationorganizationid, studentusi);


--
-- Name: fk_4de15a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_staff ON edfi.stafftelephone USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e3afe_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_staff ON edfi.staffpersonalidentificationdocument USING btree (staffusi);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_educationorganization ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_520251_studentneglectedordelinquentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_studentneglectedordelinquentprogramassociation ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_53fe8d_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_53fe8d_account ON edfi.payroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_53fe8d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_53fe8d_staff ON edfi.payroll USING btree (staffusi);


--
-- Name: fk_57ca0f_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57ca0f_account ON edfi.contractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_57ca0f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57ca0f_staff ON edfi.contractedstaff USING btree (staffusi);


--
-- Name: fk_57f7d2_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57f7d2_credential ON edfi.credentialendorsement USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_58013b_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_assessment ON edfi.assessmentprogram USING btree (assessmentidentifier, namespace);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_581f0f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_course ON edfi.coursecompetencylevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_582e49_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationelectronicmail USING btree (educationorganizationid, studentusi);


--
-- Name: fk_588d15_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_588d15_learningobjective ON edfi.learningobjective USING btree (parentlearningobjectiveid, parentnamespace);


--
-- Name: fk_59fcb5_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_cohort ON edfi.cohortprogram USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_school ON edfi.gradingperiod USING btree (schoolid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5a8c0e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a8c0e_localeducationagency ON edfi.localeducationagencyfederalfunds USING btree (localeducationagencyid);


--
-- Name: fk_5c2c98_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_programtypedescriptor ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (programtypedescriptorid);


--
-- Name: fk_5c2c98_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e049e_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_studentacademicrecord ON edfi.studentacademicrecordrecognition USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_5e9932_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_educationorganization ON edfi.competencyobjective USING btree (educationorganizationid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_5ee8fd_studenteducationorganizationassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_studenteducationorganizationassociationdisability ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: fk_5f7953_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_levelofeducationdescriptor ON edfi.parent USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_5f7953_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_person ON edfi.parent USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_5f7953_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_sexdescriptor ON edfi.parent USING btree (sexdescriptorid);


--
-- Name: fk_6007db_sourcesystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6007db_sourcesystemdescriptor ON edfi.person USING btree (sourcesystemdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_course ON edfi.courselearningstandard USING btree (coursecode, educationorganizationid);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d76d_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d76d_surveyquestion ON edfi.surveyquestionmatrix USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_64d8a6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_school ON edfi.schoolgradelevel USING btree (schoolid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_6621ee_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_coursetranscript ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_679174_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_disciplineincident ON edfi.studentdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_679174_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_student ON edfi.studentdisciplineincidentassociation USING btree (studentusi);


--
-- Name: fk_679174_studentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_studentparticipationcodedescriptor ON edfi.studentdisciplineincidentassociation USING btree (studentparticipationcodedescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_oldethnicitydescriptor ON edfi.staff USING btree (oldethnicitydescriptorid);


--
-- Name: fk_681927_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_person ON edfi.staff USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_68857c_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_68857c_gradebookentry ON edfi.gradebookentrylearningobjective USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_68857c_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_68857c_learningobjective ON edfi.gradebookentrylearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_6959b4_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_school ON edfi.session USING btree (schoolid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_696d9a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_staff ON edfi.staffrace USING btree (staffusi);


--
-- Name: fk_699b02_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_699b02_assessmentitem ON edfi.assessmentitempossibleresponse USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69cd6f_studentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_studentprogramassociation ON edfi.studentprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationcohortyear USING btree (educationorganizationid, studentusi);


--
-- Name: fk_69dd58_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_termdescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd27e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_staff ON edfi.staffinternationaladdress USING btree (staffusi);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6e1291_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6e1291_bellschedule ON edfi.bellscheduledate USING btree (bellschedulename, schoolid);


--
-- Name: fk_6fa51c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_intervention ON edfi.interventionstaff USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70e978_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_studentschoolassociation ON edfi.studentschoolassociationalternativegraduationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_72eb60_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_session ON edfi.sessionacademicweek USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_730be1_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_educationorganization ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_730be1_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_surveysectionresponse ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_educationorganization ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplineaction ON edfi.disciplineactiondiscipline USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_staffeducationorganizationcontactassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_staffeducationorganizationcontactassociation ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7483c6_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staff ON edfi.staffidentificationcode USING btree (staffusi);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_7808ee_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_educationorganization ON edfi.assessment USING btree (educationorganizationid);


--
-- Name: fk_789691_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_school ON edfi.schoolcategory USING btree (schoolid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_school ON edfi.studentschoolattendanceevent USING btree (schoolid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_educationorganization ON edfi.educationorganizationinstitutiontelephone USING btree (educationorganizationid);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7d2fb4_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_servicedescriptor ON edfi.studenttitleipartaprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_7d2fb4_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_7e1b0d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7e1b0d_educationorganization ON edfi.account USING btree (educationorganizationid);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7f600a_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_studentassessment ON edfi.studentassessmentitem USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_7fa4be_staffdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_staffdisciplineincidentassociation ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (incidentidentifier, schoolid, staffusi);


--
-- Name: fk_80c6c1_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_classperiod ON edfi.studentsectionattendanceeventclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_80c6c1_studentsectionattendanceevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_studentsectionattendanceevent ON edfi.studentsectionattendanceeventclassperiod USING btree (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_810575_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_programcharacteristicdescriptor ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_810575_studenteducationorganizationassociationprogrampartici; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_studenteducationorganizationassociationprogrampartici ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: fk_81b800_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard ON edfi.learningstandardprerequisitelearningstandard USING btree (learningstandardid);


--
-- Name: fk_81b800_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard1 ON edfi.learningstandardprerequisitelearningstandard USING btree (prerequisitelearningstandardid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_8486ae_educationorganizationindicator; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8486ae_educationorganizationindicator ON edfi.educationorganizationindicatorperiod USING btree (educationorganizationid, indicatordescriptorid);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_84e5e0_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_studentacademicrecord ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_8574ad_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_reportcard ON edfi.reportcardgradepointaverage USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_85798e_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_electronicmailtypedescriptor ON edfi.parentelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_85798e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_parent ON edfi.parentelectronicmail USING btree (parentusi);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school ON edfi.studentschoolassociation USING btree (schoolid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_studentschoolfoodserviceprogramassociation ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_87d32b_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_interventionstudy ON edfi.interventionstudyappropriategradelevel USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d3fd8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_section ON edfi.sectionofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_8d6383_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_parent ON edfi.surveyresponse USING btree (parentusi);


--
-- Name: fk_8d6383_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_staff ON edfi.surveyresponse USING btree (staffusi);


--
-- Name: fk_8d6383_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_student ON edfi.surveyresponse USING btree (studentusi);


--
-- Name: fk_8d6383_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_survey ON edfi.surveyresponse USING btree (namespace, surveyidentifier);


--
-- Name: fk_8d650e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_addresstypedescriptor ON edfi.parentinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_8d650e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_countrydescriptor ON edfi.parentinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_8d650e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_parent ON edfi.parentinternationaladdress USING btree (parentusi);


--
-- Name: fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_barriertointernetaccessinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (barriertointernetaccessinresidencedescriptorid);


--
-- Name: fk_8e1257_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_educationorganization ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_8e1257_internetaccesstypeinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetaccesstypeinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetaccesstypeinresidencedescriptorid);


--
-- Name: fk_8e1257_internetperformanceinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetperformanceinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetperformanceinresidencedescriptorid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_oldethnicitydescriptor ON edfi.studenteducationorganizationassociation USING btree (oldethnicitydescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceaccessdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceaccessdescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceawayfromschooldescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceproviderdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceproviderdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceproviderdescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e9d64_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_interventionstudy ON edfi.interventionstudystateabbreviation USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_9046e7_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9046e7_interventionstudy ON edfi.interventionstudyuri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_90920d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_educationorganization ON edfi.program USING btree (educationorganizationid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_92327a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92327a_learningstandard ON edfi.learningstandardidentificationcode USING btree (learningstandardid);


--
-- Name: fk_92f7f8_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_grade ON edfi.gradelearningstandardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_9739a2_studenteducationorganizationassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9739a2_studenteducationorganizationassociationaddress ON edfi.studenteducationorganizationassociationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: fk_98cd8a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent ON edfi.educationcontentderivativesourceeducationcontent USING btree (contentidentifier);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_9960a9_assessmentscorerangelearningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_assessmentscorerangelearningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (assessmentidentifier, namespace, scorerangeid);


--
-- Name: fk_9960a9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_learningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (learningstandardid);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_educationcontent ON edfi.educationcontentappropriatesex USING btree (contentidentifier);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bbaf5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bbaf5_school ON edfi.bellschedule USING btree (schoolid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9bd9d6_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_postsecondaryinstitution ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (postsecondaryinstitutionid);


--
-- Name: fk_9e377d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_bellschedule ON edfi.bellscheduleclassperiod USING btree (bellschedulename, schoolid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9e6edd_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_interventionprescription ON edfi.interventionprescriptiondiagnosis USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_9f1246_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_course ON edfi.surveycourseassociation USING btree (coursecode, educationorganizationid);


--
-- Name: fk_9f1246_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_survey ON edfi.surveycourseassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_a165fa_learningobjectivecontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a165fa_learningobjectivecontentstandard ON edfi.learningobjectivecontentstandardauthor USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a18fcf_studenteducationorganizationassociationstudentcharact ON edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf USING btree (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: fk_a20588_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a20588_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessmentreportingmethoddescriptor ON edfi.assessmentscorerangelearningstandard USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_a20588_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_objectiveassessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_a2d4a8_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtelephone USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_studentspecialeducationprogramassociationdisability ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a3387e_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_assessment ON edfi.assessmentplatformtype USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a3f725_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_studentacademicrecord ON edfi.studentacademicrecorddiploma USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_a4a6ae_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_ancestryethnicorigindescriptor ON edfi.staffancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_a4a6ae_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_staff ON edfi.staffancestryethnicorigin USING btree (staffusi);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a51ff9_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a545e5_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_disciplineincident ON edfi.disciplineincidentweapon USING btree (incidentidentifier, schoolid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a61b72_studenteducationorganizationassociationstudentindicat ON edfi.studenteducationorganizationassociationstudentindicatorperiod USING btree (educationorganizationid, indicatorname, studentusi);


--
-- Name: fk_a64540_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a64540_intervention ON edfi.interventionmeetingtime USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a6a1f0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationrace USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a741a8_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_student ON edfi.studentpersonalidentificationdocument USING btree (studentusi);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a82b93_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a8bc47_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_intervention ON edfi.interventionappropriatesex USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a92ef0_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_gradeleveldescriptor ON edfi.learningobjectivegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_a92ef0_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_learningobjective ON edfi.learningobjectivegradelevel USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a97956_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a97956_school ON edfi.academicweek USING btree (schoolid);


--
-- Name: fk_a984df_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_interventionprescription ON edfi.interventionprescriptionpopulationserved USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_student ON edfi.studentvisa USING btree (studentusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_courseoffering ON edfi.courseofferingofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_aaade9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_learningstandard ON edfi.learningstandardacademicsubject USING btree (learningstandardid);


--
-- Name: fk_ab7096_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_coursetranscript ON edfi.coursetranscriptcreditcategory USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae53d1_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_student ON edfi.studentothername USING btree (studentusi);


--
-- Name: fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_studentdisciplineincidentbehaviorassociation ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af7be7_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_studentacademicrecord ON edfi.studentacademicrecordgradepointaverage USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afd39a_staffeducationorganizationcontactassociationaddress ON edfi.staffeducationorganizationcontactassociationaddressperiod USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b0cb9e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_staff ON edfi.staffothername USING btree (staffusi);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b1c52f_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_studentassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b2bd0a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_educationorganization ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_b2bd0a_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_surveyresponse ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b2e25d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_intervention ON edfi.interventiondiagnosis USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b31a96_studenthomelessprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_studenthomelessprogramassociation ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_b3fd05_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b3fd05_participationstatusdescriptor ON edfi.generalstudentprogramassociationparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_b43eed_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_behaviordescriptor ON edfi.studentdisciplineincidentassociationbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_b43eed_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_studentdisciplineincidentassociation ON edfi.studentdisciplineincidentassociationbehavior USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b50e36_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_coursetranscript ON edfi.coursetranscriptearnedadditionalcredits USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b527e7_stafflanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_stafflanguage ON edfi.stafflanguageuse USING btree (languagedescriptorid, staffusi);


--
-- Name: fk_b772b6_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_countrydescriptor ON edfi.parentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_b772b6_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_identificationdocumentusedescriptor ON edfi.parentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_b772b6_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_parent ON edfi.parentpersonalidentificationdocument USING btree (parentusi);


--
-- Name: fk_b772b6_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_personalinformationverificationdescriptor ON edfi.parentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_b7f969_staffaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b7f969_staffaddress ON edfi.staffaddressperiod USING btree (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b865d7_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (educationorganizationid, studentusi);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryinstitution ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_educationorganization ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_baaa9d_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_competencyleveldescriptor ON edfi.studentlearningobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_baaa9d_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_gradingperiod ON edfi.studentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_baaa9d_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_learningobjective ON edfi.studentlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_baaa9d_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_student ON edfi.studentlearningobjective USING btree (studentusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_studentspecialeducationprogramassociationspecialeduca ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_educationorganization ON edfi.graduationplan USING btree (educationorganizationid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_bf9d92_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_parent ON edfi.studentparentassociation USING btree (parentusi);


--
-- Name: fk_bf9d92_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_relationdescriptor ON edfi.studentparentassociation USING btree (relationdescriptorid);


--
-- Name: fk_bf9d92_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_student ON edfi.studentparentassociation USING btree (studentusi);


--
-- Name: fk_c098ce_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_reportcard ON edfi.reportcardstudentlearningobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c098ce_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_studentlearningobjective ON edfi.reportcardstudentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_c0da6b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_course ON edfi.courselearningobjective USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c0da6b_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_learningobjective ON edfi.courselearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_staff ON edfi.staffaddress USING btree (staffusi);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (educationorganizationid, studentusi);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16804_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_section ON edfi.surveysectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c16804_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_survey ON edfi.surveysectionassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_c16d6c_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_reportcard ON edfi.reportcardstudentcompetencyobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2bd3c_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_studentassessment ON edfi.studentassessmentperformancelevel USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c2efaa_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_studentsectionassociation ON edfi.studentgradebookentry USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_c40642_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c40642_account ON edfi.actual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_c45364_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_interventionstudy ON edfi.interventionstudypopulationserved USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_c4b3e0_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_session ON edfi.sessiongradingperiod USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c60190_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_staff ON edfi.staffrecognition USING btree (staffusi);


--
-- Name: fk_c7b5a8_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_gradebookentry ON edfi.gradebookentrylearningstandard USING btree (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7db20_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7db20_intervention ON edfi.interventionlearningresourcemetadatauri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_c7e725_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_course ON edfi.courselevelcharacteristic USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_c99b99_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningobjective ON edfi.learningobjectivelearningstandard USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c99b99_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningstandard ON edfi.learningobjectivelearningstandard USING btree (learningstandardid);


--
-- Name: fk_ca697a_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ca697a_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentindicator USING btree (educationorganizationid, studentusi);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cabdcb_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_disciplineincident ON edfi.disciplineincidentbehavior USING btree (incidentidentifier, schoolid);


--
-- Name: fk_cbeb99_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_intervention ON edfi.interventionpopulationserved USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cc3333_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_addresstypedescriptor ON edfi.parentaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_cc3333_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_localedescriptor ON edfi.parentaddress USING btree (localedescriptorid);


--
-- Name: fk_cc3333_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_parent ON edfi.parentaddress USING btree (parentusi);


--
-- Name: fk_cc3333_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_stateabbreviationdescriptor ON edfi.parentaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_school ON edfi.staffschoolassociation USING btree (schoolid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d047f5_surveyquestionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d047f5_surveyquestionresponse ON edfi.surveyquestionresponsevalue USING btree (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d2362d_studentcohortassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_studentcohortassociation ON edfi.studentcohortassociationsection USING btree (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: fk_d24efe_account; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d24efe_account ON edfi.accountaccountcode USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_d24efe_accountcode; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d24efe_accountcode ON edfi.accountaccountcode USING btree (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: fk_d2c8a9_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentlearningobjective ON edfi.studentlearningobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_d2c8a9_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentsectionassociation ON edfi.studentlearningobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d3d793_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_restraintevent ON edfi.restrainteventprogram USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_d44be7_educationorganizationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d44be7_educationorganizationaddress ON edfi.educationorganizationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_d53ee9_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_interventionstudy ON edfi.interventionstudyappropriatesex USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_school ON edfi.calendar USING btree (schoolid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_educationcontent ON edfi.educationcontentlanguage USING btree (contentidentifier);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d891fb_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_staffschoolassociation ON edfi.staffschoolassociationacademicsubject USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_d90abb_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_assessment ON edfi.assessmentlanguage USING btree (assessmentidentifier, namespace);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_educationorganization ON edfi.interventionstudy USING btree (educationorganizationid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d93663_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_staff ON edfi.staffelectronicmail USING btree (staffusi);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d98560_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_objectiveassessment ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_d9dcd7_studentmigranteducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_studentmigranteducationprogramassociation ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_dafcc7_graduationplancreditsbycourse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_graduationplancreditsbycourse ON edfi.graduationplancreditsbycoursecourse USING btree (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_graduationplanrequiredassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_graduationplanrequiredassessment ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_dde098_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_educationorganization ON edfi.educationorganizationindicator USING btree (educationorganizationid);


--
-- Name: fk_dde098_indicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatordescriptor ON edfi.educationorganizationindicator USING btree (indicatordescriptorid);


--
-- Name: fk_dde098_indicatorgroupdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorgroupdescriptor ON edfi.educationorganizationindicator USING btree (indicatorgroupdescriptorid);


--
-- Name: fk_dde098_indicatorleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorleveldescriptor ON edfi.educationorganizationindicator USING btree (indicatorleveldescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_ddfc9b_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_graduationplan ON edfi.graduationplancreditsbycreditcategory USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_de959d_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_studentassessment ON edfi.studentassessmentaccommodation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessment ON edfi.assessmentscore USING btree (assessmentidentifier, namespace);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_e12298_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e12298_interventionprescription ON edfi.interventionprescriptionlearningresourcemetadatauri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e19c72_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_openstaffposition ON edfi.openstaffpositioninstructionalgradelevel USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_e232ae_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restraintevent ON edfi.restrainteventreason USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_staff ON edfi.staffvisa USING btree (staffusi);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e3e5a4_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_program ON edfi.surveyprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e3e5a4_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_survey ON edfi.surveyprogramassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e45c0b_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_school ON edfi.disciplineincident USING btree (schoolid);


--
-- Name: fk_e45c0b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_staff ON edfi.disciplineincident USING btree (staffusi);


--
-- Name: fk_e5572a_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e5572a_survey ON edfi.surveysection USING btree (namespace, surveyidentifier);


--
-- Name: fk_e670ae_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_educationorganization ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e77b10_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_staff ON edfi.stafftribalaffiliation USING btree (staffusi);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e79fe2_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_intervention ON edfi.interventioninterventionprescription USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e811ad_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_coursetranscript ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_e811ad_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_methodcreditearneddescriptor ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_e83625_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_assessment ON edfi.assessmentassessedgradelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_educationorganization ON edfi.interventionprescription USING btree (educationorganizationid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_e943d3_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_program ON edfi.programservice USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e943d3_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_servicedescriptor ON edfi.programservice USING btree (servicedescriptorid);


--
-- Name: fk_eb5c90_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_servicedescriptor ON edfi.studentcteprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_eb5c90_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_studentcteprogramassociation ON edfi.studentcteprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ec1992_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_educationorganization ON edfi.reportcard USING btree (educationorganizationid);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_eddd02_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyquestion ON edfi.surveyquestionresponse USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_eddd02_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyresponse ON edfi.surveyquestionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee50f2_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_careerpathwaydescriptor ON edfi.studentcteprogramassociationcteprogram USING btree (careerpathwaydescriptorid);


--
-- Name: fk_ee50f2_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogram USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentcompetencyobjective ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef0ece_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_disciplineaction ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_ef0ece_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_studentdisciplineincidentassociation ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventionstudy ON edfi.interventionstudyinterventioneffectiveness USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_credential ON edfi.credentialgradelevel USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_communityprovider; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_communityprovider ON edfi.communityproviderlicense USING btree (communityproviderid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f203d3_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_reportcard ON edfi.reportcardgrade USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f221cc_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_section ON edfi.sectioncourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f32347_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f3917b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_staff ON edfi.staffcredential USING btree (staffusi);


--
-- Name: fk_f4934f_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_behaviordescriptor ON edfi.studentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid);


--
-- Name: fk_f4934f_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_disciplineincident ON edfi.studentdisciplineincidentbehaviorassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_f4934f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_student ON edfi.studentdisciplineincidentbehaviorassociation USING btree (studentusi);


--
-- Name: fk_f5911f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_learningobjective ON edfi.programlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_f5911f_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_program ON edfi.programlearningobjective USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f5b9f6_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_studentschoolassociation ON edfi.studentschoolassociationeducationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_f605af_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f605af_educationcontent ON edfi.educationcontentauthor USING btree (contentidentifier);


--
-- Name: fk_f67c61_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_languageusedescriptor ON edfi.parentlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_f67c61_parentlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_parentlanguage ON edfi.parentlanguageuse USING btree (languagedescriptorid, parentusi);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f9457e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_staff ON edfi.surveyresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_f9457e_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_surveyresponse ON edfi.surveyresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_f99184_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_educationorganization ON edfi.learningobjectivecontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_f99184_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_publicationstatusdescriptor ON edfi.learningobjectivecontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_f9e163_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationaddress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_fb1ef3_accountclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fb1ef3_accountclassificationdescriptor ON edfi.accountcode USING btree (accountclassificationdescriptorid);


--
-- Name: fk_fb1ef3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fb1ef3_educationorganization ON edfi.accountcode USING btree (educationorganizationid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: fk_fece89_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: parent_ui_parentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX parent_ui_parentuniqueid ON edfi.parent USING btree (parentuniqueid);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid);


--
-- Name: ux_01fe80_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_01fe80_changeversion ON edfi.classperiod USING btree (changeversion);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0325c5_changeversion ON edfi.courseoffering USING btree (changeversion);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0516f9_changeversion ON edfi.generalstudentprogramassociation USING btree (changeversion);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0fae05_changeversion ON edfi.intervention USING btree (changeversion);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0ff8d6_changeversion ON edfi.studentacademicrecord USING btree (changeversion);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_11f7b6_changeversion ON edfi.feederschoolassociation USING btree (changeversion);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_15b619_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_15b619_changeversion ON edfi.location USING btree (changeversion);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_170747_changeversion ON edfi.staffcohortassociation USING btree (changeversion);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_17c02a_changeversion ON edfi.learningstandardequivalenceassociation USING btree (changeversion);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_19c6d6_changeversion ON edfi.cohort USING btree (changeversion);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1bb88c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1bb88c_changeversion ON edfi.surveyquestion USING btree (changeversion);


--
-- Name: ux_1bb88c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1bb88c_id ON edfi.surveyquestion USING btree (id);


--
-- Name: ux_1c6225_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1c6225_changeversion ON edfi.budget USING btree (changeversion);


--
-- Name: ux_1c6225_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1c6225_id ON edfi.budget USING btree (id);


--
-- Name: ux_2096ce_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2096ce_changeversion ON edfi.course USING btree (changeversion);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_211bb3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_211bb3_changeversion ON edfi.survey USING btree (changeversion);


--
-- Name: ux_211bb3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_211bb3_id ON edfi.survey USING btree (id);


--
-- Name: ux_2189c3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2189c3_changeversion ON edfi.surveysectionresponse USING btree (changeversion);


--
-- Name: ux_2189c3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2189c3_id ON edfi.surveysectionresponse USING btree (id);


--
-- Name: ux_219915_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_219915_changeversion ON edfi.descriptor USING btree (changeversion);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_252151_changeversion ON edfi.educationorganizationnetworkassociation USING btree (changeversion);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_25cb9c_changeversion ON edfi.studentinterventionassociation USING btree (changeversion);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_269e10_changeversion ON edfi.objectiveassessment USING btree (changeversion);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_2a164d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2a164d_changeversion ON edfi.student USING btree (changeversion);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2d3c0c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2d3c0c_changeversion ON edfi.accountabilityrating USING btree (changeversion);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_317aeb_changeversion ON edfi.studentprogramattendanceevent USING btree (changeversion);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_369ddc_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_369ddc_changeversion ON edfi.studentcohortassociation USING btree (changeversion);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3800be_changeversion ON edfi.restraintevent USING btree (changeversion);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_39073d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39073d_changeversion ON edfi.surveysectionresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_39073d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39073d_id ON edfi.surveysectionresponsestafftargetassociation USING btree (id);


--
-- Name: ux_395c07_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_395c07_changeversion ON edfi.studentcompetencyobjective USING btree (changeversion);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39aa3c_changeversion ON edfi.studentsectionassociation USING btree (changeversion);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3cc1d4_changeversion ON edfi.openstaffposition USING btree (changeversion);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_42aa64_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_42aa64_changeversion ON edfi.studenteducationorganizationresponsibilityassociation USING btree (changeversion);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4525e6_changeversion ON edfi.educationorganization USING btree (changeversion);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_464d7a_changeversion ON edfi.schoolyeartype USING btree (changeversion);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_466cfa_changeversion ON edfi.gradebookentry USING btree (changeversion);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_4b43da_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b43da_changeversion ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (changeversion);


--
-- Name: ux_4b43da_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b43da_id ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (id);


--
-- Name: ux_4e79b9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4e79b9_changeversion ON edfi.staffeducationorganizationemploymentassociation USING btree (changeversion);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_515cb5_changeversion ON edfi.staffsectionassociation USING btree (changeversion);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_53fe8d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_53fe8d_changeversion ON edfi.payroll USING btree (changeversion);


--
-- Name: ux_53fe8d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_53fe8d_id ON edfi.payroll USING btree (id);


--
-- Name: ux_57ca0f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_57ca0f_changeversion ON edfi.contractedstaff USING btree (changeversion);


--
-- Name: ux_57ca0f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_57ca0f_id ON edfi.contractedstaff USING btree (id);


--
-- Name: ux_588d15_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_588d15_changeversion ON edfi.learningobjective USING btree (changeversion);


--
-- Name: ux_588d15_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_588d15_id ON edfi.learningobjective USING btree (id);


--
-- Name: ux_5a18f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5a18f9_changeversion ON edfi.gradingperiod USING btree (changeversion);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5e9932_changeversion ON edfi.competencyobjective USING btree (changeversion);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_5f7953_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5f7953_changeversion ON edfi.parent USING btree (changeversion);


--
-- Name: ux_5f7953_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5f7953_id ON edfi.parent USING btree (id);


--
-- Name: ux_6007db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6007db_changeversion ON edfi.person USING btree (changeversion);


--
-- Name: ux_6007db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6007db_id ON edfi.person USING btree (id);


--
-- Name: ux_61b087_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_61b087_changeversion ON edfi.studentsectionattendanceevent USING btree (changeversion);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_631023_changeversion ON edfi.studentinterventionattendanceevent USING btree (changeversion);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_679174_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_679174_changeversion ON edfi.studentdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_679174_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_679174_id ON edfi.studentdisciplineincidentassociation USING btree (id);


--
-- Name: ux_681927_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_681927_changeversion ON edfi.staff USING btree (changeversion);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6959b4_changeversion ON edfi.session USING btree (changeversion);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6acf2b_changeversion ON edfi.coursetranscript USING btree (changeversion);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_730be1_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_730be1_changeversion ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_730be1_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_730be1_id ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_735dd8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_735dd8_changeversion ON edfi.staffeducationorganizationcontactassociation USING btree (changeversion);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_74e4e5_changeversion ON edfi.educationorganizationpeerassociation USING btree (changeversion);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7808ee_changeversion ON edfi.assessment USING btree (changeversion);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_78fd7f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_78fd7f_changeversion ON edfi.studentschoolattendanceevent USING btree (changeversion);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7bbbe7_changeversion ON edfi.sectionattendancetakenevent USING btree (changeversion);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_7e1b0d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7e1b0d_changeversion ON edfi.account USING btree (changeversion);


--
-- Name: ux_7e1b0d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7e1b0d_id ON edfi.account USING btree (id);


--
-- Name: ux_839e20_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_839e20_changeversion ON edfi.grade USING btree (changeversion);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_857b52_changeversion ON edfi.studentschoolassociation USING btree (changeversion);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8a9a67_changeversion ON edfi.calendardate USING btree (changeversion);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8ceb4c_changeversion ON edfi.learningstandard USING btree (changeversion);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8d6383_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8d6383_changeversion ON edfi.surveyresponse USING btree (changeversion);


--
-- Name: ux_8d6383_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8d6383_id ON edfi.surveyresponse USING btree (id);


--
-- Name: ux_8e1257_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8e1257_changeversion ON edfi.studenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_90920d_changeversion ON edfi.program USING btree (changeversion);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_9965a5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9965a5_changeversion ON edfi.educationcontent USING btree (changeversion);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9bbaf5_changeversion ON edfi.bellschedule USING btree (changeversion);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_9f1246_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9f1246_changeversion ON edfi.surveycourseassociation USING btree (changeversion);


--
-- Name: ux_9f1246_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9f1246_id ON edfi.surveycourseassociation USING btree (id);


--
-- Name: ux_a20588_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a20588_changeversion ON edfi.assessmentscorerangelearningstandard USING btree (changeversion);


--
-- Name: ux_a20588_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a20588_id ON edfi.assessmentscorerangelearningstandard USING btree (id);


--
-- Name: ux_a97956_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a97956_changeversion ON edfi.academicweek USING btree (changeversion);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9c0d9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9c0d9_changeversion ON edfi.staffprogramassociation USING btree (changeversion);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_af86db_changeversion ON edfi.staffdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_b13bbd_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b13bbd_changeversion ON edfi.staffabsenceevent USING btree (changeversion);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b1c42b_changeversion ON edfi.credential USING btree (changeversion);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b2bd0a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b2bd0a_changeversion ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_b2bd0a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2bd0a_id ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_b8b6d7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b8b6d7_changeversion ON edfi.postsecondaryevent USING btree (changeversion);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b9be24_changeversion ON edfi.staffeducationorganizationassignmentassociation USING btree (changeversion);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_baaa9d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_baaa9d_changeversion ON edfi.studentlearningobjective USING btree (changeversion);


--
-- Name: ux_baaa9d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_baaa9d_id ON edfi.studentlearningobjective USING btree (id);


--
-- Name: ux_be1ea4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_be1ea4_changeversion ON edfi.graduationplan USING btree (changeversion);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_bf9d92_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_bf9d92_changeversion ON edfi.studentparentassociation USING btree (changeversion);


--
-- Name: ux_bf9d92_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_bf9d92_id ON edfi.studentparentassociation USING btree (id);


--
-- Name: ux_c16804_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c16804_changeversion ON edfi.surveysectionassociation USING btree (changeversion);


--
-- Name: ux_c16804_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c16804_id ON edfi.surveysectionassociation USING btree (id);


--
-- Name: ux_c2efaa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c2efaa_changeversion ON edfi.studentgradebookentry USING btree (changeversion);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c40642_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c40642_changeversion ON edfi.actual USING btree (changeversion);


--
-- Name: ux_c40642_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c40642_id ON edfi.actual USING btree (id);


--
-- Name: ux_ce2080_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ce2080_changeversion ON edfi.staffschoolassociation USING btree (changeversion);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d5d0a3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d5d0a3_changeversion ON edfi.calendar USING btree (changeversion);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d92986_changeversion ON edfi.interventionstudy USING btree (changeversion);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dc3dcf_changeversion ON edfi.assessmentitem USING btree (changeversion);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_debd4f_changeversion ON edfi.staffleave USING btree (changeversion);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_dfca5d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dfca5d_changeversion ON edfi.section USING btree (changeversion);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e3e5a4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e3e5a4_changeversion ON edfi.surveyprogramassociation USING btree (changeversion);


--
-- Name: ux_e3e5a4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e3e5a4_id ON edfi.surveyprogramassociation USING btree (id);


--
-- Name: ux_e45c0b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e45c0b_changeversion ON edfi.disciplineincident USING btree (changeversion);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e5572a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e5572a_changeversion ON edfi.surveysection USING btree (changeversion);


--
-- Name: ux_e5572a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e5572a_id ON edfi.surveysection USING btree (id);


--
-- Name: ux_e670ae_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e670ae_changeversion ON edfi.educationorganizationinterventionprescriptionassociation USING btree (changeversion);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e93bc3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e93bc3_changeversion ON edfi.interventionprescription USING btree (changeversion);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ec1992_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ec1992_changeversion ON edfi.reportcard USING btree (changeversion);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_eddd02_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eddd02_changeversion ON edfi.surveyquestionresponse USING btree (changeversion);


--
-- Name: ux_eddd02_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eddd02_id ON edfi.surveyquestionresponse USING btree (id);


--
-- Name: ux_ee3b2a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee3b2a_changeversion ON edfi.studentassessment USING btree (changeversion);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_eec7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eec7b6_changeversion ON edfi.disciplineaction USING btree (changeversion);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f092ff_changeversion ON edfi.communityproviderlicense USING btree (changeversion);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_f4934f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f4934f_changeversion ON edfi.studentdisciplineincidentbehaviorassociation USING btree (changeversion);


--
-- Name: ux_f4934f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f4934f_id ON edfi.studentdisciplineincidentbehaviorassociation USING btree (id);


--
-- Name: ux_f9457e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f9457e_changeversion ON edfi.surveyresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_f9457e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f9457e_id ON edfi.surveyresponsestafftargetassociation USING btree (id);


--
-- Name: ux_fb1ef3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_fb1ef3_changeversion ON edfi.accountcode USING btree (changeversion);


--
-- Name: ux_fb1ef3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_fb1ef3_id ON edfi.accountcode USING btree (id);


--
-- Name: fk_09c531_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_09c531_candidate ON tpdm.candidatetelephone USING btree (candidateidentifier);


--
-- Name: fk_09c531_telephonenumbertypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_09c531_telephonenumbertypedescriptor ON tpdm.candidatetelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_15d685_academicsubjectdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_academicsubjectdescriptor ON tpdm.performanceevaluation USING btree (academicsubjectdescriptorid);


--
-- Name: fk_15d685_educationorganization; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_educationorganization ON tpdm.performanceevaluation USING btree (educationorganizationid);


--
-- Name: fk_15d685_evaluationperioddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_evaluationperioddescriptor ON tpdm.performanceevaluation USING btree (evaluationperioddescriptorid);


--
-- Name: fk_15d685_performanceevaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_performanceevaluationtypedescriptor ON tpdm.performanceevaluation USING btree (performanceevaluationtypedescriptorid);


--
-- Name: fk_15d685_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_schoolyeartype ON tpdm.performanceevaluation USING btree (schoolyear);


--
-- Name: fk_15d685_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_termdescriptor ON tpdm.performanceevaluation USING btree (termdescriptorid);


--
-- Name: fk_160329_addresstypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_addresstypedescriptor ON tpdm.candidateaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_160329_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_candidate ON tpdm.candidateaddress USING btree (candidateidentifier);


--
-- Name: fk_160329_localedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_localedescriptor ON tpdm.candidateaddress USING btree (localedescriptorid);


--
-- Name: fk_160329_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_stateabbreviationdescriptor ON tpdm.candidateaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_163e44_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_evaluationtypedescriptor ON tpdm.evaluation USING btree (evaluationtypedescriptorid);


--
-- Name: fk_163e44_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_performanceevaluation ON tpdm.evaluation USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_17e793_candidateaddress; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_17e793_candidateaddress ON tpdm.candidateaddressperiod USING btree (addresstypedescriptorid, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_195935_accreditationstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_accreditationstatusdescriptor ON tpdm.educatorpreparationprogram USING btree (accreditationstatusdescriptorid);


--
-- Name: fk_195935_educationorganization; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_educationorganization ON tpdm.educatorpreparationprogram USING btree (educationorganizationid);


--
-- Name: fk_195935_programtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_programtypedescriptor ON tpdm.educatorpreparationprogram USING btree (programtypedescriptorid);


--
-- Name: fk_1d984c_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_1d984c_evaluationobjective ON tpdm.evaluationobjectiveratinglevel USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_1d984c_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_1d984c_evaluationratingleveldescriptor ON tpdm.evaluationobjectiveratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_2199be_postsecondaryinstitution; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2199be_postsecondaryinstitution ON tpdm.schoolextension USING btree (postsecondaryinstitutionid);


--
-- Name: fk_236ee4_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_candidate ON tpdm.candidatedisability USING btree (candidateidentifier);


--
-- Name: fk_236ee4_disabilitydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydescriptor ON tpdm.candidatedisability USING btree (disabilitydescriptorid);


--
-- Name: fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydeterminationsourcetypedescriptor ON tpdm.candidatedisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_2501c4_candidateeducatorpreparationprogramassociation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2501c4_candidateeducatorpreparationprogramassociation ON tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 USING btree (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_268283_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_268283_evaluationrating ON tpdm.evaluationratingresult USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_268283_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_268283_resultdatatypetypedescriptor ON tpdm.evaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d29eb_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2d29eb_evaluationrating ON tpdm.evaluationratingreviewer USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_2d29eb_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2d29eb_person ON tpdm.evaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_3f00b1_candidatelanguage; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_3f00b1_candidatelanguage ON tpdm.candidatelanguageuse USING btree (candidateidentifier, languagedescriptorid);


--
-- Name: fk_3f00b1_languageusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_3f00b1_languageusedescriptor ON tpdm.candidatelanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_4479ea_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelement ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_4479ea_evaluationelementratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelementratingleveldescriptor ON tpdm.evaluationelementrating USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_4479ea_evaluationobjectiverating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationobjectiverating ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_4521bb_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4521bb_candidate ON tpdm.candidateothername USING btree (candidateidentifier);


--
-- Name: fk_4521bb_othernametypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4521bb_othernametypedescriptor ON tpdm.candidateothername USING btree (othernametypedescriptorid);


--
-- Name: fk_477526_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_477526_performanceevaluationrating ON tpdm.performanceevaluationratingreviewer USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_477526_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_477526_person ON tpdm.performanceevaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_520027_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_person ON tpdm.surveyresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_520027_surveyresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_surveyresponse ON tpdm.surveyresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_5b9d31_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_5b9d31_gradeleveldescriptor ON tpdm.performanceevaluationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_5b9d31_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_5b9d31_performanceevaluation ON tpdm.performanceevaluationgradelevel USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_620d03_candidateeducatorpreparationprogramassociation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_candidateeducatorpreparationprogramassociation ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_620d03_cohortyeartypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_cohortyeartypedescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_620d03_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_schoolyeartype ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_620d03_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_termdescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_643c81_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_evaluationelement ON tpdm.rubricdimension USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_643c81_rubricratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_rubricratingleveldescriptor ON tpdm.rubricdimension USING btree (rubricratingleveldescriptorid);


--
-- Name: fk_6aa942_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6aa942_candidate ON tpdm.candidaterace USING btree (candidateidentifier);


--
-- Name: fk_6aa942_racedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6aa942_racedescriptor ON tpdm.candidaterace USING btree (racedescriptorid);


--
-- Name: fk_6edb1d_candidatedisability; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6edb1d_candidatedisability ON tpdm.candidatedisabilitydesignation USING btree (candidateidentifier, disabilitydescriptorid);


--
-- Name: fk_6edb1d_disabilitydesignationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6edb1d_disabilitydesignationdescriptor ON tpdm.candidatedisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6fae52_certificationroutedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_certificationroutedescriptor ON tpdm.credentialextension USING btree (certificationroutedescriptorid);


--
-- Name: fk_6fae52_credentialstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_credentialstatusdescriptor ON tpdm.credentialextension USING btree (credentialstatusdescriptorid);


--
-- Name: fk_6fae52_educatorroledescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_educatorroledescriptor ON tpdm.credentialextension USING btree (educatorroledescriptorid);


--
-- Name: fk_6fae52_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_person ON tpdm.credentialextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7052f8_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7052f8_evaluation ON tpdm.evaluationratinglevel USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_7052f8_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7052f8_evaluationratingleveldescriptor ON tpdm.evaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_73e151_credential; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_73e151_credential ON tpdm.credentialstudentacademicrecord USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_73e151_studentacademicrecord; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_73e151_studentacademicrecord ON tpdm.credentialstudentacademicrecord USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_759abe_coteachingstyleobserveddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_coteachingstyleobserveddescriptor ON tpdm.performanceevaluationrating USING btree (coteachingstyleobserveddescriptorid);


--
-- Name: fk_759abe_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluation ON tpdm.performanceevaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_759abe_performanceevaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluationratingleveldescriptor ON tpdm.performanceevaluationrating USING btree (performanceevaluationratingleveldescriptorid);


--
-- Name: fk_759abe_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_person ON tpdm.performanceevaluationrating USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7ae19d_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationobjective ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_7ae19d_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationrating ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_7ae19d_objectiveratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_objectiveratingleveldescriptor ON tpdm.evaluationobjectiverating USING btree (objectiveratingleveldescriptorid);


--
-- Name: fk_863fa4_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_863fa4_performanceevaluationrating ON tpdm.performanceevaluationratingresult USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_863fa4_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_863fa4_resultdatatypetypedescriptor ON tpdm.performanceevaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_90ed3d_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_90ed3d_evaluationratingleveldescriptor ON tpdm.performanceevaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_90ed3d_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_90ed3d_performanceevaluation ON tpdm.performanceevaluationratinglevel USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_93a227_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_candidate ON tpdm.candidatepersonalidentificationdocument USING btree (candidateidentifier);


--
-- Name: fk_93a227_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_countrydescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_93a227_identificationdocumentusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_identificationdocumentusedescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_93a227_personalinformationverificationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_personalinformationverificationdescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a465f2_aidtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_aidtypedescriptor ON tpdm.financialaid USING btree (aidtypedescriptorid);


--
-- Name: fk_a465f2_student; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_student ON tpdm.financialaid USING btree (studentusi);


--
-- Name: fk_afbeb2_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_afbeb2_evaluationelement ON tpdm.evaluationelementratinglevel USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_afbeb2_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_afbeb2_evaluationratingleveldescriptor ON tpdm.evaluationelementratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_b2452d_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_countrydescriptor ON tpdm.candidate USING btree (birthcountrydescriptorid);


--
-- Name: fk_b2452d_englishlanguageexamdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_englishlanguageexamdescriptor ON tpdm.candidate USING btree (englishlanguageexamdescriptorid);


--
-- Name: fk_b2452d_genderdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_genderdescriptor ON tpdm.candidate USING btree (genderdescriptorid);


--
-- Name: fk_b2452d_limitedenglishproficiencydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_limitedenglishproficiencydescriptor ON tpdm.candidate USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_b2452d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_person ON tpdm.candidate USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor ON tpdm.candidate USING btree (sexdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor1; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor1 ON tpdm.candidate USING btree (birthsexdescriptorid);


--
-- Name: fk_b2452d_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_stateabbreviationdescriptor ON tpdm.candidate USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_beeccb_evaluationobjectiverating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_beeccb_evaluationobjectiverating ON tpdm.evaluationobjectiveratingresult USING btree (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_beeccb_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_beeccb_resultdatatypetypedescriptor ON tpdm.evaluationobjectiveratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_bfaa20_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluation ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_bfaa20_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingleveldescriptor ON tpdm.evaluationrating USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_bfaa20_evaluationratingstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingstatusdescriptor ON tpdm.evaluationrating USING btree (evaluationratingstatusdescriptorid);


--
-- Name: fk_bfaa20_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_performanceevaluationrating ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_bfaa20_section; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_section ON tpdm.evaluationrating USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c5124f_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5124f_candidate ON tpdm.candidateelectronicmail USING btree (candidateidentifier);


--
-- Name: fk_c5124f_electronicmailtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5124f_electronicmailtypedescriptor ON tpdm.candidateelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_c5877a_evaluationelementrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5877a_evaluationelementrating ON tpdm.evaluationelementratingresult USING btree (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_c5877a_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5877a_resultdatatypetypedescriptor ON tpdm.evaluationelementratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_d3a222_educatorpreparationprogram; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d3a222_educatorpreparationprogram ON tpdm.educatorpreparationprogramgradelevel USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d3a222_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d3a222_gradeleveldescriptor ON tpdm.educatorpreparationprogramgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_d4565d_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluation ON tpdm.evaluationobjective USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_d4565d_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluationtypedescriptor ON tpdm.evaluationobjective USING btree (evaluationtypedescriptorid);


--
-- Name: fk_e21e4b_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_person ON tpdm.surveysectionresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_e21e4b_surveysectionresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_surveysectionresponse ON tpdm.surveysectionresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_e5239b_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e5239b_candidate ON tpdm.candidatelanguage USING btree (candidateidentifier);


--
-- Name: fk_e5239b_languagedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e5239b_languagedescriptor ON tpdm.candidatelanguage USING btree (languagedescriptorid);


--
-- Name: fk_e53186_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationobjective ON tpdm.evaluationelement USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_e53186_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationtypedescriptor ON tpdm.evaluationelement USING btree (evaluationtypedescriptorid);


--
-- Name: fk_fa906d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fa906d_person ON tpdm.surveyresponseextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_fc61b2_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_candidate ON tpdm.candidateeducatorpreparationprogramassociation USING btree (candidateidentifier);


--
-- Name: fk_fc61b2_educatorpreparationprogram; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_educatorpreparationprogram ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fc61b2_eppprogrampathwaydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_eppprogrampathwaydescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (eppprogrampathwaydescriptorid);


--
-- Name: fk_fc61b2_reasonexiteddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_reasonexiteddescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: ux_15d685_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_15d685_changeversion ON tpdm.performanceevaluation USING btree (changeversion);


--
-- Name: ux_15d685_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_15d685_id ON tpdm.performanceevaluation USING btree (id);


--
-- Name: ux_163e44_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_163e44_changeversion ON tpdm.evaluation USING btree (changeversion);


--
-- Name: ux_163e44_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_163e44_id ON tpdm.evaluation USING btree (id);


--
-- Name: ux_195935_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_195935_changeversion ON tpdm.educatorpreparationprogram USING btree (changeversion);


--
-- Name: ux_195935_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_195935_id ON tpdm.educatorpreparationprogram USING btree (id);


--
-- Name: ux_4479ea_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_4479ea_changeversion ON tpdm.evaluationelementrating USING btree (changeversion);


--
-- Name: ux_4479ea_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_4479ea_id ON tpdm.evaluationelementrating USING btree (id);


--
-- Name: ux_520027_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_520027_changeversion ON tpdm.surveyresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_520027_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_520027_id ON tpdm.surveyresponsepersontargetassociation USING btree (id);


--
-- Name: ux_643c81_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_643c81_changeversion ON tpdm.rubricdimension USING btree (changeversion);


--
-- Name: ux_643c81_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_643c81_id ON tpdm.rubricdimension USING btree (id);


--
-- Name: ux_759abe_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_759abe_changeversion ON tpdm.performanceevaluationrating USING btree (changeversion);


--
-- Name: ux_759abe_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_759abe_id ON tpdm.performanceevaluationrating USING btree (id);


--
-- Name: ux_7ae19d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_7ae19d_changeversion ON tpdm.evaluationobjectiverating USING btree (changeversion);


--
-- Name: ux_7ae19d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_7ae19d_id ON tpdm.evaluationobjectiverating USING btree (id);


--
-- Name: ux_a465f2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_a465f2_changeversion ON tpdm.financialaid USING btree (changeversion);


--
-- Name: ux_a465f2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_a465f2_id ON tpdm.financialaid USING btree (id);


--
-- Name: ux_b2452d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_b2452d_changeversion ON tpdm.candidate USING btree (changeversion);


--
-- Name: ux_b2452d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2452d_id ON tpdm.candidate USING btree (id);


--
-- Name: ux_bfaa20_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_bfaa20_changeversion ON tpdm.evaluationrating USING btree (changeversion);


--
-- Name: ux_bfaa20_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_bfaa20_id ON tpdm.evaluationrating USING btree (id);


--
-- Name: ux_d4565d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_d4565d_changeversion ON tpdm.evaluationobjective USING btree (changeversion);


--
-- Name: ux_d4565d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_d4565d_id ON tpdm.evaluationobjective USING btree (id);


--
-- Name: ux_e21e4b_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e21e4b_changeversion ON tpdm.surveysectionresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_e21e4b_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e21e4b_id ON tpdm.surveysectionresponsepersontargetassociation USING btree (id);


--
-- Name: ux_e53186_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e53186_changeversion ON tpdm.evaluationelement USING btree (changeversion);


--
-- Name: ux_e53186_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e53186_id ON tpdm.evaluationelement USING btree (id);


--
-- Name: ux_fc61b2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_fc61b2_changeversion ON tpdm.candidateeducatorpreparationprogramassociation USING btree (changeversion);


--
-- Name: ux_fc61b2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_fc61b2_id ON tpdm.candidateeducatorpreparationprogramassociation USING btree (id);


--
-- Name: communityorganization deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_communityorganization_tr_delete();


--
-- Name: communityprovider deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_communityprovider_tr_delete();


--
-- Name: educationorganizationnetwork deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_educationorganizationnetwork_tr_delete();


--
-- Name: educationservicecenter deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_educationservicecenter_tr_delete();


--
-- Name: localeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_localeducationagency_tr_delete();


--
-- Name: organizationdepartment deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_organizationdepartment_tr_delete();


--
-- Name: postsecondaryinstitution deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_postsecondaryinstitution_tr_delete();


--
-- Name: school deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_school_tr_delete();


--
-- Name: stateeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_stateeducationagency_tr_delete();


--
-- Name: communityorganization insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityorganization FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_communityorganization_tr_insert();


--
-- Name: communityprovider insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityprovider FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_communityprovider_tr_insert();


--
-- Name: educationorganizationnetwork insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_educationorganizationnetwork_tr_insert();


--
-- Name: educationservicecenter insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationservicecenter FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_educationservicecenter_tr_insert();


--
-- Name: localeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.localeducationagency FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_localeducationagency_tr_insert();


--
-- Name: organizationdepartment insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.organizationdepartment FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_organizationdepartment_tr_insert();


--
-- Name: postsecondaryinstitution insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_postsecondaryinstitution_tr_insert();


--
-- Name: school insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.school FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_school_tr_insert();


--
-- Name: stateeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.stateeducationagency FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_stateeducationagency_tr_insert();


--
-- Name: absenceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.absenceeventcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.absenceeventcategorydescriptor_tr_deltrkg();


--
-- Name: academichonorcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academichonorcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.academichonorcategorydescriptor_tr_deltrkg();


--
-- Name: academicsubjectdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicsubjectdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.academicsubjectdescriptor_tr_deltrkg();


--
-- Name: academicweek trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicweek FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.academicweek_tr_deltrkg();


--
-- Name: accommodationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accommodationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.accommodationdescriptor_tr_deltrkg();


--
-- Name: account trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.account FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.account_tr_deltrkg();


--
-- Name: accountabilityrating trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountabilityrating FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.accountabilityrating_tr_deltrkg();


--
-- Name: accountclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountclassificationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.accountclassificationdescriptor_tr_deltrkg();


--
-- Name: accountcode trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountcode FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.accountcode_tr_deltrkg();


--
-- Name: achievementcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.achievementcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.achievementcategorydescriptor_tr_deltrkg();


--
-- Name: actual trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.actual FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.actual_tr_deltrkg();


--
-- Name: additionalcredittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.additionalcredittypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.additionalcredittypedescriptor_tr_deltrkg();


--
-- Name: addresstypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.addresstypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.addresstypedescriptor_tr_deltrkg();


--
-- Name: administrationenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrationenvironmentdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.administrationenvironmentdescriptor_tr_deltrkg();


--
-- Name: administrativefundingcontroldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrativefundingcontroldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.administrativefundingcontroldescriptor_tr_deltrkg();


--
-- Name: ancestryethnicorigindescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ancestryethnicorigindescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.ancestryethnicorigindescriptor_tr_deltrkg();


--
-- Name: assessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessment FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessment_tr_deltrkg();


--
-- Name: assessmentcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentcategorydescriptor_tr_deltrkg();


--
-- Name: assessmentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentidentificationsystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentidentificationsystemdescriptor_tr_deltrkg();


--
-- Name: assessmentitem trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitem FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentitem_tr_deltrkg();


--
-- Name: assessmentitemcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentitemcategorydescriptor_tr_deltrkg();


--
-- Name: assessmentitemresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemresultdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentitemresultdescriptor_tr_deltrkg();


--
-- Name: assessmentperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentperioddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentperioddescriptor_tr_deltrkg();


--
-- Name: assessmentreportingmethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentreportingmethoddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentreportingmethoddescriptor_tr_deltrkg();


--
-- Name: assessmentscorerangelearningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.assessmentscorerangelearningstandard_tr_deltrkg();


--
-- Name: attemptstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attemptstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.attemptstatusdescriptor_tr_deltrkg();


--
-- Name: attendanceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attendanceeventcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.attendanceeventcategorydescriptor_tr_deltrkg();


--
-- Name: barriertointernetaccessinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.barriertointernetaccessinresidencedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.barriertointernetaccessinresidencedescriptor_tr_deltrkg();


--
-- Name: behaviordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.behaviordescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.behaviordescriptor_tr_deltrkg();


--
-- Name: bellschedule trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.bellschedule FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.bellschedule_tr_deltrkg();


--
-- Name: budget trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.budget FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.budget_tr_deltrkg();


--
-- Name: calendar trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendar FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.calendar_tr_deltrkg();


--
-- Name: calendardate trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendardate FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.calendardate_tr_deltrkg();


--
-- Name: calendareventdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendareventdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.calendareventdescriptor_tr_deltrkg();


--
-- Name: calendartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendartypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.calendartypedescriptor_tr_deltrkg();


--
-- Name: careerpathwaydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.careerpathwaydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.careerpathwaydescriptor_tr_deltrkg();


--
-- Name: charterapprovalagencytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterapprovalagencytypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.charterapprovalagencytypedescriptor_tr_deltrkg();


--
-- Name: charterstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.charterstatusdescriptor_tr_deltrkg();


--
-- Name: citizenshipstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.citizenshipstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.citizenshipstatusdescriptor_tr_deltrkg();


--
-- Name: classperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classperiod FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.classperiod_tr_deltrkg();


--
-- Name: classroompositiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classroompositiondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.classroompositiondescriptor_tr_deltrkg();


--
-- Name: cohort trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohort FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.cohort_tr_deltrkg();


--
-- Name: cohortscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortscopedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.cohortscopedescriptor_tr_deltrkg();


--
-- Name: cohorttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohorttypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.cohorttypedescriptor_tr_deltrkg();


--
-- Name: cohortyeartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortyeartypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.cohortyeartypedescriptor_tr_deltrkg();


--
-- Name: communityorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.communityorganization_tr_deltrkg();


--
-- Name: communityprovider trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.communityprovider_tr_deltrkg();


--
-- Name: communityproviderlicense trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.communityproviderlicense_tr_deltrkg();


--
-- Name: competencyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.competencyleveldescriptor_tr_deltrkg();


--
-- Name: competencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyobjective FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.competencyobjective_tr_deltrkg();


--
-- Name: contacttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contacttypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.contacttypedescriptor_tr_deltrkg();


--
-- Name: contentclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contentclassdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.contentclassdescriptor_tr_deltrkg();


--
-- Name: continuationofservicesreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.continuationofservicesreasondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.continuationofservicesreasondescriptor_tr_deltrkg();


--
-- Name: contractedstaff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contractedstaff FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.contractedstaff_tr_deltrkg();


--
-- Name: costratedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.costratedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.costratedescriptor_tr_deltrkg();


--
-- Name: countrydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.countrydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.countrydescriptor_tr_deltrkg();


--
-- Name: course trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.course FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.course_tr_deltrkg();


--
-- Name: courseattemptresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseattemptresultdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.courseattemptresultdescriptor_tr_deltrkg();


--
-- Name: coursedefinedbydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursedefinedbydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.coursedefinedbydescriptor_tr_deltrkg();


--
-- Name: coursegpaapplicabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursegpaapplicabilitydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.coursegpaapplicabilitydescriptor_tr_deltrkg();


--
-- Name: courseidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseidentificationsystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.courseidentificationsystemdescriptor_tr_deltrkg();


--
-- Name: courselevelcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courselevelcharacteristicdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.courselevelcharacteristicdescriptor_tr_deltrkg();


--
-- Name: courseoffering trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseoffering FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.courseoffering_tr_deltrkg();


--
-- Name: courserepeatcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courserepeatcodedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.courserepeatcodedescriptor_tr_deltrkg();


--
-- Name: coursetranscript trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursetranscript FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.coursetranscript_tr_deltrkg();


--
-- Name: credential trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credential FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.credential_tr_deltrkg();


--
-- Name: credentialfielddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialfielddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.credentialfielddescriptor_tr_deltrkg();


--
-- Name: credentialtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.credentialtypedescriptor_tr_deltrkg();


--
-- Name: creditcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.creditcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.creditcategorydescriptor_tr_deltrkg();


--
-- Name: credittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credittypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.credittypedescriptor_tr_deltrkg();


--
-- Name: cteprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cteprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.cteprogramservicedescriptor_tr_deltrkg();


--
-- Name: curriculumuseddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.curriculumuseddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.curriculumuseddescriptor_tr_deltrkg();


--
-- Name: deliverymethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.deliverymethoddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.deliverymethoddescriptor_tr_deltrkg();


--
-- Name: descriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.descriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.descriptor_tr_deltrkg();


--
-- Name: diagnosisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diagnosisdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.diagnosisdescriptor_tr_deltrkg();


--
-- Name: diplomaleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomaleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.diplomaleveldescriptor_tr_deltrkg();


--
-- Name: diplomatypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomatypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.diplomatypedescriptor_tr_deltrkg();


--
-- Name: disabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disabilitydescriptor_tr_deltrkg();


--
-- Name: disabilitydesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydesignationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disabilitydesignationdescriptor_tr_deltrkg();


--
-- Name: disabilitydeterminationsourcetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydeterminationsourcetypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disabilitydeterminationsourcetypedescriptor_tr_deltrkg();


--
-- Name: disciplineaction trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineaction FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disciplineaction_tr_deltrkg();


--
-- Name: disciplineactionlengthdifferencereasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineactionlengthdifferencereasondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disciplineactionlengthdifferencereasondescriptor_tr_deltrkg();


--
-- Name: disciplinedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplinedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disciplinedescriptor_tr_deltrkg();


--
-- Name: disciplineincident trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincident FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disciplineincident_tr_deltrkg();


--
-- Name: disciplineincidentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincidentparticipationcodedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.disciplineincidentparticipationcodedescriptor_tr_deltrkg();


--
-- Name: educationalenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationalenvironmentdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationalenvironmentdescriptor_tr_deltrkg();


--
-- Name: educationcontent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationcontent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationcontent_tr_deltrkg();


--
-- Name: educationorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganization FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganization_tr_deltrkg();


--
-- Name: educationorganizationcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationcategorydescriptor_tr_deltrkg();


--
-- Name: educationorganizationidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationidentificationsystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationidentificationsystemdescriptor_tr_deltrkg();


--
-- Name: educationorganizationinterventionprescriptionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationinterventionprescription_e670ae_tr_deltrkg();


--
-- Name: educationorganizationnetwork trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationnetwork_tr_deltrkg();


--
-- Name: educationorganizationnetworkassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationnetworkassociation_tr_deltrkg();


--
-- Name: educationorganizationpeerassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationorganizationpeerassociation_tr_deltrkg();


--
-- Name: educationplandescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationplandescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationplandescriptor_tr_deltrkg();


--
-- Name: educationservicecenter trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.educationservicecenter_tr_deltrkg();


--
-- Name: electronicmailtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.electronicmailtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.electronicmailtypedescriptor_tr_deltrkg();


--
-- Name: employmentstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.employmentstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.employmentstatusdescriptor_tr_deltrkg();


--
-- Name: entrygradelevelreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrygradelevelreasondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.entrygradelevelreasondescriptor_tr_deltrkg();


--
-- Name: entrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrytypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.entrytypedescriptor_tr_deltrkg();


--
-- Name: eventcircumstancedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eventcircumstancedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.eventcircumstancedescriptor_tr_deltrkg();


--
-- Name: exitwithdrawtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.exitwithdrawtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.exitwithdrawtypedescriptor_tr_deltrkg();


--
-- Name: feederschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.feederschoolassociation_tr_deltrkg();


--
-- Name: generalstudentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.generalstudentprogramassociation_tr_deltrkg();


--
-- Name: grade trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.grade FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.grade_tr_deltrkg();


--
-- Name: gradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentry FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradebookentry_tr_deltrkg();


--
-- Name: gradebookentrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentrytypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradebookentrytypedescriptor_tr_deltrkg();


--
-- Name: gradeleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradeleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradeleveldescriptor_tr_deltrkg();


--
-- Name: gradepointaveragetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradepointaveragetypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradepointaveragetypedescriptor_tr_deltrkg();


--
-- Name: gradetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradetypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradetypedescriptor_tr_deltrkg();


--
-- Name: gradingperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperiod FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradingperiod_tr_deltrkg();


--
-- Name: gradingperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperioddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gradingperioddescriptor_tr_deltrkg();


--
-- Name: graduationplan trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplan FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.graduationplan_tr_deltrkg();


--
-- Name: graduationplantypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplantypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.graduationplantypedescriptor_tr_deltrkg();


--
-- Name: gunfreeschoolsactreportingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gunfreeschoolsactreportingstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.gunfreeschoolsactreportingstatusdescriptor_tr_deltrkg();


--
-- Name: homelessprimarynighttimeresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprimarynighttimeresidencedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.homelessprimarynighttimeresidencedescriptor_tr_deltrkg();


--
-- Name: homelessprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.homelessprogramservicedescriptor_tr_deltrkg();


--
-- Name: identificationdocumentusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.identificationdocumentusedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.identificationdocumentusedescriptor_tr_deltrkg();


--
-- Name: incidentlocationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.incidentlocationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.incidentlocationdescriptor_tr_deltrkg();


--
-- Name: indicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatordescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.indicatordescriptor_tr_deltrkg();


--
-- Name: indicatorgroupdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorgroupdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.indicatorgroupdescriptor_tr_deltrkg();


--
-- Name: indicatorleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.indicatorleveldescriptor_tr_deltrkg();


--
-- Name: institutiontelephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.institutiontelephonenumbertypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.institutiontelephonenumbertypedescriptor_tr_deltrkg();


--
-- Name: interactivitystyledescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interactivitystyledescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.interactivitystyledescriptor_tr_deltrkg();


--
-- Name: internetaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccessdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.internetaccessdescriptor_tr_deltrkg();


--
-- Name: internetaccesstypeinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccesstypeinresidencedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.internetaccesstypeinresidencedescriptor_tr_deltrkg();


--
-- Name: internetperformanceinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetperformanceinresidencedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.internetperformanceinresidencedescriptor_tr_deltrkg();


--
-- Name: intervention trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.intervention FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.intervention_tr_deltrkg();


--
-- Name: interventionclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionclassdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.interventionclassdescriptor_tr_deltrkg();


--
-- Name: interventioneffectivenessratingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventioneffectivenessratingdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.interventioneffectivenessratingdescriptor_tr_deltrkg();


--
-- Name: interventionprescription trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionprescription FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.interventionprescription_tr_deltrkg();


--
-- Name: interventionstudy trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionstudy FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.interventionstudy_tr_deltrkg();


--
-- Name: languagedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languagedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.languagedescriptor_tr_deltrkg();


--
-- Name: languageinstructionprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageinstructionprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.languageinstructionprogramservicedescriptor_tr_deltrkg();


--
-- Name: languageusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageusedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.languageusedescriptor_tr_deltrkg();


--
-- Name: learningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningobjective FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningobjective_tr_deltrkg();


--
-- Name: learningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandard FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningstandard_tr_deltrkg();


--
-- Name: learningstandardcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningstandardcategorydescriptor_tr_deltrkg();


--
-- Name: learningstandardequivalenceassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningstandardequivalenceassociation_tr_deltrkg();


--
-- Name: learningstandardequivalencestrengthdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalencestrengthdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningstandardequivalencestrengthdescriptor_tr_deltrkg();


--
-- Name: learningstandardscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardscopedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.learningstandardscopedescriptor_tr_deltrkg();


--
-- Name: levelofeducationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.levelofeducationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.levelofeducationdescriptor_tr_deltrkg();


--
-- Name: licensestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensestatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.licensestatusdescriptor_tr_deltrkg();


--
-- Name: licensetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensetypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.licensetypedescriptor_tr_deltrkg();


--
-- Name: limitedenglishproficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.limitedenglishproficiencydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.limitedenglishproficiencydescriptor_tr_deltrkg();


--
-- Name: localedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.localedescriptor_tr_deltrkg();


--
-- Name: localeducationagency trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.localeducationagency_tr_deltrkg();


--
-- Name: localeducationagencycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagencycategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.localeducationagencycategorydescriptor_tr_deltrkg();


--
-- Name: location trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.location FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.location_tr_deltrkg();


--
-- Name: magnetspecialprogramemphasisschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.magnetspecialprogramemphasisschooldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.magnetspecialprogramemphasisschooldescriptor_tr_deltrkg();


--
-- Name: mediumofinstructiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.mediumofinstructiondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.mediumofinstructiondescriptor_tr_deltrkg();


--
-- Name: methodcreditearneddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.methodcreditearneddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.methodcreditearneddescriptor_tr_deltrkg();


--
-- Name: migranteducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.migranteducationprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.migranteducationprogramservicedescriptor_tr_deltrkg();


--
-- Name: monitoreddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.monitoreddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.monitoreddescriptor_tr_deltrkg();


--
-- Name: neglectedordelinquentprogramdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.neglectedordelinquentprogramdescriptor_tr_deltrkg();


--
-- Name: neglectedordelinquentprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.neglectedordelinquentprogramservicedescriptor_tr_deltrkg();


--
-- Name: networkpurposedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.networkpurposedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.networkpurposedescriptor_tr_deltrkg();


--
-- Name: objectiveassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectiveassessment FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.objectiveassessment_tr_deltrkg();


--
-- Name: oldethnicitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.oldethnicitydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.oldethnicitydescriptor_tr_deltrkg();


--
-- Name: openstaffposition trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.openstaffposition FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.openstaffposition_tr_deltrkg();


--
-- Name: operationalstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.operationalstatusdescriptor_tr_deltrkg();


--
-- Name: organizationdepartment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.organizationdepartment_tr_deltrkg();


--
-- Name: othernametypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.othernametypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.othernametypedescriptor_tr_deltrkg();


--
-- Name: parent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.parent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.parent_tr_deltrkg();


--
-- Name: participationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.participationdescriptor_tr_deltrkg();


--
-- Name: participationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.participationstatusdescriptor_tr_deltrkg();


--
-- Name: payroll trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.payroll FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.payroll_tr_deltrkg();


--
-- Name: performancebaseconversiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performancebaseconversiondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.performancebaseconversiondescriptor_tr_deltrkg();


--
-- Name: performanceleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performanceleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.performanceleveldescriptor_tr_deltrkg();


--
-- Name: person trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.person FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.person_tr_deltrkg();


--
-- Name: personalinformationverificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.personalinformationverificationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.personalinformationverificationdescriptor_tr_deltrkg();


--
-- Name: platformtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.platformtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.platformtypedescriptor_tr_deltrkg();


--
-- Name: populationserveddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.populationserveddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.populationserveddescriptor_tr_deltrkg();


--
-- Name: postingresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postingresultdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.postingresultdescriptor_tr_deltrkg();


--
-- Name: postsecondaryevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.postsecondaryevent_tr_deltrkg();


--
-- Name: postsecondaryeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryeventcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.postsecondaryeventcategorydescriptor_tr_deltrkg();


--
-- Name: postsecondaryinstitution trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.postsecondaryinstitution_tr_deltrkg();


--
-- Name: postsecondaryinstitutionleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitutionleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.postsecondaryinstitutionleveldescriptor_tr_deltrkg();


--
-- Name: primarylearningdeviceaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceaccessdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.primarylearningdeviceaccessdescriptor_tr_deltrkg();


--
-- Name: primarylearningdeviceawayfromschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceawayfromschooldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.primarylearningdeviceawayfromschooldescriptor_tr_deltrkg();


--
-- Name: primarylearningdeviceproviderdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceproviderdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.primarylearningdeviceproviderdescriptor_tr_deltrkg();


--
-- Name: proficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.proficiencydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.proficiencydescriptor_tr_deltrkg();


--
-- Name: program trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.program FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.program_tr_deltrkg();


--
-- Name: programassignmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programassignmentdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.programassignmentdescriptor_tr_deltrkg();


--
-- Name: programcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programcharacteristicdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.programcharacteristicdescriptor_tr_deltrkg();


--
-- Name: programsponsordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programsponsordescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.programsponsordescriptor_tr_deltrkg();


--
-- Name: programtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.programtypedescriptor_tr_deltrkg();


--
-- Name: progressdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.progressdescriptor_tr_deltrkg();


--
-- Name: progressleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.progressleveldescriptor_tr_deltrkg();


--
-- Name: providercategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providercategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.providercategorydescriptor_tr_deltrkg();


--
-- Name: providerprofitabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerprofitabilitydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.providerprofitabilitydescriptor_tr_deltrkg();


--
-- Name: providerstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.providerstatusdescriptor_tr_deltrkg();


--
-- Name: publicationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.publicationstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.publicationstatusdescriptor_tr_deltrkg();


--
-- Name: questionformdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.questionformdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.questionformdescriptor_tr_deltrkg();


--
-- Name: racedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.racedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.racedescriptor_tr_deltrkg();


--
-- Name: reasonexiteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonexiteddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.reasonexiteddescriptor_tr_deltrkg();


--
-- Name: reasonnottesteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonnottesteddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.reasonnottesteddescriptor_tr_deltrkg();


--
-- Name: recognitiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.recognitiontypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.recognitiontypedescriptor_tr_deltrkg();


--
-- Name: relationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.relationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.relationdescriptor_tr_deltrkg();


--
-- Name: repeatidentifierdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.repeatidentifierdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.repeatidentifierdescriptor_tr_deltrkg();


--
-- Name: reportcard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportcard FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.reportcard_tr_deltrkg();


--
-- Name: reporterdescriptiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reporterdescriptiondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.reporterdescriptiondescriptor_tr_deltrkg();


--
-- Name: residencystatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.residencystatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.residencystatusdescriptor_tr_deltrkg();


--
-- Name: responseindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responseindicatordescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.responseindicatordescriptor_tr_deltrkg();


--
-- Name: responsibilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responsibilitydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.responsibilitydescriptor_tr_deltrkg();


--
-- Name: restraintevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restraintevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.restraintevent_tr_deltrkg();


--
-- Name: restrainteventreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restrainteventreasondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.restrainteventreasondescriptor_tr_deltrkg();


--
-- Name: resultdatatypetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.resultdatatypetypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.resultdatatypetypedescriptor_tr_deltrkg();


--
-- Name: retestindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.retestindicatordescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.retestindicatordescriptor_tr_deltrkg();


--
-- Name: school trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.school_tr_deltrkg();


--
-- Name: schoolcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.schoolcategorydescriptor_tr_deltrkg();


--
-- Name: schoolchoiceimplementstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoiceimplementstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.schoolchoiceimplementstatusdescriptor_tr_deltrkg();


--
-- Name: schoolfoodserviceprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolfoodserviceprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.schoolfoodserviceprogramservicedescriptor_tr_deltrkg();


--
-- Name: schooltypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schooltypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.schooltypedescriptor_tr_deltrkg();


--
-- Name: section trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.section FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.section_tr_deltrkg();


--
-- Name: sectionattendancetakenevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.sectionattendancetakenevent_tr_deltrkg();


--
-- Name: sectioncharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectioncharacteristicdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.sectioncharacteristicdescriptor_tr_deltrkg();


--
-- Name: separationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.separationdescriptor_tr_deltrkg();


--
-- Name: separationreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationreasondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.separationreasondescriptor_tr_deltrkg();


--
-- Name: servicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.servicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.servicedescriptor_tr_deltrkg();


--
-- Name: session trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.session FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.session_tr_deltrkg();


--
-- Name: sexdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sexdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.sexdescriptor_tr_deltrkg();


--
-- Name: sourcesystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcesystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.sourcesystemdescriptor_tr_deltrkg();


--
-- Name: specialeducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.specialeducationprogramservicedescriptor_tr_deltrkg();


--
-- Name: specialeducationsettingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationsettingdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.specialeducationsettingdescriptor_tr_deltrkg();


--
-- Name: staff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staff FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staff_tr_deltrkg();


--
-- Name: staffabsenceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffabsenceevent_tr_deltrkg();


--
-- Name: staffclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffclassificationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffclassificationdescriptor_tr_deltrkg();


--
-- Name: staffcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffcohortassociation_tr_deltrkg();


--
-- Name: staffdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffdisciplineincidentassociation_tr_deltrkg();


--
-- Name: staffeducationorganizationassignmentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffeducationorganizationassignmentassociation_tr_deltrkg();


--
-- Name: staffeducationorganizationcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffeducationorganizationcontactassociation_tr_deltrkg();


--
-- Name: staffeducationorganizationemploymentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffeducationorganizationemploymentassociation_tr_deltrkg();


--
-- Name: staffidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffidentificationsystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffidentificationsystemdescriptor_tr_deltrkg();


--
-- Name: staffleave trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleave FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffleave_tr_deltrkg();


--
-- Name: staffleaveeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleaveeventcategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffleaveeventcategorydescriptor_tr_deltrkg();


--
-- Name: staffprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffprogramassociation_tr_deltrkg();


--
-- Name: staffschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffschoolassociation_tr_deltrkg();


--
-- Name: staffsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.staffsectionassociation_tr_deltrkg();


--
-- Name: stateabbreviationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateabbreviationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.stateabbreviationdescriptor_tr_deltrkg();


--
-- Name: stateeducationagency trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.stateeducationagency_tr_deltrkg();


--
-- Name: student trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.student FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.student_tr_deltrkg();


--
-- Name: studentacademicrecord trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentacademicrecord_tr_deltrkg();


--
-- Name: studentassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessment FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentassessment_tr_deltrkg();


--
-- Name: studentcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcharacteristicdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentcharacteristicdescriptor_tr_deltrkg();


--
-- Name: studentcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentcohortassociation_tr_deltrkg();


--
-- Name: studentcompetencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentcompetencyobjective_tr_deltrkg();


--
-- Name: studentcteprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcteprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentcteprogramassociation_tr_deltrkg();


--
-- Name: studentdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentdisciplineincidentassociation_tr_deltrkg();


--
-- Name: studentdisciplineincidentbehaviorassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentdisciplineincidentbehaviorassociation_tr_deltrkg();


--
-- Name: studentdisciplineincidentnonoffenderassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentdisciplineincidentnonoffenderassociation_tr_deltrkg();


--
-- Name: studenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studenteducationorganizationassociation_tr_deltrkg();


--
-- Name: studenteducationorganizationresponsibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studenteducationorganizationresponsibilityass_42aa64_tr_deltrkg();


--
-- Name: studentgradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentgradebookentry_tr_deltrkg();


--
-- Name: studenthomelessprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenthomelessprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studenthomelessprogramassociation_tr_deltrkg();


--
-- Name: studentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentidentificationsystemdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentidentificationsystemdescriptor_tr_deltrkg();


--
-- Name: studentinterventionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentinterventionassociation_tr_deltrkg();


--
-- Name: studentinterventionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentinterventionattendanceevent_tr_deltrkg();


--
-- Name: studentlanguageinstructionprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentlanguageinstructionprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentlanguageinstructionprogramassociation_tr_deltrkg();


--
-- Name: studentlearningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentlearningobjective_tr_deltrkg();


--
-- Name: studentmigranteducationprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentmigranteducationprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentmigranteducationprogramassociation_tr_deltrkg();


--
-- Name: studentneglectedordelinquentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentneglectedordelinquentprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentneglectedordelinquentprogramassociation_tr_deltrkg();


--
-- Name: studentparentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparentassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentparentassociation_tr_deltrkg();


--
-- Name: studentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparticipationcodedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentparticipationcodedescriptor_tr_deltrkg();


--
-- Name: studentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentprogramassociation_tr_deltrkg();


--
-- Name: studentprogramattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentprogramattendanceevent_tr_deltrkg();


--
-- Name: studentschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentschoolassociation_tr_deltrkg();


--
-- Name: studentschoolattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentschoolattendanceevent_tr_deltrkg();


--
-- Name: studentschoolfoodserviceprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolfoodserviceprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentschoolfoodserviceprogramassociation_tr_deltrkg();


--
-- Name: studentsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentsectionassociation_tr_deltrkg();


--
-- Name: studentsectionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentsectionattendanceevent_tr_deltrkg();


--
-- Name: studentspecialeducationprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentspecialeducationprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studentspecialeducationprogramassociation_tr_deltrkg();


--
-- Name: studenttitleipartaprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenttitleipartaprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.studenttitleipartaprogramassociation_tr_deltrkg();


--
-- Name: survey trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.survey FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.survey_tr_deltrkg();


--
-- Name: surveycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycategorydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveycategorydescriptor_tr_deltrkg();


--
-- Name: surveycourseassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveycourseassociation_tr_deltrkg();


--
-- Name: surveyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyleveldescriptor_tr_deltrkg();


--
-- Name: surveyprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyprogramassociation_tr_deltrkg();


--
-- Name: surveyquestion trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestion FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyquestion_tr_deltrkg();


--
-- Name: surveyquestionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyquestionresponse_tr_deltrkg();


--
-- Name: surveyresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponse FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyresponse_tr_deltrkg();


--
-- Name: surveyresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyresponseeducationorganizationtargetassociation_tr_deltrkg();


--
-- Name: surveyresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveyresponsestafftargetassociation_tr_deltrkg();


--
-- Name: surveysection trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysection FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveysection_tr_deltrkg();


--
-- Name: surveysectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveysectionassociation_tr_deltrkg();


--
-- Name: surveysectionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveysectionresponse_tr_deltrkg();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveysectionresponseeducationorganizationtar_730be1_tr_deltrkg();


--
-- Name: surveysectionresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.surveysectionresponsestafftargetassociation_tr_deltrkg();


--
-- Name: teachingcredentialbasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialbasisdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.teachingcredentialbasisdescriptor_tr_deltrkg();


--
-- Name: teachingcredentialdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.teachingcredentialdescriptor_tr_deltrkg();


--
-- Name: technicalskillsassessmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.technicalskillsassessmentdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.technicalskillsassessmentdescriptor_tr_deltrkg();


--
-- Name: telephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.telephonenumbertypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.telephonenumbertypedescriptor_tr_deltrkg();


--
-- Name: termdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.termdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.termdescriptor_tr_deltrkg();


--
-- Name: titleipartaparticipantdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaparticipantdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.titleipartaparticipantdescriptor_tr_deltrkg();


--
-- Name: titleipartaprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaprogramservicedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.titleipartaprogramservicedescriptor_tr_deltrkg();


--
-- Name: titleipartaschooldesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaschooldesignationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.titleipartaschooldesignationdescriptor_tr_deltrkg();


--
-- Name: tribalaffiliationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.tribalaffiliationdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.tribalaffiliationdescriptor_tr_deltrkg();


--
-- Name: visadescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.visadescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.visadescriptor_tr_deltrkg();


--
-- Name: weapondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.weapondescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_edfi.weapondescriptor_tr_deltrkg();


--
-- Name: communityprovider updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.communityprovider FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_communityprovider_tr_update();


--
-- Name: educationservicecenter updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.educationservicecenter FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_educationservicecenter_tr_update();


--
-- Name: localeducationagency updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.localeducationagency FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_localeducationagency_tr_update();


--
-- Name: organizationdepartment updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.organizationdepartment FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_organizationdepartment_tr_update();


--
-- Name: school updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.school FOR EACH ROW EXECUTE PROCEDURE edfi.edfi_school_tr_update();


--
-- Name: academicweek updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.academicweek FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: account updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.account FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: accountabilityrating updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountabilityrating FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: accountcode updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountcode FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: actual updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.actual FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: assessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessment FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: assessmentitem updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentitem FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: assessmentscorerangelearningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: bellschedule updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.bellschedule FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: budget updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.budget FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: calendar updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendar FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: calendardate updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendardate FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: classperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.classperiod FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: cohort updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.cohort FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: communityproviderlicense updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: competencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.competencyobjective FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: contractedstaff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.contractedstaff FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: course updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.course FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: courseoffering updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.courseoffering FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: coursetranscript updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.coursetranscript FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: credential updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.credential FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: descriptor updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptor FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: disciplineaction updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineaction FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: disciplineincident updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineincident FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educationcontent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationcontent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educationorganization updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganization FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educationorganizationinterventionprescriptionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educationorganizationnetworkassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educationorganizationpeerassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: feederschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: generalstudentprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: grade updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.grade FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: gradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradebookentry FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: gradingperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradingperiod FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: graduationplan updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.graduationplan FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: intervention updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.intervention FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: interventionprescription updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionprescription FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: interventionstudy updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionstudy FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: learningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningobjective FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: learningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandard FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: learningstandardequivalenceassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: location updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.location FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: objectiveassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectiveassessment FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: openstaffposition updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.openstaffposition FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: parent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.parent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: payroll updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.payroll FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: person updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.person FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: postsecondaryevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: program updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.program FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: reportcard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.reportcard FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: restraintevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.restraintevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: schoolyeartype updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.schoolyeartype FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: section updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.section FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: sectionattendancetakenevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: session updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.session FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staff FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffabsenceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffeducationorganizationassignmentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffeducationorganizationcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffeducationorganizationemploymentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffleave updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffleave FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: staffsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: student updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.student FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentacademicrecord updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessment FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentcompetencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentdisciplineincidentbehaviorassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentdisciplineincidentnonoffenderassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studenteducationorganizationresponsibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentgradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentinterventionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentinterventionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentlearningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentparentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentparentassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentprogramattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentschoolattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: studentsectionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: survey updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.survey FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveycourseassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyquestion updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestion FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyquestionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponse FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysection updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysection FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysectionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysectionresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: accreditationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.accreditationstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.accreditationstatusdescriptor_tr_deltrkg();


--
-- Name: aidtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.aidtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.aidtypedescriptor_tr_deltrkg();


--
-- Name: candidate trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidate FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.candidate_tr_deltrkg();


--
-- Name: candidateeducatorpreparationprogramassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.candidateeducatorpreparationprogramassociation_tr_deltrkg();


--
-- Name: certificationroutedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.certificationroutedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.certificationroutedescriptor_tr_deltrkg();


--
-- Name: coteachingstyleobserveddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.coteachingstyleobserveddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.coteachingstyleobserveddescriptor_tr_deltrkg();


--
-- Name: credentialstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.credentialstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.credentialstatusdescriptor_tr_deltrkg();


--
-- Name: educatorpreparationprogram trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.educatorpreparationprogram_tr_deltrkg();


--
-- Name: educatorroledescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorroledescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.educatorroledescriptor_tr_deltrkg();


--
-- Name: englishlanguageexamdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.englishlanguageexamdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.englishlanguageexamdescriptor_tr_deltrkg();


--
-- Name: eppprogrampathwaydescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.eppprogrampathwaydescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.eppprogrampathwaydescriptor_tr_deltrkg();


--
-- Name: evaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluation_tr_deltrkg();


--
-- Name: evaluationelement trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelement FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationelement_tr_deltrkg();


--
-- Name: evaluationelementrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationelementrating_tr_deltrkg();


--
-- Name: evaluationelementratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementratingleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationelementratingleveldescriptor_tr_deltrkg();


--
-- Name: evaluationobjective trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationobjective_tr_deltrkg();


--
-- Name: evaluationobjectiverating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationobjectiverating_tr_deltrkg();


--
-- Name: evaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationperioddescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationperioddescriptor_tr_deltrkg();


--
-- Name: evaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationrating FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationrating_tr_deltrkg();


--
-- Name: evaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationratingleveldescriptor_tr_deltrkg();


--
-- Name: evaluationratingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingstatusdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationratingstatusdescriptor_tr_deltrkg();


--
-- Name: evaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.evaluationtypedescriptor_tr_deltrkg();


--
-- Name: financialaid trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.financialaid FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.financialaid_tr_deltrkg();


--
-- Name: genderdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.genderdescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.genderdescriptor_tr_deltrkg();


--
-- Name: objectiveratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.objectiveratingleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.objectiveratingleveldescriptor_tr_deltrkg();


--
-- Name: performanceevaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.performanceevaluation_tr_deltrkg();


--
-- Name: performanceevaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.performanceevaluationrating_tr_deltrkg();


--
-- Name: performanceevaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationratingleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.performanceevaluationratingleveldescriptor_tr_deltrkg();


--
-- Name: performanceevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationtypedescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.performanceevaluationtypedescriptor_tr_deltrkg();


--
-- Name: rubricdimension trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricdimension FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.rubricdimension_tr_deltrkg();


--
-- Name: rubricratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricratingleveldescriptor FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.rubricratingleveldescriptor_tr_deltrkg();


--
-- Name: surveyresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.surveyresponsepersontargetassociation_tr_deltrkg();


--
-- Name: surveysectionresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE PROCEDURE tracked_deletes_tpdm.surveysectionresponsepersontargetassociation_tr_deltrkg();


--
-- Name: candidate updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidate FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: candidateeducatorpreparationprogramassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: educatorpreparationprogram updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluationelement updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelement FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluationelementrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluationobjective updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluationobjectiverating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: evaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationrating FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: financialaid updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.financialaid FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: performanceevaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: performanceevaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: rubricdimension updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.rubricdimension FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveyresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: surveysectionresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE PROCEDURE changes.updatechangeversion();


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyleveldescriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.surveyleveldescriptor(surveyleveldescriptorid);


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse fk_048797_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT fk_048797_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: indicatorleveldescriptor fk_05d3f9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT fk_05d3f9_descriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: parentothername fk_0e0a11_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: parentothername fk_0e0a11_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: parentaddressperiod fk_123e27_parentaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT fk_123e27_parentaddress FOREIGN KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.parentaddress(addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: organizationdepartment fk_13b924_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization FOREIGN KEY (organizationdepartmentid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization1 FOREIGN KEY (parenteducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestion fk_1bb88c_questionformdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_questionformdescriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.questionformdescriptor(questionformdescriptorid);


--
-- Name: surveyquestion fk_1bb88c_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: surveyquestion fk_1bb88c_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: budget fk_1c6225_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.budget
    ADD CONSTRAINT fk_1c6225_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: surveyquestionresponsechoice fk_1c624b_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT fk_1c624b_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: survey fk_211bb3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: survey fk_211bb3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: survey fk_211bb3_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: survey fk_211bb3_surveycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_surveycategorydescriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.surveycategorydescriptor(surveycategorydescriptorid);


--
-- Name: surveysectionresponse fk_2189c3_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponse fk_2189c3_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: internetperformanceinresidencedescriptor fk_256049_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT fk_256049_descriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, languagedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, languagedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: parentlanguage fk_34f9df_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: parentlanguage fk_34f9df_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningobjective fk_3e8699_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT fk_3e8699_learningobjective FOREIGN KEY (learningobjectiveid, learningobjectivenamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: objectiveassessmentlearningobjective fk_3e8699_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningobjective
    ADD CONSTRAINT fk_3e8699_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: questionformdescriptor fk_43a820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT fk_43a820_descriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: parenttelephone fk_453ba8_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parenttelephone fk_453ba8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_studentdisciplineincidentnonoffenderassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentnonoffenderassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: surveycategorydescriptor fk_4e55bd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT fk_4e55bd_descriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: payroll fk_53fe8d_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT fk_53fe8d_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: payroll fk_53fe8d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.payroll
    ADD CONSTRAINT fk_53fe8d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: contractedstaff fk_57ca0f_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT fk_57ca0f_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: contractedstaff fk_57ca0f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contractedstaff
    ADD CONSTRAINT fk_57ca0f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: learningobjective fk_588d15_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT fk_588d15_learningobjective FOREIGN KEY (parentlearningobjectiveid, parentnamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor fk_5ee08d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT fk_5ee08d_descriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (disabilitydescriptorid, educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociationdisability(disabilitydescriptorid, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parent fk_5f7953_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: parent fk_5f7953_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: parent fk_5f7953_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: person fk_6007db_sourcesystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT fk_6007db_sourcesystemdescriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.sourcesystemdescriptor(sourcesystemdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: surveyquestionmatrix fk_64d76d_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT fk_64d76d_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentdisciplineincidentassociation fk_679174_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentassociation fk_679174_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentassociation fk_679174_studentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_studentparticipationcodedescriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.studentparticipationcodedescriptor(studentparticipationcodedescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: staff fk_681927_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningobjective fk_68857c_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT fk_68857c_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningobjective fk_68857c_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningobjective
    ADD CONSTRAINT fk_68857c_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: account fk_7e1b0d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.account
    ADD CONSTRAINT fk_7e1b0d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountclassificationdescriptor fk_7efddd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountclassificationdescriptor
    ADD CONSTRAINT fk_7efddd_descriptor FOREIGN KEY (accountclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: internetaccesstypeinresidencedescriptor fk_8007d5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT fk_8007d5_descriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_studentsectionattendanceevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_studentsectionattendanceevent FOREIGN KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionattendanceevent(attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_studenteducationorganizationassociationprogrampartici; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_studenteducationorganizationassociationprogrampartici FOREIGN KEY (educationorganizationid, programtypedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationprogramparticipation(educationorganizationid, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard1 FOREIGN KEY (prerequisitelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: oldethnicitydescriptor fk_821652_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT fk_821652_descriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicatorperiod fk_8486ae_educationorganizationindicator; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT fk_8486ae_educationorganizationindicator FOREIGN KEY (educationorganizationid, indicatordescriptorid) REFERENCES edfi.educationorganizationindicator(educationorganizationid, indicatordescriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: parentelectronicmail fk_85798e_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: parentelectronicmail fk_85798e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyresponse fk_8d6383_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: surveyresponse fk_8d6383_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponse fk_8d6383_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyresponse fk_8d6383_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: parentinternationaladdress fk_8d650e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_barriertointernetaccessinresidencedescriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.barriertointernetaccessinresidencedescriptor(barriertointernetaccessinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetaccesstypeinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetaccesstypeinresidencedescriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.internetaccesstypeinresidencedescriptor(internetaccesstypeinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetperformanceinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetperformanceinresidencedescriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.internetperformanceinresidencedescriptor(internetperformanceinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceaccessdescriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.primarylearningdeviceaccessdescriptor(primarylearningdeviceaccessdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceawayfromschooldescriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.primarylearningdeviceawayfromschooldescriptor(primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceproviderdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceproviderdescriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.primarylearningdeviceproviderdescriptor(primarylearningdeviceproviderdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) REFERENCES edfi.studenteducationorganizationassociationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_assessmentscorerangelearningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_assessmentscorerangelearningstandard FOREIGN KEY (assessmentidentifier, namespace, scorerangeid) REFERENCES edfi.assessmentscorerangelearningstandard(assessmentidentifier, namespace, scorerangeid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveycourseassociation fk_9f1246_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: surveycourseassociation fk_9f1246_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandardauthor fk_a165fa_learningobjectivecontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT fk_a165fa_learningobjectivecontentstandard FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjectivecontentstandard(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentcharacteristicdescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceproviderdescriptor fk_a1f277_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT fk_a1f277_descriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: ancestryethnicorigindescriptor fk_a21217_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT fk_a21217_descriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffancestryethnicorigin fk_a4a6ae_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: staffancestryethnicorigin fk_a4a6ae_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, indicatorname, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, indicatorname, studentusi) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivegradelevel fk_a92ef0_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningobjectivegradelevel fk_a92ef0_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (languagedescriptorid, staffusi) REFERENCES edfi.stafflanguage(languagedescriptorid, staffusi) ON DELETE CASCADE;


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjective fk_baaa9d_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentlearningobjective fk_baaa9d_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentlearningobjective fk_baaa9d_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: studentlearningobjective fk_baaa9d_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyleveldescriptor fk_bce725_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT fk_bce725_descriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentparentassociation fk_bf9d92_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: studentparentassociation fk_bf9d92_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentparentassociation fk_bf9d92_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: surveysectionassociation fk_c16804_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: surveysectionassociation fk_c16804_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: actual fk_c40642_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.actual
    ADD CONSTRAINT fk_c40642_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.gradebookentry(dateassigned, gradebookentrytitle, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceaccessdescriptor fk_cbfe5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT fk_cbfe5d_descriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentaddress fk_cc3333_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: parentaddress fk_cc3333_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor fk_cce75a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT fk_cce75a_descriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyquestionresponsevalue fk_d047f5_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT fk_d047f5_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: accountaccountcode fk_d24efe_account; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT fk_d24efe_account FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.account(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: accountaccountcode fk_d24efe_accountcode; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountaccountcode
    ADD CONSTRAINT fk_d24efe_accountcode FOREIGN KEY (accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear) REFERENCES edfi.accountcode(accountclassificationdescriptorid, accountcodenumber, educationorganizationid, fiscalyear);


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplancreditsbycourse(coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicator fk_dde098_indicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatordescriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.indicatordescriptor(indicatordescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorgroupdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorgroupdescriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.indicatorgroupdescriptor(indicatorgroupdescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorleveldescriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.indicatorleveldescriptor(indicatorleveldescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: indicatorgroupdescriptor fk_e0f6fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT fk_e0f6fe_descriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyprogramassociation fk_e3e5a4_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: surveyprogramassociation fk_e3e5a4_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineincident fk_e45c0b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysection fk_e5572a_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT fk_e5572a_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: programservice fk_e943d3_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programservice fk_e943d3_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociationservice fk_eb5c90_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyquestionresponse fk_eddd02_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse fk_eddd02_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: indicatordescriptor fk_ee0bbf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT fk_ee0bbf_descriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: programlearningobjective fk_f5911f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: programlearningobjective fk_f5911f_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: parentlanguageuse fk_f67c61_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: parentlanguageuse fk_f67c61_parentlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_parentlanguage FOREIGN KEY (languagedescriptorid, parentusi) REFERENCES edfi.parentlanguage(languagedescriptorid, parentusi) ON DELETE CASCADE;


--
-- Name: sourcesystemdescriptor fk_f71783_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT fk_f71783_descriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: learningobjectivecontentstandard fk_f99184_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningobjectivecontentstandard fk_f99184_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandard fk_f99184_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: accountcode fk_fb1ef3_accountclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT fk_fb1ef3_accountclassificationdescriptor FOREIGN KEY (accountclassificationdescriptorid) REFERENCES edfi.accountclassificationdescriptor(accountclassificationdescriptorid);


--
-- Name: accountcode fk_fb1ef3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountcode
    ADD CONSTRAINT fk_fb1ef3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- Name: candidatetelephone fk_09c531_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatetelephone fk_09c531_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: performanceevaluation fk_15d685_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: performanceevaluation fk_15d685_evaluationperioddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_evaluationperioddescriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES tpdm.evaluationperioddescriptor(evaluationperioddescriptorid);


--
-- Name: performanceevaluation fk_15d685_performanceevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_performanceevaluationtypedescriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES tpdm.performanceevaluationtypedescriptor(performanceevaluationtypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: performanceevaluation fk_15d685_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: candidateaddress fk_160329_addresstypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: candidateaddress fk_160329_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateaddress fk_160329_localedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: candidateaddress fk_160329_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: evaluation fk_163e44_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: evaluation fk_163e44_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: candidateaddressperiod fk_17e793_candidateaddress; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT fk_17e793_candidateaddress FOREIGN KEY (addresstypedescriptorid, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES tpdm.candidateaddress(addresstypedescriptorid, candidateidentifier, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogram fk_195935_accreditationstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_accreditationstatusdescriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES tpdm.accreditationstatusdescriptor(accreditationstatusdescriptorid);


--
-- Name: educatorpreparationprogram fk_195935_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educatorpreparationprogram fk_195935_programtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: schoolextension fk_2199be_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: schoolextension fk_2199be_school; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_disabilitydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: candidatedisability fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 fk_2501c4_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT fk_2501c4_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: performanceevaluationtypedescriptor fk_2ba831_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT fk_2ba831_descriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidatelanguageuse fk_3f00b1_candidatelanguage; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_candidatelanguage FOREIGN KEY (candidateidentifier, languagedescriptorid) REFERENCES tpdm.candidatelanguage(candidateidentifier, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: candidatelanguageuse fk_3f00b1_languageusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: certificationroutedescriptor fk_40b601_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT fk_40b601_descriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementrating fk_4479ea_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationelementratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelementratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES tpdm.evaluationelementratingleveldescriptor(evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: candidateothername fk_4521bb_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateothername fk_4521bb_othernametypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: performanceevaluationratingreviewer fk_477526_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingreviewer fk_477526_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratingstatusdescriptor fk_4b53ea_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT fk_4b53ea_descriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponsepersontargetassociation fk_520027_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponsepersontargetassociation fk_520027_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: genderdescriptor fk_554e4f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT fk_554e4f_descriptor FOREIGN KEY (genderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationgradelevel fk_5b9d31_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: performanceevaluationgradelevel fk_5b9d31_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingleveldescriptor fk_5fb2ad_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT fk_5fb2ad_descriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewerreceivedtraining fk_608112_evaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_608112_evaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationratingreviewer(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: rubricdimension fk_643c81_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: rubricdimension fk_643c81_rubricratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_rubricratingleveldescriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES tpdm.rubricratingleveldescriptor(rubricratingleveldescriptorid);


--
-- Name: evaluationtypedescriptor fk_67cd19_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT fk_67cd19_descriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: accreditationstatusdescriptor fk_69de81_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT fk_69de81_descriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_racedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: performanceevaluationratingreviewerreceivedtraining fk_6e6517_performanceevaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_6e6517_performanceevaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationratingreviewer(educationorganizationid, evaluationperioddescriptorid, firstname, lastsurname, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_candidatedisability; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_candidatedisability FOREIGN KEY (candidateidentifier, disabilitydescriptorid) REFERENCES tpdm.candidatedisability(candidateidentifier, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: credentialextension fk_6fae52_certificationroutedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_certificationroutedescriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES tpdm.certificationroutedescriptor(certificationroutedescriptorid);


--
-- Name: credentialextension fk_6fae52_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialextension fk_6fae52_credentialstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credentialstatusdescriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES tpdm.credentialstatusdescriptor(credentialstatusdescriptorid);


--
-- Name: credentialextension fk_6fae52_educatorroledescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_educatorroledescriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES tpdm.educatorroledescriptor(educatorroledescriptorid);


--
-- Name: credentialextension fk_6fae52_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratinglevel fk_7052f8_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratinglevel fk_7052f8_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: credentialstudentacademicrecord fk_73e151_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstudentacademicrecord fk_73e151_studentacademicrecord; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_coteachingstyleobserveddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_coteachingstyleobserveddescriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES tpdm.coteachingstyleobserveddescriptor(coteachingstyleobserveddescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluationratingleveldescriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES tpdm.performanceevaluationratingleveldescriptor(performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: englishlanguageexamdescriptor fk_76d6e8_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT fk_76d6e8_descriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_objectiveratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_objectiveratingleveldescriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES tpdm.objectiveratingleveldescriptor(objectiveratingleveldescriptorid);


--
-- Name: evaluationperioddescriptor fk_83ff2a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT fk_83ff2a_descriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationelementratingleveldescriptor fk_86df6c_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT fk_86df6c_descriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratinglevel fk_90ed3d_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratinglevel fk_90ed3d_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstatusdescriptor fk_91080a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT fk_91080a_descriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coteachingstyleobserveddescriptor fk_932c9a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT fk_932c9a_descriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: financialaid fk_a465f2_aidtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_aidtypedescriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES tpdm.aidtypedescriptor(aidtypedescriptorid);


--
-- Name: financialaid fk_a465f2_student; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: candidate fk_b2452d_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidate fk_b2452d_englishlanguageexamdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_englishlanguageexamdescriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES tpdm.englishlanguageexamdescriptor(englishlanguageexamdescriptorid);


--
-- Name: candidate fk_b2452d_genderdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_genderdescriptor FOREIGN KEY (genderdescriptorid) REFERENCES tpdm.genderdescriptor(genderdescriptorid);


--
-- Name: candidate fk_b2452d_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: candidate fk_b2452d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor1; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor1 FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: educatorroledescriptor fk_bc8b94_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT fk_bc8b94_descriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingstatusdescriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES tpdm.evaluationratingstatusdescriptor(evaluationratingstatusdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_section; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: evaluationelementratingresult fk_c5877a_evaluationelementrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_evaluationelementrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationelementrating(educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratingresult fk_c5877a_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: eppprogrampathwaydescriptor fk_cde665_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT fk_cde665_descriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: objectiveratingleveldescriptor fk_d49b1f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT fk_d49b1f_descriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: aidtypedescriptor fk_d6106a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT fk_d6106a_descriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_surveysectionresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: candidatelanguage fk_e5239b_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatelanguage fk_e5239b_languagedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor fk_ed7e01_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT fk_ed7e01_descriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: rubricratingleveldescriptor fk_f24609_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT fk_f24609_descriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponseextension fk_fa906d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponseextension fk_fa906d_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_eppprogrampathwaydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_eppprogrampathwaydescriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES tpdm.eppprogrampathwaydescriptor(eppprogrampathwaydescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- PostgreSQL database dump complete
--

